
-- File generated by Go version U-2022.12#33f3808fcb#221128, Wed Feb 21 17:37:19 2024
-- Copyright 2014-2022 Synopsys, Inc. All rights reserved.
-- go -I../lib -F -DIS_VHDL -DSYNTHESIS_NO_UNGROUP -D__tct_patch__=0 -VHDL -otrv32p3_cnn_vhdl -cgo_options.cfg -Itrv32p3_cnn_vhdl/tmp_pdg -updg -updg_controller trv32p3_cnn



architecture structural of trv32p3_cnn is

  component alu
    port (
      bin_selector_EX : in std_logic_vector(3 downto 0);
      aluA_in : in t_w32;
      aluB_in : in t_w32;
      aluR_out : out t_w32);
  end component;

  component pca
    port (
      ohe_selector_ID : in std_logic;
      pcaA_in : in t_w32;
      pcaB_in : in t_w32;
      pcaR_out : out t_w32);
  end component;

  component cmp
    port (
      bin_selector_EX : in std_logic_vector(2 downto 0);
      cmpA_in : in t_w32;
      cmpB_in : in t_w32;
      cmpF_out : out boolean);
  end component;

  component div
    port (
      reset : in std_logic;
      clock : in std_logic;
      en_divR_divs_divA_divB_div_EX : in std_logic;
      en_divR_divu_divA_divB_div_EX : in std_logic;
      en_divR_rems_divA_divB_div_EX : in std_logic;
      en_divR_remu_divA_divB_div_EX : in std_logic;
      divA_in : in t_w32;
      divB_in : in t_w32;
      div_wad_in : in t_t5u;
      X_x_w1_div_main_pdg_en_out : out t_uint1_t;
      X_x_w1_div_main_pdg_w_a_out : out t_t5unz;
      div_adr_out : out t_t5unz;
      div_bsy_out : out t_t1u;
      div_wnc_out : out t_t1u;
      x_w1_out : out t_w32);
  end component;

  component lx
    port (
      bin_selector_EX : in std_logic_vector(2 downto 0);
      dmw_rd_dp_in : in t_w32;
      lxB_in : in t_w08;
      lxH_in : in t_w16;
      lxR_out : out t_w32);
  end component;

  component agu
    port (
      ohe_selector_ID : in std_logic;
      aguA_in : in t_w32;
      aguB_in : in t_w32;
      aguR_out : out t_w32);
  end component;

  component mpy
    port (
      ohe_selector_EX : in std_logic;
      mpyA_in : in t_w32;
      mpyB_in : in t_w32;
      mpyM_in : in t_t2u;
      mpyH_out : out t_w32;
      mpyL_out : out t_w32);
  end component;

  component ocd_addr_incr
    port (
      ocd_ld_DMbEX_r_in : in boolean;
      ocd_ld_PMbEX_r_in : in boolean;
      ocd_st_DMbEX_r_in : in boolean;
      ocd_st_PMbEX_r_in : in boolean;
      ocd_addr_r_in : in t_addr;
      ocd_addr_w_out : out t_addr);
  end component;

  component cnn
    port (
      ohe_selector_EX : in std_logic;
      xuA_in : in t_w32;
      xuB_in : in t_w32;
      xuC_in : in t_w32;
      cnn_R_out : out t_w32);
  end component;

  component dm_merge
    port (
      reset : in std_logic;
      clock : in std_logic;
      dm_addr_in : in t_addr;
      dmb_ld_in : in std_logic;
      dmb_st_in : in std_logic;
      dmb_wr_in : in t_w08;
      dmh_ld_in : in std_logic;
      dmh_st_in : in std_logic;
      dmh_wr_in : in t_w16;
      dmw_ld_in : in std_logic;
      dmw_st_in : in std_logic;
      dmw_wr_in : in t_w32;
      wdm_rd_in : in t_v4u8;
      dmb_rd_out : out t_w08;
      dmh_rd_out : out t_w16;
      dmw_rd_out : out t_w32;
      wdm_addr_out : out t_addr;
      wdm_ld_out : out t_uint1_t;
      wdm_st_out : out t_uint4_t_as_vect;
      wdm_wr_out : out t_v4u8);
  end component;

  component dm_wbb
    port (
      reset : in std_logic;
      clock : in std_logic;
      edm_rd_in : in t_v4u8;
      wdm_addr_in : in t_addr;
      wdm_ld_in : in t_uint1_t;
      wdm_st_in : in t_uint4_t_as_vect;
      wdm_wr_in : in t_v4u8;
      edm_addr_out : out t_addr;
      edm_ld_out : out t_uint1_t;
      edm_st_out : out t_uint4_t_as_vect;
      edm_wr_out : out t_v4u8;
      wdm_rd_out : out t_v4u8);
  end component;

  component controller
    port (
      reset : in std_logic;
      clock : in std_logic;
      ohe_selector_EX : in std_logic;
      bin_selector_ID : in std_logic_vector(1 downto 0);
      cnd_in : in boolean;
      hzd_stall_in : in std_logic;
      issue_sig_in : in std_logic;
      jmp_tgt_EX_in : in t_w32;
      jmp_tgt_ID_in : in t_w32;
      ocd_exe_in : in t_t1u;
      ocd_instr_r_in : in t_iword;
      ocd_req_in : in t_t1u;
      pcr_in : in t_addr;
      pm_rd_in : in t_iword;
      PC_ID_PC_ID_w_cntrl_issue_pdg_en_out : out std_logic;
      PC_ID_w_out : out t_addr;
      PC_pcw_cntrl_nxtpc_pdg_en_out : out std_logic;
      kill_ID_out : out std_logic;
      lnk_id_out : out t_w32;
      ocd_mode_out : out t_t1u;
      pcw_out : out t_addr;
      pm_addr_out : out t_addr;
      pm_ld_pdg_en_out : out std_logic;
      trn_ID_valid_out : out std_logic;
      trn_IR_ID_out : out t_iword);
  end component;

  component reg_PC
    port (
      reset : in std_logic;
      clock : in std_logic;
      PC_pcw_cntrl_nxtpc_pdg_en_in : in std_logic;
      pcw_in : in t_addr;
      pcr_out : out t_addr);
  end component;

  component reg_PC_ID
    port (
      clock : in std_logic;
      PC_ID_PC_ID_w_cntrl_issue_pdg_en_in : in std_logic;
      PC_ID_w_in : in t_addr;
      PC_ID_r_out : out t_addr);
  end component;

  component reg_PC_EX
    port (
      clock : in std_logic;
      ohe_selector_ID : in std_logic;
      PC_EX_w_in : in t_addr;
      hzd_stall_in : in std_logic;
      kill_ID_in : in std_logic;
      PC_EX_r_out : out t_addr);
  end component;

  component reg_X
    port (
      reset : in std_logic;
      clock : in std_logic;
      bin_selector_EX : in std_logic_vector(1 downto 0);
      X_x_w1_div_main_pdg_en_in : in t_uint1_t;
      X_x_r1_raddr_in : in t_t5u;
      X_x_r2_raddr_in : in t_t5u;
      X_x_r3_raddr_in : in t_t5u;
      X_x_w1_wad_in : in t_t5u;
      X_x_w2_waddr_in : in t_t5u;
      x_w1_in : in t_w32;
      x_w2_in : in t_w32;
      x_r1_out : out t_w32;
      x_r2_out : out t_w32;
      x_r3_out : out t_w32);
  end component;

  component reg_ocd_addr
    port (
      reset : in std_logic;
      clock : in std_logic;
      en_ocd_addr_pdcw_in : in std_logic;
      ocd_ld_DMbEX_r_in : in boolean;
      ocd_ld_PMbEX_r_in : in boolean;
      ocd_st_DMbEX_r_in : in boolean;
      ocd_st_PMbEX_r_in : in boolean;
      ocd_addr_pdcw_in : in t_addr;
      ocd_addr_w_in : in t_addr;
      ocd_addr_pdcr_out : out t_addr;
      ocd_addr_r_out : out t_addr);
  end component;

  component reg_ocd_data
    port (
      reset : in std_logic;
      clock : in std_logic;
      en_ocd_data_pdcw_in : in std_logic;
      ocd_ld_DMbS3_r_in : in boolean;
      ocd_data_pdcw_in : in t_w08;
      ocd_data_w_in : in t_w08;
      ocd_data_pdcr_out : out t_w08;
      ocd_data_r_out : out t_w08);
  end component;

  component reg_ocd_instr
    port (
      reset : in std_logic;
      clock : in std_logic;
      en_ocd_instr_pdcw_in : in std_logic;
      ocd_ld_PMbS3_r_in : in boolean;
      ocd_instr_pdcw_in : in t_iword;
      ocd_instr_w_in : in t_iword;
      ocd_instr_pdcr_out : out t_iword;
      ocd_instr_r_out : out t_iword);
  end component;

  component mem_PMb
    port (
      ocd_ld_PMbEX_r_in : in boolean;
      ocd_st_PMbEX_r_in : in boolean;
      pm_ld_pdg_en_in : in std_logic;
      pm_addr_dp_in : in t_addr;
      pm_rd_in : in t_iword;
      pm_wr_dp_in : in t_iword;
      pm_addr_out : out t_addr;
      pm_ld_out : out std_logic;
      pm_rd_dp_out : out t_iword;
      pm_st_out : out std_logic;
      pm_wr_out : out t_iword);
  end component;

  component mem_DMb
    port (
      bin_selector_EX : in std_logic_vector(2 downto 0);
      bin_selector_ID : in std_logic_vector(2 downto 0);
      ocd_ld_DMbEX_r_in : in boolean;
      ocd_st_DMbEX_r_in : in boolean;
      ocd_st_DMbS3_r_in : in boolean;
      dm_addr_dp_in : in t_addr;
      dmb_rd_in : in t_w08;
      dmb_wr_dp_in : in t_w08;
      dmh_rd_in : in t_w16;
      dmh_wr_dp_in : in t_w16;
      dmw_rd_in : in t_w32;
      dmw_wr_dp_in : in t_w32;
      hzd_stall_in : in std_logic;
      kill_ID_in : in std_logic;
      dm_addr_out : out t_addr;
      dmb_ld_out : out std_logic;
      dmb_rd_dp_out : out t_w08;
      dmb_st_out : out std_logic;
      dmb_wr_out : out t_w08;
      dmh_ld_out : out std_logic;
      dmh_rd_dp_out : out t_w16;
      dmh_st_out : out std_logic;
      dmh_wr_out : out t_w16;
      dmw_ld_out : out std_logic;
      dmw_rd_dp_out : out t_w32;
      dmw_st_out : out std_logic;
      dmw_wr_out : out t_w32);
  end component;

  component mux_pm_addr
    port (
      ocd_ld_PMbEX_r_in : in boolean;
      ocd_st_PMbEX_r_in : in boolean;
      pm_ld_pdg_en_in : in std_logic;
      ocd_addr_r_in : in t_addr;
      pm_addr1_in : in t_addr;
      pm_addr_out : out t_addr);
  end component;

  component mux_pm_wr
    port (
      ocd_st_PMbEX_r_in : in boolean;
      ocd_instr_r_in : in t_iword;
      pm_wr_out : out t_iword);
  end component;

  component mux_dm_addr
    port (
      ohe_selector_ID : in std_logic;
      ocd_ld_DMbEX_r_in : in boolean;
      ocd_st_DMbEX_r_in : in boolean;
      aguR_in : in t_w32;
      ocd_addr_r_in : in t_addr;
      dm_addr_out : out t_addr);
  end component;

  component mux_dmb_wr
    port (
      ohe_selector_EX : in std_logic;
      ocd_st_DMbS3_r_in : in boolean;
      ocd_data_r_in : in t_w08;
      x_r2_in : in t_w32;
      dmb_wr_out : out t_w08);
  end component;

  component mux_x_w1
    port (
      bin_selector_EX : in std_logic_vector(2 downto 0);
      X_x_w1_div_main_pdg_en_in : in t_uint1_t;
      CTt20s_rp12_cstP12_EX_in : in t_t20s_rp12;
      aluR_in : in t_w32;
      lxR_in : in t_w32;
      mpyH_in : in t_w32;
      mpyL_in : in t_w32;
      pidTGT_r_in : in t_w32;
      x_w11_in : in t_w32;
      x_w1_out : out t_w32);
  end component;

  component mux_x_w1_dead
    port (
      ohe_selector_EX : in std_logic;
      cnn_R_in : in t_w32;
      x_w1_in : in t_w32;
      x_w1_dead_out : out t_w32);
  end component;

  component mux_ocd_data_w
    port (
      ocd_ld_DMbS3_r_in : in boolean;
      dmb_rd_dp_in : in t_w08;
      ocd_data_w_out : out t_w08);
  end component;

  component mux_ocd_instr_w
    port (
      ocd_ld_PMbS3_r_in : in boolean;
      pm_rd_dp_in : in t_iword;
      ocd_instr_w_out : out t_iword);
  end component;

  component mux_aluA
    port (
      ohe_selector_EX : in std_logic;
      PC_EX_r_in : in t_addr;
      x_r1_in : in t_w32;
      aluA_out : out t_w32);
  end component;

  component mux_aluB
    port (
      bin_selector_EX : in std_logic_vector(1 downto 0);
      CTt5u_cstP20_EX_in : in t_t5u;
      CTt12s_cstP20_EX_in : in t_t12s;
      CTt20s_rp12_cstP12_EX_in : in t_t20s_rp12;
      x_r2_in : in t_w32;
      aluB_out : out t_w32);
  end component;

  component mux_pcaA
    port (
      ohe_selector_ID : in std_logic;
      PC_ID_r_in : in t_addr;
      x_r3_in : in t_w32;
      pcaA_out : out t_w32);
  end component;

  component mux_pcaB
    port (
      bin_selector_ID : in std_logic_vector(1 downto 0);
      CTt12s_cstP20_ID_in : in t_t12s;
      CTt13s_s2_cstP31_12P7_11P25_10_5P8_4_1_ID_in : in t_t13s_s2;
      of21_in : in t_t21s_s2;
      pcaB_out : out t_w32);
  end component;

  component mux_jmp_tgt_ID
    port (
      ohe_selector_ID : in std_logic;
      jmp_tgt_algn2_in : in t_t31s_rp1;
      pcaR_in : in t_w32;
      jmp_tgt_ID_out : out t_w32);
  end component;

  component mux_aguB
    port (
      bin_selector_ID : in std_logic_vector(1 downto 0);
      CTt12s_cstP20_ID_in : in t_t12s;
      CTt12s_cstP25_11_5P7_4_0_ID_in : in t_t12s;
      aguB_out : out t_w32);
  end component;

  component mux_mpyM
    port (
      bin_selector_EX : in std_logic_vector(1 downto 0);
      mpyM_out : out t_t2u);
  end component;

  component mux_ocd_swbreak
    port (
      ohe_selector_EX : in std_logic;
      ocd_swbreak_out : out t_t1u);
  end component;

  component pipe_pidTGT
    port (
      clock : in std_logic;
      pidTGT_w_in : in t_w32;
      pidTGT_r_out : out t_w32);
  end component;

  component mux_pidTGT_w
    port (
      ohe_selector_ID : in std_logic;
      lnk_id_in : in t_w32;
      pcaR_in : in t_w32;
      pidTGT_w_out : out t_w32);
  end component;

  component mux_X_x_w1_wad
    port (
      ohe_selector_EX : in std_logic;
      X_x_w1_div_main_pdg_en_in : in t_uint1_t;
      CTt5u_cstP7_EX_in : in t_t5u;
      X_x_w1_div_main_pdg_w_a_in : in t_t5unz;
      X_x_w1_wad_out : out t_t5u);
  end component;

  component pipe_ocd_ld_DMbEX
    port (
      clock : in std_logic;
      ocd_ld_DMbID_w_in : in boolean;
      ocd_ld_DMbEX_r_out : out boolean);
  end component;

  component pipe_ocd_ld_DMbS3
    port (
      clock : in std_logic;
      ocd_ld_DMbEX_w_in : in boolean;
      ocd_ld_DMbS3_r_out : out boolean);
  end component;

  component pipe_ocd_st_DMbEX
    port (
      clock : in std_logic;
      ocd_st_DMbID_w_in : in boolean;
      ocd_st_DMbEX_r_out : out boolean);
  end component;

  component pipe_ocd_st_DMbS3
    port (
      clock : in std_logic;
      ocd_st_DMbEX_w_in : in boolean;
      ocd_st_DMbS3_r_out : out boolean);
  end component;

  component pipe_ocd_ld_PMbEX
    port (
      clock : in std_logic;
      ocd_ld_PMbID_w_in : in boolean;
      ocd_ld_PMbEX_r_out : out boolean);
  end component;

  component pipe_ocd_ld_PMbS3
    port (
      clock : in std_logic;
      ocd_ld_PMbEX_w_in : in boolean;
      ocd_ld_PMbS3_r_out : out boolean);
  end component;

  component pipe_ocd_st_PMbEX
    port (
      clock : in std_logic;
      ocd_st_PMbID_w_in : in boolean;
      ocd_st_PMbEX_r_out : out boolean);
  end component;

  component hazards
    port (
      hazards_decode_ID : in std_logic_vector(7 downto 0);
      hazards_decode_EX : in std_logic;
      Ch_t5u_EX_11_7 : in t_t5u;
      Ch_t5u_ID_11_7 : in t_t5u;
      Ch_t5u_ID_19_15 : in t_t5u;
      Ch_t5u_ID_24_20 : in t_t5u;
      div_adr_in : in t_t5unz;
      div_bsy_in : in t_t1u;
      div_wnc_in : in t_t1u;
      hzd_stall_out : out std_logic);
  end component;

  component debug_controller
    generic (
      nid_gen : natural := 1);
    port (
      reset_ext : in std_logic;
      clock : in std_logic;
      dbg_data_pi_in : in std_logic_vector(31 downto 0);
      dbg_data_we_in : in std_logic;
      dbg_ext_break_in : in std_logic;
      dbg_instr_exec_in : in std_logic;
      jtag_ireg_in : in t_jtag_instr_tp;
      ocd_addr_pdcr_in : in t_addr;
      ocd_data_pdcr_in : in t_w08;
      ocd_instr_pdcr_in : in t_iword;
      ocd_mode_in : in t_t1u;
      ocd_swbreak_in : in t_t1u;
      pcr_in : in t_addr;
      dbg_data_po_out : out std_logic_vector(31 downto 0);
      dbg_reset_out : out std_logic;
      dbg_set_break_out : out std_logic;
      en_ocd_addr_pdcw_out : out std_logic;
      en_ocd_data_pdcw_out : out std_logic;
      en_ocd_instr_pdcw_out : out std_logic;
      ocd_addr_pdcw_out : out t_addr;
      ocd_data_pdcw_out : out t_w08;
      ocd_exe_out : out t_t1u;
      ocd_instr_pdcw_out : out t_iword;
      ocd_ld_DMb_out : out boolean;
      ocd_ld_PMb_out : out boolean;
      ocd_req_out : out t_t1u;
      ocd_st_DMb_out : out boolean;
      ocd_st_PMb_out : out boolean);
  end component;

  component jtag_interface
    port (
      jtag_trst : in std_logic;
      reset_ext : in std_logic;
      clock : in std_logic;
      dbg_data_po_in : in std_logic_vector(31 downto 0);
      jtag_capture_dr_in : in std_logic;
      jtag_shift_dr_in : in std_logic;
      jtag_si_in : in std_logic;
      jtag_tck_in : in std_logic;
      jtag_update_dr_in : in std_logic;
      jtag_update_ir_in : in std_logic;
      dbg_data_pi_out : out std_logic_vector(31 downto 0);
      dbg_data_we_out : out std_logic;
      dbg_instr_exec_out : out std_logic;
      jtag_so_out : out std_logic);
  end component;

  component jtag_tap_controller
    port (
      jtag_trst : in std_logic;
      jtag_tap_si_in : in std_logic;
      jtag_tck_in : in std_logic;
      jtag_tdi_in : in std_logic;
      jtag_tms_in : in std_logic;
      jtag_capture_dr_out : out std_logic;
      jtag_ireg_out : out std_logic_vector(15 downto 0);
      jtag_shift_dr_out : out std_logic;
      jtag_tap_so_out : out std_logic;
      jtag_tdo_out : out std_logic;
      jtag_update_dr_out : out std_logic;
      jtag_update_ir_out : out std_logic);
  end component;

  component decoder
    port (
      reset : in std_logic;
      clock : in std_logic;
      hzd_stall_in : in std_logic;
      kill_ID_in : in std_logic;
      trn_ID_valid_in : in std_logic;
      trn_IR_ID : in t_iword;
      EX_enabling_out : out t_EX_enabling;
      ID_enabling_out : out t_ID_enabling;
      X_x_r1_rad_out : out t_t5u;
      X_x_r2_rad_out : out t_t5u;
      X_x_r3_rad_out : out t_t5u;
      X_x_w2_wad_out : out t_t5u;
      issue_sig_out : out std_logic;
      reg_IR_EX_out : out t_iword;
      reg_IR_ID_out : out t_iword);
  end component;

  signal aluA : t_w32;
  signal aluB : t_w32;
  signal aluR : t_w32;
  signal pcaA : t_w32;
  signal pcaB : t_w32;
  signal pcaR : t_w32;
  signal cmpA : t_w32;
  signal cmpB : t_w32;
  signal cmpF : boolean;
  signal divA : t_w32;
  signal divB : t_w32;
  signal div_wad : t_t5u;
  signal X_x_w1_div_main_pdg_en : t_uint1_t;
  signal X_x_w1_div_main_pdg_w_a : t_t5unz;
  signal div_adr : t_t5unz;
  signal div_bsy : t_t1u;
  signal div_wnc : t_t1u;
  signal x_w11 : t_w32;
  signal dmw_rd_dp : t_w32;
  signal lxB : t_w08;
  signal lxH : t_w16;
  signal lxR : t_w32;
  signal aguA : t_w32;
  signal aguB : t_w32;
  signal aguR : t_w32;
  signal mpyA : t_w32;
  signal mpyB : t_w32;
  signal mpyM : t_t2u;
  signal mpyH : t_w32;
  signal mpyL : t_w32;
  signal ocd_ld_DMbEX_r : boolean;
  signal ocd_ld_PMbEX_r : boolean;
  signal ocd_st_DMbEX_r : boolean;
  signal ocd_st_PMbEX_r : boolean;
  signal ocd_addr_r : t_addr;
  signal ocd_addr_w : t_addr;
  signal xuA : t_w32;
  signal xuB : t_w32;
  signal xuC : t_w32;
  signal cnn_R : t_w32;
  signal dm_addr : t_addr;
  signal dmb_ld : std_logic;
  signal dmb_st : std_logic;
  signal dmb_wr : t_w08;
  signal dmh_ld : std_logic;
  signal dmh_st : std_logic;
  signal dmh_wr : t_w16;
  signal dmw_ld : std_logic;
  signal dmw_st : std_logic;
  signal dmw_wr : t_w32;
  signal wdm_rd : t_v4u8;
  signal dmb_rd : t_w08;
  signal dmh_rd : t_w16;
  signal dmw_rd : t_w32;
  signal wdm_addr : t_addr;
  signal wdm_ld : t_uint1_t;
  signal wdm_st : t_uint4_t_as_vect;
  signal wdm_wr : t_v4u8;
  signal edm_rd : t_v4u8;
  signal edm_addr : t_addr;
  signal edm_ld : t_uint1_t;
  signal edm_st : t_uint4_t_as_vect;
  signal edm_wr : t_v4u8;
  signal cnd : boolean;
  signal hzd_stall : std_logic;
  signal issue_sig : std_logic;
  signal jmp_tgt_EX : t_w32;
  signal jmp_tgt_ID : t_w32;
  signal ocd_exe : t_t1u;
  signal ocd_instr_r : t_iword;
  signal ocd_req : t_t1u;
  signal pcr : t_addr;
  signal pm_rd_dp : t_iword;
  signal PC_ID_PC_ID_w_cntrl_issue_pdg_en : std_logic;
  signal PC_ID_w : t_addr;
  signal PC_pcw_cntrl_nxtpc_pdg_en : std_logic;
  signal kill_ID : std_logic;
  signal lnk_id : t_w32;
  signal ocd_mode : t_t1u;
  signal pcw : t_addr;
  signal pm_addr1 : t_addr;
  signal pm_ld_pdg_en : std_logic;
  signal trn_ID_valid : std_logic;
  signal trn_IR_ID : t_iword;
  signal PC_ID_r : t_addr;
  signal PC_EX_w : t_addr;
  signal PC_EX_r : t_addr;
  signal X_x_r1_raddr : t_t5u;
  signal X_x_r2_raddr : t_t5u;
  signal X_x_r3_raddr : t_t5u;
  signal X_x_w1_wad : t_t5u;
  signal X_x_w2_waddr : t_t5u;
  signal x_w1 : t_w32;
  signal x_w2 : t_w32;
  signal x_r1 : t_w32;
  signal x_r2 : t_w32;
  signal x_r3 : t_w32;
  signal en_ocd_addr_pdcw : std_logic;
  signal ocd_addr_pdcw : t_addr;
  signal ocd_addr_pdcr : t_addr;
  signal en_ocd_data_pdcw : std_logic;
  signal ocd_ld_DMbS3_r : boolean;
  signal ocd_data_pdcw : t_w08;
  signal ocd_data_w : t_w08;
  signal ocd_data_pdcr : t_w08;
  signal ocd_data_r : t_w08;
  signal en_ocd_instr_pdcw : std_logic;
  signal ocd_ld_PMbS3_r : boolean;
  signal ocd_instr_pdcw : t_iword;
  signal ocd_instr_w : t_iword;
  signal ocd_instr_pdcr : t_iword;
  signal pm_addr_dp : t_addr;
  signal pm_rd : t_iword;
  signal pm_wr_dp : t_iword;
  signal pm_addr : t_addr;
  signal pm_ld : std_logic;
  signal pm_st : std_logic;
  signal pm_wr : t_iword;
  signal ocd_st_DMbS3_r : boolean;
  signal dm_addr_dp : t_addr;
  signal dmb_wr_dp : t_w08;
  signal dmh_wr_dp : t_w16;
  signal dmw_wr_dp : t_w32;
  signal dmb_rd_dp : t_w08;
  signal dmh_rd_dp : t_w16;
  signal C_t20s_rp12_EX_31_12 : t_t20s_rp12;
  signal pidTGT_r : t_w32;
  signal x_w1_dead : t_w32;
  signal C_t12s_EX_31_20 : t_t12s;
  signal C_t12s_ID_31_20 : t_t12s;
  signal C_t13s_s2_ID_31_7_30_25_11_8 : t_t13s_s2;
  signal of21 : t_t21s_s2;
  signal C_t21s_s2_ID_31_19_12_20_30_21 : t_t21s_s2;
  signal C_t13s_s2_EX_31_7_30_25_11_8 : t_t13s_s2;
  signal of13_cd : t_t13s_s2;
  signal trgt : t_w32;
  signal jmp_tgt_algn2 : t_t31s_rp1;
  signal C_t12s_ID_31_25_11_7 : t_t12s;
  signal ocd_swbreak : t_t1u;
  signal pidTGT_w : t_w32;
  signal ocd_ld_DMb : boolean;
  signal ocd_ld_DMbID_w : boolean;
  signal ocd_ld_DMbEX_w : boolean;
  signal ocd_st_DMb : boolean;
  signal ocd_st_DMbID_w : boolean;
  signal ocd_st_DMbEX_w : boolean;
  signal ocd_ld_PMb : boolean;
  signal ocd_ld_PMbID_w : boolean;
  signal ocd_ld_PMbEX_w : boolean;
  signal ocd_st_PMb : boolean;
  signal ocd_st_PMbID_w : boolean;
  signal dbg_data_pi : std_logic_vector(31 downto 0);
  signal dbg_data_we : std_logic;
  signal dbg_ext_break : std_logic;
  signal dbg_instr_exec : std_logic;
  signal jtag_ireg : t_jtag_instr_tp;
  signal dbg_data_po : std_logic_vector(31 downto 0);
  signal dbg_reset : std_logic;
  signal dbg_set_break : std_logic;
  signal jtag_capture_dr : std_logic;
  signal jtag_shift_dr : std_logic;
  signal jtag_si : std_logic;
  signal jtag_tck : std_logic;
  signal jtag_update_dr : std_logic;
  signal jtag_update_ir : std_logic;
  signal jtag_so : std_logic;
  signal jtag_tdi : std_logic;
  signal jtag_tms : std_logic;
  signal jtag_tdo : std_logic;
  signal EX_enabling : t_EX_enabling;
  signal ID_enabling : t_ID_enabling;
  signal reg_IR_EX : t_iword;
  signal reg_IR_ID : t_iword;

  signal reset : std_logic;

begin

  reset <= reset_ext or dbg_reset;

  pm_rd <= pm_rd_in;
  pm_addr_out <= pm_addr;
  pm_wr_out <= pm_wr;
  pm_st_out <= pm_st;
  pm_ld_out <= pm_ld;
  jtag_tck <= jtag_tck_in;
  jtag_tms <= jtag_tms_in;
  jtag_tdi <= jtag_tdi_in;
  jtag_tdo_out <= jtag_tdo;
  dbg_ext_break <= dbg_ext_break_in;
  dbg_set_break_out <= dbg_set_break;
  edm_ld_out <= edm_ld;
  edm_addr_out <= edm_addr;
  edm_rd <= edm_rd_in;
  edm_st_out <= edm_st;
  edm_wr_out <= edm_wr;

  C_t20s_rp12_EX_31_12 <= signed(reg_IR_EX(31 downto 12));
  C_t12s_EX_31_20 <= signed(reg_IR_EX(31 downto 20));
  C_t12s_ID_31_20 <= signed(reg_IR_ID(31 downto 20));
  C_t13s_s2_ID_31_7_30_25_11_8 <= reg_IR_ID(31) & reg_IR_ID(7) & signed(reg_IR_ID(30 downto 25)) & signed(reg_IR_ID(11 downto 8)) & "0";
  C_t21s_s2_ID_31_19_12_20_30_21 <= reg_IR_ID(31) & signed(reg_IR_ID(19 downto 12)) & reg_IR_ID(20) & signed(reg_IR_ID(30 downto 21)) & "0";
  C_t13s_s2_EX_31_7_30_25_11_8 <= reg_IR_EX(31) & reg_IR_EX(7) & signed(reg_IR_EX(30 downto 25)) & signed(reg_IR_EX(11 downto 8)) & "0";
  C_t12s_ID_31_25_11_7 <= signed(reg_IR_ID(31 downto 25)) & signed(reg_IR_ID(11 downto 7));

  -- expanded mux_dmh_wr
  -- (dmh_wr_copy0_x_r2_EX)
  -- [ldst.n:100](regX.n:82)
  dmh_wr_dp <= x_r2(15 downto 0);

  -- expanded mux_dmw_wr
  -- (dmw_wr_copy0_x_r2_EX)
  -- [ldst.n:101](regX.n:82)
  dmw_wr_dp <= x_r2;

  -- expanded mux_PC_EX_w
  -- (PC_EX_w_copy0_PC_ID_r_ID)
  -- [alu.n:209]
  PC_EX_w <= PC_ID_r;

  -- expanded mux_x_w2
  -- (x_w2_copy0_cnn_w1_EX)
  -- [cnn.n:36](regX.n:107)
  x_w2 <= cnn_R;

  -- expanded mux_cmpA
  -- (cmpA_copy0_x_r1_EX)
  -- [ctrl.n:94](regX.n:75)
  cmpA <= x_r1;

  -- expanded mux_cmpB
  -- (cmpB_copy0_x_r2_EX)
  -- [ctrl.n:95](regX.n:82)
  cmpB <= x_r2;

  -- expanded mux_cnd
  -- (cnd_copy0_cmpF_EX)
  -- [ctrl.n:106]
  cnd <= cmpF;

  -- expanded mux_of21
  -- (of21_copy0___CTt21s_s2_cstP31_20P12_19_12P20_11P21_10_1_ID)
  -- [ctrl.n:154][ctrl.n:161]
  of21 <= C_t21s_s2_ID_31_19_12_20_30_21;

  -- expanded mux_of13_cd
  -- (of13_cd_copy0___CTt13s_s2_cstP31_12P7_11P25_10_5P8_4_1_EX)
  -- [ctrl.n:106]
  of13_cd <= C_t13s_s2_EX_31_7_30_25_11_8;

  -- expanded mux_trgt
  -- (trgt_copy0_pcaR_ID)
  -- [ctrl.n:193]
  trgt <= pcaR;

  -- expanded mux_jmp_tgt_EX
  -- (jmp_tgt_EX_copy0_pidTGT_EX)
  -- [ctrl.n:115]
  jmp_tgt_EX <= pidTGT_r;

  -- expanded mux_jmp_tgt_algn2
  -- (jmp_tgt_algn2_copy0_trgt_ID)
  -- [ctrl.n:200]
  jmp_tgt_algn2 <= resize(trgt(31 downto 1), t_t31s_rp1'length);

  -- expanded mux_divA
  -- (divA_copy0_x_r1_EX)
  -- [div.n:58](regX.n:75)
  divA <= x_r1;

  -- expanded mux_divB
  -- (divB_copy0_x_r2_EX)
  -- [div.n:59](regX.n:82)
  divB <= x_r2;

  -- expanded mux_div_wad
  -- (div_wad_copy0___CTt5u_cstP7_EX)
  -- [div.n:60]
  div_wad <= reg_IR_EX(11 downto 7);

  -- expanded mux_lxB
  -- (lxB_copy0_dmb_rd_EX)
  -- [ldst.n:68][ldst.n:69]
  lxB <= dmb_rd_dp;

  -- expanded mux_lxH
  -- (lxH_copy0_dmh_rd_EX)
  -- [ldst.n:70][ldst.n:71]
  lxH <= dmh_rd_dp;

  -- expanded mux_aguA
  -- (aguA_copy0_x_r3_ID)
  -- [ldst.n:54][ldst.n:91](regX.n:89)
  aguA <= x_r3;

  -- expanded mux_mpyA
  -- (mpyA_copy0_x_r1_EX)
  -- [mpy.n:61](regX.n:75)
  mpyA <= x_r1;

  -- expanded mux_mpyB
  -- (mpyB_copy0_x_r2_EX)
  -- [mpy.n:62](regX.n:82)
  mpyB <= x_r2;

  -- expanded mux_xuC
  -- (xuC_copy0_cnn_r3_EX)
  -- [cnn.n:32]
  xuC <= x_r3;

  -- expanded mux_xuB
  -- (xuB_copy0_cnn_r2_EX)
  -- [cnn.n:32]
  xuB <= x_r2;

  -- expanded mux_xuA
  -- (xuA_copy0_cnn_r1_EX)
  -- [cnn.n:32]
  xuA <= x_r1;

  -- expanded mux_ocd_ld_DMbID_w
  -- (__ocd_ld_DMbID_w_cp_ocd_ld_DMb_ID)
  ocd_ld_DMbID_w <= ocd_ld_DMb;

  -- expanded mux_ocd_ld_DMbEX_w
  -- (__ocd_ld_DMbEX_w_cp___ocd_ld_DMbEX_r_EX)
  ocd_ld_DMbEX_w <= ocd_ld_DMbEX_r;

  -- expanded mux_ocd_st_DMbID_w
  -- (__ocd_st_DMbID_w_cp_ocd_st_DMb_ID)
  ocd_st_DMbID_w <= ocd_st_DMb;

  -- expanded mux_ocd_st_DMbEX_w
  -- (__ocd_st_DMbEX_w_cp___ocd_st_DMbEX_r_EX)
  ocd_st_DMbEX_w <= ocd_st_DMbEX_r;

  -- expanded mux_ocd_ld_PMbID_w
  -- (__ocd_ld_PMbID_w_cp_ocd_ld_PMb_ID)
  ocd_ld_PMbID_w <= ocd_ld_PMb;

  -- expanded mux_ocd_ld_PMbEX_w
  -- (__ocd_ld_PMbEX_w_cp___ocd_ld_PMbEX_r_EX)
  ocd_ld_PMbEX_w <= ocd_ld_PMbEX_r;

  -- expanded mux_ocd_st_PMbID_w
  -- (__ocd_st_PMbID_w_cp_ocd_st_PMb_ID)
  ocd_st_PMbID_w <= ocd_st_PMb;

  inst_alu : alu
  port map (
    bin_selector_EX => EX_enabling.alu_bin_sel_EX,
    aluA_in => aluA,
    aluB_in => aluB,
    aluR_out => aluR);

  inst_pca : pca
  port map (
    ohe_selector_ID => ID_enabling.pca_ohe_sel_ID,
    pcaA_in => pcaA,
    pcaB_in => pcaB,
    pcaR_out => pcaR);

  inst_cmp : cmp
  port map (
    bin_selector_EX => EX_enabling.cmp_bin_sel_EX,
    cmpA_in => cmpA,
    cmpB_in => cmpB,
    cmpF_out => cmpF);

  inst_div : div
  port map (
    reset => reset,
    clock => clock,
    en_divR_divs_divA_divB_div_EX => EX_enabling.divR_divs_divA_divB_div_EX,
    en_divR_divu_divA_divB_div_EX => EX_enabling.divR_divu_divA_divB_div_EX,
    en_divR_rems_divA_divB_div_EX => EX_enabling.divR_rems_divA_divB_div_EX,
    en_divR_remu_divA_divB_div_EX => EX_enabling.divR_remu_divA_divB_div_EX,
    divA_in => divA,
    divB_in => divB,
    div_wad_in => div_wad,
    X_x_w1_div_main_pdg_en_out => X_x_w1_div_main_pdg_en,
    X_x_w1_div_main_pdg_w_a_out => X_x_w1_div_main_pdg_w_a,
    div_adr_out => div_adr,
    div_bsy_out => div_bsy,
    div_wnc_out => div_wnc,
    x_w1_out => x_w11);

  inst_lx : lx
  port map (
    bin_selector_EX => EX_enabling.lx_bin_sel_EX,
    dmw_rd_dp_in => dmw_rd_dp,
    lxB_in => lxB,
    lxH_in => lxH,
    lxR_out => lxR);

  inst_agu : agu
  port map (
    ohe_selector_ID => ID_enabling.agu_ohe_sel_ID,
    aguA_in => aguA,
    aguB_in => aguB,
    aguR_out => aguR);

  inst_mpy : mpy
  port map (
    ohe_selector_EX => EX_enabling.mpy_ohe_sel_EX,
    mpyA_in => mpyA,
    mpyB_in => mpyB,
    mpyM_in => mpyM,
    mpyH_out => mpyH,
    mpyL_out => mpyL);

  inst_ocd_addr_incr : ocd_addr_incr
  port map (
    ocd_ld_DMbEX_r_in => ocd_ld_DMbEX_r,
    ocd_ld_PMbEX_r_in => ocd_ld_PMbEX_r,
    ocd_st_DMbEX_r_in => ocd_st_DMbEX_r,
    ocd_st_PMbEX_r_in => ocd_st_PMbEX_r,
    ocd_addr_r_in => ocd_addr_r,
    ocd_addr_w_out => ocd_addr_w);

  inst_cnn : cnn
  port map (
    ohe_selector_EX => EX_enabling.cnn_ohe_sel_EX,
    xuA_in => xuA,
    xuB_in => xuB,
    xuC_in => xuC,
    cnn_R_out => cnn_R);

  inst_dm_merge : dm_merge
  port map (
    reset => reset,
    clock => clock,
    dm_addr_in => dm_addr,
    dmb_ld_in => dmb_ld,
    dmb_st_in => dmb_st,
    dmb_wr_in => dmb_wr,
    dmh_ld_in => dmh_ld,
    dmh_st_in => dmh_st,
    dmh_wr_in => dmh_wr,
    dmw_ld_in => dmw_ld,
    dmw_st_in => dmw_st,
    dmw_wr_in => dmw_wr,
    wdm_rd_in => wdm_rd,
    dmb_rd_out => dmb_rd,
    dmh_rd_out => dmh_rd,
    dmw_rd_out => dmw_rd,
    wdm_addr_out => wdm_addr,
    wdm_ld_out => wdm_ld,
    wdm_st_out => wdm_st,
    wdm_wr_out => wdm_wr);

  inst_dm_wbb : dm_wbb
  port map (
    reset => reset,
    clock => clock,
    edm_rd_in => edm_rd,
    wdm_addr_in => wdm_addr,
    wdm_ld_in => wdm_ld,
    wdm_st_in => wdm_st,
    wdm_wr_in => wdm_wr,
    edm_addr_out => edm_addr,
    edm_ld_out => edm_ld,
    edm_st_out => edm_st,
    edm_wr_out => edm_wr,
    wdm_rd_out => wdm_rd);

  inst_controller : controller
  port map (
    reset => reset,
    clock => clock,
    ohe_selector_EX => EX_enabling.controller_ohe_sel_EX,
    bin_selector_ID => ID_enabling.controller_bin_sel_ID,
    cnd_in => cnd,
    hzd_stall_in => hzd_stall,
    issue_sig_in => issue_sig,
    jmp_tgt_EX_in => jmp_tgt_EX,
    jmp_tgt_ID_in => jmp_tgt_ID,
    ocd_exe_in => ocd_exe,
    ocd_instr_r_in => ocd_instr_r,
    ocd_req_in => ocd_req,
    pcr_in => pcr,
    pm_rd_in => pm_rd_dp,
    PC_ID_PC_ID_w_cntrl_issue_pdg_en_out => PC_ID_PC_ID_w_cntrl_issue_pdg_en,
    PC_ID_w_out => PC_ID_w,
    PC_pcw_cntrl_nxtpc_pdg_en_out => PC_pcw_cntrl_nxtpc_pdg_en,
    kill_ID_out => kill_ID,
    lnk_id_out => lnk_id,
    ocd_mode_out => ocd_mode,
    pcw_out => pcw,
    pm_addr_out => pm_addr1,
    pm_ld_pdg_en_out => pm_ld_pdg_en,
    trn_ID_valid_out => trn_ID_valid,
    trn_IR_ID_out => trn_IR_ID);

  inst_reg_PC : reg_PC
  port map (
    reset => reset,
    clock => clock,
    PC_pcw_cntrl_nxtpc_pdg_en_in => PC_pcw_cntrl_nxtpc_pdg_en,
    pcw_in => pcw,
    pcr_out => pcr);

  inst_reg_PC_ID : reg_PC_ID
  port map (
    clock => clock,
    PC_ID_PC_ID_w_cntrl_issue_pdg_en_in => PC_ID_PC_ID_w_cntrl_issue_pdg_en,
    PC_ID_w_in => PC_ID_w,
    PC_ID_r_out => PC_ID_r);

  inst_reg_PC_EX : reg_PC_EX
  port map (
    clock => clock,
    ohe_selector_ID => ID_enabling.reg_PC_EX_ohe_sel_ID,
    PC_EX_w_in => PC_EX_w,
    hzd_stall_in => hzd_stall,
    kill_ID_in => kill_ID,
    PC_EX_r_out => PC_EX_r);

  inst_reg_X : reg_X
  port map (
    reset => reset,
    clock => clock,
    bin_selector_EX => EX_enabling.reg_X_bin_sel_EX,
    X_x_w1_div_main_pdg_en_in => X_x_w1_div_main_pdg_en,
    X_x_r1_raddr_in => X_x_r1_raddr,
    X_x_r2_raddr_in => X_x_r2_raddr,
    X_x_r3_raddr_in => X_x_r3_raddr,
    X_x_w1_wad_in => X_x_w1_wad,
    X_x_w2_waddr_in => X_x_w2_waddr,
    x_w1_in => x_w1,
    x_w2_in => x_w2,
    x_r1_out => x_r1,
    x_r2_out => x_r2,
    x_r3_out => x_r3);

  inst_reg_ocd_addr : reg_ocd_addr
  port map (
    reset => reset,
    clock => clock,
    en_ocd_addr_pdcw_in => en_ocd_addr_pdcw,
    ocd_ld_DMbEX_r_in => ocd_ld_DMbEX_r,
    ocd_ld_PMbEX_r_in => ocd_ld_PMbEX_r,
    ocd_st_DMbEX_r_in => ocd_st_DMbEX_r,
    ocd_st_PMbEX_r_in => ocd_st_PMbEX_r,
    ocd_addr_pdcw_in => ocd_addr_pdcw,
    ocd_addr_w_in => ocd_addr_w,
    ocd_addr_pdcr_out => ocd_addr_pdcr,
    ocd_addr_r_out => ocd_addr_r);

  inst_reg_ocd_data : reg_ocd_data
  port map (
    reset => reset,
    clock => clock,
    en_ocd_data_pdcw_in => en_ocd_data_pdcw,
    ocd_ld_DMbS3_r_in => ocd_ld_DMbS3_r,
    ocd_data_pdcw_in => ocd_data_pdcw,
    ocd_data_w_in => ocd_data_w,
    ocd_data_pdcr_out => ocd_data_pdcr,
    ocd_data_r_out => ocd_data_r);

  inst_reg_ocd_instr : reg_ocd_instr
  port map (
    reset => reset,
    clock => clock,
    en_ocd_instr_pdcw_in => en_ocd_instr_pdcw,
    ocd_ld_PMbS3_r_in => ocd_ld_PMbS3_r,
    ocd_instr_pdcw_in => ocd_instr_pdcw,
    ocd_instr_w_in => ocd_instr_w,
    ocd_instr_pdcr_out => ocd_instr_pdcr,
    ocd_instr_r_out => ocd_instr_r);

  inst_mem_PMb : mem_PMb
  port map (
    ocd_ld_PMbEX_r_in => ocd_ld_PMbEX_r,
    ocd_st_PMbEX_r_in => ocd_st_PMbEX_r,
    pm_ld_pdg_en_in => pm_ld_pdg_en,
    pm_addr_dp_in => pm_addr_dp,
    pm_rd_in => pm_rd,
    pm_wr_dp_in => pm_wr_dp,
    pm_addr_out => pm_addr,
    pm_ld_out => pm_ld,
    pm_rd_dp_out => pm_rd_dp,
    pm_st_out => pm_st,
    pm_wr_out => pm_wr);

  inst_mem_DMb : mem_DMb
  port map (
    bin_selector_EX => EX_enabling.mem_DMb_bin_sel_EX,
    bin_selector_ID => ID_enabling.mem_DMb_bin_sel_ID,
    ocd_ld_DMbEX_r_in => ocd_ld_DMbEX_r,
    ocd_st_DMbEX_r_in => ocd_st_DMbEX_r,
    ocd_st_DMbS3_r_in => ocd_st_DMbS3_r,
    dm_addr_dp_in => dm_addr_dp,
    dmb_rd_in => dmb_rd,
    dmb_wr_dp_in => dmb_wr_dp,
    dmh_rd_in => dmh_rd,
    dmh_wr_dp_in => dmh_wr_dp,
    dmw_rd_in => dmw_rd,
    dmw_wr_dp_in => dmw_wr_dp,
    hzd_stall_in => hzd_stall,
    kill_ID_in => kill_ID,
    dm_addr_out => dm_addr,
    dmb_ld_out => dmb_ld,
    dmb_rd_dp_out => dmb_rd_dp,
    dmb_st_out => dmb_st,
    dmb_wr_out => dmb_wr,
    dmh_ld_out => dmh_ld,
    dmh_rd_dp_out => dmh_rd_dp,
    dmh_st_out => dmh_st,
    dmh_wr_out => dmh_wr,
    dmw_ld_out => dmw_ld,
    dmw_rd_dp_out => dmw_rd_dp,
    dmw_st_out => dmw_st,
    dmw_wr_out => dmw_wr);

  inst_mux_pm_addr : mux_pm_addr
  port map (
    ocd_ld_PMbEX_r_in => ocd_ld_PMbEX_r,
    ocd_st_PMbEX_r_in => ocd_st_PMbEX_r,
    pm_ld_pdg_en_in => pm_ld_pdg_en,
    ocd_addr_r_in => ocd_addr_r,
    pm_addr1_in => pm_addr1,
    pm_addr_out => pm_addr_dp);

  inst_mux_pm_wr : mux_pm_wr
  port map (
    ocd_st_PMbEX_r_in => ocd_st_PMbEX_r,
    ocd_instr_r_in => ocd_instr_r,
    pm_wr_out => pm_wr_dp);

  inst_mux_dm_addr : mux_dm_addr
  port map (
    ohe_selector_ID => ID_enabling.mux_dm_addr_ohe_sel_ID,
    ocd_ld_DMbEX_r_in => ocd_ld_DMbEX_r,
    ocd_st_DMbEX_r_in => ocd_st_DMbEX_r,
    aguR_in => aguR,
    ocd_addr_r_in => ocd_addr_r,
    dm_addr_out => dm_addr_dp);

  inst_mux_dmb_wr : mux_dmb_wr
  port map (
    ohe_selector_EX => EX_enabling.mux_dmb_wr_ohe_sel_EX,
    ocd_st_DMbS3_r_in => ocd_st_DMbS3_r,
    ocd_data_r_in => ocd_data_r,
    x_r2_in => x_r2,
    dmb_wr_out => dmb_wr_dp);

  inst_mux_x_w1 : mux_x_w1
  port map (
    bin_selector_EX => EX_enabling.mux_x_w1_bin_sel_EX,
    X_x_w1_div_main_pdg_en_in => X_x_w1_div_main_pdg_en,
    CTt20s_rp12_cstP12_EX_in => C_t20s_rp12_EX_31_12,
    aluR_in => aluR,
    lxR_in => lxR,
    mpyH_in => mpyH,
    mpyL_in => mpyL,
    pidTGT_r_in => pidTGT_r,
    x_w11_in => x_w11,
    x_w1_out => x_w1);

  inst_mux_x_w1_dead : mux_x_w1_dead
  port map (
    ohe_selector_EX => EX_enabling.mux_x_w1_dead_ohe_sel_EX,
    cnn_R_in => cnn_R,
    x_w1_in => x_w1,
    x_w1_dead_out => x_w1_dead);

  inst_mux_ocd_data_w : mux_ocd_data_w
  port map (
    ocd_ld_DMbS3_r_in => ocd_ld_DMbS3_r,
    dmb_rd_dp_in => dmb_rd_dp,
    ocd_data_w_out => ocd_data_w);

  inst_mux_ocd_instr_w : mux_ocd_instr_w
  port map (
    ocd_ld_PMbS3_r_in => ocd_ld_PMbS3_r,
    pm_rd_dp_in => pm_rd_dp,
    ocd_instr_w_out => ocd_instr_w);

  inst_mux_aluA : mux_aluA
  port map (
    ohe_selector_EX => EX_enabling.mux_aluA_ohe_sel_EX,
    PC_EX_r_in => PC_EX_r,
    x_r1_in => x_r1,
    aluA_out => aluA);

  inst_mux_aluB : mux_aluB
  port map (
    bin_selector_EX => EX_enabling.mux_aluB_bin_sel_EX,
    CTt5u_cstP20_EX_in => reg_IR_EX(24 downto 20),
    CTt12s_cstP20_EX_in => C_t12s_EX_31_20,
    CTt20s_rp12_cstP12_EX_in => C_t20s_rp12_EX_31_12,
    x_r2_in => x_r2,
    aluB_out => aluB);

  inst_mux_pcaA : mux_pcaA
  port map (
    ohe_selector_ID => ID_enabling.mux_pcaA_ohe_sel_ID,
    PC_ID_r_in => PC_ID_r,
    x_r3_in => x_r3,
    pcaA_out => pcaA);

  inst_mux_pcaB : mux_pcaB
  port map (
    bin_selector_ID => ID_enabling.mux_pcaB_bin_sel_ID,
    CTt12s_cstP20_ID_in => C_t12s_ID_31_20,
    CTt13s_s2_cstP31_12P7_11P25_10_5P8_4_1_ID_in => C_t13s_s2_ID_31_7_30_25_11_8,
    of21_in => of21,
    pcaB_out => pcaB);

  inst_mux_jmp_tgt_ID : mux_jmp_tgt_ID
  port map (
    ohe_selector_ID => ID_enabling.mux_jmp_tgt_ID_ohe_sel_ID,
    jmp_tgt_algn2_in => jmp_tgt_algn2,
    pcaR_in => pcaR,
    jmp_tgt_ID_out => jmp_tgt_ID);

  inst_mux_aguB : mux_aguB
  port map (
    bin_selector_ID => ID_enabling.mux_aguB_bin_sel_ID,
    CTt12s_cstP20_ID_in => C_t12s_ID_31_20,
    CTt12s_cstP25_11_5P7_4_0_ID_in => C_t12s_ID_31_25_11_7,
    aguB_out => aguB);

  inst_mux_mpyM : mux_mpyM
  port map (
    bin_selector_EX => EX_enabling.mux_mpyM_bin_sel_EX,
    mpyM_out => mpyM);

  inst_mux_ocd_swbreak : mux_ocd_swbreak
  port map (
    ohe_selector_EX => EX_enabling.mux_ocd_swbreak_ohe_sel_EX,
    ocd_swbreak_out => ocd_swbreak);

  inst_pipe_pidTGT : pipe_pidTGT
  port map (
    clock => clock,
    pidTGT_w_in => pidTGT_w,
    pidTGT_r_out => pidTGT_r);

  inst_mux_pidTGT_w : mux_pidTGT_w
  port map (
    ohe_selector_ID => ID_enabling.mux_pidTGT_w_ohe_sel_ID,
    lnk_id_in => lnk_id,
    pcaR_in => pcaR,
    pidTGT_w_out => pidTGT_w);

  inst_mux_X_x_w1_wad : mux_X_x_w1_wad
  port map (
    ohe_selector_EX => EX_enabling.mux_X_x_w1_wad_ohe_sel_EX,
    X_x_w1_div_main_pdg_en_in => X_x_w1_div_main_pdg_en,
    CTt5u_cstP7_EX_in => reg_IR_EX(11 downto 7),
    X_x_w1_div_main_pdg_w_a_in => X_x_w1_div_main_pdg_w_a,
    X_x_w1_wad_out => X_x_w1_wad);

  inst_pipe_ocd_ld_DMbEX : pipe_ocd_ld_DMbEX
  port map (
    clock => clock,
    ocd_ld_DMbID_w_in => ocd_ld_DMbID_w,
    ocd_ld_DMbEX_r_out => ocd_ld_DMbEX_r);

  inst_pipe_ocd_ld_DMbS3 : pipe_ocd_ld_DMbS3
  port map (
    clock => clock,
    ocd_ld_DMbEX_w_in => ocd_ld_DMbEX_w,
    ocd_ld_DMbS3_r_out => ocd_ld_DMbS3_r);

  inst_pipe_ocd_st_DMbEX : pipe_ocd_st_DMbEX
  port map (
    clock => clock,
    ocd_st_DMbID_w_in => ocd_st_DMbID_w,
    ocd_st_DMbEX_r_out => ocd_st_DMbEX_r);

  inst_pipe_ocd_st_DMbS3 : pipe_ocd_st_DMbS3
  port map (
    clock => clock,
    ocd_st_DMbEX_w_in => ocd_st_DMbEX_w,
    ocd_st_DMbS3_r_out => ocd_st_DMbS3_r);

  inst_pipe_ocd_ld_PMbEX : pipe_ocd_ld_PMbEX
  port map (
    clock => clock,
    ocd_ld_PMbID_w_in => ocd_ld_PMbID_w,
    ocd_ld_PMbEX_r_out => ocd_ld_PMbEX_r);

  inst_pipe_ocd_ld_PMbS3 : pipe_ocd_ld_PMbS3
  port map (
    clock => clock,
    ocd_ld_PMbEX_w_in => ocd_ld_PMbEX_w,
    ocd_ld_PMbS3_r_out => ocd_ld_PMbS3_r);

  inst_pipe_ocd_st_PMbEX : pipe_ocd_st_PMbEX
  port map (
    clock => clock,
    ocd_st_PMbID_w_in => ocd_st_PMbID_w,
    ocd_st_PMbEX_r_out => ocd_st_PMbEX_r);

  inst_hazards : hazards
  port map (
    hazards_decode_ID => ID_enabling.hazards_decode_ID,
    hazards_decode_EX => EX_enabling.hazards_decode_EX,
    Ch_t5u_EX_11_7 => reg_IR_EX(11 downto 7),
    Ch_t5u_ID_11_7 => reg_IR_ID(11 downto 7),
    Ch_t5u_ID_19_15 => reg_IR_ID(19 downto 15),
    Ch_t5u_ID_24_20 => reg_IR_ID(24 downto 20),
    div_adr_in => div_adr,
    div_bsy_in => div_bsy,
    div_wnc_in => div_wnc,
    hzd_stall_out => hzd_stall);

  inst_debug_controller : debug_controller
  generic map (
    nid_gen => nid_gen)
  port map (
    reset_ext => reset_ext,
    clock => clock,
    dbg_data_pi_in => dbg_data_pi,
    dbg_data_we_in => dbg_data_we,
    dbg_ext_break_in => dbg_ext_break,
    dbg_instr_exec_in => dbg_instr_exec,
    jtag_ireg_in => jtag_ireg,
    ocd_addr_pdcr_in => ocd_addr_pdcr,
    ocd_data_pdcr_in => ocd_data_pdcr,
    ocd_instr_pdcr_in => ocd_instr_pdcr,
    ocd_mode_in => ocd_mode,
    ocd_swbreak_in => ocd_swbreak,
    pcr_in => pcr,
    dbg_data_po_out => dbg_data_po,
    dbg_reset_out => dbg_reset,
    dbg_set_break_out => dbg_set_break,
    en_ocd_addr_pdcw_out => en_ocd_addr_pdcw,
    en_ocd_data_pdcw_out => en_ocd_data_pdcw,
    en_ocd_instr_pdcw_out => en_ocd_instr_pdcw,
    ocd_addr_pdcw_out => ocd_addr_pdcw,
    ocd_data_pdcw_out => ocd_data_pdcw,
    ocd_exe_out => ocd_exe,
    ocd_instr_pdcw_out => ocd_instr_pdcw,
    ocd_ld_DMb_out => ocd_ld_DMb,
    ocd_ld_PMb_out => ocd_ld_PMb,
    ocd_req_out => ocd_req,
    ocd_st_DMb_out => ocd_st_DMb,
    ocd_st_PMb_out => ocd_st_PMb);

  inst_jtag_interface : jtag_interface
  port map (
    jtag_trst => jtag_trst,
    reset_ext => reset_ext,
    clock => clock,
    dbg_data_po_in => dbg_data_po,
    jtag_capture_dr_in => jtag_capture_dr,
    jtag_shift_dr_in => jtag_shift_dr,
    jtag_si_in => jtag_si,
    jtag_tck_in => jtag_tck,
    jtag_update_dr_in => jtag_update_dr,
    jtag_update_ir_in => jtag_update_ir,
    dbg_data_pi_out => dbg_data_pi,
    dbg_data_we_out => dbg_data_we,
    dbg_instr_exec_out => dbg_instr_exec,
    jtag_so_out => jtag_so);

  inst_jtag_tap_controller : jtag_tap_controller
  port map (
    jtag_trst => jtag_trst,
    jtag_tap_si_in => jtag_so,
    jtag_tck_in => jtag_tck,
    jtag_tdi_in => jtag_tdi,
    jtag_tms_in => jtag_tms,
    jtag_capture_dr_out => jtag_capture_dr,
    jtag_ireg_out => jtag_ireg,
    jtag_shift_dr_out => jtag_shift_dr,
    jtag_tap_so_out => jtag_si,
    jtag_tdo_out => jtag_tdo,
    jtag_update_dr_out => jtag_update_dr,
    jtag_update_ir_out => jtag_update_ir);

  inst_decoder : decoder
  port map (
    reset => reset,
    clock => clock,
    hzd_stall_in => hzd_stall,
    kill_ID_in => kill_ID,
    trn_ID_valid_in => trn_ID_valid,
    trn_IR_ID => trn_IR_ID,
    EX_enabling_out => EX_enabling,
    ID_enabling_out => ID_enabling,
    X_x_r1_rad_out => X_x_r1_raddr,
    X_x_r2_rad_out => X_x_r2_raddr,
    X_x_r3_rad_out => X_x_r3_raddr,
    X_x_w2_wad_out => X_x_w2_waddr,
    issue_sig_out => issue_sig,
    reg_IR_EX_out => reg_IR_EX,
    reg_IR_ID_out => reg_IR_ID);

end structural;

