
-- File generated by pdg version U-2022.12#33f3808fcb#221128
-- Copyright 2014-2022 Synopsys, Inc. All rights reserved.
-- pdg -I../lib -D__go__ -VHDL -cgo_options.cfg -DIS_VHDL -DSYNTHESIS_NO_UNGROUP -D__tct_patch__=0 +wtrv32p3_cnn_vhdl/tmp_pdg trv32p3_cnn


library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

library trv32p3_cnn_lib;
use trv32p3_cnn_lib.data_types.all;

entity dm_merge is
  port (
    reset : in std_logic;
    clock : in std_logic;
    wdm_rd_in : in t_v4u8;
    dm_addr_in : in t_addr;
    dmw_ld_in : in std_logic;
    dmh_ld_in : in std_logic;
    dmb_ld_in : in std_logic;
    dmw_st_in : in std_logic;
    dmh_st_in : in std_logic;
    dmb_st_in : in std_logic;
    dmw_wr_in : in t_w32;
    dmh_wr_in : in t_w16;
    dmb_wr_in : in t_w08;
    dmw_rd_out : out t_w32;
    dmh_rd_out : out t_w16;
    dmb_rd_out : out t_w08;
    wdm_addr_out : out t_addr;
    wdm_ld_out : out std_logic;
    wdm_st_out : out t_uint4_t_as_vect;
    wdm_wr_out : out t_v4u8);
end dm_merge;

architecture rtl of dm_merge is
  signal col_ff : unsigned(1 downto 0);
  signal pdg_update_col_ff : unsigned(1 downto 0);
  signal pdg_we_col_ff : std_logic;
  signal st_ff : unsigned(2 downto 0);
  signal pdg_update_st_ff : unsigned(2 downto 0);
  signal pdg_we_st_ff : std_logic;
begin
  p_process_result : process(col_ff,
                             wdm_rd_in)
    variable b0 : unsigned(7 downto 0);
    variable b1 : unsigned(1 downto 0);
    variable b1_0 : unsigned(1 downto 0);
    variable b1_1 : unsigned(7 downto 0);
    variable tmp : unsigned(15 downto 0);
    variable tmp_0 : unsigned(23 downto 0);
    variable tmp_1 : unsigned(31 downto 0);
    variable tmp_2 : unsigned(15 downto 0);
    constant Cuint1_t_1 : std_logic := '1';
    constant Cuint2_t_3 : unsigned(1 downto 0) := "11";
    constant Cuint2_t_2 : unsigned(1 downto 0) := "10";
  begin
    dmb_rd_out <= (others => '0');
    dmh_rd_out <= (others => '0');
    dmw_rd_out <= (others => '0');
    b0 := v4u8_extract_element(wdm_rd_in, to_integer(col_ff));
    b1 := col_ff;
    b1_0 := std_logic_to_unsigned(b1(1)) & std_logic_to_unsigned(Cuint1_t_1);
    b1_1 := v4u8_extract_element(wdm_rd_in, to_integer(b1_0));
    tmp := wdm_rd_in(31 downto 24) & wdm_rd_in(23 downto 16);
    tmp_0 := tmp & b1_1;
    tmp_1 := tmp_0 & b0;
    dmw_rd_out <= signed(tmp_1);
    tmp_2 := b1_1 & b0;
    dmh_rd_out <= signed(tmp_2);
    dmb_rd_out <= signed(b0);
  end process p_process_result;

  p_process_request : process(dm_addr_in,
                              dmb_ld_in,
                              dmb_st_in,
                              dmb_wr_in,
                              dmh_ld_in,
                              dmh_st_in,
                              dmh_wr_in,
                              dmw_ld_in,
                              dmw_st_in,
                              dmw_wr_in,
                              st_ff)
    variable row : unsigned(31 downto 0);
    variable col : unsigned(1 downto 0);
    variable t1 : unsigned(3 downto 0);
    variable t1_0 : unsigned(1 downto 0);
    variable tmp : unsigned(2 downto 0);
    variable tmp_0 : unsigned(2 downto 0);
    variable tmp_1 : signed(31 downto 0);
    variable tmp_2 : unsigned(2 downto 0);
    variable tmp_3 : signed(15 downto 0);
    variable tmp_4 : signed(23 downto 0);
    variable tmp_5 : signed(31 downto 0);
    variable tmp_6 : unsigned(1 downto 0);
    variable tmp_7 : unsigned(2 downto 0);
    constant Cuint4_t_0 : unsigned(3 downto 0) := (others => '0');
    constant Cuint4_t_15 : unsigned(3 downto 0) := "1111";
    constant Cuint1_t_0 : std_logic := '0';
    constant Cuint4_t_3 : unsigned(3 downto 0) := "0011";
    constant Cuint4_t_1 : unsigned(3 downto 0) := "0001";
  begin
    pdg_we_col_ff <= '0';
    pdg_update_col_ff <= (others => '0');
    pdg_we_st_ff <= '0';
    pdg_update_st_ff <= (others => '0');
    t1 := (others => '0');
    t1_0 := (others => '0');
    tmp_0 := (others => '0');
    tmp_1 := (others => '0');
    tmp_2 := (others => '0');
    tmp_3 := (others => '0');
    tmp_4 := (others => '0');
    tmp_5 := (others => '0');
    wdm_addr_out <= (others => '0');
    wdm_ld_out <= '0';
    wdm_st_out <= (others => '0');
    wdm_wr_out <= (others => '0');
    row := resize(dm_addr_in(31 downto 2), 32);
    col := dm_addr_in(1 downto 0);
    wdm_addr_out <= row;
    wdm_ld_out <= ((dmw_ld_in or dmh_ld_in) or dmb_ld_in);
    pdg_we_col_ff <= '1';
    pdg_update_col_ff <= col;
    t1 := Cuint4_t_0;
    if (std_logic_to_boolean(dmw_st_in)) then
      t1 := Cuint4_t_15;
    else
      if (std_logic_to_boolean(dmh_st_in)) then
        t1_0 := std_logic_to_unsigned(col(1)) & std_logic_to_unsigned(Cuint1_t_0);
        t1 := shift_left(Cuint4_t_3, to_integer(t1_0));
      else
        if (std_logic_to_boolean(dmb_st_in)) then
          t1 := shift_left(Cuint4_t_1, to_integer(col));
        end if;
      end if;
    end if;
    wdm_st_out <= t1;
    tmp := st_ff;
    if (std_logic_to_boolean(tmp(2))) then
      wdm_wr_out <= unsigned(dmw_wr_in);
    else
      tmp_0 := st_ff;
      if (std_logic_to_boolean(tmp_0(1))) then
        tmp_1 := dmh_wr_in & dmh_wr_in;
        wdm_wr_out <= unsigned(tmp_1);
      else
        tmp_2 := st_ff;
        if (std_logic_to_boolean(tmp_2(0))) then
          tmp_3 := dmb_wr_in & dmb_wr_in;
          tmp_4 := tmp_3 & dmb_wr_in;
          tmp_5 := tmp_4 & dmb_wr_in;
          wdm_wr_out <= unsigned(tmp_5);
        end if;
      end if;
    end if;
    tmp_6 := std_logic_to_unsigned(dmw_st_in) & std_logic_to_unsigned(dmh_st_in);
    tmp_7 := tmp_6 & std_logic_to_unsigned(dmb_st_in);
    pdg_we_st_ff <= '1';
    pdg_update_st_ff <= tmp_7;
  end process p_process_request;


  p_update_status : process(clock, reset)
  begin
    if reset /= '0' then
      col_ff <= (others => '0');
      st_ff <= (others => '0');
    elsif clock'event and clock = '1' then
      if pdg_we_col_ff = '1' then
        col_ff <= pdg_update_col_ff;
      end if;
      if pdg_we_st_ff = '1' then
        st_ff <= pdg_update_st_ff;
      end if;
    end if;
  end process p_update_status;
end rtl;
