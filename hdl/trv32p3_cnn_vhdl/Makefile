
# File generated by Go version U-2022.12#33f3808fcb#221128, Wed Feb 21 17:37:20 2024
# Copyright 2014-2022 Synopsys, Inc. All rights reserved.
# go -I../lib -F -DIS_VHDL -DSYNTHESIS_NO_UNGROUP -D__tct_patch__=0 -VHDL -otrv32p3_cnn_vhdl -cgo_options.cfg -Itrv32p3_cnn_vhdl/tmp_pdg -updg -updg_controller trv32p3_cnn




# THISDIR specifies path to the directory of this Makefile
THISDIR = $(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))
MAKEDIR = $(THISDIR)

LIBDIR    = $(THISDIR)/trv32p3_cnn/go_bin
LIBDIR_TB = $(THISDIR)/test_bench/go_tb_bin

SOURCES_RTL =  \
	trv32p3_cnn/data_types.vhd \
	trv32p3_cnn/controller/cntrl_types.vhd \
	trv32p3_cnn/controller/controller_ent.vhd \
	trv32p3_cnn/controller/controller_arch.vhd \
	trv32p3_cnn/controller/hazards_ent.vhd \
	trv32p3_cnn/controller/hazards_arch.vhd \
	trv32p3_cnn/controller/jtag_scan_register_ent.vhd \
	trv32p3_cnn/controller/jtag_scan_register_arch.vhd \
	trv32p3_cnn/controller/debug_controller_ent.vhd \
	trv32p3_cnn/controller/debug_controller_arch.vhd \
	trv32p3_cnn/controller/jtag_interface_ent.vhd \
	trv32p3_cnn/controller/jtag_interface_arch.vhd \
	trv32p3_cnn/controller/jtag_tap_controller_ent.vhd \
	trv32p3_cnn/controller/jtag_tap_controller_arch.vhd \
	trv32p3_cnn/controller/decoder_ent.vhd \
	trv32p3_cnn/controller/decoder_arch.vhd \
	trv32p3_cnn/mux/mux_pm_addr_ent.vhd \
	trv32p3_cnn/mux/mux_pm_addr_arch.vhd \
	trv32p3_cnn/mux/mux_pm_wr_ent.vhd \
	trv32p3_cnn/mux/mux_pm_wr_arch.vhd \
	trv32p3_cnn/mux/mux_dm_addr_ent.vhd \
	trv32p3_cnn/mux/mux_dm_addr_arch.vhd \
	trv32p3_cnn/mux/mux_dmb_wr_ent.vhd \
	trv32p3_cnn/mux/mux_dmb_wr_arch.vhd \
	trv32p3_cnn/mux/mux_x_w1_ent.vhd \
	trv32p3_cnn/mux/mux_x_w1_arch.vhd \
	trv32p3_cnn/mux/mux_x_w1_dead_ent.vhd \
	trv32p3_cnn/mux/mux_x_w1_dead_arch.vhd \
	trv32p3_cnn/mux/mux_ocd_data_w_ent.vhd \
	trv32p3_cnn/mux/mux_ocd_data_w_arch.vhd \
	trv32p3_cnn/mux/mux_ocd_instr_w_ent.vhd \
	trv32p3_cnn/mux/mux_ocd_instr_w_arch.vhd \
	trv32p3_cnn/mux/mux_aluA_ent.vhd \
	trv32p3_cnn/mux/mux_aluA_arch.vhd \
	trv32p3_cnn/mux/mux_aluB_ent.vhd \
	trv32p3_cnn/mux/mux_aluB_arch.vhd \
	trv32p3_cnn/mux/mux_pcaA_ent.vhd \
	trv32p3_cnn/mux/mux_pcaA_arch.vhd \
	trv32p3_cnn/mux/mux_pcaB_ent.vhd \
	trv32p3_cnn/mux/mux_pcaB_arch.vhd \
	trv32p3_cnn/mux/mux_jmp_tgt_ID_ent.vhd \
	trv32p3_cnn/mux/mux_jmp_tgt_ID_arch.vhd \
	trv32p3_cnn/mux/mux_aguB_ent.vhd \
	trv32p3_cnn/mux/mux_aguB_arch.vhd \
	trv32p3_cnn/mux/mux_mpyM_ent.vhd \
	trv32p3_cnn/mux/mux_mpyM_arch.vhd \
	trv32p3_cnn/mux/mux_ocd_swbreak_ent.vhd \
	trv32p3_cnn/mux/mux_ocd_swbreak_arch.vhd \
	trv32p3_cnn/mux/mux_pidTGT_w_ent.vhd \
	trv32p3_cnn/mux/mux_pidTGT_w_arch.vhd \
	trv32p3_cnn/mux/mux_X_x_w1_wad_ent.vhd \
	trv32p3_cnn/mux/mux_X_x_w1_wad_arch.vhd \
	trv32p3_cnn/pipe/pipe_pidTGT_ent.vhd \
	trv32p3_cnn/pipe/pipe_pidTGT_arch.vhd \
	trv32p3_cnn/pipe/pipe_ocd_ld_DMbEX_ent.vhd \
	trv32p3_cnn/pipe/pipe_ocd_ld_DMbEX_arch.vhd \
	trv32p3_cnn/pipe/pipe_ocd_ld_DMbS3_ent.vhd \
	trv32p3_cnn/pipe/pipe_ocd_ld_DMbS3_arch.vhd \
	trv32p3_cnn/pipe/pipe_ocd_st_DMbEX_ent.vhd \
	trv32p3_cnn/pipe/pipe_ocd_st_DMbEX_arch.vhd \
	trv32p3_cnn/pipe/pipe_ocd_st_DMbS3_ent.vhd \
	trv32p3_cnn/pipe/pipe_ocd_st_DMbS3_arch.vhd \
	trv32p3_cnn/pipe/pipe_ocd_ld_PMbEX_ent.vhd \
	trv32p3_cnn/pipe/pipe_ocd_ld_PMbEX_arch.vhd \
	trv32p3_cnn/pipe/pipe_ocd_ld_PMbS3_ent.vhd \
	trv32p3_cnn/pipe/pipe_ocd_ld_PMbS3_arch.vhd \
	trv32p3_cnn/pipe/pipe_ocd_st_PMbEX_ent.vhd \
	trv32p3_cnn/pipe/pipe_ocd_st_PMbEX_arch.vhd \
	trv32p3_cnn/reg/reg_PC_ent.vhd \
	trv32p3_cnn/reg/reg_PC_arch.vhd \
	trv32p3_cnn/reg/reg_PC_ID_ent.vhd \
	trv32p3_cnn/reg/reg_PC_ID_arch.vhd \
	trv32p3_cnn/reg/reg_PC_EX_ent.vhd \
	trv32p3_cnn/reg/reg_PC_EX_arch.vhd \
	trv32p3_cnn/reg/reg_X_ent.vhd \
	trv32p3_cnn/reg/reg_X_arch.vhd \
	trv32p3_cnn/reg/reg_ocd_addr_ent.vhd \
	trv32p3_cnn/reg/reg_ocd_addr_arch.vhd \
	trv32p3_cnn/reg/reg_ocd_data_ent.vhd \
	trv32p3_cnn/reg/reg_ocd_data_arch.vhd \
	trv32p3_cnn/reg/reg_ocd_instr_ent.vhd \
	trv32p3_cnn/reg/reg_ocd_instr_arch.vhd \
	trv32p3_cnn/mem/dm_merge.vhd \
	trv32p3_cnn/mem/dm_wbb.vhd \
	trv32p3_cnn/mem/mem_PMb_ent.vhd \
	trv32p3_cnn/mem/mem_PMb_arch.vhd \
	trv32p3_cnn/mem/mem_DMb_ent.vhd \
	trv32p3_cnn/mem/mem_DMb_arch.vhd \
	trv32p3_cnn/prim/primitives.vhd \
	trv32p3_cnn/prim/alu_ent.vhd \
	trv32p3_cnn/prim/alu_arch.vhd \
	trv32p3_cnn/prim/pca_ent.vhd \
	trv32p3_cnn/prim/pca_arch.vhd \
	trv32p3_cnn/prim/cmp_ent.vhd \
	trv32p3_cnn/prim/cmp_arch.vhd \
	trv32p3_cnn/prim/div.vhd \
	trv32p3_cnn/prim/lx_ent.vhd \
	trv32p3_cnn/prim/lx_arch.vhd \
	trv32p3_cnn/prim/agu_ent.vhd \
	trv32p3_cnn/prim/agu_arch.vhd \
	trv32p3_cnn/prim/mpy_ent.vhd \
	trv32p3_cnn/prim/mpy_arch.vhd \
	trv32p3_cnn/prim/ocd_addr_incr_ent.vhd \
	trv32p3_cnn/prim/ocd_addr_incr_arch.vhd \
	trv32p3_cnn/prim/cnn_ent.vhd \
	trv32p3_cnn/prim/cnn_arch.vhd \
	trv32p3_cnn/trv32p3_cnn_ent.vhd \
	trv32p3_cnn/trv32p3_cnn_arch.vhd \
	trv32p3_cnn/trv32p3_cnn_config.vhd
SOURCES_TB =  \
	test_bench/clock_gen_ent.vhd \
	test_bench/clock_gen_arch.vhd \
	test_bench/jtag_emulator_ent.vhd \
	test_bench/jtag_emulator_arch.vhd \
	test_bench/tb_mem_PMb_ent.vhd \
	test_bench/tb_mem_PMb_arch.vhd \
	test_bench/tb_mem_eDM_ent.vhd \
	test_bench/tb_mem_eDM_arch.vhd \
	test_bench/test_bench_ent.vhd \
	test_bench/test_bench_arch.vhd \
	test_bench/test_bench_config.vhd

# Note: If 'which <tool>' does not point to the real installation,
# you may overwrite the makefile variables by specifying them as
# command line option, e.g. 'make <target> SIM_INSTALL=<real dir>'
# or 'make <target> CHESSDE_INSTALL=<real dir>
# or 'make <target> GCCLIB_PATH=<path to libstdc++>'
SIM_INSTALL = $(dir $(shell which vcs))
CHESSDE_INSTALL  = $(dir $(shell which chessde))
GO_INCLUDE  = $(CHESSDE_INSTALL)/../../chessdir/godir/include
CHESSDIR_INCLUDE  = $(CHESSDE_INSTALL)/../../chessdir
CHECKERS_INCLUDE  = $(CHESSDE_INSTALL)/../../chessdir/checkersdir/include
VHPI_INCLUDE = $(SIM_INSTALL)/../include
JTAG_EMU = jtag_emulator_vhpi.so
SO_CC = g++
SO_LD = g++
SO_CCFLAGS = -m32 -c -fPIC -std=c++11 -g -DVCS -DOLD_VCS_VHPI
SO_LDFLAGS = -m32 -shared -fPIC
GCCLIB_PATH = $(dir $(realpath $(shell which g++)))/../lib
ifdef LD_LIBRARY_PATH
    export LD_LIBRARY_PATH := $(GCCLIB_PATH):$(LD_LIBRARY_PATH)
else
    export LD_LIBRARY_PATH := $(GCCLIB_PATH)
endif
export ASIP_SPY_GOAL=lint/lint_rtl
export ASIP_SPY_PRJ=spyglass

default: all

all: appname elab
	export LD_LIBRARY_PATH=$(THISDIR):$$LD_LIBRARY_PATH && $(THISDIR)/simv  -cm_name $(shell mktemp -u test.XXXXXXXXXXXXXXX)$(CM_SUFFIX) -cm line+cond+branch -cm_log $(patsubst %.log,%,cm$(CM_SUFFIX).log) -gui

appname:
ifdef APP
ifdef APPDIR
	@echo $(APPDIR)/$(APP) > appname.cfg
else
	@echo $(APP) > appname.cfg
endif
else
ifdef APPDIR
	@echo $(APPDIR)/data > appname.cfg
else
	@echo ./data > appname.cfg
endif
endif

$(LIBDIR):
	@mkdir -p $@

$(LIBDIR_TB):
	@mkdir -p $@

$(THISDIR)/lib$(JTAG_EMU): $(GO_INCLUDE)/jtag_emulator_vhpi.cpp
	cd $(THISDIR) && $(SO_CC) $(SO_CCFLAGS) -I $(VHPI_INCLUDE) -I $(GO_INCLUDE) -I $(CHESSDIR_INCLUDE) -I $(CHECKERS_INCLUDE) $(GO_INCLUDE)/jtag_emulator_vhpi.cpp; \
	cd $(THISDIR) && $(SO_CC) $(SO_CCFLAGS) -I $(VHPI_INCLUDE) -I $(CHESSDIR_INCLUDE) -I $(CHECKERS_INCLUDE) $(CHECKERS_INCLUDE)/jtag_socket.cpp; \
	cd $(THISDIR) && $(SO_LD) $(SO_LDFLAGS) -o lib$(JTAG_EMU) jtag_emulator_vhpi.o jtag_socket.o -Wl,-rpath $(GCCLIB_PATH);

$(THISDIR)/.analyze.ok : $(LIBDIR) $(LIBDIR_TB) $(SOURCES_RTL:%=$(THISDIR)/%) $(SOURCES_TB:%=$(THISDIR)/%)
	cd $(THISDIR) && vhdlan -nc -kdb -work trv32p3_cnn_lib  $(SOURCES_RTL) && touch .analyze.ok
	cd $(THISDIR) && vhdlan -nc -kdb -work trv32p3_cnn_tb_lib  $(SOURCES_TB) && touch .analyze.ok || rm -f .analyze.ok

analyze: $(THISDIR)/.analyze.ok

$(THISDIR)/.elab.ok : $(THISDIR)/.analyze.ok $(THISDIR)/lib$(JTAG_EMU)
	cd $(THISDIR) && vcs -kdb -debug_access+pp+f -time_res 1ps -o simv trv32p3_cnn_tb_lib.test_bench_config -cm line+cond+branch -cm_cond basic+allops && touch .elab.ok

elab: $(THISDIR)/.elab.ok

dve: appname elab
	export LD_LIBRARY_PATH=$(THISDIR):$$LD_LIBRARY_PATH && $(THISDIR)/simv  -cm_name $(shell mktemp -u test.XXXXXXXXXXXXXXX)$(CM_SUFFIX) -cm line+cond+branch -cm_log $(patsubst %.log,%,cm$(CM_SUFFIX).log) -gui=dve

dve_dumpall: appname elab
	export LD_LIBRARY_PATH=$(THISDIR):$$LD_LIBRARY_PATH && $(THISDIR)/simv  -cm_name $(shell mktemp -u test.XXXXXXXXXXXXXXX)$(CM_SUFFIX) -cm line+cond+branch -cm_log $(patsubst %.log,%,cm$(CM_SUFFIX).log) -do $(THISDIR)/gen_dump.tcl -gui=dve

verdi: appname elab
	export LD_LIBRARY_PATH=$(THISDIR):$$LD_LIBRARY_PATH && $(THISDIR)/simv  -cm_name $(shell mktemp -u test.XXXXXXXXXXXXXXX)$(CM_SUFFIX) -cm line+cond+branch -cm_log $(patsubst %.log,%,cm$(CM_SUFFIX).log) -gui=verdi

verdi_dumpall: appname elab
	export LD_LIBRARY_PATH=$(THISDIR):$$LD_LIBRARY_PATH && $(THISDIR)/simv  -cm_name $(shell mktemp -u test.XXXXXXXXXXXXXXX)$(CM_SUFFIX) -cm line+cond+branch -cm_log $(patsubst %.log,%,cm$(CM_SUFFIX).log) -do $(THISDIR)/gen_dump.tcl -gui=verdi

sim: appname
	export LD_LIBRARY_PATH=$(THISDIR):$$LD_LIBRARY_PATH && $(THISDIR)/simv  -cm_name $(shell mktemp -u test.XXXXXXXXXXXXXXX)$(CM_SUFFIX) -cm line+cond+branch -cm_log $(patsubst %.log,%,cm$(CM_SUFFIX).log) -ucli -do $(THISDIR)/gen_sim_exit.tcl -licqueue


CLI_SCRIPT?=
cli: appname elab
	export LD_LIBRARY_PATH=$(THISDIR):$$LD_LIBRARY_PATH && $(THISDIR)/simv  -cm_name $(shell mktemp -u test.XXXXXXXXXXXXXXX)$(CM_SUFFIX) -cm line+cond+branch -cm_log $(patsubst %.log,%,cm$(CM_SUFFIX).log) -ucli $(CLI_SCRIPT)

run: appname
	export LD_LIBRARY_PATH=$(THISDIR):$$LD_LIBRARY_PATH && $(THISDIR)/simv  -cm_name $(shell mktemp -u test.XXXXXXXXXXXXXXX)$(CM_SUFFIX) -cm line+cond+branch -cm_log $(patsubst %.log,%,cm$(CM_SUFFIX).log)

rcd: appname
	export LD_LIBRARY_PATH=$(THISDIR):$$LD_LIBRARY_PATH && $(THISDIR)/simv  -cm_name $(shell mktemp -u test.XXXXXXXXXXXXXXX)$(CM_SUFFIX) -cm line+cond+branch -cm_log $(patsubst %.log,%,cm$(CM_SUFFIX).log) -ucli -do $(THISDIR)/gen_rcd.tcl -licqueue

ext_stop: appname
	export LD_LIBRARY_PATH=$(THISDIR):$$LD_LIBRARY_PATH && $(THISDIR)/simv  -cm_name $(shell mktemp -u test.XXXXXXXXXXXXXXX)$(CM_SUFFIX) -cm line+cond+branch -cm_log $(patsubst %.log,%,cm$(CM_SUFFIX).log) -ucli -do $(THISDIR)/gen_ext_stop.tcl -licqueue

#------ spyglass targets --------
spyglass_run:
	spyglass -goal $(ASIP_SPY_GOAL) -project $(THISDIR)/$(ASIP_SPY_PRJ).prj -batch

spyglass_grep_results:
	@chmod u+x $(THISDIR)/spyglass_grep_results.sh
	@$(THISDIR)/spyglass_grep_results.sh $(THISDIR) $(ASIP_SPY_PRJ) $(ASIP_SPY_GOAL)
#----------------------------------

saif:
	export LD_LIBRARY_PATH=$(THISDIR):$$LD_LIBRARY_PATH && $(THISDIR)/simv  -cm_name $(shell mktemp -u test.XXXXXXXXXXXXXXX)$(CM_SUFFIX) -cm line+cond+branch -cm_log $(patsubst %.log,%,cm$(CM_SUFFIX).log) -ucli -do $(THISDIR)/gen_saif.tcl -licqueue

clean:
	@cd $(THISDIR) && rm -rf appname.cfg
	@cd $(THISDIR) && rm -rf trv32p3_cnn/go_bin
	@cd $(THISDIR) && rm -rf test_bench/go_tb_bin
	@cd $(THISDIR) && rm -rf .analyze*.ok .elab*.ok
	@cd $(THISDIR) && rm -rf csrc simv*
	@cd $(THISDIR) && rm -rf DVEfiles inter.vpd*
	@cd $(THISDIR) && rm -rf .restartSimSession.tcl*
	@cd $(THISDIR) && rm -rf .synopsys_dve_rebuild.tcl
	@cd $(THISDIR) && rm -rf .vlogansetup.args
	@cd $(THISDIR) && rm -rf novas.* novas_dump.*
	@cd $(THISDIR) && rm -rf inter.fsdb
	@cd $(THISDIR) && rm -rf verdiLog
	@cd $(THISDIR) && rm -rf ucli.key
	@cd $(THISDIR) && rm -rf jtag_socket*.o
	@cd $(THISDIR) && rm -rf jtag_emulator*.o
	@cd $(THISDIR) && rm -rf jtag_emulator*.so
	@cd $(THISDIR) && rm -rf libjtag_emulator*.so

test:
	@echo This model has I/O-Interfaces, use "\'iss -b <application>\'" to generate the memory content files.
