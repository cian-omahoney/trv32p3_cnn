# Spyglass Project File

set top trv32p3_cnn

if { [info exists env(ASIP_SPY_METHOD)] } {
    set spy_method $env(ASIP_SPY_METHOD)
} else {
    set spy_method ${SPYGLASS_HOME}/GuideWare/latest/block/rtl_handoff
}
set_option current_methodology ${spy_method}
set_option active_methodology  ${spy_method}
set_option project_read_only yes

# ASIP RTL allows multiple blocking assignments to same signal (rule W415a)
set_parameter checknonblocking yes
# ASIP RTL sets width as per LRM
set_parameter nocheckoverflow yes
# read user waiver file, if existing
set spy_waiver_file "spyglass.swl"
if { [info exists env(ASIP_SPY_WAIVER_FILE)] } {
    set spy_waiver_file $env(ASIP_SPY_WAIVER_FILE)
    read_file -type awl ${spy_waiver_file}
} else {
    # read generated waiver file
    read_file -type waiver spyglass.swl
}

if { [info exists env(ASIP_SPY_RULES_FILE)] } {
  # use additional rules
  if { [info exists env(ASIP_SPY_GOAL)] } {
    current_goal $env(ASIP_SPY_GOAL)
  } else {
    current_goal lint/lint_rtl
  }
  source $env(ASIP_SPY_RULES_FILE)
}

set spy_lang "verilog"
set_option incdir ${top}/prim
set_option enableSV yes
if { [info exists env(SYNOPSYS)] } {
    # design may contain DW components
    set SYNOPSYS $::env(SYNOPSYS)
    set_option dw yes
}

read_file -type ${spy_lang} trv32p3_cnn/controller/controller.v
read_file -type ${spy_lang} trv32p3_cnn/controller/hazards.v
read_file -type ${spy_lang} trv32p3_cnn/controller/jtag_scan_register.v
read_file -type ${spy_lang} trv32p3_cnn/controller/debug_controller.v
read_file -type ${spy_lang} trv32p3_cnn/controller/jtag_interface.v
read_file -type ${spy_lang} trv32p3_cnn/controller/jtag_tap_controller.v
read_file -type ${spy_lang} trv32p3_cnn/controller/decoder.v
read_file -type ${spy_lang} trv32p3_cnn/mux/mux_pm_addr.v
read_file -type ${spy_lang} trv32p3_cnn/mux/mux_pm_wr.v
read_file -type ${spy_lang} trv32p3_cnn/mux/mux_dm_addr.v
read_file -type ${spy_lang} trv32p3_cnn/mux/mux_dmb_wr.v
read_file -type ${spy_lang} trv32p3_cnn/mux/mux_x_w1.v
read_file -type ${spy_lang} trv32p3_cnn/mux/mux_x_w2.v
read_file -type ${spy_lang} trv32p3_cnn/mux/mux_x_w1_dead.v
read_file -type ${spy_lang} trv32p3_cnn/mux/mux_ocd_data_w.v
read_file -type ${spy_lang} trv32p3_cnn/mux/mux_ocd_instr_w.v
read_file -type ${spy_lang} trv32p3_cnn/mux/mux_aluA.v
read_file -type ${spy_lang} trv32p3_cnn/mux/mux_aluB.v
read_file -type ${spy_lang} trv32p3_cnn/mux/mux_pcaA.v
read_file -type ${spy_lang} trv32p3_cnn/mux/mux_pcaB.v
read_file -type ${spy_lang} trv32p3_cnn/mux/mux_jmp_tgt_ID.v
read_file -type ${spy_lang} trv32p3_cnn/mux/mux_aguA.v
read_file -type ${spy_lang} trv32p3_cnn/mux/mux_aguB.v
read_file -type ${spy_lang} trv32p3_cnn/mux/mux_mpyM.v
read_file -type ${spy_lang} trv32p3_cnn/mux/mux_ocd_swbreak.v
read_file -type ${spy_lang} trv32p3_cnn/mux/mux___pidTGT_w.v
read_file -type ${spy_lang} trv32p3_cnn/mux/mux___X_x_w1_wad.v
read_file -type ${spy_lang} trv32p3_cnn/pipe/pipe___pidTGT.v
read_file -type ${spy_lang} trv32p3_cnn/pipe/pipe___ocd_ld_DMbEX.v
read_file -type ${spy_lang} trv32p3_cnn/pipe/pipe___ocd_ld_DMbS3.v
read_file -type ${spy_lang} trv32p3_cnn/pipe/pipe___ocd_st_DMbEX.v
read_file -type ${spy_lang} trv32p3_cnn/pipe/pipe___ocd_st_DMbS3.v
read_file -type ${spy_lang} trv32p3_cnn/pipe/pipe___ocd_ld_PMbEX.v
read_file -type ${spy_lang} trv32p3_cnn/pipe/pipe___ocd_ld_PMbS3.v
read_file -type ${spy_lang} trv32p3_cnn/pipe/pipe___ocd_st_PMbEX.v
read_file -type ${spy_lang} trv32p3_cnn/reg/reg_PC.v
read_file -type ${spy_lang} trv32p3_cnn/reg/reg_PC_ID.v
read_file -type ${spy_lang} trv32p3_cnn/reg/reg_PC_EX.v
read_file -type ${spy_lang} trv32p3_cnn/reg/reg_X.v
read_file -type ${spy_lang} trv32p3_cnn/reg/reg_ocd_addr.v
read_file -type ${spy_lang} trv32p3_cnn/reg/reg_ocd_data.v
read_file -type ${spy_lang} trv32p3_cnn/reg/reg_ocd_instr.v
read_file -type ${spy_lang} trv32p3_cnn/mem/dm_merge.v
read_file -type ${spy_lang} trv32p3_cnn/mem/dm_wbb.v
read_file -type ${spy_lang} trv32p3_cnn/mem/mem_PMb.v
read_file -type ${spy_lang} trv32p3_cnn/mem/mem_DMb.v
read_file -type ${spy_lang} trv32p3_cnn/prim/alu.v
read_file -type ${spy_lang} trv32p3_cnn/prim/pca.v
read_file -type ${spy_lang} trv32p3_cnn/prim/cmp.v
read_file -type ${spy_lang} trv32p3_cnn/prim/div.v
read_file -type ${spy_lang} trv32p3_cnn/prim/lx.v
read_file -type ${spy_lang} trv32p3_cnn/prim/agu.v
read_file -type ${spy_lang} trv32p3_cnn/prim/mpy.v
read_file -type ${spy_lang} trv32p3_cnn/prim/ocd_addr_incr.v
read_file -type ${spy_lang} trv32p3_cnn/prim/cnn.v
read_file -type ${spy_lang} trv32p3_cnn/prim/lx2.v
read_file -type ${spy_lang} trv32p3_cnn/prim/agu2.v
read_file -type ${spy_lang} trv32p3_cnn/trv32p3_cnn.v

if { ![info exists asip_already_run] } {
  global asip_already_run
  set asip_already_run 1
  puts "###################################################"
  puts "# Spyglass running with:"
  puts "# - top                = ${top}"
  puts "# - method             = ${spy_method}"
  if { [info exists env(ASIP_SPY_GOAL)] } {
    puts "# - goal               = $env(ASIP_SPY_GOAL)"
  }
  if { [info exists env(ASIP_SPY_RULES_FILE)] } {
    puts "# - add.rules_file     = $env(ASIP_SPY_RULES_FILE)"
  }
  puts "# - waiver_file        = ${spy_waiver_file}"
  puts "###################################################"
}
