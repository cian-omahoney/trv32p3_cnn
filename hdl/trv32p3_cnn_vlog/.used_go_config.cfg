
// File generated by Go version U-2022.12#33f3808fcb#221128, Tue Mar 19 17:13:41 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// go -I../lib -F -DSYNTHESIS_NO_UNGROUP -D__tct_patch__=0 -Verilog -otrv32p3_cnn_vlog -cgo_options.cfg -Itrv32p3_cnn_vlog/tmp_pdg -updg -updg_controller trv32p3_cnn



// command line configuration files ( go_options.cfg, trv32p3_cnn_vlog/tmp_pdg/trv32p3_cnn_go_config.txt, trv32p3_cnn_vlog/tmp_pdg/trv32p3_cnn_module_go_config.txt )

// FILE go_options.cfg:

/*
-- Copyright (c) 2019-2022 Synopsys, Inc. This Synopsys processor model
-- captures an ASIP Designer Design Technique. The model and all associated
-- documentation are proprietary to Synopsys, Inc. and may only be used
-- pursuant to the terms and conditions of a written license agreement with
-- Synopsys, Inc.  All other use, reproduction, modification, or distribution
-- of the Synopsys processor model or the associated  documentation is
-- strictly prohibited.
*/
#ifndef INCLUDED_GO_OPTIONS_CFG__
#define INCLUDED_GO_OPTIONS_CFG__

// Main Go Options file, includes common.cfg and sim.cfg

#include "go_options-common.cfg"
#include "go_options-sim.cfg"

#endif // INCLUDED_GO_OPTIONS_CFG__

// FILE go_options-common.cfg:

/*
-- Copyright (c) 2019-2022 Synopsys, Inc. This Synopsys processor model
-- captures an ASIP Designer Design Technique. The model and all associated
-- documentation are proprietary to Synopsys, Inc. and may only be used
-- pursuant to the terms and conditions of a written license agreement with
-- Synopsys, Inc.  All other use, reproduction, modification, or distribution
-- of the Synopsys processor model or the associated  documentation is
-- strictly prohibited.
*/
#ifndef INCLUDED_GO_OPTIONS_COMMON_CFG__
#define INCLUDED_GO_OPTIONS_COMMON_CFG__

#include "trv32p3_cnn_define.h"

//------------------------------------------------------------------------------
// General options

// Uncomment to make file header invariant (no timestamps)
// fixed_file_header;

//------------------------------------------------------------------------------
// HDL Configuration

// Verilog-2001(default) +named parameters +localparam
verilog2001 : 4;

// for VHDL: default value for generics
generics_default;

// Comments describing e.g. the nML origins
annotation_level : 200;

//------------------------------------------------------------------------------
// Reset

asynchronous_reset;
reset_all_memories;
reset_width : 250;

//------------------------------------------------------------------------------
// Print identified false timing paths

print_false_paths;

//------------------------------------------------------------------------------
// Scripts, Makefiles and file of files

synopsys_makefile;
spyglass_scripts;
dc_synthesis_scripts   : no_auto_ungroup "freq=500" "ocd_clock_freq=100";
fc_synthesis_scripts   : no_auto_ungroup "freq=500";
rtla_synthesis_scripts : no_auto_ungroup "freq=500";

// NOTE: The freq and ocd_clock_freq values from the DC option area also used to
// set the simulated core and JTAG clock in the HDL testbench

//------------------------------------------------------------------------------
// On Chip Debugging
on_chip_debugging : "internal";
ocd_interface_type : "jtag";
ocd_internal_jtag_tap_controller : 1;


#endif // INCLUDED_GO_OPTIONS_COMMON_CFG__

// FILE ../lib/trv32p3_cnn_define.h:

/*
-- File : trv32p3_cnn_define.h
--
-- Contents : Common model configuration flags.
--
-- Copyright (c) 2019-2020 Synopsys, Inc. This Synopsys processor model
-- captures an ASIP Designer Design Technique. The model and all associated
-- documentation are proprietary to Synopsys, Inc. and may only be used
-- pursuant to the terms and conditions of a written license agreement with
-- Synopsys, Inc.  All other use, reproduction, modification, or distribution
-- of the Synopsys processor model or the associated  documentation is
-- strictly prohibited.
*/

// External Memories: HDL, ISS, Linker.
// Size = number of words
//  * ePM: 32 bits per word
//  * eDM: 32 bits per word
#define MEM_ePM_SZ_NBIT 14
#define MEM_eDM_SZ_NBIT 15

// Note: this header file is included almost everywhere, e.g. in the processing
// of nML, PDG, C/C++, BCF, ... files. Be careful which preprocessor macros
// you define here, since name clashes can happen.

// FILE go_options-sim.cfg:

/*
-- Copyright (c) 2021-2022 Synopsys, Inc. This Synopsys processor model
-- captures an ASIP Designer Design Technique. The model and all associated
-- documentation are proprietary to Synopsys, Inc. and may only be used
-- pursuant to the terms and conditions of a written license agreement with
-- Synopsys, Inc.  All other use, reproduction, modification, or distribution
-- of the Synopsys processor model or the associated  documentation is
-- strictly prohibited.
*/
#ifndef INCLUDED_GO_OPTIONS_SIM_CFG__
#define INCLUDED_GO_OPTIONS_SIM_CFG__

#define POW2(x)  POW2_(x)
#define POW2_(x) POW2_##x
#define POW2_9  512
#define POW2_10 1024
#define POW2_11 2048
#define POW2_12 4096
#define POW2_13 8192
#define POW2_14 16384
#define POW2_15 32768
#define POW2_16 65536
#define POW2_17 131072
#define POW2_18 262144
#define POW2_19 524288
#define POW2_20 1048576
#define POW2_21 2097152
#define POW2_22 4194304
#define POW2_23 8388608
#define POW2_24 16777216
#define POW2_25 33554432
#define POW2_26 67108864
#define POW2_27 134217728
#define POW2_28 268435456
#define POW2_29 536870912
#define POW2_30 1073741824

//------------------------------------------------------------------------------
// General options

// Generate HDL testbench
generate_testbench;

//-----------------------------------------------------
// HDL Simulation Options

// Testbench memory size - reduce PMb[2**32]
mem_size PMb : POW2(MEM_ePM_SZ_NBIT);
mem_size eDM : POW2(MEM_eDM_SZ_NBIT);

#ifndef IS_VHDL
hdlsim_x_propagation;
#endif

// For RCD
log_register_writes;
log_memory_writes;
log_hexadecimal;

#ifdef TRV32P3_CNN_NO_IO
// large TB memories: use C instead of HDL models, or reduce with mem_size x:n;
c_memory_models;
#endif

#ifndef TRV32P3_CNN_EXCLUDE_HDL_COVERAGE

// VCS elab options to enable RTL coverage
hdl_elaborate_command:
  "default"
#ifndef NO_RTL_COVERAGE
  "-cm line+cond+branch"
  "-cm_cond basic+allops"
#endif
  ;

// VCS sim options to collect RTL coverage
hdl_basic_simulation_command:
  "default"
#ifndef NO_RTL_COVERAGE
  "-cm_name $(shell mktemp -u test.XXXXXXXXXXXXXXX)$(CM_SUFFIX)"
  "-cm line+cond+branch"
  "-cm_log $(patsubst %.log,%,cm$(CM_SUFFIX).log)"
#endif
  ;

// These commands are inserted into the generated Makefile that compiles
// the HDL model with SIM and runs the compiled HDL simulation.
// -cm_name: name for the test run in the coverage database
// * Uses random filename
// * To use the current absolute path as testname, use
//   "-cm_name $(patsubst .%,%,$(subst /,.,$(CURDIR))$(CM_SUFFIX))"
// $(CURDIR): Set by make to the absolute pathname of the current working dir.
// $(subst /,.,<<>>): replaces all / with .
// $(CM_SUFFIX): set in environment to add suffix to test names, defaults to ''
//   However, note that the filename can become too long for -cm_name.

#endif // def TRV32P3_CNN_EXCLUDE_HDL_COVERAGE


#endif // INCLUDED_GO_OPTIONS_SIM_CFG__

// FILE trv32p3_cnn_vlog/tmp_pdg/trv32p3_cnn_go_config.txt:


// File generated by pdg version U-2022.12#33f3808fcb#221128
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// pdg -I../lib -D__go__ -pcu -Verilog -cgo_options.cfg -DSYNTHESIS_NO_UNGROUP -D__tct_patch__=0 +wtrv32p3_cnn_vlog/tmp_pdg trv32p3_cnn

storage_access controller : PC read(pcr);
storage_access controller : ocd_instr read(ocd_instr_r);

storage_access controller : PC write(pcw) write_enable(PC_pcw_cntrl_nxtpc_pdg_en);
storage_access controller : PC_ID write(PC_ID_w) write_enable(PC_ID_PC_ID_w_cntrl_issue_pdg_en);

storage_access controller : PM[pm_addr`0`]`1` read(pm_rd`1`) read_enable(pm_ld_pdg_en);

trns_read controller : jmp_tgt_EX jmp_tgt_ID ocd_exe ocd_req pm_rd;
trns_written controller : lnk_id ocd_mode pm_addr;
kill_stages: ID ;
reset_start: 0;
systemverilog:1;

// FILE trv32p3_cnn_vlog/tmp_pdg/trv32p3_cnn_module_go_config.txt:


// File generated by pdg version U-2022.12#33f3808fcb#221128
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// pdg -I../lib -D__go__ -Verilog -cgo_options.cfg -DSYNTHESIS_NO_UNGROUP -D__tct_patch__=0 +wtrv32p3_cnn_vlog/tmp_pdg trv32p3_cnn


// Module div (div.p:L48:C18):

storage_access div : X[X_x_w1_div_main_pdg_w_a] write(x_w1) write_enable(X_x_w1_div_main_pdg_en);

trns_read div : divA divB div_wad;
trns_written div : div_adr div_bsy div_wnc;

has_edc_err div : 0;

multicycle_operations div: divR_divs_divA_divB_div_EX divR_divu_divA_divB_div_EX divR_rems_divA_divB_div_EX divR_remu_divA_divB_div_EX;

// Module dm_merge (dm.p:L37:C22):

trns_read dm_merge : dm_addr dmb_ld dmb_st dmb_wr dmh_ld dmh_st dmh_wr dmw_ld dmw_st dmw_wr wdm_rd;
	// interface : dm_addr dmb_ld dmb_st dmb_wr wdm_rd 
trns_written dm_merge : dmb_rd dmh_rd dmw_rd wdm_addr wdm_ld wdm_st wdm_wr;
	// interface : dmb_rd wdm_addr wdm_ld wdm_st wdm_wr 

has_edc_err dm_merge : 0;

nml_interface dm_merge : DMb;

mem_interface dm_merge : wDM;


// Module dm_wbb (dm.p:L169:C20):

trns_read dm_wbb : edm_rd wdm_addr wdm_ld wdm_st wdm_wr;
	// interface : edm_rd wdm_addr wdm_ld wdm_st wdm_wr 
trns_written dm_wbb : edm_addr edm_ld edm_st edm_wr wdm_rd;
	// interface : edm_addr edm_ld edm_st edm_wr wdm_rd 

has_edc_err dm_wbb : 0;

nml_interface dm_wbb : wDM;

mem_interface dm_wbb : eDM;

