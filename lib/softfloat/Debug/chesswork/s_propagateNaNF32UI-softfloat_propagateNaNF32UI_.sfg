
// File generated by noodle version U-2022.12#33f3808fcb#221128, Fri Mar 22 17:53:49 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -ISoftFloat-3e/source/include -ISoftFloat-3e/source/riscv -ISoftFloat-3e/build/chess -I../runtime/include -DCHESS_CXX_ATTRIBUTES -DSOFTFLOAT_NO_EXCEPTIONS -DINLINE_LEVEL=5 -DSOFTFLOAT_FAST_DIV32TO16 -D__tct_patch__=0 +Oextc -itrv32p3_cnn_chess.h +Sal +Sca +Osps -Wflla +Opmsa +NOtcr +NOcse +NOifv +NOrle +NOrlt +wDebug/chesswork SoftFloat-3e/source/riscv/s_propagateNaNF32UI.c +Q0=+Sal,+Sca,+Osps,-Wflla,+Opmsa,+NOtcr,+NOcse,+NOifv,+NOrle,+NOrlt +Q1=+Opmsa,+NOrlt trv32p3_cnn


/***
!!  uint_fast32_t softfloat_propagateNaNF32UI(uint_fast32_t, uint_fast32_t)
Fsoftfloat_propagateNaNF32UI : user_defined, called {
    fnm : "softfloat_propagateNaNF32UI" 'uint_fast32_t softfloat_propagateNaNF32UI(uint_fast32_t, uint_fast32_t)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
    frm : ( l=8 );
    llv : 0 0 0 0 0 ;
}
****
***/

[
    0 : softfloat_propagateNaNF32UI typ=u08 bnd=e stl=PMb
    5 : __M_DMw typ=w32 bnd=d stl=DMw
   12 : __R_SP typ=w32 bnd=d stl=SP
   18 : __sp typ=w32 bnd=b stl=SP
   19 : uiB typ=w08 val=0t0 bnd=a sz=4 algn=4 stl=DMb tref=uint_fast32_t_DMb
   20 : uiA typ=w08 val=4t0 bnd=a sz=4 algn=4 stl=DMb tref=uint_fast32_t_DMb
   21 : __rd___sp typ=w32 bnd=m
   22 : __la typ=w32 bnd=p tref=w32__
   23 : __rt typ=w32 bnd=p tref=uint_fast32_t__
   24 : __arg_uiA typ=w32 bnd=p tref=uint_fast32_t__
   25 : __arg_uiB typ=w32 bnd=p tref=uint_fast32_t__
   26 : __ct_m8S0 typ=w32 val=-8S0 bnd=m
   28 : __tmp typ=w32 bnd=m
   30 : __ct_0t0 typ=w32 val=0t0 bnd=m
   32 : __adr_uiB typ=w32 bnd=m adro=19
   34 : __ct_4t0 typ=w32 val=4t0 bnd=m
   36 : __adr_uiA typ=w32 bnd=m adro=20
   41 : __ct_2143289344 typ=t20s_rp12 val=523264f bnd=m
   43 : __ct_8s0 typ=w32 val=8s0 bnd=m
   45 : __tmp typ=w32 bnd=m
]
Fsoftfloat_propagateNaNF32UI {
    #3 off=0
    (__R_SP.11 var=12) st_def ()  <22>;
    (__sp.17 var=18) source ()  <28>;
    (uiB.18 var=19) source ()  <29>;
    (uiA.19 var=20) source ()  <30>;
    (__la.21 var=22 stl=X off=1) inp ()  <32>;
    (__la.22 var=22) deassign (__la.21)  <33>;
    (__arg_uiA.25 var=24 stl=X off=11) inp ()  <36>;
    (__arg_uiA.26 var=24) deassign (__arg_uiA.25)  <37>;
    (__arg_uiB.28 var=25 stl=X off=12) inp ()  <39>;
    (__arg_uiB.29 var=25) deassign (__arg_uiB.28)  <40>;
    (__rd___sp.31 var=21) rd_res_reg (__R_SP.11 __sp.17)  <42>;
    (__ct_m8S0.32 var=26) const ()  <43>;
    (__tmp.34 var=28) __Pvoid__pl___Pvoid___sint (__rd___sp.31 __ct_m8S0.32)  <45>;
    (__R_SP.35 var=12 __sp.36 var=18) wr_res_reg (__tmp.34 __sp.17)  <46>;
    (__rd___sp.37 var=21) rd_res_reg (__R_SP.11 __sp.36)  <48>;
    (__ct_0t0.38 var=30) const ()  <49>;
    (__adr_uiB.40 var=32) __Pvoid__pl___Pvoid___sint (__rd___sp.37 __ct_0t0.38)  <51>;
    (__rd___sp.42 var=21) rd_res_reg (__R_SP.11 __sp.36)  <53>;
    (__M_DMw.47 var=5 uiB.48 var=19) store (__arg_uiB.29 __adr_uiB.40 uiB.18)  <58>;
    call {
        () chess_separator_scheduler ()  <59>;
    } #4 off=1
    #5 off=2
    (__ct_4t0.43 var=34) const ()  <54>;
    (__adr_uiA.45 var=36) __Pvoid__pl___Pvoid___sint (__rd___sp.42 __ct_4t0.43)  <56>;
    (__M_DMw.49 var=5 uiA.50 var=20) store (__arg_uiA.26 __adr_uiA.45 uiA.19)  <60>;
    call {
        () chess_separator_scheduler ()  <67>;
    } #10 off=3
    #13 off=4 nxt=-2
    (__ct_2143289344.55 var=41) const ()  <68>;
    (__rd___sp.57 var=21) rd_res_reg (__R_SP.11 __sp.36)  <70>;
    (__ct_8s0.58 var=43) const ()  <71>;
    (__tmp.60 var=45) __Pvoid__pl___Pvoid___sint (__rd___sp.57 __ct_8s0.58)  <73>;
    (__R_SP.61 var=12 __sp.62 var=18) wr_res_reg (__tmp.60 __sp.36)  <74>;
    () void___rts_jr_w32 (__la.22)  <75>;
    (__rt.63 var=23 stl=X off=10) assign (__ct_2143289344.55)  <76>;
    () out (__rt.63)  <77>;
    () sink (__sp.62)  <83>;
    () sink (uiB.48)  <84>;
    () sink (uiA.50)  <85>;
} #0
0 : 'SoftFloat-3e/source/riscv/s_propagateNaNF32UI.c';
----------
0 : (0,48:0,0);
3 : (0,49:49,0);
4 : (0,49:49,0);
5 : (0,49:30,0);
10 : (0,53:4,5);
13 : (0,60:4,5);
----------
42 : (0,49:1,0);
43 : (0,49:1,0);
45 : (0,49:1,0);
46 : (0,49:1,0);
48 : (0,49:63,0);
49 : (0,49:63,0);
51 : (0,49:63,0);
53 : (0,49:44,0);
54 : (0,49:44,0);
56 : (0,49:44,0);
58 : (0,49:49,0);
59 : (0,49:49,0);
60 : (0,49:30,0);
67 : (0,53:4,5);
68 : (0,60:11,0);
70 : (0,60:4,0);
71 : (0,60:4,0);
73 : (0,60:4,0);
74 : (0,60:4,5);
75 : (0,60:4,5);
76 : (0,60:11,0);

