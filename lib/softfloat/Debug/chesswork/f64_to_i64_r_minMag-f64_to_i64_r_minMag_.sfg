
// File generated by noodle version U-2022.12#33f3808fcb#221128, Thu Feb 29 16:37:34 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -ISoftFloat-3e/source/include -ISoftFloat-3e/source/riscv -ISoftFloat-3e/build/chess -I../runtime/include -DCHESS_CXX_ATTRIBUTES -DSOFTFLOAT_NO_EXCEPTIONS -DINLINE_LEVEL=5 -DSOFTFLOAT_FAST_DIV32TO16 -D__tct_patch__=0 +Oextc -itrv32p3_cnn_chess.h +Sal +Sca +Osps -Wflla +Opmsa +NOtcr +NOcse +NOlsw +NOifv +NOrle +NOrlt +wDebug/chesswork SoftFloat-3e/source/f64_to_i64_r_minMag.c +Q0=+Sal,+Sca,+Osps,-Wflla,+Opmsa,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+Opmsa,+NOrlt trv32p3_cnn


/***
!!  int_fast64_t f64_to_i64_r_minMag(float64_t, bool)
Ff64_to_i64_r_minMag : user_defined, called {
    fnm : "f64_to_i64_r_minMag" 'long long f64_to_i64_r_minMag(float64_t, bool)';
    arg : ( w32:i w32:r w32:r w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] X[14] );
    frm : ( l=56 );
    llv : 0 0 0 0 0 ;
}
****
***/

[
    0 : f64_to_i64_r_minMag typ=u08 bnd=e stl=PMb
    5 : __M_DMw typ=w32 bnd=d stl=DMw
   12 : __R_SP typ=w32 bnd=d stl=SP
   18 : __sp typ=w32 bnd=b stl=SP
   19 : exact typ=w08 val=0t0 bnd=a sz=4 algn=4 stl=DMb tref=bool_DMb
   20 : a typ=w08 val=4t0 bnd=a sz=8 algn=4 stl=DMb tref=float64_t_DMb
   21 : uA typ=w08 val=12t0 bnd=a sz=8 algn=4 stl=DMb tref=ui64_f64_DMb
   22 : uiA typ=w08 val=20t0 bnd=a sz=8 algn=4 stl=DMb tref=uint_fast64_t_DMb
   23 : sign typ=w08 val=28t0 bnd=a sz=4 algn=4 stl=DMb tref=bool_DMb
   24 : exp typ=w08 val=32t0 bnd=a sz=4 algn=4 stl=DMb tref=int_fast16_t_DMb
   25 : sig typ=w08 val=36t0 bnd=a sz=8 algn=4 stl=DMb tref=uint_fast64_t_DMb
   26 : shiftDist typ=w08 val=44t0 bnd=a sz=4 algn=4 stl=DMb tref=int_fast16_t_DMb
   27 : absZ typ=w08 val=48t0 bnd=a sz=8 algn=4 stl=DMb tref=int_fast64_t_DMb
   28 : a_low typ=w08 bnd=B stl=DMb
   29 : a_high typ=w08 bnd=B stl=DMb
   30 : uiA_low typ=w08 bnd=B stl=DMb
   31 : uiA_high typ=w08 bnd=B stl=DMb
   32 : sig_low typ=w08 bnd=B stl=DMb
   33 : sig_high typ=w08 bnd=B stl=DMb
   34 : absZ_low typ=w08 bnd=B stl=DMb
   35 : absZ_high typ=w08 bnd=B stl=DMb
   36 : __rd___sp typ=w32 bnd=m
   37 : __la typ=w32 bnd=p tref=w32__
   39 : __rt_low typ=w32 bnd=m tref=__uint__
   40 : __rt_high typ=w32 bnd=m tref=__uint__
   42 : __arg_a_low typ=w32 bnd=m tref=__uint__
   43 : __arg_a_high typ=w32 bnd=m tref=__uint__
   44 : __arg_exact typ=w32 bnd=p tref=bool__
   46 : __ct_m56S0 typ=w32 val=-56S0 bnd=m
   48 : __tmp typ=w32 bnd=m
   51 : __ct_0t0 typ=w32 val=0t0 bnd=m
   53 : __adr_exact typ=w32 bnd=m adro=19
   55 : __ct_4t0 typ=w32 val=4t0 bnd=m
   57 : __adr_a typ=w32 bnd=m adro=20
   59 : __ct_12t0 typ=w32 val=12t0 bnd=m
   61 : __adr_uA typ=w32 bnd=m adro=21
   63 : __ct_20t0 typ=w32 val=20t0 bnd=m
   65 : __adr_uiA typ=w32 bnd=m adro=22
   67 : __ct_28t0 typ=w32 val=28t0 bnd=m
   69 : __adr_sign typ=w32 bnd=m adro=23
   71 : __ct_32t0 typ=w32 val=32t0 bnd=m
   73 : __adr_exp typ=w32 bnd=m adro=24
   75 : __ct_36t0 typ=w32 val=36t0 bnd=m
   77 : __adr_sig typ=w32 bnd=m adro=25
   79 : __ct_44t0 typ=w32 val=44t0 bnd=m
   81 : __adr_shiftDist typ=w32 bnd=m adro=26
   83 : __ct_48t0 typ=w32 val=48t0 bnd=m
   85 : __adr_absZ typ=w32 bnd=m adro=27
   93 : __fch_a_low typ=w32 bnd=m
   96 : __fch_a_high typ=w32 bnd=m
   97 : __ct_0 typ=t20s_rp12 val=0f bnd=m
  108 : __fch_uA typ=w32 bnd=m
  111 : __fch_uA typ=w32 bnd=m
  120 : __fch_uiA_high typ=w32 bnd=m
  127 : __tmp typ=w32 bnd=m
  132 : __fch_uiA_high typ=w32 bnd=m
  137 : __ct_2047 typ=w32 val=2047f bnd=m
  139 : __tmp typ=w32 bnd=m
  141 : __fch_uiA_low typ=w32 bnd=m
  144 : __fch_uiA_high typ=w32 bnd=m
  152 : __ct_1075 typ=w32 val=1075f bnd=m
  154 : __fch_exp typ=w32 bnd=m
  155 : __tmp typ=w32 bnd=m
  156 : __fch_shiftDist typ=w32 bnd=m
  159 : __tmp typ=bool bnd=m
  160 : __fch_shiftDist typ=w32 bnd=m
  161 : __ct_m10 typ=w32 val=-10f bnd=m
  163 : __tmp typ=bool bnd=m
  165 : __fch_uiA_low typ=w32 bnd=m
  168 : __fch_uiA_high typ=w32 bnd=m
  171 : __tmp typ=bool bnd=m
  174 : __fch_exp typ=w32 bnd=m
  177 : __tmp typ=bool bnd=m
  179 : __fch_sig_low typ=w32 bnd=m
  182 : __fch_sig_high typ=w32 bnd=m
  188 : __tmp typ=bool bnd=m
  191 : __fch_sign typ=w32 bnd=m
  192 : __fch_sign typ=bool bnd=m
  200 : __ct_56s0 typ=w32 val=56s0 bnd=m
  202 : __tmp typ=w32 bnd=m
  204 : __fch_sig_low typ=w32 bnd=m
  207 : __fch_sig_high typ=w32 bnd=m
  216 : __fch_sig_low typ=w32 bnd=m
  219 : __fch_sig_high typ=w32 bnd=m
  222 : __fch_shiftDist typ=w32 bnd=m
  223 : __tmp typ=w32 bnd=m
  230 : __ct_53 typ=w32 val=53f bnd=m
  232 : __fch_shiftDist typ=w32 bnd=m
  233 : __tmp typ=bool bnd=m
  239 : __tmp typ=w32 bnd=m
  241 : __fch_sig_low typ=w32 bnd=m
  244 : __fch_sig_high typ=w32 bnd=m
  253 : __fch_sig_low typ=w32 bnd=m
  256 : __fch_sig_high typ=w32 bnd=m
  257 : __fch_shiftDist typ=w32 bnd=m
  264 : __fch_sign typ=w32 bnd=m
  265 : __fch_sign typ=bool bnd=m
  269 : __fch_absZ_low typ=w32 bnd=m
  272 : __fch_absZ_high typ=w32 bnd=m
  275 : __fch_absZ_low typ=w32 bnd=m
  278 : __fch_absZ_high typ=w32 bnd=m
  283 : __tmp typ=w32 bnd=m
  300 : __ct_4294967295 typ=w32 val=-1f bnd=m
  301 : __ct_2147483648 typ=t20s_rp12 val=-524288f bnd=m
  302 : __ct_2147483647 typ=w32 val=2147483647f bnd=m
  327 : __ct_40t0 typ=w32 val=40t0 bnd=m
  328 : __adr_sig typ=w32 bnd=m adro=25
  329 : __ct_24t0 typ=w32 val=24t0 bnd=m
  330 : __adr_uiA typ=w32 bnd=m adro=22
  331 : __adr_sig typ=w32 bnd=m adro=25
  332 : __adr_sig typ=w32 bnd=m adro=25
  333 : __adr_sig typ=w32 bnd=m adro=25
  334 : __ct_52t0 typ=w32 val=52t0 bnd=m
  335 : __adr_absZ typ=w32 bnd=m adro=27
  336 : __adr_sig typ=w32 bnd=m adro=25
  337 : __adr_sig typ=w32 bnd=m adro=25
  338 : __adr_sig typ=w32 bnd=m adro=25
  339 : __adr_absZ typ=w32 bnd=m adro=27
  340 : __adr_absZ typ=w32 bnd=m adro=27
  341 : __adr_absZ typ=w32 bnd=m adro=27
  342 : __ct_8t0 typ=w32 val=8t0 bnd=m
  343 : __adr_a typ=w32 bnd=m adro=20
  344 : __adr_a typ=w32 bnd=m adro=20
  345 : __ct_16t0 typ=w32 val=16t0 bnd=m
  346 : __adr_uA typ=w32 bnd=m adro=21
  347 : __adr_uA typ=w32 bnd=m adro=21
  348 : __adr_uiA typ=w32 bnd=m adro=22
  349 : __adr_uiA typ=w32 bnd=m adro=22
  350 : __adr_uiA typ=w32 bnd=m adro=22
  351 : __adr_uiA typ=w32 bnd=m adro=22
  352 : __adr_sig typ=w32 bnd=m adro=25
  355 : __rt_low typ=w32 bnd=m tref=__uint__
  356 : __rt_high typ=w32 bnd=m tref=__uint__
  360 : __apl_ff typ=w32 bnd=m tref=__sint__
  361 : __apl_carries typ=w32 bnd=m tref=__uint__
  363 : __tmp typ=bool bnd=m
  364 : __tmp typ=bool bnd=m
  365 : __tmp typ=w32 bnd=m
  366 : __tmp typ=w32 bnd=m
  367 : __apl_r_low typ=w32 bnd=m tref=__uint__
  368 : __apl_r_high typ=w32 bnd=m tref=__uint__
  370 : __ct_m32 typ=w32 val=-32f bnd=m
  404 : __tmp_high typ=w32 bnd=m
  418 : __tmp typ=bool bnd=m
  419 : __tmp typ=bool bnd=m
  440 : __tmp_high typ=w32 bnd=m
  446 : __rt_low typ=w32 bnd=m tref=__uint__
  447 : __rt_high typ=w32 bnd=m tref=__uint__
  451 : __apl_ff typ=w32 bnd=m tref=__sint__
  452 : __apl_carries typ=w32 bnd=m tref=__uint__
  454 : __tmp typ=bool bnd=m
  455 : __tmp typ=bool bnd=m
  456 : __tmp typ=w32 bnd=m
  457 : __apl_r_low typ=w32 bnd=m tref=__uint__
  458 : __tmp typ=w32 bnd=m
  459 : __apl_r_high typ=w32 bnd=m tref=__uint__
  462 : __tmp_low typ=w32 bnd=m
  464 : __tmp_high typ=w32 bnd=m
  470 : __tmp_high typ=w32 bnd=m
  476 : __tmp_low typ=w32 bnd=m
  478 : __tmp_high typ=w32 bnd=m
  491 : __apl_r_low typ=w32 bnd=m tref=__uint__
  492 : __apl_r_high typ=w32 bnd=m tref=__uint__
  505 : __ct_31 typ=w32 val=31f bnd=m
  507 : __ct_20 typ=w32 val=20f bnd=m
  509 : __ct_1048575 typ=w32 val=1048575f bnd=m
  510 : __ct_3286237184 typ=t20s_rp12 val=-246272f bnd=m
  511 : __ct_1048576 typ=t20s_rp12 val=256f bnd=m
  514 : __tmpd typ=w32 bnd=m
  515 : __tmp typ=bool bnd=m
  530 : __tmp typ=w32 bnd=m
  541 : __false typ=bool val=0f bnd=m
  542 : __either typ=bool bnd=m
  543 : __trgt typ=t13s_s2 val=0j bnd=m
  544 : __trgt typ=t13s_s2 val=0j bnd=m
  545 : __trgt typ=t13s_s2 val=0j bnd=m
  546 : __trgt typ=t21s_s2 val=0j bnd=m
  547 : __trgt typ=t13s_s2 val=0j bnd=m
  548 : __trgt typ=t21s_s2 val=0j bnd=m
  549 : __trgt typ=t13s_s2 val=0j bnd=m
  550 : __trgt typ=t21s_s2 val=0j bnd=m
  551 : __trgt typ=t13s_s2 val=0j bnd=m
  552 : __trgt typ=t13s_s2 val=0j bnd=m
  553 : __trgt typ=t21s_s2 val=0j bnd=m
  554 : __trgt typ=t13s_s2 val=0j bnd=m
  555 : __trgt typ=t21s_s2 val=0j bnd=m
  556 : __trgt typ=t13s_s2 val=0j bnd=m
  557 : __trgt typ=t13s_s2 val=0j bnd=m
  558 : __trgt typ=t21s_s2 val=0j bnd=m
  559 : __trgt typ=t13s_s2 val=0j bnd=m
  560 : __trgt typ=t21s_s2 val=0j bnd=m
  561 : __trgt typ=t13s_s2 val=0j bnd=m
  562 : __trgt typ=t21s_s2 val=0j bnd=m
  563 : __trgt typ=t13s_s2 val=0j bnd=m
  564 : __trgt typ=t21s_s2 val=0j bnd=m
]
Ff64_to_i64_r_minMag {
    #3 off=0
    (__M_DMw.4 var=5) st_def ()  <8>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__sp.17 var=18) source ()  <28>;
    (exact.18 var=19) source ()  <29>;
    (uA.20 var=21) source ()  <31>;
    (sign.22 var=23) source ()  <33>;
    (exp.23 var=24) source ()  <34>;
    (shiftDist.25 var=26) source ()  <36>;
    (a_low.27 var=28) source ()  <38>;
    (a_high.28 var=29) source ()  <39>;
    (uiA_low.29 var=30) source ()  <40>;
    (uiA_high.30 var=31) source ()  <41>;
    (sig_low.31 var=32) source ()  <42>;
    (sig_high.32 var=33) source ()  <43>;
    (absZ_low.33 var=34) source ()  <44>;
    (absZ_high.34 var=35) source ()  <45>;
    (__la.36 var=37 stl=X off=1) inp ()  <47>;
    (__la.37 var=37) deassign (__la.36)  <48>;
    (__arg_a_low.45 var=42 stl=X off=12) inp ()  <56>;
    (__arg_a_low.46 var=42) deassign (__arg_a_low.45)  <57>;
    (__arg_a_high.49 var=43 stl=X off=13) inp ()  <60>;
    (__arg_a_high.50 var=43) deassign (__arg_a_high.49)  <61>;
    (__arg_exact.53 var=44 stl=X off=14) inp ()  <64>;
    (__arg_exact.54 var=44) deassign (__arg_exact.53)  <65>;
    (__rd___sp.56 var=36) rd_res_reg (__R_SP.11 __sp.17)  <67>;
    (__ct_m56S0.57 var=46) const ()  <68>;
    (__tmp.59 var=48) __Pvoid__pl___Pvoid___sint (__rd___sp.56 __ct_m56S0.57)  <70>;
    (__R_SP.60 var=12 __sp.61 var=18) wr_res_reg (__tmp.59 __sp.17)  <71>;
    (__rd___sp.63 var=36) rd_res_reg (__R_SP.11 __sp.61)  <74>;
    (__ct_0t0.64 var=51) const ()  <75>;
    (__adr_exact.66 var=53) __Pvoid__pl___Pvoid___sint (__rd___sp.63 __ct_0t0.64)  <77>;
    (__rd___sp.68 var=36) rd_res_reg (__R_SP.11 __sp.61)  <79>;
    (__rd___sp.73 var=36) rd_res_reg (__R_SP.11 __sp.61)  <84>;
    (__rd___sp.78 var=36) rd_res_reg (__R_SP.11 __sp.61)  <89>;
    (__rd___sp.83 var=36) rd_res_reg (__R_SP.11 __sp.61)  <94>;
    (__rd___sp.88 var=36) rd_res_reg (__R_SP.11 __sp.61)  <99>;
    (__rd___sp.93 var=36) rd_res_reg (__R_SP.11 __sp.61)  <104>;
    (__rd___sp.98 var=36) rd_res_reg (__R_SP.11 __sp.61)  <109>;
    (__rd___sp.103 var=36) rd_res_reg (__R_SP.11 __sp.61)  <114>;
    (__M_DMw.109 var=5 exact.110 var=19) store (__arg_exact.54 __adr_exact.66 exact.18)  <120>;
    call {
        () chess_separator_scheduler ()  <121>;
    } #4 off=1
    #5 off=2
    (__ct_4t0.69 var=55) const ()  <80>;
    (__adr_a.71 var=57) __Pvoid__pl___Pvoid___sint (__rd___sp.68 __ct_4t0.69)  <82>;
    (__M_DMw.112 var=5 a_low.113 var=28) store (__arg_a_low.46 __adr_a.71 a_low.27)  <123>;
    (__M_DMw.118 var=5 a_high.119 var=29) store (__arg_a_high.50 __adr_a.1010 a_high.28)  <128>;
    (__ct_8t0.1009 var=342) const ()  <1174>;
    (__adr_a.1010 var=343) __Pvoid__pl___Pvoid___sint (__rd___sp.68 __ct_8t0.1009)  <1176>;
    call {
        () chess_separator_scheduler ()  <133>;
    } #8 off=3
    #9 off=4
    (__ct_12t0.74 var=59) const ()  <85>;
    (__adr_uA.76 var=61) __Pvoid__pl___Pvoid___sint (__rd___sp.73 __ct_12t0.74)  <87>;
    (__fch_a_low.124 var=93) load (__M_DMw.4 __adr_a.71 a_low.113)  <135>;
    (__fch_a_high.129 var=96) load (__M_DMw.4 __adr_a.1011 a_high.119)  <140>;
    (__M_DMw.135 var=5 uA.136 var=21) store (__fch_a_low.124 __adr_uA.76 uA.20)  <146>;
    (__M_DMw.141 var=5 uA.142 var=21) store (__fch_a_high.129 __adr_uA.1013 uA.136)  <151>;
    (__adr_a.1011 var=344) __Pvoid__pl___Pvoid___sint (__rd___sp.68 __ct_8t0.1009)  <1177>;
    (__ct_16t0.1012 var=345) const ()  <1178>;
    (__adr_uA.1013 var=346) __Pvoid__pl___Pvoid___sint (__rd___sp.73 __ct_16t0.1012)  <1180>;
    call {
        () chess_separator_scheduler ()  <152>;
    } #10 off=5
    #11 off=6
    (__ct_20t0.79 var=63) const ()  <90>;
    (__adr_uiA.81 var=65) __Pvoid__pl___Pvoid___sint (__rd___sp.78 __ct_20t0.79)  <92>;
    (__fch_uA.147 var=108) load (__M_DMw.4 __adr_uA.76 uA.142)  <157>;
    (__fch_uA.152 var=111) load (__M_DMw.4 __adr_uA.1014 uA.142)  <162>;
    (__M_DMw.155 var=5 uiA_low.156 var=30) store (__fch_uA.147 __adr_uiA.81 uiA_low.29)  <165>;
    (__M_DMw.161 var=5 uiA_high.162 var=31) store (__fch_uA.152 __adr_uiA.1015 uiA_high.30)  <170>;
    (__ct_24t0.996 var=329) const ()  <1159>;
    (__adr_uA.1014 var=347) __Pvoid__pl___Pvoid___sint (__rd___sp.73 __ct_16t0.1012)  <1181>;
    (__adr_uiA.1015 var=348) __Pvoid__pl___Pvoid___sint (__rd___sp.78 __ct_24t0.996)  <1182>;
    call {
        () chess_separator_scheduler ()  <171>;
    } #12 off=7
    #98 off=8
    (__ct_28t0.84 var=67) const ()  <95>;
    (__adr_sign.86 var=69) __Pvoid__pl___Pvoid___sint (__rd___sp.83 __ct_28t0.84)  <97>;
    (__fch_uiA_high.169 var=120) load (__M_DMw.4 __adr_uiA.1016 uiA_high.162)  <178>;
    (__M_DMw.178 var=5 sign.179 var=23) store (__tmp.1271 __adr_sign.86 sign.22)  <187>;
    (__adr_uiA.1016 var=349) __Pvoid__pl___Pvoid___sint (__rd___sp.78 __ct_24t0.996)  <1183>;
    (__apl_r_low.1036 var=367) __uint__rs___uint___sint (__fch_uiA_high.169 __ct_31.1256)  <1241>;
    (__ct_31.1256 var=505) const ()  <1550>;
    (__tmp.1271 var=127) __sint_sne0___sint (__apl_r_low.1036)  <1607>;
    call {
        () chess_separator_scheduler ()  <188>;
    } #14 off=9
    #367 off=10
    (__ct_32t0.89 var=71) const ()  <100>;
    (__adr_exp.91 var=73) __Pvoid__pl___Pvoid___sint (__rd___sp.88 __ct_32t0.89)  <102>;
    (__fch_uiA_high.186 var=132) load (__M_DMw.4 __adr_uiA.1017 uiA_high.162)  <195>;
    (__ct_2047.192 var=137) const ()  <201>;
    (__tmp.194 var=139) __sint__ad___sint___sint (__apl_r_low.1077 __ct_2047.192)  <203>;
    (__M_DMw.195 var=5 exp.196 var=24) store (__tmp.194 __adr_exp.91 exp.23)  <204>;
    (__adr_uiA.1017 var=350) __Pvoid__pl___Pvoid___sint (__rd___sp.78 __ct_24t0.996)  <1184>;
    (__apl_r_low.1077 var=367) __uint__rs___uint___sint (__fch_uiA_high.186 __ct_20.1258)  <1292>;
    (__ct_20.1258 var=507) const ()  <1554>;
    call {
        () chess_separator_scheduler ()  <205>;
    } #16 off=11
    #200 off=12
    (__ct_36t0.94 var=75) const ()  <105>;
    (__adr_sig.96 var=77) __Pvoid__pl___Pvoid___sint (__rd___sp.93 __ct_36t0.94)  <107>;
    (__fch_uiA_low.198 var=141) load (__M_DMw.4 __adr_uiA.81 uiA_low.156)  <207>;
    (__fch_uiA_high.203 var=144) load (__M_DMw.4 __adr_uiA.1018 uiA_high.162)  <212>;
    (__M_DMw.209 var=5 sig_low.210 var=32) store (__fch_uiA_low.198 __adr_sig.96 sig_low.31)  <218>;
    (__M_DMw.215 var=5 sig_high.216 var=33) store (__tmp_high.1096 __adr_sig.1019 sig_high.32)  <223>;
    (__ct_40t0.994 var=327) const ()  <1156>;
    (__adr_uiA.1018 var=351) __Pvoid__pl___Pvoid___sint (__rd___sp.78 __ct_24t0.996)  <1185>;
    (__adr_sig.1019 var=352) __Pvoid__pl___Pvoid___sint (__rd___sp.93 __ct_40t0.994)  <1186>;
    (__tmp_high.1096 var=404) __uint__ad___uint___uint (__fch_uiA_high.203 __ct_1048575.1260)  <1315>;
    (__ct_1048575.1260 var=509) const ()  <1558>;
    call {
        () chess_separator_scheduler ()  <224>;
    } #18 off=13
    #19 off=14
    (__ct_44t0.99 var=79) const ()  <110>;
    (__adr_shiftDist.101 var=81) __Pvoid__pl___Pvoid___sint (__rd___sp.98 __ct_44t0.99)  <112>;
    (__ct_1075.217 var=152) const ()  <225>;
    (__fch_exp.219 var=154) load (__M_DMw.4 __adr_exp.91 exp.196)  <227>;
    (__tmp.220 var=155) __sint__mi___sint___sint (__ct_1075.217 __fch_exp.219)  <228>;
    (__M_DMw.221 var=5 shiftDist.222 var=26) store (__tmp.220 __adr_shiftDist.101 shiftDist.25)  <229>;
    call {
        () chess_separator_scheduler ()  <230>;
    } #20 off=15
    #207 off=16
    (__ct_48t0.104 var=83) const ()  <115>;
    (__adr_absZ.106 var=85) __Pvoid__pl___Pvoid___sint (__rd___sp.103 __ct_48t0.104)  <117>;
    (__ct_0.131 var=97) const ()  <142>;
    (__fch_shiftDist.223 var=156) load (__M_DMw.4 __adr_shiftDist.101 shiftDist.222)  <231>;
    (__ct_56s0.491 var=200) const ()  <507>;
    (__ct_52t0.1001 var=334) const ()  <1165>;
    (__ct_m32.1027 var=370) const ()  <1230>;
    (__tmp.1110 var=159) bool__ge___sint___sint (__ct_0.131 __fch_shiftDist.223)  <1333>;
    (__ct_1048576.1262 var=511) const ()  <1562>;
    (__trgt.1330 var=561) const ()  <1830>;
    () void_br_bool_t13s_s2 (__tmp.1110 __trgt.1330)  <1831>;
    (__either.1331 var=542) undefined ()  <1832>;
    if {
        {
            () if_expr (__either.1331)  <271>;
        } #23
        {
            #25 off=29
            (__fch_shiftDist.263 var=160) load (__M_DMw.4 __adr_shiftDist.101 shiftDist.222)  <272>;
            (__ct_m10.264 var=161) const ()  <273>;
            (__tmp.266 var=163) bool__lt___sint___sint (__fch_shiftDist.263 __ct_m10.264)  <275>;
            (__trgt.1314 var=551) const ()  <1802>;
            () void_br_bool_t13s_s2 (__tmp.266 __trgt.1314)  <1803>;
            (__either.1315 var=542) undefined ()  <1804>;
            if {
                {
                    () if_expr (__either.1315)  <312>;
                    () chess_rear_then ()  <1805>;
                } #27
                {
                    #218 off=31
                    (__fch_uiA_low.304 var=165) load (__M_DMw.4 __adr_uiA.81 uiA_low.156)  <314>;
                    (__fch_uiA_high.309 var=168) load (__M_DMw.4 __adr_uiA.997 uiA_high.162)  <319>;
                    (__ct_2147483648.959 var=301) const ()  <1119>;
                    (__adr_uiA.997 var=330) __Pvoid__pl___Pvoid___sint (__rd___sp.78 __ct_24t0.996)  <1161>;
                    (__ct_3286237184.1261 var=510) const ()  <1560>;
                    (__tmp.1295 var=418) bool__ne___uint___uint (__fch_uiA_high.309 __ct_3286237184.1261)  <1743>;
                    (__trgt.1299 var=543) const ()  <1779>;
                    () void_br_bool_t13s_s2 (__tmp.1295 __trgt.1299)  <1780>;
                    (__either.1300 var=542) undefined ()  <1781>;
                    if {
                        {
                            () if_expr (__either.1300)  <1344>;
                        } #220
                        {
                            (__false.1310 var=541) const ()  <1796>;
                        } #222
                        {
                            (__tmp.1118 var=419) bool__eq___uint___uint (__fch_uiA_low.304 __ct_0.131)  <1345>;
                            (__trgt.1311 var=549) const ()  <1797>;
                            () void_br_bool_t13s_s2 (__tmp.1118 __trgt.1311)  <1798>;
                            (__either.1312 var=542) undefined ()  <1799>;
                        } #221 off=32
                        {
                            (__tmp.1119 var=171) merge (__false.1310 __either.1312)  <1346>;
                        } #223
                    } #219
                    if {
                        {
                            () if_expr (__tmp.1119)  <360>;
                        } #31
                        {
                        } #34 off=41
                        {
                            #36 off=33
                            (__fch_exp.352 var=174) load (__M_DMw.4 __adr_exp.91 exp.196)  <364>;
                            (__ct_4294967295.952 var=300) const ()  <1111>;
                            (__ct_2147483647.963 var=302) const ()  <1124>;
                            (__tmp.1296 var=177) bool__ne___sint___sint (__fch_exp.352 __ct_2047.192)  <1744>;
                            (__trgt.1301 var=544) const ()  <1782>;
                            () void_br_bool_t13s_s2 (__tmp.1296 __trgt.1301)  <1783>;
                            (__either.1302 var=542) undefined ()  <1784>;
                            if {
                                {
                                    () if_expr (__either.1302)  <404>;
                                } #38
                                {
                                    (__false.1306 var=541) const ()  <1790>;
                                } #40
                                {
                                    (__fch_sig_low.393 var=179) load (__M_DMw.4 __adr_sig.96 sig_low.210)  <406>;
                                    (__fch_sig_high.398 var=182) load (__M_DMw.4 __adr_sig.995 sig_high.216)  <411>;
                                    (__adr_sig.995 var=328) __Pvoid__pl___Pvoid___sint (__rd___sp.93 __ct_40t0.994)  <1158>;
                                    (__tmpd.1265 var=514) __uint__or___uint___uint (__fch_sig_high.398 __fch_sig_low.393)  <1600>;
                                    (__tmp.1266 var=515) bool__ne___uint___uint (__tmpd.1265 __ct_0.131)  <1601>;
                                    (__trgt.1307 var=547) const ()  <1791>;
                                    () void_br_bool_t13s_s2 (__tmp.1266 __trgt.1307)  <1792>;
                                    (__either.1308 var=542) undefined ()  <1793>;
                                } #235 off=34
                                {
                                    (__tmp.405 var=188) merge (__false.1306 __either.1308)  <418>;
                                } #41
                            } #37
                            if {
                                {
                                    () if_expr (__tmp.405)  <455>;
                                } #44
                                {
                                } #45 off=39
                                {
                                    #112 off=35
                                    (__fch_sign.444 var=191) load (__M_DMw.4 __adr_sign.86 sign.179)  <458>;
                                    (__fch_sign.937 var=192) bool__ne___sint___sint (__fch_sign.444 __ct_0.131)  <1060>;
                                    (__trgt.1303 var=545) const ()  <1785>;
                                    () void_br_bool_t13s_s2 (__fch_sign.937 __trgt.1303)  <1786>;
                                    (__either.1304 var=542) undefined ()  <1787>;
                                    if {
                                        {
                                            () if_expr (__either.1304)  <496>;
                                        } #49
                                        {
                                        } #50 off=37
                                        {
                                            (__trgt.1305 var=546) const ()  <1788>;
                                            () void_j_t21s_s2 (__trgt.1305)  <1789>;
                                        } #51 off=36
                                        {
                                            (__rt_low.955 var=39) merge (__ct_0.131 __ct_4294967295.952)  <1115>;
                                            (__rt_high.966 var=40) merge (__ct_2147483648.959 __ct_2147483647.963)  <1128>;
                                        } #52
                                    } #48
                                    #404 off=38
                                    (__trgt.1309 var=548) const ()  <1794>;
                                    () void_j_t21s_s2 (__trgt.1309)  <1795>;
                                } #46
                                {
                                    (__rt_low.951 var=39) merge (__ct_4294967295.952 __rt_low.955)  <1110>;
                                    (__rt_high.962 var=40) merge (__ct_2147483647.963 __rt_high.966)  <1123>;
                                } #53
                            } #43
                            #405 off=40
                            (__trgt.1313 var=550) const ()  <1800>;
                            () void_j_t21s_s2 (__trgt.1313)  <1801>;
                        } #35
                        {
                            (__rt_low.947 var=39) merge (__ct_0.131 __rt_low.951)  <1105>;
                            (__rt_high.958 var=40) merge (__ct_2147483648.959 __rt_high.962)  <1118>;
                        } #55
                    } #30
                    #58 off=42 nxt=-2
                    (__rd___sp.490 var=36) rd_res_reg (__R_SP.11 __sp.61)  <506>;
                    (__tmp.493 var=202) __Pvoid__pl___Pvoid___sint (__rd___sp.490 __ct_56s0.491)  <509>;
                    (__R_SP.494 var=12 __sp.495 var=18) wr_res_reg (__tmp.493 __sp.61)  <510>;
                    () void___rts_jr_w32 (__la.37)  <511>;
                    (__rt_low.497 var=39 stl=X off=10) assign (__rt_low.947)  <513>;
                    () out (__rt_low.497)  <514>;
                    (__rt_high.499 var=40 stl=X off=11) assign (__rt_high.958)  <516>;
                    () out (__rt_high.499)  <517>;
                    () sink (__sp.495)  <525>;
                    () sink (exact.110)  <526>;
                    () sink (uA.142)  <528>;
                    () sink (sign.179)  <530>;
                    () sink (exp.196)  <531>;
                    () sink (shiftDist.222)  <533>;
                    () sink (a_low.113)  <535>;
                    () sink (a_high.119)  <536>;
                    () sink (uiA_low.156)  <537>;
                    () sink (uiA_high.162)  <538>;
                    () sink (sig_low.210)  <539>;
                    () sink (sig_high.216)  <540>;
                } #28
                {
                } #59 off=30
                {
                } #60
            } #26
            #254 off=43
            (__fch_sig_low.575 var=204) load (__M_DMw.4 __adr_sig.96 sig_low.210)  <616>;
            (__fch_sig_high.580 var=207) load (__M_DMw.4 __adr_sig.998 sig_high.216)  <621>;
            (__M_DMw.586 var=5 sig_low.587 var=32) store (__fch_sig_low.575 __adr_sig.96 sig_low.210)  <627>;
            (__M_DMw.592 var=5 sig_high.593 var=33) store (__tmp_high.1143 __adr_sig.999 sig_high.216)  <632>;
            (__adr_sig.998 var=331) __Pvoid__pl___Pvoid___sint (__rd___sp.93 __ct_40t0.994)  <1162>;
            (__adr_sig.999 var=332) __Pvoid__pl___Pvoid___sint (__rd___sp.93 __ct_40t0.994)  <1163>;
            (__tmp_high.1143 var=440) __uint__or___uint___uint (__fch_sig_high.580 __ct_1048576.1262)  <1377>;
            call {
                () chess_separator_scheduler ()  <633>;
            } #62 off=44
            #274 off=45
            (__fch_sig_low.595 var=216) load (__M_DMw.4 __adr_sig.96 sig_low.587)  <635>;
            (__fch_sig_high.600 var=219) load (__M_DMw.4 __adr_sig.1000 sig_high.593)  <640>;
            (__fch_shiftDist.604 var=222) load (__M_DMw.4 __adr_shiftDist.101 shiftDist.222)  <644>;
            (__tmp.605 var=223) __sint__mi___sint___sint (__ct_0.131 __fch_shiftDist.604)  <645>;
            (__adr_sig.1000 var=333) __Pvoid__pl___Pvoid___sint (__rd___sp.93 __ct_40t0.994)  <1164>;
            (__tmp.1159 var=454) bool__eq___sint___sint (__tmp.605 __ct_0.131)  <1397>;
            (__trgt.1319 var=554) const ()  <1811>;
            () void_br_bool_t13s_s2 (__tmp.1159 __trgt.1319)  <1812>;
            (__either.1320 var=542) undefined ()  <1813>;
            if {
                {
                    () if_expr (__either.1320)  <1400>;
                } #276
                {
                } #277 off=50
                {
                    #279 off=46
                    (__apl_ff.1162 var=451) __sint__pl___sint___sint (__tmp.605 __ct_m32.1027)  <1401>;
                    (__tmp.1163 var=455) bool__lt___sint___sint (__apl_ff.1162 __ct_0.131)  <1402>;
                    (__trgt.1316 var=552) const ()  <1806>;
                    () void_br_bool_t13s_s2 (__tmp.1163 __trgt.1316)  <1807>;
                    (__either.1317 var=542) undefined ()  <1808>;
                    if {
                        {
                            () if_expr (__either.1317)  <1403>;
                        } #281
                        {
                            (__tmp.1164 var=456) __sint__mi___sint___sint (__ct_0.131 __apl_ff.1162)  <1404>;
                            (__apl_carries.1165 var=452) __uint__rs___uint___sint (__fch_sig_low.595 __tmp.1164)  <1405>;
                            (__apl_r_low.1166 var=457) __uint__ls___uint___sint (__fch_sig_low.595 __tmp.605)  <1406>;
                            (__tmp.1167 var=458) __uint__ls___uint___sint (__fch_sig_high.600 __tmp.605)  <1407>;
                            (__apl_r_high.1168 var=459) __uint__or___uint___uint (__tmp.1167 __apl_carries.1165)  <1408>;
                        } #282 off=48
                        {
                            (__apl_r_high.1169 var=459) __uint__ls___uint___sint (__fch_sig_low.595 __apl_ff.1162)  <1409>;
                            (__trgt.1318 var=553) const ()  <1809>;
                            () void_j_t21s_s2 (__trgt.1318)  <1810>;
                        } #283 off=47
                        {
                            (__rt_low.1170 var=446) merge (__apl_r_low.1166 __ct_0.131)  <1410>;
                            (__rt_high.1171 var=447) merge (__apl_r_high.1168 __apl_r_high.1169)  <1411>;
                        } #284
                    } #280
                    #406 off=49
                    (__trgt.1321 var=555) const ()  <1814>;
                    () void_j_t21s_s2 (__trgt.1321)  <1815>;
                } #278
                {
                    (__tmp_low.1172 var=462) merge (__fch_sig_low.595 __rt_low.1170)  <1412>;
                    (__tmp_high.1173 var=464) merge (__fch_sig_high.600 __rt_high.1171)  <1413>;
                } #285
            } #275
            #271 off=51
            (__M_DMw.609 var=5 absZ_low.610 var=34) store (__tmp_low.1172 __adr_absZ.106 absZ_low.33)  <649>;
            (__M_DMw.615 var=5 absZ_high.616 var=35) store (__tmp_high.1173 __adr_absZ.1002 absZ_high.34)  <654>;
            (__adr_absZ.1002 var=335) __Pvoid__pl___Pvoid___sint (__rd___sp.103 __ct_52t0.1001)  <1167>;
        } #24
        {
            #66 off=17
            (__ct_53.617 var=230) const ()  <656>;
            (__fch_shiftDist.619 var=232) load (__M_DMw.4 __adr_shiftDist.101 shiftDist.222)  <658>;
            (__tmp.620 var=233) bool__ge___sint___sint (__fch_shiftDist.619 __ct_53.617)  <659>;
            (__trgt.1322 var=556) const ()  <1816>;
            () void_br_bool_t13s_s2 (__tmp.620 __trgt.1322)  <1817>;
            (__either.1323 var=542) undefined ()  <1818>;
            if {
                {
                    () if_expr (__either.1323)  <696>;
                    () chess_rear_then ()  <1819>;
                } #68
                {
                    (__rd___sp.660 var=36) rd_res_reg (__R_SP.11 __sp.61)  <700>;
                    (__tmp.663 var=239) __Pvoid__pl___Pvoid___sint (__rd___sp.660 __ct_56s0.491)  <703>;
                    (__R_SP.664 var=12 __sp.665 var=18) wr_res_reg (__tmp.663 __sp.61)  <704>;
                    () void___rts_jr_w32 (__la.37)  <705>;
                    (__rt_low.667 var=39 stl=X off=10) assign (__ct_0.131)  <707>;
                    () out (__rt_low.667)  <708>;
                    (__rt_high.669 var=40 stl=X off=11) assign (__ct_0.131)  <710>;
                    () out (__rt_high.669)  <711>;
                    () sink (__sp.665)  <719>;
                    () sink (exact.110)  <720>;
                    () sink (uA.142)  <722>;
                    () sink (sign.179)  <724>;
                    () sink (exp.196)  <725>;
                    () sink (shiftDist.222)  <727>;
                    () sink (a_low.113)  <729>;
                    () sink (a_high.119)  <730>;
                    () sink (uiA_low.156)  <731>;
                    () sink (uiA_high.162)  <732>;
                    () sink (sig_low.210)  <733>;
                    () sink (sig_high.216)  <734>;
                } #72 off=19 nxt=-2
                {
                } #73 off=18
                {
                } #74
            } #67
            #299 off=20
            (__fch_sig_low.745 var=241) load (__M_DMw.4 __adr_sig.96 sig_low.210)  <810>;
            (__fch_sig_high.750 var=244) load (__M_DMw.4 __adr_sig.1003 sig_high.216)  <815>;
            (__M_DMw.756 var=5 sig_low.757 var=32) store (__fch_sig_low.745 __adr_sig.96 sig_low.210)  <821>;
            (__M_DMw.762 var=5 sig_high.763 var=33) store (__tmp_high.1188 __adr_sig.1004 sig_high.216)  <826>;
            (__adr_sig.1003 var=336) __Pvoid__pl___Pvoid___sint (__rd___sp.93 __ct_40t0.994)  <1168>;
            (__adr_sig.1004 var=337) __Pvoid__pl___Pvoid___sint (__rd___sp.93 __ct_40t0.994)  <1169>;
            (__tmp_high.1188 var=470) __uint__or___uint___uint (__fch_sig_high.750 __ct_1048576.1262)  <1432>;
            call {
                () chess_separator_scheduler ()  <827>;
            } #76 off=21
            #318 off=22
            (__fch_sig_low.765 var=253) load (__M_DMw.4 __adr_sig.96 sig_low.757)  <829>;
            (__fch_sig_high.770 var=256) load (__M_DMw.4 __adr_sig.1005 sig_high.763)  <834>;
            (__fch_shiftDist.772 var=257) load (__M_DMw.4 __adr_shiftDist.101 shiftDist.222)  <836>;
            (__adr_sig.1005 var=338) __Pvoid__pl___Pvoid___sint (__rd___sp.93 __ct_40t0.994)  <1170>;
            (__tmp.1204 var=363) bool__eq___sint___sint (__fch_shiftDist.772 __ct_0.131)  <1452>;
            (__trgt.1327 var=559) const ()  <1825>;
            () void_br_bool_t13s_s2 (__tmp.1204 __trgt.1327)  <1826>;
            (__either.1328 var=542) undefined ()  <1827>;
            if {
                {
                    () if_expr (__either.1328)  <1455>;
                } #320
                {
                } #321 off=27
                {
                    #323 off=23
                    (__apl_ff.1207 var=360) __sint__pl___sint___sint (__fch_shiftDist.772 __ct_m32.1027)  <1456>;
                    (__tmp.1208 var=364) bool__lt___sint___sint (__apl_ff.1207 __ct_0.131)  <1457>;
                    (__trgt.1324 var=557) const ()  <1820>;
                    () void_br_bool_t13s_s2 (__tmp.1208 __trgt.1324)  <1821>;
                    (__either.1325 var=542) undefined ()  <1822>;
                    if {
                        {
                            () if_expr (__either.1325)  <1458>;
                        } #325
                        {
                            (__tmp.1209 var=365) __sint__mi___sint___sint (__ct_0.131 __apl_ff.1207)  <1459>;
                            (__apl_carries.1210 var=361) __uint__ls___uint___sint (__fch_sig_high.770 __tmp.1209)  <1460>;
                            (__tmp.1211 var=366) __uint__rs___uint___sint (__fch_sig_low.765 __fch_shiftDist.772)  <1461>;
                            (__apl_r_low.1212 var=367) __uint__or___uint___uint (__tmp.1211 __apl_carries.1210)  <1462>;
                            (__apl_r_high.1213 var=368) __uint__rs___uint___sint (__fch_sig_high.770 __fch_shiftDist.772)  <1463>;
                        } #326 off=25
                        {
                            (__apl_r_low.1214 var=367) __uint__rs___uint___sint (__fch_sig_high.770 __apl_ff.1207)  <1464>;
                            (__trgt.1326 var=558) const ()  <1823>;
                            () void_j_t21s_s2 (__trgt.1326)  <1824>;
                        } #327 off=24
                        {
                            (__rt_low.1215 var=355) merge (__apl_r_low.1212 __apl_r_low.1214)  <1465>;
                            (__rt_high.1216 var=356) merge (__apl_r_high.1213 __ct_0.131)  <1466>;
                        } #328
                    } #324
                    #407 off=26
                    (__trgt.1329 var=560) const ()  <1828>;
                    () void_j_t21s_s2 (__trgt.1329)  <1829>;
                } #322
                {
                    (__tmp_low.1217 var=476) merge (__fch_sig_low.765 __rt_low.1215)  <1467>;
                    (__tmp_high.1218 var=478) merge (__fch_sig_high.770 __rt_high.1216)  <1468>;
                } #329
            } #319
            #315 off=28
            (__M_DMw.776 var=5 absZ_low.777 var=34) store (__tmp_low.1217 __adr_absZ.106 absZ_low.33)  <840>;
            (__M_DMw.782 var=5 absZ_high.783 var=35) store (__tmp_high.1218 __adr_absZ.1006 absZ_high.34)  <845>;
            (__adr_absZ.1006 var=339) __Pvoid__pl___Pvoid___sint (__rd___sp.103 __ct_52t0.1001)  <1171>;
            (__trgt.1332 var=562) const ()  <1833>;
            () void_j_t21s_s2 (__trgt.1332)  <1834>;
        } #65
        {
            (sig_low.803 var=32) merge (sig_low.587 sig_low.757)  <866>;
            (sig_high.804 var=33) merge (sig_high.593 sig_high.763)  <867>;
            (absZ_low.805 var=34) merge (absZ_low.610 absZ_low.777)  <868>;
            (absZ_high.806 var=35) merge (absZ_high.616 absZ_high.783)  <869>;
        } #79
    } #22
    #117 off=52
    (__fch_sign.820 var=264) load (__M_DMw.4 __adr_sign.86 sign.179)  <883>;
    (__fch_sign.941 var=265) bool__ne___sint___sint (__fch_sign.820 __ct_0.131)  <1067>;
    (__trgt.1333 var=563) const ()  <1835>;
    () void_br_bool_t13s_s2 (__fch_sign.941 __trgt.1333)  <1836>;
    (__either.1334 var=542) undefined ()  <1837>;
    if {
        {
            () if_expr (__either.1334)  <921>;
        } #82
        {
            (__fch_absZ_low.861 var=269) load (__M_DMw.4 __adr_absZ.106 absZ_low.805)  <925>;
            (__fch_absZ_high.866 var=272) load (__M_DMw.4 __adr_absZ.1007 absZ_high.806)  <930>;
            (__adr_absZ.1007 var=340) __Pvoid__pl___Pvoid___sint (__rd___sp.103 __ct_52t0.1001)  <1172>;
            (__apl_r_low.1236 var=491) __uint_sub___uint___uint (__ct_0.131 __fch_absZ_low.861)  <1491>;
            (__apl_r_high.1237 var=492) __uint_sub___uint___uint (__ct_0.131 __fch_absZ_high.866)  <1492>;
            (__apl_r_high.1240 var=492) __uint__mi___uint___uint (__apl_r_high.1237 __tmp.1289)  <1495>;
            (__tmp.1289 var=530) __sint_sne0___sint (__fch_absZ_low.861)  <1669>;
        } #375 off=54
        {
            (__fch_absZ_low.870 var=275) load (__M_DMw.4 __adr_absZ.106 absZ_low.805)  <934>;
            (__fch_absZ_high.875 var=278) load (__M_DMw.4 __adr_absZ.1008 absZ_high.806)  <939>;
            (__adr_absZ.1008 var=341) __Pvoid__pl___Pvoid___sint (__rd___sp.103 __ct_52t0.1001)  <1173>;
            (__trgt.1335 var=564) const ()  <1838>;
            () void_j_t21s_s2 (__trgt.1335)  <1839>;
        } #84 off=53
        {
            (__rt_low.969 var=39) merge (__apl_r_low.1236 __fch_absZ_low.870)  <1131>;
            (__rt_high.972 var=40) merge (__apl_r_high.1240 __fch_absZ_high.875)  <1134>;
        } #85
    } #81
    #88 off=55 nxt=-2
    (__rd___sp.879 var=36) rd_res_reg (__R_SP.11 __sp.61)  <943>;
    (__tmp.882 var=283) __Pvoid__pl___Pvoid___sint (__rd___sp.879 __ct_56s0.491)  <946>;
    (__R_SP.883 var=12 __sp.884 var=18) wr_res_reg (__tmp.882 __sp.61)  <947>;
    () void___rts_jr_w32 (__la.37)  <948>;
    (__rt_low.886 var=39 stl=X off=10) assign (__rt_low.969)  <950>;
    () out (__rt_low.886)  <951>;
    (__rt_high.888 var=40 stl=X off=11) assign (__rt_high.972)  <953>;
    () out (__rt_high.888)  <954>;
    () sink (__sp.884)  <962>;
    () sink (exact.110)  <963>;
    () sink (uA.142)  <965>;
    () sink (sign.179)  <967>;
    () sink (exp.196)  <968>;
    () sink (shiftDist.222)  <970>;
    () sink (a_low.113)  <972>;
    () sink (a_high.119)  <973>;
    () sink (uiA_low.156)  <974>;
    () sink (uiA_high.162)  <975>;
    () sink (sig_low.803)  <976>;
    () sink (sig_high.804)  <977>;
    () sink (absZ_low.805)  <978>;
    () sink (absZ_high.806)  <979>;
} #0
0 : 'SoftFloat-3e/source/f64_to_i64_r_minMag.c';
----------
0 : (0,44:0,0);
3 : (0,44:47,0);
4 : (0,44:47,0);
5 : (0,44:34,0);
8 : (0,47:4,4);
9 : (0,59:9,12);
10 : (0,59:9,12);
11 : (0,60:8,13);
12 : (0,60:8,13);
14 : (0,61:9,14);
16 : (0,62:9,15);
18 : (0,63:9,16);
19 : (0,66:14,17);
20 : (0,66:14,17);
22 : (0,67:4,17);
24 : (0,67:26,18);
25 : (0,70:23,18);
26 : (0,70:8,18);
28 : (0,70:31,19);
30 : (0,71:12,19);
34 : (0,72:16,21);
35 : (0,72:16,23);
36 : (0,78:21,24);
37 : (0,78:31,24);
40 : (0,78:31,26);
43 : (0,78:38,28);
45 : (0,78:40,29);
46 : (0,79:8,30);
48 : (0,79:8,30);
50 : (0,79:33,31);
51 : (0,79:40,32);
58 : (0,77:12,40);
59 : (0,70:8,44);
62 : (0,83:12,48);
65 : (0,85:11,51);
66 : (0,88:16,51);
67 : (0,88:8,51);
72 : (0,94:12,52);
73 : (0,88:8,56);
76 : (0,98:12,60);
81 : (0,106:16,64);
84 : (0,106:26,66);
88 : (0,106:4,68);
98 : (0,61:4,13);
112 : (0,79:3,30);
117 : (0,106:11,64);
200 : (0,63:4,15);
207 : (0,67:19,17);
218 : (0,71:21,19);
219 : (0,71:21,19);
220 : (0,71:21,19);
221 : (0,71:21,19);
222 : (0,71:21,19);
223 : (0,71:21,19);
235 : (0,78:31,25);
254 : (0,83:8,47);
271 : (0,84:8,48);
274 : (0,84:18,48);
275 : (0,84:18,48);
276 : (0,84:18,48);
277 : (0,84:18,48);
278 : (0,84:18,48);
279 : (0,84:18,48);
280 : (0,84:18,48);
281 : (0,84:18,48);
282 : (0,84:18,48);
283 : (0,84:18,48);
284 : (0,84:18,48);
285 : (0,84:18,48);
299 : (0,98:8,59);
315 : (0,99:8,60);
318 : (0,99:18,60);
319 : (0,99:18,60);
320 : (0,99:18,60);
321 : (0,99:18,60);
322 : (0,99:18,60);
323 : (0,99:18,60);
324 : (0,99:18,60);
325 : (0,99:18,60);
326 : (0,99:18,60);
327 : (0,99:18,60);
328 : (0,99:18,60);
329 : (0,99:18,60);
367 : (0,62:4,14);
375 : (0,106:18,65);
----------
67 : (0,44:13,0);
68 : (0,44:13,0);
70 : (0,44:13,0);
71 : (0,44:13,0);
74 : (0,44:52,0);
75 : (0,44:52,0);
77 : (0,44:52,0);
79 : (0,44:44,0);
80 : (0,44:44,0);
82 : (0,44:44,0);
84 : (0,49:19,0);
85 : (0,49:19,0);
87 : (0,49:19,0);
89 : (0,50:18,0);
90 : (0,50:18,0);
92 : (0,50:18,0);
94 : (0,51:9,0);
95 : (0,51:9,0);
97 : (0,51:9,0);
99 : (0,52:17,0);
100 : (0,52:17,0);
102 : (0,52:17,0);
104 : (0,53:18,0);
105 : (0,53:18,0);
107 : (0,53:18,0);
109 : (0,54:17,0);
110 : (0,54:17,0);
112 : (0,54:17,0);
114 : (0,55:17,0);
115 : (0,55:17,0);
117 : (0,55:17,0);
120 : (0,44:47,0);
121 : (0,44:47,0);
123 : (0,44:34,0);
128 : (0,44:34,0);
133 : (0,47:4,4);
135 : (0,59:11,11);
140 : (0,59:11,11);
142 : (0,59:6,0);
146 : (0,59:6,11);
151 : (0,59:6,11);
152 : (0,59:9,12);
157 : (0,60:12,12);
162 : (0,60:12,12);
165 : (0,60:4,12);
170 : (0,60:4,12);
171 : (0,60:8,13);
178 : (0,61:32,13);
187 : (0,61:4,13);
188 : (0,61:9,14);
195 : (0,62:29,14);
201 : (0,62:39,0);
203 : (0,62:39,14);
204 : (0,62:4,14);
205 : (0,62:9,15);
207 : (0,63:13,15);
212 : (0,63:13,15);
218 : (0,63:4,15);
223 : (0,63:4,15);
224 : (0,63:9,16);
225 : (0,66:22,0);
227 : (0,66:24,16);
228 : (0,66:22,16);
229 : (0,66:4,16);
230 : (0,66:14,17);
231 : (0,67:9,17);
271 : (0,67:4,17);
272 : (0,70:13,18);
273 : (0,70:23,0);
275 : (0,70:23,18);
312 : (0,70:8,18);
314 : (0,71:17,19);
319 : (0,71:17,19);
360 : (0,71:12,19);
364 : (0,78:17,24);
404 : (0,78:31,24);
406 : (0,78:34,25);
411 : (0,78:34,25);
418 : (0,78:31,27);
455 : (0,78:38,28);
458 : (0,79:3,30);
496 : (0,79:8,30);
506 : (0,77:12,0);
507 : (0,77:12,0);
509 : (0,77:12,0);
510 : (0,77:12,40);
511 : (0,77:12,40);
513 : (0,77:12,0);
516 : (0,77:12,0);
616 : (0,83:8,47);
621 : (0,83:8,47);
627 : (0,83:8,47);
632 : (0,83:8,47);
633 : (0,83:12,48);
635 : (0,84:15,48);
640 : (0,84:15,48);
644 : (0,84:21,48);
645 : (0,84:20,48);
649 : (0,84:8,48);
654 : (0,84:8,48);
656 : (0,88:16,0);
658 : (0,88:19,51);
659 : (0,88:16,51);
696 : (0,88:8,51);
700 : (0,94:12,0);
703 : (0,94:12,0);
704 : (0,94:12,52);
705 : (0,94:12,52);
707 : (0,94:19,0);
710 : (0,94:19,0);
810 : (0,98:8,59);
815 : (0,98:8,59);
821 : (0,98:8,59);
826 : (0,98:8,59);
827 : (0,98:12,60);
829 : (0,99:15,60);
834 : (0,99:15,60);
836 : (0,99:20,60);
840 : (0,99:8,60);
845 : (0,99:8,60);
866 : (0,67:4,63);
867 : (0,67:4,63);
868 : (0,67:4,63);
869 : (0,67:4,63);
883 : (0,106:11,64);
921 : (0,106:16,64);
925 : (0,106:19,65);
930 : (0,106:19,65);
934 : (0,106:26,66);
939 : (0,106:26,66);
943 : (0,106:4,0);
946 : (0,106:4,0);
947 : (0,106:4,68);
948 : (0,106:4,68);
950 : (0,106:16,0);
953 : (0,106:16,0);
1060 : (0,79:3,30);
1067 : (0,106:11,64);
1111 : (0,78:40,0);
1119 : (0,72:45,0);
1124 : (0,78:40,0);
1156 : (0,53:18,0);
1159 : (0,50:18,0);
1165 : (0,55:17,0);
1174 : (0,44:44,0);
1178 : (0,49:19,0);
1230 : (0,61:36,0);
1241 : (0,61:36,13);
1292 : (0,62:33,14);
1315 : (0,63:18,15);
1333 : (0,67:19,17);
1344 : (0,71:21,19);
1345 : (0,71:21,19);
1346 : (0,71:21,19);
1377 : (0,83:12,47);
1397 : (0,84:18,48);
1400 : (0,84:18,48);
1401 : (0,84:18,48);
1402 : (0,84:18,48);
1403 : (0,84:18,48);
1404 : (0,84:18,48);
1405 : (0,84:18,48);
1406 : (0,84:18,48);
1407 : (0,84:18,48);
1408 : (0,84:18,48);
1409 : (0,84:18,48);
1410 : (0,84:18,48);
1411 : (0,84:18,48);
1412 : (0,84:18,48);
1413 : (0,84:18,48);
1432 : (0,98:12,59);
1452 : (0,99:18,60);
1455 : (0,99:18,60);
1456 : (0,99:18,60);
1457 : (0,99:18,60);
1458 : (0,99:18,60);
1459 : (0,99:18,60);
1460 : (0,99:18,60);
1461 : (0,99:18,60);
1462 : (0,99:18,60);
1463 : (0,99:18,60);
1464 : (0,99:18,60);
1465 : (0,99:18,60);
1466 : (0,99:18,60);
1467 : (0,99:18,60);
1468 : (0,99:18,60);
1491 : (0,106:18,65);
1492 : (0,106:18,65);
1495 : (0,106:18,65);
1550 : (0,61:36,0);
1554 : (0,62:33,0);
1558 : (0,63:20,0);
1560 : (0,71:25,0);
1562 : (0,83:15,0);
1600 : (0,78:31,25);
1601 : (0,78:31,25);
1607 : (0,61:4,13);
1669 : (0,106:18,65);
1743 : (0,71:21,19);
1744 : (0,78:21,24);
1780 : (0,71:21,19);
1783 : (0,78:31,24);
1786 : (0,79:8,30);
1792 : (0,78:38,28);
1798 : (0,71:12,19);
1803 : (0,70:8,18);
1807 : (0,84:18,48);
1812 : (0,84:18,48);
1817 : (0,88:8,51);
1821 : (0,99:18,60);
1826 : (0,99:18,60);
1831 : (0,67:4,17);
1836 : (0,106:16,64);

