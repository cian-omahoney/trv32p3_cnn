
// File generated by noodle version U-2022.12#33f3808fcb#221128, Thu Feb 29 15:23:38 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -ISoftFloat-3e/source/include -ISoftFloat-3e/source/riscv -ISoftFloat-3e/build/chess -I../runtime/include -DCHESS_CXX_ATTRIBUTES -DSOFTFLOAT_NO_EXCEPTIONS -DINLINE_LEVEL=5 -DSOFTFLOAT_FAST_DIV32TO16 -D__tct_patch__=0 +Oextc -itrv32p3_cnn_chess.h +Sal +Sca +Osps -Wflla +Opmsa +NOtcr +NOcse +NOlsw +NOifv +NOrle +NOrlt +wDebug/chesswork SoftFloat-3e/source/f64_lt.c +Q0=+Sal,+Sca,+Osps,-Wflla,+Opmsa,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+Opmsa,+NOrlt trv32p3_cnn


/***
!!  bool f64_lt(float64_t, float64_t)
Ff64_lt : user_defined, called {
    fnm : "f64_lt" 'bool f64_lt(float64_t, float64_t)';
    arg : ( w32:i w32:r w32:i w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] X[14] );
    frm : ( l=56 );
    llv : 0 0 0 0 0 ;
}
****
***/

[
    0 : f64_lt typ=u08 bnd=e stl=PMb
    5 : __M_DMw typ=w32 bnd=d stl=DMw
   12 : __R_SP typ=w32 bnd=d stl=SP
   18 : __sp typ=w32 bnd=b stl=SP
   19 : b typ=w08 val=0t0 bnd=a sz=8 algn=4 stl=DMb tref=float64_t_DMb
   20 : a typ=w08 val=8t0 bnd=a sz=8 algn=4 stl=DMb tref=float64_t_DMb
   21 : uA typ=w08 val=16t0 bnd=a sz=8 algn=4 stl=DMb tref=ui64_f64_DMb
   22 : uiA typ=w08 val=24t0 bnd=a sz=8 algn=4 stl=DMb tref=uint_fast64_t_DMb
   23 : uB typ=w08 val=32t0 bnd=a sz=8 algn=4 stl=DMb tref=ui64_f64_DMb
   24 : uiB typ=w08 val=40t0 bnd=a sz=8 algn=4 stl=DMb tref=uint_fast64_t_DMb
   25 : signA typ=w08 val=48t0 bnd=a sz=4 algn=4 stl=DMb tref=bool_DMb
   26 : signB typ=w08 val=52t0 bnd=a sz=4 algn=4 stl=DMb tref=bool_DMb
   27 : b_low typ=w08 bnd=B stl=DMb
   28 : b_high typ=w08 bnd=B stl=DMb
   29 : a_low typ=w08 bnd=B stl=DMb
   30 : a_high typ=w08 bnd=B stl=DMb
   31 : uiA_low typ=w08 bnd=B stl=DMb
   32 : uiA_high typ=w08 bnd=B stl=DMb
   33 : uiB_low typ=w08 bnd=B stl=DMb
   34 : uiB_high typ=w08 bnd=B stl=DMb
   35 : __rd___sp typ=w32 bnd=m
   36 : __la typ=w32 bnd=p tref=w32__
   38 : __rt typ=bool bnd=m
   40 : __arg_a_low typ=w32 bnd=m tref=__uint__
   41 : __arg_a_high typ=w32 bnd=m tref=__uint__
   43 : __arg_b_low typ=w32 bnd=m tref=__uint__
   44 : __arg_b_high typ=w32 bnd=m tref=__uint__
   45 : __ct_m56S0 typ=w32 val=-56S0 bnd=m
   47 : __tmp typ=w32 bnd=m
   49 : __ct_0t0 typ=w32 val=0t0 bnd=m
   51 : __adr_b typ=w32 bnd=m adro=19
   53 : __ct_8t0 typ=w32 val=8t0 bnd=m
   55 : __adr_a typ=w32 bnd=m adro=20
   57 : __ct_16t0 typ=w32 val=16t0 bnd=m
   59 : __adr_uA typ=w32 bnd=m adro=21
   61 : __ct_24t0 typ=w32 val=24t0 bnd=m
   63 : __adr_uiA typ=w32 bnd=m adro=22
   65 : __ct_32t0 typ=w32 val=32t0 bnd=m
   67 : __adr_uB typ=w32 bnd=m adro=23
   69 : __ct_40t0 typ=w32 val=40t0 bnd=m
   71 : __adr_uiB typ=w32 bnd=m adro=24
   73 : __ct_48t0 typ=w32 val=48t0 bnd=m
   75 : __adr_signA typ=w32 bnd=m adro=25
   77 : __ct_52t0 typ=w32 val=52t0 bnd=m
   79 : __adr_signB typ=w32 bnd=m adro=26
   85 : __fch_a_low typ=w32 bnd=m
   88 : __fch_a_high typ=w32 bnd=m
   89 : __ct_0 typ=t20s_rp12 val=0f bnd=m
  100 : __fch_uA typ=w32 bnd=m
  103 : __fch_uA typ=w32 bnd=m
  109 : __fch_b_low typ=w32 bnd=m
  112 : __fch_b_high typ=w32 bnd=m
  124 : __fch_uB typ=w32 bnd=m
  127 : __fch_uB typ=w32 bnd=m
  136 : __fch_uiA_high typ=w32 bnd=m
  145 : __fch_uiA_low typ=w32 bnd=m
  148 : __fch_uiA_high typ=w32 bnd=m
  157 : __tmp typ=bool bnd=m
  164 : __fch_uiB_high typ=w32 bnd=m
  173 : __fch_uiB_low typ=w32 bnd=m
  176 : __fch_uiB_high typ=w32 bnd=m
  185 : __tmp typ=bool bnd=m
  186 : __tmp typ=bool bnd=m
  193 : __fch_uiA_high typ=w32 bnd=m
  200 : __tmp typ=w32 bnd=m
  205 : __fch_uiB_high typ=w32 bnd=m
  212 : __tmp typ=w32 bnd=m
  213 : __fch_signA typ=w32 bnd=m
  216 : __fch_signB typ=w32 bnd=m
  219 : __tmp typ=bool bnd=m
  220 : __fch_signA typ=w32 bnd=m
  221 : __fch_signA typ=bool bnd=m
  223 : __fch_uiA_low typ=w32 bnd=m
  226 : __fch_uiA_high typ=w32 bnd=m
  228 : __fch_uiB_low typ=w32 bnd=m
  231 : __fch_uiB_high typ=w32 bnd=m
  241 : __tmp typ=bool bnd=m
  243 : __fch_uiA_low typ=w32 bnd=m
  246 : __fch_uiA_high typ=w32 bnd=m
  248 : __fch_uiB_low typ=w32 bnd=m
  251 : __fch_uiB_high typ=w32 bnd=m
  252 : __tmp typ=bool bnd=m
  253 : __fch_signA typ=w32 bnd=m
  257 : __fch_uiA_low typ=w32 bnd=m
  260 : __fch_uiA_high typ=w32 bnd=m
  262 : __fch_uiB_low typ=w32 bnd=m
  265 : __fch_uiB_high typ=w32 bnd=m
  266 : __tmp typ=bool bnd=m
  267 : __tmp typ=w32 bnd=m
  268 : __tmp typ=w32 bnd=m
  271 : __tmp typ=bool bnd=m
  274 : __tmp typ=bool bnd=m
  275 : __tmp typ=bool bnd=m
  276 : __tmp typ=w32 bnd=m
  277 : __ct_56s0 typ=w32 val=56s0 bnd=m
  279 : __tmp typ=w32 bnd=m
  283 : __ct_1 typ=w32 val=1f bnd=m
  329 : __ct_28t0 typ=w32 val=28t0 bnd=m
  330 : __adr_uiA typ=w32 bnd=m adro=22
  331 : __ct_44t0 typ=w32 val=44t0 bnd=m
  332 : __adr_uiB typ=w32 bnd=m adro=24
  333 : __adr_uiB typ=w32 bnd=m adro=24
  334 : __adr_uiA typ=w32 bnd=m adro=22
  335 : __adr_uiB typ=w32 bnd=m adro=24
  336 : __adr_uiA typ=w32 bnd=m adro=22
  337 : __adr_uiB typ=w32 bnd=m adro=24
  338 : __adr_uiA typ=w32 bnd=m adro=22
  339 : __adr_uiB typ=w32 bnd=m adro=24
  340 : __adr_uiA typ=w32 bnd=m adro=22
  341 : __adr_uiB typ=w32 bnd=m adro=24
  342 : __ct_4t0 typ=w32 val=4t0 bnd=m
  343 : __adr_b typ=w32 bnd=m adro=19
  344 : __adr_b typ=w32 bnd=m adro=19
  345 : __ct_12t0 typ=w32 val=12t0 bnd=m
  346 : __adr_a typ=w32 bnd=m adro=20
  347 : __adr_a typ=w32 bnd=m adro=20
  348 : __ct_20t0 typ=w32 val=20t0 bnd=m
  349 : __adr_uA typ=w32 bnd=m adro=21
  350 : __adr_uA typ=w32 bnd=m adro=21
  351 : __adr_uiA typ=w32 bnd=m adro=22
  352 : __adr_uiA typ=w32 bnd=m adro=22
  353 : __ct_36t0 typ=w32 val=36t0 bnd=m
  354 : __adr_uB typ=w32 bnd=m adro=23
  355 : __adr_uB typ=w32 bnd=m adro=23
  356 : __adr_uiB typ=w32 bnd=m adro=24
  365 : __tmp_high typ=w32 bnd=m
  377 : __tmp_high typ=w32 bnd=m
  387 : __tmp typ=bool bnd=m
  398 : __tmp_high typ=w32 bnd=m
  408 : __tmp typ=bool bnd=m
  409 : __tmp typ=bool bnd=m
  419 : __tmp_high typ=w32 bnd=m
  425 : __tmp_high typ=w32 bnd=m
  438 : __tmp_high typ=w32 bnd=m
  461 : __apl_r_low typ=w32 bnd=m tref=__uint__
  493 : __tmp_low typ=w32 bnd=m
  495 : __tmp_high typ=w32 bnd=m
  503 : __tmp_high typ=w32 bnd=m
  519 : __rt typ=bool bnd=m tref=bool__
  524 : __tmp typ=bool bnd=m
  525 : __tmp typ=bool bnd=m
  535 : __ct_31 typ=w32 val=31f bnd=m
  537 : __ct_2146435072 typ=t20s_rp12 val=524032f bnd=m
  539 : __ct_1048575 typ=w32 val=1048575f bnd=m
  540 : __ct_2147483647 typ=w32 val=2147483647f bnd=m
  543 : __tmpd typ=w32 bnd=m
  544 : __tmp typ=bool bnd=m
  545 : __tmpd typ=w32 bnd=m
  546 : __tmp typ=bool bnd=m
  547 : __tmpd typ=w32 bnd=m
  548 : __tmp typ=bool bnd=m
  557 : __ct_4294967295 typ=w32 val=-1f bnd=m
  571 : __mskbool typ=w32 bnd=m
  577 : __true typ=bool val=1f bnd=m
  578 : __false typ=bool val=0f bnd=m
  579 : __either typ=bool bnd=m
  580 : __trgt typ=t13s_s2 val=0j bnd=m
  581 : __trgt typ=t13s_s2 val=0j bnd=m
  582 : __trgt typ=t13s_s2 val=0j bnd=m
  583 : __trgt typ=t13s_s2 val=0j bnd=m
  584 : __trgt typ=t13s_s2 val=0j bnd=m
  585 : __trgt typ=t21s_s2 val=0j bnd=m
  586 : __trgt typ=t13s_s2 val=0j bnd=m
  587 : __trgt typ=t13s_s2 val=0j bnd=m
  588 : __trgt typ=t13s_s2 val=0j bnd=m
  589 : __trgt typ=t13s_s2 val=0j bnd=m
  590 : __trgt typ=t21s_s2 val=0j bnd=m
  591 : __trgt typ=t13s_s2 val=0j bnd=m
  592 : __trgt typ=t13s_s2 val=0j bnd=m
  593 : __trgt typ=t21s_s2 val=0j bnd=m
  594 : __trgt typ=t13s_s2 val=0j bnd=m
  595 : __trgt typ=t21s_s2 val=0j bnd=m
  596 : __trgt typ=t13s_s2 val=0j bnd=m
  597 : __trgt typ=t13s_s2 val=0j bnd=m
  598 : __trgt typ=t21s_s2 val=0j bnd=m
]
Ff64_lt {
    #3 off=0
    (__M_DMw.4 var=5) st_def ()  <8>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__sp.17 var=18) source ()  <28>;
    (uA.20 var=21) source ()  <31>;
    (uB.22 var=23) source ()  <33>;
    (signA.24 var=25) source ()  <35>;
    (signB.25 var=26) source ()  <36>;
    (b_low.26 var=27) source ()  <37>;
    (b_high.27 var=28) source ()  <38>;
    (a_low.28 var=29) source ()  <39>;
    (a_high.29 var=30) source ()  <40>;
    (uiA_low.30 var=31) source ()  <41>;
    (uiA_high.31 var=32) source ()  <42>;
    (uiB_low.32 var=33) source ()  <43>;
    (uiB_high.33 var=34) source ()  <44>;
    (__la.35 var=36 stl=X off=1) inp ()  <46>;
    (__la.36 var=36) deassign (__la.35)  <47>;
    (__arg_a_low.40 var=40 stl=X off=11) inp ()  <51>;
    (__arg_a_low.41 var=40) deassign (__arg_a_low.40)  <52>;
    (__arg_a_high.44 var=41 stl=X off=12) inp ()  <55>;
    (__arg_a_high.45 var=41) deassign (__arg_a_high.44)  <56>;
    (__arg_b_low.49 var=43 stl=X off=13) inp ()  <60>;
    (__arg_b_low.50 var=43) deassign (__arg_b_low.49)  <61>;
    (__arg_b_high.53 var=44 stl=X off=14) inp ()  <64>;
    (__arg_b_high.54 var=44) deassign (__arg_b_high.53)  <65>;
    (__rd___sp.57 var=35) rd_res_reg (__R_SP.11 __sp.17)  <68>;
    (__ct_m56S0.58 var=45) const ()  <69>;
    (__tmp.60 var=47) __Pvoid__pl___Pvoid___sint (__rd___sp.57 __ct_m56S0.58)  <71>;
    (__R_SP.61 var=12 __sp.62 var=18) wr_res_reg (__tmp.60 __sp.17)  <72>;
    (__rd___sp.63 var=35) rd_res_reg (__R_SP.11 __sp.62)  <74>;
    (__ct_0t0.64 var=49) const ()  <75>;
    (__adr_b.66 var=51) __Pvoid__pl___Pvoid___sint (__rd___sp.63 __ct_0t0.64)  <77>;
    (__rd___sp.68 var=35) rd_res_reg (__R_SP.11 __sp.62)  <79>;
    (__rd___sp.73 var=35) rd_res_reg (__R_SP.11 __sp.62)  <84>;
    (__rd___sp.78 var=35) rd_res_reg (__R_SP.11 __sp.62)  <89>;
    (__rd___sp.83 var=35) rd_res_reg (__R_SP.11 __sp.62)  <94>;
    (__rd___sp.88 var=35) rd_res_reg (__R_SP.11 __sp.62)  <99>;
    (__rd___sp.93 var=35) rd_res_reg (__R_SP.11 __sp.62)  <104>;
    (__rd___sp.98 var=35) rd_res_reg (__R_SP.11 __sp.62)  <109>;
    (__M_DMw.104 var=5 b_low.105 var=27) store (__arg_b_low.50 __adr_b.66 b_low.26)  <115>;
    (__M_DMw.110 var=5 b_high.111 var=28) store (__arg_b_high.54 __adr_b.731 b_high.27)  <120>;
    (__ct_4t0.730 var=342) const ()  <823>;
    (__adr_b.731 var=343) __Pvoid__pl___Pvoid___sint (__rd___sp.63 __ct_4t0.730)  <825>;
    call {
        () chess_separator_scheduler ()  <121>;
    } #4 off=1
    #5 off=2
    (__ct_8t0.69 var=53) const ()  <80>;
    (__adr_a.71 var=55) __Pvoid__pl___Pvoid___sint (__rd___sp.68 __ct_8t0.69)  <82>;
    (__M_DMw.113 var=5 a_low.114 var=29) store (__arg_a_low.41 __adr_a.71 a_low.28)  <123>;
    (__M_DMw.119 var=5 a_high.120 var=30) store (__arg_a_high.45 __adr_a.734 a_high.29)  <128>;
    (__ct_12t0.733 var=345) const ()  <827>;
    (__adr_a.734 var=346) __Pvoid__pl___Pvoid___sint (__rd___sp.68 __ct_12t0.733)  <829>;
    call {
        () chess_separator_scheduler ()  <129>;
    } #6 off=3
    #7 off=4
    (__ct_16t0.74 var=57) const ()  <85>;
    (__adr_uA.76 var=59) __Pvoid__pl___Pvoid___sint (__rd___sp.73 __ct_16t0.74)  <87>;
    (__fch_a_low.122 var=85) load (__M_DMw.4 __adr_a.71 a_low.114)  <131>;
    (__fch_a_high.127 var=88) load (__M_DMw.4 __adr_a.735 a_high.120)  <136>;
    (__M_DMw.133 var=5 uA.134 var=21) store (__fch_a_low.122 __adr_uA.76 uA.20)  <142>;
    (__M_DMw.139 var=5 uA.140 var=21) store (__fch_a_high.127 __adr_uA.737 uA.134)  <147>;
    (__adr_a.735 var=347) __Pvoid__pl___Pvoid___sint (__rd___sp.68 __ct_12t0.733)  <830>;
    (__ct_20t0.736 var=348) const ()  <831>;
    (__adr_uA.737 var=349) __Pvoid__pl___Pvoid___sint (__rd___sp.73 __ct_20t0.736)  <833>;
    call {
        () chess_separator_scheduler ()  <148>;
    } #8 off=5
    #9 off=6
    (__ct_24t0.79 var=61) const ()  <90>;
    (__adr_uiA.81 var=63) __Pvoid__pl___Pvoid___sint (__rd___sp.78 __ct_24t0.79)  <92>;
    (__fch_uA.145 var=100) load (__M_DMw.4 __adr_uA.76 uA.140)  <153>;
    (__fch_uA.150 var=103) load (__M_DMw.4 __adr_uA.738 uA.140)  <158>;
    (__M_DMw.153 var=5 uiA_low.154 var=31) store (__fch_uA.145 __adr_uiA.81 uiA_low.30)  <161>;
    (__M_DMw.159 var=5 uiA_high.160 var=32) store (__fch_uA.150 __adr_uiA.739 uiA_high.31)  <166>;
    (__ct_28t0.717 var=329) const ()  <808>;
    (__adr_uA.738 var=350) __Pvoid__pl___Pvoid___sint (__rd___sp.73 __ct_20t0.736)  <834>;
    (__adr_uiA.739 var=351) __Pvoid__pl___Pvoid___sint (__rd___sp.78 __ct_28t0.717)  <835>;
    call {
        () chess_separator_scheduler ()  <167>;
    } #10 off=7
    #11 off=8
    (__ct_32t0.84 var=65) const ()  <95>;
    (__adr_uB.86 var=67) __Pvoid__pl___Pvoid___sint (__rd___sp.83 __ct_32t0.84)  <97>;
    (__fch_b_low.162 var=109) load (__M_DMw.4 __adr_b.66 b_low.105)  <169>;
    (__fch_b_high.167 var=112) load (__M_DMw.4 __adr_b.732 b_high.111)  <174>;
    (__M_DMw.173 var=5 uB.174 var=23) store (__fch_b_low.162 __adr_uB.86 uB.22)  <180>;
    (__M_DMw.179 var=5 uB.180 var=23) store (__fch_b_high.167 __adr_uB.742 uB.174)  <185>;
    (__adr_b.732 var=344) __Pvoid__pl___Pvoid___sint (__rd___sp.63 __ct_4t0.730)  <826>;
    (__ct_36t0.741 var=353) const ()  <837>;
    (__adr_uB.742 var=354) __Pvoid__pl___Pvoid___sint (__rd___sp.83 __ct_36t0.741)  <839>;
    call {
        () chess_separator_scheduler ()  <186>;
    } #12 off=9
    #13 off=10
    (__ct_40t0.89 var=69) const ()  <100>;
    (__adr_uiB.91 var=71) __Pvoid__pl___Pvoid___sint (__rd___sp.88 __ct_40t0.89)  <102>;
    (__fch_uB.185 var=124) load (__M_DMw.4 __adr_uB.86 uB.180)  <191>;
    (__fch_uB.190 var=127) load (__M_DMw.4 __adr_uB.743 uB.180)  <196>;
    (__M_DMw.193 var=5 uiB_low.194 var=33) store (__fch_uB.185 __adr_uiB.91 uiB_low.32)  <199>;
    (__M_DMw.199 var=5 uiB_high.200 var=34) store (__fch_uB.190 __adr_uiB.744 uiB_high.33)  <204>;
    (__ct_44t0.719 var=331) const ()  <811>;
    (__adr_uB.743 var=355) __Pvoid__pl___Pvoid___sint (__rd___sp.83 __ct_36t0.741)  <840>;
    (__adr_uiB.744 var=356) __Pvoid__pl___Pvoid___sint (__rd___sp.88 __ct_44t0.719)  <841>;
    call {
        () chess_separator_scheduler ()  <205>;
    } #14 off=11
    #434 off=12
    (__ct_0.129 var=89) const ()  <138>;
    (__fch_uiA_high.207 var=136) load (__M_DMw.4 __adr_uiA.740 uiA_high.160)  <212>;
    (__ct_1.675 var=283) const ()  <733>;
    (__adr_uiA.740 var=352) __Pvoid__pl___Pvoid___sint (__rd___sp.78 __ct_28t0.717)  <836>;
    (__tmp_high.765 var=377) __uint__ad___uint___uint (__tmp_high.1081 __ct_2146435072.1055)  <892>;
    (__ct_2146435072.1055 var=537) const ()  <1287>;
    (__ct_1048575.1057 var=539) const ()  <1291>;
    (__ct_4294967295.1080 var=557) const ()  <1349>;
    (__tmp_high.1081 var=365) __uint__er___uint___uint (__fch_uiA_high.207 __ct_4294967295.1080)  <1350>;
    (__tmp.1098 var=387) bool__ne___uint___uint (__tmp_high.765 __ct_0.129)  <1454>;
    (__trgt.1124 var=580) const ()  <1516>;
    () void_br_bool_t13s_s2 (__tmp.1098 __trgt.1124)  <1517>;
    (__either.1125 var=579) undefined ()  <1518>;
    if {
        {
            () if_expr (__either.1125)  <255>;
        } #17
        {
            (__false.1128 var=578) const ()  <1522>;
        } #19
        {
            (__fch_uiA_low.251 var=145) load (__M_DMw.4 __adr_uiA.81 uiA_low.154)  <257>;
            (__fch_uiA_high.256 var=148) load (__M_DMw.4 __adr_uiA.718 uiA_high.160)  <262>;
            (__adr_uiA.718 var=330) __Pvoid__pl___Pvoid___sint (__rd___sp.78 __ct_28t0.717)  <810>;
            (__tmp_high.795 var=398) __uint__ad___uint___uint (__fch_uiA_high.256 __ct_1048575.1057)  <930>;
            (__tmpd.1061 var=543) __uint__or___uint___uint (__tmp_high.795 __fch_uiA_low.251)  <1323>;
            (__tmp.1062 var=544) bool__ne___uint___uint (__tmpd.1061 __ct_0.129)  <1324>;
            (__trgt.1129 var=582) const ()  <1523>;
            () void_br_bool_t13s_s2 (__tmp.1062 __trgt.1129)  <1524>;
            (__either.1130 var=579) undefined ()  <1525>;
        } #173 off=13
        {
            (__tmp.266 var=157) merge (__false.1128 __either.1130)  <272>;
        } #20
    } #16
    if {
        {
            () if_expr (__tmp.266)  <307>;
        } #23
        {
            (__true.1158 var=577) const ()  <1566>;
        } #24
        {
            #442 off=14
            (__fch_uiB_high.309 var=164) load (__M_DMw.4 __adr_uiB.721 uiB_high.200)  <316>;
            (__adr_uiB.721 var=333) __Pvoid__pl___Pvoid___sint (__rd___sp.88 __ct_44t0.719)  <814>;
            (__tmp_high.838 var=425) __uint__ad___uint___uint (__tmp_high.1085 __ct_2146435072.1055)  <985>;
            (__tmp_high.1085 var=419) __uint__er___uint___uint (__fch_uiB_high.309 __ct_4294967295.1080)  <1357>;
            (__tmp.1099 var=387) bool__ne___uint___uint (__tmp_high.838 __ct_0.129)  <1455>;
            (__trgt.1126 var=581) const ()  <1519>;
            () void_br_bool_t13s_s2 (__tmp.1099 __trgt.1126)  <1520>;
            (__either.1127 var=579) undefined ()  <1521>;
            if {
                {
                    () if_expr (__either.1127)  <359>;
                } #28
                {
                    (__false.1159 var=578) const ()  <1567>;
                } #30
                {
                    (__fch_uiB_low.353 var=173) load (__M_DMw.4 __adr_uiB.91 uiB_low.194)  <361>;
                    (__fch_uiB_high.358 var=176) load (__M_DMw.4 __adr_uiB.720 uiB_high.200)  <366>;
                    (__adr_uiB.720 var=332) __Pvoid__pl___Pvoid___sint (__rd___sp.88 __ct_44t0.719)  <813>;
                    (__tmp_high.868 var=438) __uint__ad___uint___uint (__fch_uiB_high.358 __ct_1048575.1057)  <1023>;
                    (__tmpd.1063 var=545) __uint__or___uint___uint (__tmp_high.868 __fch_uiB_low.353)  <1325>;
                    (__tmp.1064 var=546) bool__ne___uint___uint (__tmpd.1063 __ct_0.129)  <1326>;
                    (__trgt.1160 var=596) const ()  <1568>;
                    () void_br_bool_t13s_s2 (__tmp.1064 __trgt.1160)  <1569>;
                    (__either.1161 var=579) undefined ()  <1570>;
                } #232 off=15
                {
                    (__tmp.368 var=185) merge (__false.1159 __either.1161)  <376>;
                } #31
            } #27
        } #25
        {
            (__tmp.369 var=186) merge (__true.1158 __tmp.368)  <377>;
        } #32
    } #22
    if {
        {
            () if_expr (__tmp.369)  <412>;
        } #35
        {
            (__false.1162 var=578) const ()  <1571>;
        } #38
        {
            #76 off=16
            (__ct_48t0.94 var=73) const ()  <105>;
            (__adr_signA.96 var=75) __Pvoid__pl___Pvoid___sint (__rd___sp.93 __ct_48t0.94)  <107>;
            (__fch_uiA_high.412 var=193) load (__M_DMw.4 __adr_uiA.728 uiA_high.160)  <422>;
            (__M_DMw.421 var=5 signA.422 var=25) store (__tmp.1071 __adr_signA.96 signA.24)  <431>;
            (__adr_uiA.728 var=340) __Pvoid__pl___Pvoid___sint (__rd___sp.78 __ct_28t0.717)  <821>;
            (__apl_r_low.907 var=461) __uint__rs___uint___sint (__fch_uiA_high.412 __ct_31.1053)  <1072>;
            (__ct_31.1053 var=535) const ()  <1283>;
            (__tmp.1071 var=200) __sint_sne0___sint (__apl_r_low.907)  <1334>;
            call {
                () chess_separator_scheduler ()  <432>;
            } #41 off=17
            #96 off=18
            (__ct_52t0.99 var=77) const ()  <110>;
            (__adr_signB.101 var=79) __Pvoid__pl___Pvoid___sint (__rd___sp.98 __ct_52t0.99)  <112>;
            (__fch_uiB_high.429 var=205) load (__M_DMw.4 __adr_uiB.729 uiB_high.200)  <439>;
            (__M_DMw.438 var=5 signB.439 var=26) store (__tmp.1077 __adr_signB.101 signB.25)  <448>;
            (__adr_uiB.729 var=341) __Pvoid__pl___Pvoid___sint (__rd___sp.88 __ct_44t0.719)  <822>;
            (__apl_r_low.948 var=461) __uint__rs___uint___sint (__fch_uiB_high.429 __ct_31.1053)  <1123>;
            (__tmp.1077 var=212) __sint_sne0___sint (__apl_r_low.948)  <1343>;
            call {
                () chess_separator_scheduler ()  <449>;
            } #43 off=19
            #44 off=20
            (__fch_signA.440 var=213) load (__M_DMw.4 __adr_signA.96 signA.422)  <450>;
            (__fch_signB.443 var=216) load (__M_DMw.4 __adr_signB.101 signB.439)  <453>;
            (__tmp.446 var=219) bool__ne___sint___sint (__fch_signA.440 __fch_signB.443)  <456>;
            (__trgt.1155 var=594) const ()  <1561>;
            () void_br_bool_t13s_s2 (__tmp.446 __trgt.1155)  <1562>;
            (__either.1156 var=579) undefined ()  <1563>;
            if {
                {
                    () if_expr (__either.1156)  <491>;
                } #46
                {
                    #110 off=32
                    (__fch_signA.481 var=220) load (__M_DMw.4 __adr_signA.96 signA.422)  <492>;
                    (__fch_signA.1100 var=221) bool__eq___sint___sint (__fch_signA.481 __ct_0.129)  <1456>;
                    (__trgt.1131 var=583) const ()  <1526>;
                    () void_br_bool_t13s_s2 (__fch_signA.1100 __trgt.1131)  <1527>;
                    (__either.1132 var=579) undefined ()  <1528>;
                    if {
                        {
                            () if_expr (__either.1132)  <528>;
                        } #50
                        {
                            (__false.1133 var=578) const ()  <1529>;
                        } #52
                        {
                            (__fch_uiA_low.518 var=223) load (__M_DMw.4 __adr_uiA.81 uiA_low.154)  <530>;
                            (__fch_uiA_high.523 var=226) load (__M_DMw.4 __adr_uiA.722 uiA_high.160)  <535>;
                            (__fch_uiB_low.526 var=228) load (__M_DMw.4 __adr_uiB.91 uiB_low.194)  <538>;
                            (__fch_uiB_high.531 var=231) load (__M_DMw.4 __adr_uiB.723 uiB_high.200)  <543>;
                            (__adr_uiA.722 var=334) __Pvoid__pl___Pvoid___sint (__rd___sp.78 __ct_28t0.717)  <815>;
                            (__adr_uiB.723 var=335) __Pvoid__pl___Pvoid___sint (__rd___sp.88 __ct_44t0.719)  <816>;
                            (__tmp_low.979 var=493) __uint__or___uint___uint (__fch_uiA_low.518 __fch_uiB_low.526)  <1162>;
                            (__tmp_high.980 var=495) __uint__or___uint___uint (__fch_uiA_high.523 __fch_uiB_high.531)  <1163>;
                            (__tmp_high.997 var=503) __uint__ad___uint___uint (__tmp_high.980 __ct_2147483647.1058)  <1184>;
                            (__ct_2147483647.1058 var=540) const ()  <1293>;
                            (__tmpd.1065 var=547) __uint__or___uint___uint (__tmp_high.997 __tmp_low.979)  <1327>;
                            (__tmp.1066 var=548) bool__ne___uint___uint (__tmpd.1065 __ct_0.129)  <1328>;
                            (__trgt.1134 var=584) const ()  <1530>;
                            () void_br_bool_t13s_s2 (__tmp.1066 __trgt.1134)  <1531>;
                            (__either.1135 var=579) undefined ()  <1532>;
                        } #350 off=33
                        {
                            (__tmp.542 var=241) merge (__false.1133 __either.1135)  <554>;
                        } #53
                    } #49
                    if {
                        {
                            () if_expr (__tmp.542)  <1466>;
                        } #466
                        {
                        } #467 off=35
                        {
                            (__trgt.1136 var=585) const ()  <1533>;
                            () void_j_t21s_s2 (__trgt.1136)  <1534>;
                        } #468 off=34
                        {
                            (__mskbool.1111 var=571) merge (__ct_1.675 __ct_0.129)  <1469>;
                        } #469
                    } #465
                } #47
                {
                    #373 off=21
                    (__fch_uiA_low.544 var=243) load (__M_DMw.4 __adr_uiA.81 uiA_low.154)  <556>;
                    (__fch_uiA_high.549 var=246) load (__M_DMw.4 __adr_uiA.726 uiA_high.160)  <561>;
                    (__fch_uiB_low.552 var=248) load (__M_DMw.4 __adr_uiB.91 uiB_low.194)  <564>;
                    (__fch_uiB_high.557 var=251) load (__M_DMw.4 __adr_uiB.727 uiB_high.200)  <569>;
                    (__adr_uiA.726 var=338) __Pvoid__pl___Pvoid___sint (__rd___sp.78 __ct_28t0.717)  <819>;
                    (__adr_uiB.727 var=339) __Pvoid__pl___Pvoid___sint (__rd___sp.88 __ct_44t0.719)  <820>;
                    (__tmp.1026 var=408) bool__ne___uint___uint (__fch_uiA_high.549 __fch_uiB_high.557)  <1221>;
                    (__trgt.1137 var=586) const ()  <1535>;
                    () void_br_bool_t13s_s2 (__tmp.1026 __trgt.1137)  <1536>;
                    (__either.1138 var=579) undefined ()  <1537>;
                    if {
                        {
                            () if_expr (__either.1138)  <1223>;
                        } #375
                        {
                            (__false.1148 var=578) const ()  <1551>;
                        } #376
                        {
                            (__tmp.1102 var=409) bool__eq___uint___uint (__fch_uiA_low.544 __fch_uiB_low.552)  <1458>;
                            (__trgt.1149 var=591) const ()  <1552>;
                            () void_br_bool_t13s_s2 (__tmp.1102 __trgt.1149)  <1553>;
                            (__either.1150 var=579) undefined ()  <1554>;
                        } #377 off=22
                        {
                            (__tmp.1103 var=252) merge (__false.1148 __either.1150)  <1459>;
                        } #378
                    } #374
                    if {
                        {
                            () if_expr (__tmp.1103)  <606>;
                        } #57
                        {
                            (__false.1151 var=578) const ()  <1555>;
                        } #59
                        {
                            #400 off=23
                            (__fch_signA.594 var=253) load (__M_DMw.4 __adr_signA.96 signA.422)  <607>;
                            (__fch_uiA_low.598 var=257) load (__M_DMw.4 __adr_uiA.81 uiA_low.154)  <611>;
                            (__fch_uiA_high.603 var=260) load (__M_DMw.4 __adr_uiA.724 uiA_high.160)  <616>;
                            (__fch_uiB_low.606 var=262) load (__M_DMw.4 __adr_uiB.91 uiB_low.194)  <619>;
                            (__fch_uiB_high.611 var=265) load (__M_DMw.4 __adr_uiB.725 uiB_high.200)  <624>;
                            (__adr_uiA.724 var=336) __Pvoid__pl___Pvoid___sint (__rd___sp.78 __ct_28t0.717)  <817>;
                            (__adr_uiB.725 var=337) __Pvoid__pl___Pvoid___sint (__rd___sp.88 __ct_44t0.719)  <818>;
                            (__tmp.1039 var=524) bool__lt___uint___uint (__fch_uiA_high.603 __fch_uiB_high.611)  <1238>;
                            (__trgt.1141 var=588) const ()  <1541>;
                            () void_br_bool_t13s_s2 (__tmp.1039 __trgt.1141)  <1542>;
                            (__either.1142 var=579) undefined ()  <1543>;
                            if {
                                {
                                    () if_expr (__either.1142)  <1241>;
                                } #402
                                {
                                    (__true.1143 var=577) const ()  <1544>;
                                } #403
                                {
                                    #405 off=24
                                    (__tmp.1101 var=525) bool__ne___uint___uint (__fch_uiA_high.603 __fch_uiB_high.611)  <1457>;
                                    (__trgt.1139 var=587) const ()  <1538>;
                                    () void_br_bool_t13s_s2 (__tmp.1101 __trgt.1139)  <1539>;
                                    (__either.1140 var=579) undefined ()  <1540>;
                                    if {
                                        {
                                            () if_expr (__either.1140)  <1243>;
                                        } #407
                                        {
                                            (__false.1144 var=578) const ()  <1545>;
                                        } #409
                                        {
                                            (__rt.1043 var=519) bool__lt___uint___uint (__fch_uiA_low.598 __fch_uiB_low.606)  <1244>;
                                            (__trgt.1145 var=589) const ()  <1546>;
                                            () void_br_bool_t13s_s2 (__rt.1043 __trgt.1145)  <1547>;
                                            (__either.1146 var=579) undefined ()  <1548>;
                                        } #408 off=25
                                        {
                                            (__rt.1044 var=519) merge (__false.1144 __either.1146)  <1245>;
                                        } #410
                                    } #406
                                } #404
                                {
                                    (__tmp.1045 var=266) merge (__true.1143 __rt.1044)  <1246>;
                                } #411
                            } #401
                            if {
                                {
                                    () if_expr (__tmp.1045)  <1393>;
                                } #453
                                {
                                } #454 off=27
                                {
                                    (__trgt.1147 var=590) const ()  <1549>;
                                    () void_j_t21s_s2 (__trgt.1147)  <1550>;
                                } #455 off=26
                                {
                                    (__tmp.1092 var=267) merge (__ct_1.675 __ct_0.129)  <1394>;
                                } #456
                            } #452
                            #448 off=28
                            (__tmp.615 var=268) __sint__er___sint___sint (__fch_signA.594 __tmp.1092)  <628>;
                            (__tmp.618 var=271) bool__ne___sint___sint (__tmp.615 __ct_0.129)  <631>;
                            (__trgt.1152 var=592) const ()  <1556>;
                            () void_br_bool_t13s_s2 (__tmp.618 __trgt.1152)  <1557>;
                            (__either.1153 var=579) undefined ()  <1558>;
                        } #58
                        {
                            (__tmp.621 var=274) merge (__false.1151 __either.1153)  <634>;
                        } #60
                    } #56
                    if {
                        {
                            () if_expr (__tmp.621)  <1475>;
                        } #476
                        {
                        } #477 off=30
                        {
                            (__trgt.1154 var=593) const ()  <1559>;
                            () void_j_t21s_s2 (__trgt.1154)  <1560>;
                        } #478 off=29
                        {
                            (__mskbool.1116 var=571) merge (__ct_1.675 __ct_0.129)  <1478>;
                        } #479
                    } #475
                    #492 off=31
                    (__trgt.1157 var=595) const ()  <1564>;
                    () void_j_t21s_s2 (__trgt.1157)  <1565>;
                } #54
                {
                    (__mskbool.1104 var=571) merge (__mskbool.1111 __mskbool.1116)  <1462>;
                } #61
            } #45
            #483 off=37
            (__tmp.1120 var=275) bool__ne___sint___sint (__mskbool.1104 __ct_0.129)  <1485>;
            (__trgt.1163 var=597) const ()  <1572>;
            () void_br_bool_t13s_s2 (__tmp.1120 __trgt.1163)  <1573>;
            (__either.1164 var=579) undefined ()  <1574>;
        } #39
        {
            (signA.623 var=25) merge (signA.24 signA.422)  <637>;
            (signB.624 var=26) merge (signB.25 signB.439)  <638>;
            (__rt.625 var=38) merge (__false.1162 __either.1164)  <639>;
        } #63
    } #34
    if {
        {
            () if_expr (__rt.625)  <757>;
        } #116
        {
        } #117 off=39
        {
            (__trgt.1165 var=598) const ()  <1575>;
            () void_j_t21s_s2 (__trgt.1165)  <1576>;
        } #118 off=38
        {
            (__tmp.691 var=276) merge (__ct_1.675 __ct_0.129)  <760>;
        } #119
    } #115
    #66 off=40 nxt=-2
    (__rd___sp.627 var=35) rd_res_reg (__R_SP.11 __sp.62)  <641>;
    (__ct_56s0.628 var=277) const ()  <642>;
    (__tmp.630 var=279) __Pvoid__pl___Pvoid___sint (__rd___sp.627 __ct_56s0.628)  <644>;
    (__R_SP.631 var=12 __sp.632 var=18) wr_res_reg (__tmp.630 __sp.62)  <645>;
    () void___rts_jr_w32 (__la.36)  <646>;
    (__tmp.633 var=276 stl=X off=10) assign (__tmp.691)  <647>;
    () out (__tmp.633)  <648>;
    () sink (__sp.632)  <658>;
    () sink (uA.140)  <661>;
    () sink (uB.180)  <663>;
    () sink (signA.623)  <665>;
    () sink (signB.624)  <666>;
    () sink (b_low.105)  <667>;
    () sink (b_high.111)  <668>;
    () sink (a_low.114)  <669>;
    () sink (a_high.120)  <670>;
    () sink (uiA_low.154)  <671>;
    () sink (uiA_high.160)  <672>;
    () sink (uiB_low.194)  <673>;
    () sink (uiB_high.200)  <674>;
} #0
0 : 'SoftFloat-3e/source/f64_lt.c';
----------
0 : (0,43:0,0);
3 : (0,43:26,0);
4 : (0,43:26,0);
5 : (0,43:13,0);
6 : (0,43:13,0);
7 : (0,51:9,9);
8 : (0,51:9,9);
9 : (0,52:8,10);
10 : (0,52:8,10);
11 : (0,53:9,11);
12 : (0,53:9,11);
13 : (0,54:8,12);
14 : (0,54:8,12);
16 : (0,55:50,12);
19 : (0,55:50,14);
22 : (0,55:86,16);
24 : (0,55:86,17);
25 : (0,55:130,18);
27 : (0,55:130,18);
30 : (0,55:130,20);
34 : (0,55:4,24);
38 : (0,59:8,26);
39 : (0,59:8,28);
41 : (0,61:10,30);
43 : (0,62:10,31);
44 : (0,64:15,31);
45 : (0,65:12,31);
47 : (0,65:20,32);
49 : (0,65:20,32);
52 : (0,65:20,34);
54 : (0,66:27,37);
56 : (0,66:27,37);
58 : (0,66:27,38);
59 : (0,66:27,39);
66 : (0,63:4,47);
76 : (0,61:4,29);
96 : (0,62:4,30);
110 : (0,65:14,32);
115 : (0,63:4,47);
116 : (0,63:4,47);
117 : (0,63:4,47);
118 : (0,63:4,47);
119 : (0,63:4,47);
173 : (0,55:50,13);
232 : (0,55:130,19);
350 : (0,65:20,33);
373 : (0,66:19,37);
374 : (0,66:19,37);
375 : (0,66:19,37);
376 : (0,66:19,37);
377 : (0,66:19,37);
378 : (0,66:19,37);
400 : (0,66:44,38);
401 : (0,66:44,38);
402 : (0,66:44,38);
403 : (0,66:44,38);
404 : (0,66:44,38);
405 : (0,66:44,38);
406 : (0,66:44,38);
407 : (0,66:44,38);
408 : (0,66:44,38);
409 : (0,66:44,38);
410 : (0,66:44,38);
411 : (0,66:44,38);
434 : (0,55:44,12);
442 : (0,55:124,18);
448 : (0,66:27,38);
452 : (0,66:37,38);
453 : (0,66:37,38);
454 : (0,66:37,38);
455 : (0,66:37,38);
456 : (0,66:37,38);
465 : (0,65:20,32);
466 : (0,65:20,32);
467 : (0,65:20,32);
468 : (0,65:20,32);
469 : (0,65:20,32);
475 : (0,66:27,37);
476 : (0,66:27,37);
477 : (0,66:27,37);
478 : (0,66:27,37);
479 : (0,66:27,37);
483 : (0,59:8,28);
----------
68 : (0,43:5,0);
69 : (0,43:5,0);
71 : (0,43:5,0);
72 : (0,43:5,0);
74 : (0,43:36,0);
75 : (0,43:36,0);
77 : (0,43:36,0);
79 : (0,43:23,0);
80 : (0,43:23,0);
82 : (0,43:23,0);
84 : (0,45:19,0);
85 : (0,45:19,0);
87 : (0,45:19,0);
89 : (0,46:18,0);
90 : (0,46:18,0);
92 : (0,46:18,0);
94 : (0,47:19,0);
95 : (0,47:19,0);
97 : (0,47:19,0);
99 : (0,48:18,0);
100 : (0,48:18,0);
102 : (0,48:18,0);
104 : (0,49:9,0);
105 : (0,49:9,0);
107 : (0,49:9,0);
109 : (0,49:16,0);
110 : (0,49:16,0);
112 : (0,49:16,0);
115 : (0,43:26,0);
120 : (0,43:26,0);
121 : (0,43:26,0);
123 : (0,43:13,0);
128 : (0,43:13,0);
129 : (0,43:13,0);
131 : (0,51:11,8);
136 : (0,51:11,8);
138 : (0,51:6,0);
142 : (0,51:6,8);
147 : (0,51:6,8);
148 : (0,51:9,9);
153 : (0,52:12,9);
158 : (0,52:12,9);
161 : (0,52:4,9);
166 : (0,52:4,9);
167 : (0,52:8,10);
169 : (0,53:11,10);
174 : (0,53:11,10);
180 : (0,53:6,10);
185 : (0,53:6,10);
186 : (0,53:9,11);
191 : (0,54:12,11);
196 : (0,54:12,11);
199 : (0,54:4,11);
204 : (0,54:4,11);
205 : (0,54:8,12);
212 : (0,55:14,12);
255 : (0,55:50,12);
257 : (0,55:55,13);
262 : (0,55:55,13);
272 : (0,55:50,15);
307 : (0,55:86,16);
316 : (0,55:94,18);
359 : (0,55:130,18);
361 : (0,55:135,19);
366 : (0,55:135,19);
376 : (0,55:130,21);
377 : (0,55:86,23);
412 : (0,55:4,24);
422 : (0,61:33,29);
431 : (0,61:4,29);
432 : (0,61:10,30);
439 : (0,62:33,30);
448 : (0,62:4,30);
449 : (0,62:10,31);
450 : (0,64:9,31);
453 : (0,64:18,31);
456 : (0,64:15,31);
491 : (0,65:12,31);
492 : (0,65:14,32);
528 : (0,65:20,32);
530 : (0,65:25,33);
535 : (0,65:25,33);
538 : (0,65:31,33);
543 : (0,65:31,33);
554 : (0,65:20,35);
556 : (0,66:15,37);
561 : (0,66:15,37);
564 : (0,66:22,37);
569 : (0,66:22,37);
606 : (0,66:27,37);
607 : (0,66:31,38);
611 : (0,66:40,38);
616 : (0,66:40,38);
619 : (0,66:46,38);
624 : (0,66:46,38);
628 : (0,66:37,38);
631 : (0,66:27,38);
634 : (0,66:27,40);
637 : (0,55:4,46);
638 : (0,55:4,46);
639 : (0,55:4,46);
641 : (0,63:4,0);
642 : (0,63:4,0);
644 : (0,63:4,0);
645 : (0,63:4,47);
646 : (0,63:4,47);
647 : (0,63:4,0);
733 : (0,61:4,0);
808 : (0,46:18,0);
811 : (0,48:18,0);
823 : (0,43:36,0);
827 : (0,43:23,0);
831 : (0,45:19,0);
837 : (0,47:19,0);
892 : (0,55:19,12);
930 : (0,55:60,13);
985 : (0,55:99,18);
1023 : (0,55:140,19);
1072 : (0,61:37,29);
1123 : (0,62:37,30);
1162 : (0,65:29,33);
1163 : (0,65:29,33);
1184 : (0,65:36,33);
1221 : (0,66:19,37);
1223 : (0,66:19,37);
1238 : (0,66:44,38);
1241 : (0,66:44,38);
1243 : (0,66:44,38);
1244 : (0,66:44,38);
1245 : (0,66:44,38);
1246 : (0,66:44,38);
1283 : (0,61:37,0);
1287 : (0,55:21,0);
1291 : (0,55:62,0);
1293 : (0,65:38,0);
1323 : (0,55:50,13);
1324 : (0,55:50,13);
1325 : (0,55:130,19);
1326 : (0,55:130,19);
1327 : (0,65:20,33);
1328 : (0,65:20,33);
1334 : (0,61:4,29);
1343 : (0,62:4,30);
1349 : (0,55:12,0);
1350 : (0,55:12,12);
1357 : (0,55:92,18);
1393 : (0,66:37,38);
1394 : (0,66:37,38);
1454 : (0,55:44,12);
1455 : (0,55:124,18);
1456 : (0,65:14,32);
1457 : (0,66:44,38);
1458 : (0,66:19,37);
1459 : (0,66:19,37);
1517 : (0,55:50,12);
1520 : (0,55:130,18);
1524 : (0,55:86,16);
1527 : (0,65:20,32);
1536 : (0,66:19,37);
1539 : (0,66:44,38);
1542 : (0,66:44,38);
1547 : (0,66:37,38);
1553 : (0,66:27,37);
1562 : (0,65:12,31);
1569 : (0,55:4,24);

