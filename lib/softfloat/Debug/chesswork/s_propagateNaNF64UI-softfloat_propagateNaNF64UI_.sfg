
// File generated by noodle version U-2022.12#33f3808fcb#221128, Fri Mar 22 18:46:57 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -ISoftFloat-3e/source/include -ISoftFloat-3e/source/riscv -ISoftFloat-3e/build/chess -I../runtime/include -DCHESS_CXX_ATTRIBUTES -DSOFTFLOAT_NO_EXCEPTIONS -DINLINE_LEVEL=5 -DSOFTFLOAT_FAST_DIV32TO16 -D__tct_patch__=0 +Oextc -itrv32p3_cnn_chess.h +Sal +Sca +Osps -Wflla +Opmsa +NOtcr +NOcse +NOifv +NOrle +NOrlt +wDebug/chesswork SoftFloat-3e/source/riscv/s_propagateNaNF64UI.c +Q0=+Sal,+Sca,+Osps,-Wflla,+Opmsa,+NOtcr,+NOcse,+NOifv,+NOrle,+NOrlt +Q1=+Opmsa,+NOrlt trv32p3_cnn


/***
!!  uint_fast64_t softfloat_propagateNaNF64UI(uint_fast64_t, uint_fast64_t)
Fsoftfloat_propagateNaNF64UI : user_defined, called {
    fnm : "softfloat_propagateNaNF64UI" 'uint_fast64_t softfloat_propagateNaNF64UI(uint_fast64_t, uint_fast64_t)';
    arg : ( w32:i w32:r w32:r w32:i w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] X[14] X[15] );
    frm : ( l=16 );
    llv : 0 0 0 0 0 ;
}
****
***/

[
    0 : softfloat_propagateNaNF64UI typ=u08 bnd=e stl=PMb
    5 : __M_DMw typ=w32 bnd=d stl=DMw
   12 : __R_SP typ=w32 bnd=d stl=SP
   18 : __sp typ=w32 bnd=b stl=SP
   19 : uiB typ=w08 val=0t0 bnd=a sz=8 algn=4 stl=DMb tref=uint_fast64_t_DMb
   20 : uiA typ=w08 val=8t0 bnd=a sz=8 algn=4 stl=DMb tref=uint_fast64_t_DMb
   21 : uiB_low typ=w08 bnd=B stl=DMb
   22 : uiB_high typ=w08 bnd=B stl=DMb
   23 : uiA_low typ=w08 bnd=B stl=DMb
   24 : uiA_high typ=w08 bnd=B stl=DMb
   25 : __rd___sp typ=w32 bnd=m
   26 : __la typ=w32 bnd=p tref=w32__
   28 : __rt_low typ=w32 bnd=m tref=__uint__
   29 : __rt_high typ=w32 bnd=m tref=__uint__
   31 : __arg_uiA_low typ=w32 bnd=m tref=__uint__
   32 : __arg_uiA_high typ=w32 bnd=m tref=__uint__
   34 : __arg_uiB_low typ=w32 bnd=m tref=__uint__
   35 : __arg_uiB_high typ=w32 bnd=m tref=__uint__
   36 : __ct_m16S0 typ=w32 val=-16S0 bnd=m
   38 : __tmp typ=w32 bnd=m
   40 : __ct_0t0 typ=w32 val=0t0 bnd=m
   42 : __adr_uiB typ=w32 bnd=m adro=19
   44 : __ct_8t0 typ=w32 val=8t0 bnd=m
   46 : __adr_uiA typ=w32 bnd=m adro=20
   65 : __ct_16s0 typ=w32 val=16s0 bnd=m
   67 : __tmp typ=w32 bnd=m
   73 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   74 : __ct_2146959360 typ=t20s_rp12 val=524160f bnd=m
   79 : __ct_4t0 typ=w32 val=4t0 bnd=m
   80 : __adr_uiB typ=w32 bnd=m adro=19
   81 : __ct_12t0 typ=w32 val=12t0 bnd=m
   82 : __adr_uiA typ=w32 bnd=m adro=20
]
Fsoftfloat_propagateNaNF64UI {
    #3 off=0
    (__R_SP.11 var=12) st_def ()  <22>;
    (__sp.17 var=18) source ()  <28>;
    (uiB_low.20 var=21) source ()  <31>;
    (uiB_high.21 var=22) source ()  <32>;
    (uiA_low.22 var=23) source ()  <33>;
    (uiA_high.23 var=24) source ()  <34>;
    (__la.25 var=26 stl=X off=1) inp ()  <36>;
    (__la.26 var=26) deassign (__la.25)  <37>;
    (__arg_uiA_low.34 var=31 stl=X off=12) inp ()  <45>;
    (__arg_uiA_low.35 var=31) deassign (__arg_uiA_low.34)  <46>;
    (__arg_uiA_high.38 var=32 stl=X off=13) inp ()  <49>;
    (__arg_uiA_high.39 var=32) deassign (__arg_uiA_high.38)  <50>;
    (__arg_uiB_low.43 var=34 stl=X off=14) inp ()  <54>;
    (__arg_uiB_low.44 var=34) deassign (__arg_uiB_low.43)  <55>;
    (__arg_uiB_high.47 var=35 stl=X off=15) inp ()  <58>;
    (__arg_uiB_high.48 var=35) deassign (__arg_uiB_high.47)  <59>;
    (__rd___sp.51 var=25) rd_res_reg (__R_SP.11 __sp.17)  <62>;
    (__ct_m16S0.52 var=36) const ()  <63>;
    (__tmp.54 var=38) __Pvoid__pl___Pvoid___sint (__rd___sp.51 __ct_m16S0.52)  <65>;
    (__R_SP.55 var=12 __sp.56 var=18) wr_res_reg (__tmp.54 __sp.17)  <66>;
    (__rd___sp.57 var=25) rd_res_reg (__R_SP.11 __sp.56)  <68>;
    (__ct_0t0.58 var=40) const ()  <69>;
    (__adr_uiB.60 var=42) __Pvoid__pl___Pvoid___sint (__rd___sp.57 __ct_0t0.58)  <71>;
    (__rd___sp.62 var=25) rd_res_reg (__R_SP.11 __sp.56)  <73>;
    (__M_DMw.68 var=5 uiB_low.69 var=21) store (__arg_uiB_low.44 __adr_uiB.60 uiB_low.20)  <79>;
    (__M_DMw.74 var=5 uiB_high.75 var=22) store (__arg_uiB_high.48 __adr_uiB.147 uiB_high.21)  <84>;
    (__ct_4t0.146 var=79) const ()  <191>;
    (__adr_uiB.147 var=80) __Pvoid__pl___Pvoid___sint (__rd___sp.57 __ct_4t0.146)  <193>;
    call {
        () chess_separator_scheduler ()  <85>;
    } #4 off=1
    #5 off=2
    (__ct_8t0.63 var=44) const ()  <74>;
    (__adr_uiA.65 var=46) __Pvoid__pl___Pvoid___sint (__rd___sp.62 __ct_8t0.63)  <76>;
    (__M_DMw.77 var=5 uiA_low.78 var=23) store (__arg_uiA_low.35 __adr_uiA.65 uiA_low.22)  <87>;
    (__M_DMw.83 var=5 uiA_high.84 var=24) store (__arg_uiA_high.39 __adr_uiA.149 uiA_high.23)  <92>;
    (__ct_12t0.148 var=81) const ()  <194>;
    (__adr_uiA.149 var=82) __Pvoid__pl___Pvoid___sint (__rd___sp.62 __ct_12t0.148)  <196>;
    call {
        () chess_separator_scheduler ()  <113>;
    } #10 off=3
    #13 off=4 nxt=-2
    (__rd___sp.105 var=25) rd_res_reg (__R_SP.11 __sp.56)  <116>;
    (__ct_16s0.106 var=65) const ()  <117>;
    (__tmp.108 var=67) __Pvoid__pl___Pvoid___sint (__rd___sp.105 __ct_16s0.106)  <119>;
    (__R_SP.109 var=12 __sp.110 var=18) wr_res_reg (__tmp.108 __sp.56)  <120>;
    () void___rts_jr_w32 (__la.26)  <121>;
    (__rt_low.112 var=28 stl=X off=10) assign (__ct_0.142)  <123>;
    () out (__rt_low.112)  <124>;
    (__rt_high.114 var=29 stl=X off=11) assign (__ct_2146959360.143)  <126>;
    () out (__rt_high.114)  <127>;
    () sink (__sp.110)  <137>;
    () sink (uiB_low.69)  <140>;
    () sink (uiB_high.75)  <141>;
    () sink (uiA_low.78)  <142>;
    () sink (uiA_high.84)  <143>;
    (__ct_0.142 var=73) const ()  <185>;
    (__ct_2146959360.143 var=74) const ()  <187>;
} #0
0 : 'SoftFloat-3e/source/riscv/s_propagateNaNF64UI.c';
----------
0 : (0,48:0,0);
3 : (0,49:49,0);
4 : (0,49:49,0);
5 : (0,49:30,0);
10 : (0,53:4,5);
13 : (0,60:4,5);
----------
62 : (0,49:1,0);
63 : (0,49:1,0);
65 : (0,49:1,0);
66 : (0,49:1,0);
68 : (0,49:63,0);
69 : (0,49:63,0);
71 : (0,49:63,0);
73 : (0,49:44,0);
74 : (0,49:44,0);
76 : (0,49:44,0);
79 : (0,49:49,0);
84 : (0,49:49,0);
85 : (0,49:49,0);
87 : (0,49:30,0);
92 : (0,49:30,0);
113 : (0,53:4,5);
116 : (0,60:4,0);
117 : (0,60:4,0);
119 : (0,60:4,0);
120 : (0,60:4,5);
121 : (0,60:4,5);
123 : (0,60:11,0);
126 : (0,60:11,0);
185 : (0,60:11,0);
187 : (0,60:11,0);
191 : (0,49:63,0);
194 : (0,49:44,0);

