
// File generated by noodle version U-2022.12#33f3808fcb#221128, Thu Feb 29 16:36:18 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -ISoftFloat-3e/source/include -ISoftFloat-3e/source/riscv -ISoftFloat-3e/build/chess -I../runtime/include -DCHESS_CXX_ATTRIBUTES -DSOFTFLOAT_NO_EXCEPTIONS -DINLINE_LEVEL=5 -DSOFTFLOAT_FAST_DIV32TO16 -D__tct_patch__=0 +Oextc -itrv32p3_cnn_chess.h +Opmsa +NOrlt +wRelease/chesswork SoftFloat-3e/source/s_countLeadingZeros64.c +Q0=+Sal,+Sca,+Osps,-Wflla,+Opmsa,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+Opmsa,+NOrlt trv32p3_cnn


/***
!!  uint_fast8_t softfloat_countLeadingZeros64(uint64_t)
Fsoftfloat_countLeadingZeros64 : user_defined, called {
    fnm : "softfloat_countLeadingZeros64" 'uint_fast8_t softfloat_countLeadingZeros64(uint64_t)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
    frm : ( );
}
****
***/

[
    0 : softfloat_countLeadingZeros64 typ=u08 bnd=e stl=PMb
    3 : __M_DMb typ=w08 bnd=d stl=DMb
   12 : __R_SP typ=w32 bnd=d stl=SP
   18 : __sp typ=w32 bnd=b stl=SP
   19 : softfloat_countLeadingZeros8 typ=w08 bnd=e sz=256 algn=1 stl=DMb tref=__A256__uchar_DMb
   21 : __rd___sp typ=w32 bnd=m
   23 : __ptr_softfloat_countLeadingZeros8 typ=w32 val=0a bnd=m adro=19
   24 : __la typ=w32 bnd=p tref=w32__
   25 : __rt typ=w32 bnd=p tref=uint_fast8_t__
   27 : a_low typ=w32 bnd=m tref=__uint__
   28 : a_high typ=w32 bnd=m tref=__uint__
   29 : __ct_0S0 typ=w32 val=0S0 bnd=m
   31 : __tmp typ=w32 bnd=m
   32 : count typ=w32 bnd=m tref=uint_fast8_t__
   33 : a32 typ=w32 bnd=m tref=uint32_t__
   34 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   42 : __tmp typ=bool bnd=m
   44 : __ct_32 typ=w32 val=32f bnd=m
   47 : __ct_65536 typ=t20s_rp12 val=16f bnd=m
   49 : __tmp typ=bool bnd=m
   50 : __ct_16 typ=w32 val=16f bnd=m
   56 : __ct_16777216 typ=t20s_rp12 val=4096f bnd=m
   58 : __tmp typ=bool bnd=m
   59 : __ct_8 typ=w32 val=8f bnd=m
   65 : __ct_24 typ=w32 val=24f bnd=m
   67 : __tmp typ=w32 bnd=m
   69 : __tmp typ=w32 bnd=m
   70 : __fch_softfloat_countLeadingZeros8 typ=__uchar bnd=m
   74 : __ct_0s0 typ=w32 val=0s0 bnd=m
   76 : __tmp typ=w32 bnd=m
  127 : __either typ=bool bnd=m
  128 : __trgt typ=t13s_s2 val=0j bnd=m
  129 : __trgt typ=t21s_s2 val=0j bnd=m
  130 : __trgt typ=t13s_s2 val=0j bnd=m
  131 : __trgt typ=t21s_s2 val=0j bnd=m
  132 : __trgt typ=t13s_s2 val=0j bnd=m
  133 : __trgt typ=t21s_s2 val=0j bnd=m
]
Fsoftfloat_countLeadingZeros64 {
    #47 off=0
    (__M_DMb.2 var=3) st_def ()  <4>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__sp.17 var=18) source ()  <28>;
    (softfloat_countLeadingZeros8.18 var=19) source ()  <29>;
    (__la.23 var=24 stl=X off=1) inp ()  <34>;
    (__la.24 var=24) deassign (__la.23)  <35>;
    (a_low.28 var=27 stl=X off=11) inp ()  <39>;
    (a_low.29 var=27) deassign (a_low.28)  <40>;
    (a_high.32 var=28 stl=X off=12) inp ()  <43>;
    (a_high.33 var=28) deassign (a_high.32)  <44>;
    (__rd___sp.36 var=21) rd_res_reg (__R_SP.11 __sp.17)  <47>;
    (__ct_0S0.37 var=29) const ()  <48>;
    (__tmp.39 var=31) __Pvoid__pl___Pvoid___sint (__rd___sp.36 __ct_0S0.37)  <50>;
    (__R_SP.40 var=12 __sp.41 var=18) wr_res_reg (__tmp.39 __sp.17)  <51>;
    (__ct_0.46 var=34) const ()  <57>;
    (__tmp.212 var=42) bool__ne___uint___uint (a_high.33 __ct_0.46)  <365>;
    (__trgt.217 var=128) const ()  <382>;
    () void_br_bool_t13s_s2 (__tmp.212 __trgt.217)  <383>;
    (__either.218 var=127) undefined ()  <384>;
    if {
        {
            () if_expr (__either.218)  <81>;
        } #5
        {
        } #7 off=2
        {
            (__ct_32.70 var=44) const ()  <82>;
            (__trgt.219 var=129) const ()  <385>;
            () void_j_t21s_s2 (__trgt.219)  <386>;
        } #6 off=1
        {
            (count.73 var=32) merge (__ct_0.46 __ct_32.70)  <85>;
            (a32.74 var=33) merge (a_high.33 a_low.29)  <86>;
        } #8
    } #4
    #9 off=3
    (__ct_65536.75 var=47) const ()  <87>;
    (__tmp.213 var=49) bool__ge___uint___uint (a32.74 __ct_65536.75)  <366>;
    (__trgt.220 var=130) const ()  <387>;
    () void_br_bool_t13s_s2 (__tmp.213 __trgt.220)  <388>;
    (__either.221 var=127) undefined ()  <389>;
    if {
        {
            () if_expr (__either.221)  <104>;
        } #11
        {
        } #13 off=5
        {
            (__ct_16.92 var=50) const ()  <105>;
            (count.94 var=32) __uint__pl___uint___uint (count.73 __ct_16.92)  <107>;
            (a32.97 var=33) __uint__ls___uint___sint (a32.74 __ct_16.92)  <110>;
            (__trgt.222 var=131) const ()  <390>;
            () void_j_t21s_s2 (__trgt.222)  <391>;
        } #12 off=4
        {
            (count.98 var=32) merge (count.73 count.94)  <111>;
            (a32.99 var=33) merge (a32.74 a32.97)  <112>;
        } #14
    } #10
    #15 off=6
    (__ct_16777216.100 var=56) const ()  <113>;
    (__tmp.214 var=58) bool__ge___uint___uint (a32.99 __ct_16777216.100)  <367>;
    (__trgt.223 var=132) const ()  <392>;
    () void_br_bool_t13s_s2 (__tmp.214 __trgt.223)  <393>;
    (__either.224 var=127) undefined ()  <394>;
    if {
        {
            () if_expr (__either.224)  <130>;
        } #17
        {
        } #19 off=8
        {
            (__ct_8.117 var=59) const ()  <131>;
            (count.119 var=32) __uint__pl___uint___uint (count.98 __ct_8.117)  <133>;
            (a32.122 var=33) __uint__ls___uint___sint (a32.99 __ct_8.117)  <136>;
            (__trgt.225 var=133) const ()  <395>;
            () void_j_t21s_s2 (__trgt.225)  <396>;
        } #18 off=7
        {
            (count.123 var=32) merge (count.98 count.119)  <137>;
            (a32.124 var=33) merge (a32.99 a32.122)  <138>;
        } #20
    } #16
    #23 off=9 nxt=-2
    (__ptr_softfloat_countLeadingZeros8.21 var=23) const ()  <32>;
    (__ct_24.125 var=65) const ()  <139>;
    (__tmp.127 var=67) __uint__rs___uint___sint (a32.124 __ct_24.125)  <141>;
    (__tmp.129 var=69) __Pvoid__pl___Pvoid___sint (__ptr_softfloat_countLeadingZeros8.21 __tmp.127)  <143>;
    (__fch_softfloat_countLeadingZeros8.130 var=70) load (__M_DMb.2 __tmp.129 softfloat_countLeadingZeros8.18)  <144>;
    (__rt.133 var=25) __uint__pl___uint___uint (count.123 __fch_softfloat_countLeadingZeros8.130)  <147>;
    (__rd___sp.134 var=21) rd_res_reg (__R_SP.11 __sp.41)  <148>;
    (__ct_0s0.135 var=74) const ()  <149>;
    (__tmp.137 var=76) __Pvoid__pl___Pvoid___sint (__rd___sp.134 __ct_0s0.135)  <151>;
    (__R_SP.138 var=12 __sp.139 var=18) wr_res_reg (__tmp.137 __sp.41)  <152>;
    () void___rts_jr_w32 (__la.24)  <153>;
    (__rt.140 var=25 stl=X off=10) assign (__rt.133)  <154>;
    () out (__rt.140)  <155>;
    () sink (__sp.139)  <163>;
} #0
0 : 'SoftFloat-3e/source/s_countLeadingZeros64.c';
----------
0 : (0,45:0,0);
4 : (0,52:4,5);
6 : (0,52:17,6);
7 : (0,52:4,10);
9 : (0,59:13,13);
10 : (0,59:4,13);
12 : (0,59:25,14);
13 : (0,59:4,18);
15 : (0,63:13,21);
16 : (0,63:4,21);
18 : (0,63:27,22);
19 : (0,63:4,26);
23 : (0,68:4,30);
47 : (0,52:9,5);
----------
32 : (0,67:13,0);
47 : (0,45:13,0);
48 : (0,45:13,0);
50 : (0,45:13,0);
51 : (0,45:13,0);
57 : (0,50:10,0);
81 : (0,52:4,5);
82 : (0,53:14,0);
85 : (0,52:4,12);
86 : (0,52:4,12);
87 : (0,59:13,0);
104 : (0,59:4,13);
105 : (0,60:14,0);
107 : (0,60:14,14);
110 : (0,61:12,15);
111 : (0,59:4,20);
112 : (0,59:4,20);
113 : (0,63:13,0);
130 : (0,63:4,21);
131 : (0,64:14,0);
133 : (0,64:14,22);
136 : (0,65:12,23);
137 : (0,63:4,28);
138 : (0,63:4,28);
139 : (0,67:47,0);
141 : (0,67:45,29);
143 : (0,67:41,29);
144 : (0,67:41,29);
147 : (0,67:10,29);
148 : (0,68:4,0);
149 : (0,68:4,0);
151 : (0,68:4,0);
152 : (0,68:4,30);
153 : (0,68:4,30);
154 : (0,68:11,0);
365 : (0,52:9,5);
366 : (0,59:13,13);
367 : (0,63:13,21);
383 : (0,52:4,5);
388 : (0,59:4,13);
393 : (0,63:4,21);

