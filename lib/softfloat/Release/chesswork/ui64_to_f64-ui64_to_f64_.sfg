
// File generated by noodle version U-2022.12#33f3808fcb#221128, Wed Feb  7 12:34:14 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -ISoftFloat-3e/source/include -ISoftFloat-3e/source/riscv -ISoftFloat-3e/build/chess -I../runtime/include -DCHESS_CXX_ATTRIBUTES -DSOFTFLOAT_NO_EXCEPTIONS -DINLINE_LEVEL=5 -DSOFTFLOAT_FAST_DIV32TO16 -D__tct_patch__=0 +Oextc -itrv32p3_cnn_chess.h +Opmsa +NOrlt +wRelease/chesswork SoftFloat-3e/source/ui64_to_f64.c +Q0=+Sal,+Sca,+Osps,-Wflla,+Opmsa,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+Opmsa,+NOrlt trv32p3_cnn


/***
!!  float64_t ui64_to_f64(uint64_t)
Fui64_to_f64 : user_defined, called {
    fnm : "ui64_to_f64" 'float64_t ui64_to_f64(unsigned long long)';
    arg : ( w32:i w32:r w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] );
    frm : ( );
    llv : 0 0 0 0 0 ;
}
****
!!  float64_t softfloat_roundPackToF64(bool, int_fast16_t, uint_fast64_t)
Fsoftfloat_roundPackToF64 : user_defined, called {
    fnm : "softfloat_roundPackToF64" 'float64_t softfloat_roundPackToF64(bool, int_fast16_t, uint_fast64_t)';
    arg : ( w32:i w32:r w32:r w32:i w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] X[14] X[15] );
    llv : 0 0 0 0 0 ;
}
!!  float64_t softfloat_normRoundPackToF64(bool, int_fast16_t, uint_fast64_t)
Fsoftfloat_normRoundPackToF64 : user_defined, called {
    fnm : "softfloat_normRoundPackToF64" 'float64_t softfloat_normRoundPackToF64(bool, int_fast16_t, uint_fast64_t)';
    arg : ( w32:i w32:r w32:r w32:i w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] X[14] X[15] );
    llv : 0 0 0 0 0 ;
}
***/

[
    0 : ui64_to_f64 typ=u08 bnd=e stl=PMb
   12 : __R_SP typ=w32 bnd=d stl=SP
   18 : __sp typ=w32 bnd=b stl=SP
   20 : __rd___sp typ=w32 bnd=m
   21 : __la typ=w32 bnd=p tref=w32__
   23 : __rt_low typ=w32 bnd=m tref=__uint__
   24 : __rt_high typ=w32 bnd=m tref=__uint__
   26 : a_low typ=w32 bnd=m tref=__uint__
   27 : a_high typ=w32 bnd=m tref=__uint__
   28 : __ct_m8S0 typ=w32 val=0S0 bnd=m
   30 : __tmp typ=w32 bnd=m
   41 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   64 : __tmp typ=w32 bnd=m
   65 : __ct_1085 typ=w32 val=1085f bnd=m
   66 : __ct typ=w32 bnd=m
   67 : __ct_1 typ=w32 val=1f bnd=m
   70 : __tmp_low typ=w32 bnd=m tref=__uint__
   71 : __tmp_high typ=w32 bnd=m tref=__uint__
   74 : softfloat_roundPackToF64 typ=t21s_s2 val=0r bnd=m
   77 : __tmp typ=w32 bnd=m
   78 : __tmp typ=w32 bnd=m
   81 : __tmp typ=w32 bnd=m
   82 : __ct_1084 typ=w32 val=1084f bnd=m
   83 : __ct typ=w32 bnd=m
   86 : softfloat_normRoundPackToF64 typ=t21s_s2 val=0r bnd=m
   89 : __tmp typ=w32 bnd=m
   90 : __tmp typ=w32 bnd=m
   91 : __ct_8s0 typ=w32 val=0s0 bnd=m
   93 : __tmp typ=w32 bnd=m
  118 : __tmp_high typ=w32 bnd=m
  128 : __tmp typ=bool bnd=m
  166 : __ct_2147483648 typ=t20s_rp12 val=-524288f bnd=m
  169 : __tmpd typ=w32 bnd=m
  170 : __tmp typ=bool bnd=m
  177 : __apl_carries typ=w32 bnd=m tref=__uint__
  182 : __tmp typ=w32 bnd=m
  183 : __apl_r_low typ=w32 bnd=m tref=__uint__
  184 : __apl_r_high typ=w32 bnd=m tref=__uint__
  193 : __tmp_low typ=w32 bnd=m
  212 : __tmp_low typ=w32 bnd=m
  214 : __tmp_high typ=w32 bnd=m
  223 : __ct_31 typ=w32 val=31f bnd=m
  230 : __tmp typ=w32 bnd=m
  245 : __tmp_high typ=w32 bnd=m
  256 : __either typ=bool bnd=m
  257 : __trgt typ=t13s_s2 val=0j bnd=m
  258 : __trgt typ=t13s_s2 val=0j bnd=m
]
Fui64_to_f64 {
    #85 off=0
    (__R_SP.11 var=12) st_def ()  <22>;
    (__sp.17 var=18) source ()  <28>;
    (__la.20 var=21 stl=X off=1) inp ()  <31>;
    (__la.21 var=21) deassign (__la.20)  <32>;
    (a_low.29 var=26 stl=X off=12) inp ()  <40>;
    (a_low.30 var=26) deassign (a_low.29)  <41>;
    (a_high.33 var=27 stl=X off=13) inp ()  <44>;
    (a_high.34 var=27) deassign (a_high.33)  <45>;
    (__rd___sp.37 var=20) rd_res_reg (__R_SP.11 __sp.17)  <48>;
    (__ct_m8S0.38 var=28) const ()  <49>;
    (__tmp.40 var=30) __Pvoid__pl___Pvoid___sint (__rd___sp.37 __ct_m8S0.38)  <51>;
    (__R_SP.41 var=12 __sp.42 var=18) wr_res_reg (__tmp.40 __sp.17)  <52>;
    (__rd___sp.43 var=20) rd_res_reg (__R_SP.11 __sp.42)  <54>;
    (__ct_0.65 var=41) const ()  <77>;
    (__ct_8s0.162 var=91) const ()  <171>;
    (__tmpd.279 var=169) __uint__or___uint___uint (a_high.34 a_low.30)  <395>;
    (__tmp.280 var=170) bool__eq___uint___uint (__tmpd.279 __ct_0.65)  <396>;
    (__trgt.408 var=258) const ()  <657>;
    () void_br_bool_t13s_s2 (__tmp.280 __trgt.408)  <658>;
    (__either.409 var=256) undefined ()  <659>;
    if {
        {
            () if_expr (__either.409)  <74>;
        } #5
        {
        } #6 off=8
        {
            #66 off=1
            (__tmp_high.222 var=118) __uint__ad___uint___uint (a_high.34 __ct_2147483648.276)  <293>;
            (__tmp.238 var=128) bool__ne___uint___uint (__tmp_high.222 __ct_0.65)  <313>;
            (__ct_2147483648.276 var=166) const ()  <377>;
            (__trgt.406 var=257) const ()  <654>;
            () void_br_bool_t13s_s2 (__tmp.238 __trgt.406)  <655>;
            (__either.407 var=256) undefined ()  <656>;
            if {
                {
                    () if_expr (__either.407)  <115>;
                } #10
                {
                    #188 off=5
                    (__ct_1085.109 var=65) const ()  <120>;
                    (__ct_1.112 var=67) const ()  <123>;
                    (softfloat_roundPackToF64.121 var=74) const ()  <132>;
                    (__apl_carries.291 var=177) __uint__ls___uint___sint (a_high.34 __ct_31.359)  <410>;
                    (__tmp.292 var=182) __uint__rs___uint___sint (a_low.30 __ct_1.112)  <411>;
                    (__apl_r_low.293 var=183) __uint__or___uint___uint (__tmp.292 __apl_carries.291)  <412>;
                    (__apl_r_high.294 var=184) __uint__rs___uint___sint (a_high.34 __ct_1.112)  <413>;
                    (__tmp_low.313 var=193) __uint__ad___uint___uint (a_low.30 __ct_1.112)  <436>;
                    (__tmp_low.343 var=212) __uint__or___uint___uint (__apl_r_low.293 __tmp.374)  <474>;
                    (__tmp_high.344 var=214) __uint__or___uint___uint (__apl_r_high.294 __tmp_high.378)  <475>;
                    (__ct_31.359 var=223) const ()  <509>;
                    (__tmp.374 var=230) __sint_sne0___sint (__tmp_low.313)  <557>;
                    (__tmp_high.378 var=245) __sint__rs___sint___sint (__tmp.374 __ct_31.359)  <564>;
                    (__tmp.394 var=93) __Pvoid__pl___Pvoid___sint (__rd___sp.43 __ct_8s0.162)  <634>;
                    (__R_SP.395 var=12 __sp.396 var=18) wr_res_reg (__tmp.394 __sp.42)  <635>;
                    () void_j_t21s_s2 (softfloat_roundPackToF64.121)  <642>;
                    call {
                        (__tmp.108 var=64 stl=X off=12) assign (__ct_0.65)  <119>;
                        (__ct.111 var=66 stl=X off=13) assign (__ct_1085.109)  <122>;
                        (__tmp_low.116 var=70 stl=X off=14) assign (__tmp_low.343)  <127>;
                        (__tmp_high.118 var=71 stl=X off=15) assign (__tmp_high.344)  <129>;
                        (__la.123 var=21 stl=X off=1) assign (__la.21)  <134>;
                        (__tmp.125 var=77 stl=X off=10 __tmp.129 var=78 stl=X off=11) Fsoftfloat_roundPackToF64 (__la.123 __tmp.108 __ct.111 __tmp_low.116 __tmp_high.118)  <135>;
                        (__tmp.126 var=77) deassign (__tmp.125)  <137>;
                        (__tmp.130 var=78) deassign (__tmp.129)  <140>;
                    } #13 off=6
                    #189 off=7 nxt=-2
                    (__rt_low.397 var=23 stl=X off=10) assign (__tmp.126)  <637>;
                    () out (__rt_low.397)  <638>;
                    (__rt_high.398 var=24 stl=X off=11) assign (__tmp.130)  <639>;
                    () out (__rt_high.398)  <640>;
                    () sink (__sp.396)  <641>;
                } #11
                {
                    #192 off=2
                    (__ct_1084.137 var=82) const ()  <147>;
                    (softfloat_normRoundPackToF64.146 var=86) const ()  <156>;
                    (__tmp.399 var=93) __Pvoid__pl___Pvoid___sint (__rd___sp.43 __ct_8s0.162)  <643>;
                    (__R_SP.400 var=12 __sp.401 var=18) wr_res_reg (__tmp.399 __sp.42)  <644>;
                    () void_j_t21s_s2 (softfloat_normRoundPackToF64.146)  <651>;
                    call {
                        (__tmp.136 var=81 stl=X off=12) assign (__ct_0.65)  <146>;
                        (__ct.139 var=83 stl=X off=13) assign (__ct_1084.137)  <149>;
                        (a_low.141 var=26 stl=X off=14) assign (a_low.30)  <151>;
                        (a_high.143 var=27 stl=X off=15) assign (a_high.34)  <153>;
                        (__la.148 var=21 stl=X off=1) assign (__la.21)  <158>;
                        (__tmp.150 var=89 stl=X off=10 __tmp.154 var=90 stl=X off=11) Fsoftfloat_normRoundPackToF64 (__la.148 __tmp.136 __ct.139 a_low.141 a_high.143)  <159>;
                        (__tmp.151 var=89) deassign (__tmp.150)  <161>;
                        (__tmp.155 var=90) deassign (__tmp.154)  <164>;
                    } #16 off=3
                    #193 off=4 nxt=-2
                    (__rt_low.402 var=23 stl=X off=10) assign (__tmp.151)  <646>;
                    () out (__rt_low.402)  <647>;
                    (__rt_high.403 var=24 stl=X off=11) assign (__tmp.155)  <648>;
                    () out (__rt_high.403)  <649>;
                    () sink (__sp.401)  <650>;
                } #14
                {
                } #17
            } #9
        } #7
        {
        } #18
    } #4
    #20 off=9 nxt=-2
    (__tmp.164 var=93) __Pvoid__pl___Pvoid___sint (__rd___sp.43 __ct_8s0.162)  <173>;
    (__R_SP.165 var=12 __sp.166 var=18) wr_res_reg (__tmp.164 __sp.42)  <174>;
    () void___rts_jr_w32 (__la.21)  <175>;
    (__rt_low.168 var=23 stl=X off=10) assign (__ct_0.65)  <177>;
    () out (__rt_low.168)  <178>;
    (__rt_high.170 var=24 stl=X off=11) assign (__ct_0.65)  <180>;
    () out (__rt_high.170)  <181>;
    () sink (__sp.166)  <189>;
} #0
0 : 'SoftFloat-3e/source/ui64_to_f64.c';
----------
0 : (0,42:0,0);
4 : (0,46:4,2);
6 : (0,46:15,3);
7 : (0,48:8,7);
9 : (0,50:4,8);
11 : (0,55:8,9);
13 : (0,52:12,9);
14 : (0,51:8,13);
16 : (0,55:15,13);
20 : (0,50:4,21);
66 : (0,50:4,8);
85 : (0,46:9,2);
188 : (0,50:4,21);
189 : (0,50:4,21);
192 : (0,50:4,21);
193 : (0,50:4,21);
----------
48 : (0,42:10,0);
49 : (0,42:10,0);
51 : (0,42:10,0);
52 : (0,42:10,0);
54 : (0,44:19,0);
74 : (0,46:4,2);
77 : (0,47:10,0);
115 : (0,50:4,8);
119 : (0,53:17,0);
120 : (0,53:17,0);
122 : (0,53:17,0);
123 : (0,53:59,0);
127 : (0,53:26,0);
129 : (0,53:26,0);
134 : (0,52:12,0);
135 : (0,52:12,9);
146 : (0,55:46,0);
147 : (0,55:46,0);
149 : (0,55:46,0);
151 : (0,55:55,0);
153 : (0,55:55,0);
158 : (0,55:15,0);
159 : (0,55:15,13);
171 : (0,50:4,0);
173 : (0,50:4,0);
174 : (0,50:4,21);
175 : (0,50:4,21);
177 : (0,50:4,0);
180 : (0,50:4,0);
293 : (0,50:11,8);
313 : (0,50:4,8);
377 : (0,50:13,0);
395 : (0,46:9,2);
396 : (0,46:9,2);
410 : (0,53:26,9);
411 : (0,53:26,9);
412 : (0,53:26,9);
413 : (0,53:26,9);
436 : (0,53:26,9);
474 : (0,53:26,9);
475 : (0,53:26,9);
509 : (0,53:26,0);
557 : (0,53:26,9);
564 : (0,53:26,9);
634 : (0,50:4,0);
635 : (0,50:4,21);
637 : (0,50:4,0);
639 : (0,50:4,0);
642 : (0,52:12,9);
643 : (0,50:4,0);
644 : (0,50:4,21);
646 : (0,50:4,0);
648 : (0,50:4,0);
651 : (0,55:15,13);
655 : (0,50:4,8);
658 : (0,46:4,2);

