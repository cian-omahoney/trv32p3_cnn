
// File generated by noodle version U-2022.12#33f3808fcb#221128, Wed Feb  7 12:34:04 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -ISoftFloat-3e/source/include -ISoftFloat-3e/source/riscv -ISoftFloat-3e/build/chess -I../runtime/include -DCHESS_CXX_ATTRIBUTES -DSOFTFLOAT_NO_EXCEPTIONS -DINLINE_LEVEL=5 -DSOFTFLOAT_FAST_DIV32TO16 -D__tct_patch__=0 +Oextc -itrv32p3_cnn_chess.h +Opmsa +NOrlt +wRelease/chesswork SoftFloat-3e/source/f32_sub.c +Q0=+Sal,+Sca,+Osps,-Wflla,+Opmsa,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+Opmsa,+NOrlt trv32p3_cnn


/***
!!  float32_t f32_sub(float32_t, float32_t)
Ff32_sub : user_defined, called {
    fnm : "f32_sub" 'float32_t f32_sub(float32_t, float32_t)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
    frm : ( );
    llv : 0 0 0 0 0 ;
}
****
!!  float32_t softfloat_addMagsF32(uint_fast32_t, uint_fast32_t)
Fsoftfloat_addMagsF32 : user_defined, called {
    fnm : "softfloat_addMagsF32" 'float32_t softfloat_addMagsF32(uint_fast32_t, uint_fast32_t)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
    llv : 0 0 0 0 0 ;
}
!!  float32_t softfloat_subMagsF32(uint_fast32_t, uint_fast32_t)
Fsoftfloat_subMagsF32 : user_defined, called {
    fnm : "softfloat_subMagsF32" 'float32_t softfloat_subMagsF32(uint_fast32_t, uint_fast32_t)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
    llv : 0 0 0 0 0 ;
}
***/

[
    0 : f32_sub typ=u08 bnd=e stl=PMb
   12 : __R_SP typ=w32 bnd=d stl=SP
   18 : __sp typ=w32 bnd=b stl=SP
   21 : __rd___sp typ=w32 bnd=m
   22 : __la typ=w32 bnd=p tref=w32__
   23 : __rt typ=w32 bnd=p tref=float32_t___1
   24 : a typ=w32 bnd=p tref=float32_t___1
   25 : b typ=w32 bnd=p tref=float32_t___1
   26 : __ct_m8S0 typ=w32 val=0S0 bnd=m
   28 : __tmp typ=w32 bnd=m
   37 : uiA typ=w32 bnd=m tref=uint_fast32_t__
   38 : uiB typ=w32 bnd=m tref=uint_fast32_t__
   53 : __tmp typ=w32 bnd=m
   54 : __ct_31 typ=w32 val=31f bnd=m
   56 : __tmp typ=w32 bnd=m
   57 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   59 : __tmp typ=bool bnd=m
   62 : softfloat_addMagsF32 typ=t21s_s2 val=0r bnd=m
   64 : __tmp typ=w32 bnd=m
   67 : softfloat_subMagsF32 typ=t21s_s2 val=0r bnd=m
   69 : __tmp typ=w32 bnd=m
   70 : __ct_8s0 typ=w32 val=0s0 bnd=m
   72 : __tmp typ=w32 bnd=m
   87 : __either typ=bool bnd=m
   88 : __trgt typ=t13s_s2 val=0j bnd=m
]
Ff32_sub {
    #3 off=0
    (__R_SP.11 var=12) st_def ()  <22>;
    (__sp.17 var=18) source ()  <28>;
    (__la.21 var=22 stl=X off=1) inp ()  <32>;
    (__la.22 var=22) deassign (__la.21)  <33>;
    (a.25 var=24 stl=X off=11) inp ()  <36>;
    (a.26 var=24) deassign (a.25)  <37>;
    (b.28 var=25 stl=X off=12) inp ()  <39>;
    (b.29 var=25) deassign (b.28)  <40>;
    (__rd___sp.31 var=21) rd_res_reg (__R_SP.11 __sp.17)  <42>;
    (__ct_m8S0.32 var=26) const ()  <43>;
    (__tmp.34 var=28) __Pvoid__pl___Pvoid___sint (__rd___sp.31 __ct_m8S0.32)  <45>;
    (__R_SP.35 var=12 __sp.36 var=18) wr_res_reg (__tmp.34 __sp.17)  <46>;
    (__rd___sp.37 var=21) rd_res_reg (__R_SP.11 __sp.36)  <48>;
    (__tmp.69 var=53) __uint__er___uint___uint (a.26 b.29)  <78>;
    (__ct_31.70 var=54) const ()  <79>;
    (__tmp.72 var=56) __uint__rs___uint___sint (__tmp.69 __ct_31.70)  <81>;
    (__ct_0.73 var=57) const ()  <82>;
    (__tmp.75 var=59) bool__ne___uint___uint (__tmp.72 __ct_0.73)  <84>;
    (__ct_8s0.114 var=70) const ()  <124>;
    (__trgt.156 var=88) const ()  <225>;
    () void_br_bool_t13s_s2 (__tmp.75 __trgt.156)  <226>;
    (__either.157 var=87) undefined ()  <227>;
    if {
        {
            () if_expr (__either.157)  <101>;
        } #5
        {
            #17 off=4
            (softfloat_addMagsF32.96 var=62) const ()  <106>;
            (__tmp.148 var=72) __Pvoid__pl___Pvoid___sint (__rd___sp.37 __ct_8s0.114)  <211>;
            (__R_SP.149 var=12 __sp.150 var=18) wr_res_reg (__tmp.148 __sp.36)  <212>;
            () void_j_t21s_s2 (softfloat_addMagsF32.96)  <217>;
            call {
                (uiA.92 var=37 stl=X off=11) assign (a.26)  <102>;
                (uiB.93 var=38 stl=X off=12) assign (b.29)  <103>;
                (__la.98 var=22 stl=X off=1) assign (__la.22)  <108>;
                (__tmp.99 var=64 stl=X off=10) Fsoftfloat_addMagsF32 (__la.98 uiA.92 uiB.93)  <109>;
                (__tmp.100 var=64) deassign (__tmp.99)  <110>;
            } #8 off=5
            #18 off=6 nxt=-2
            (__rt.151 var=23 stl=X off=10) assign (__tmp.100)  <214>;
            () out (__rt.151)  <215>;
            () sink (__sp.150)  <216>;
        } #6
        {
            #21 off=1
            (softfloat_subMagsF32.106 var=67) const ()  <116>;
            (__tmp.152 var=72) __Pvoid__pl___Pvoid___sint (__rd___sp.37 __ct_8s0.114)  <218>;
            (__R_SP.153 var=12 __sp.154 var=18) wr_res_reg (__tmp.152 __sp.36)  <219>;
            () void_j_t21s_s2 (softfloat_subMagsF32.106)  <224>;
            call {
                (uiA.102 var=37 stl=X off=11) assign (a.26)  <112>;
                (uiB.103 var=38 stl=X off=12) assign (b.29)  <113>;
                (__la.108 var=22 stl=X off=1) assign (__la.22)  <118>;
                (__tmp.109 var=69 stl=X off=10) Fsoftfloat_subMagsF32 (__la.108 uiA.102 uiB.103)  <119>;
                (__tmp.110 var=69) deassign (__tmp.109)  <120>;
            } #11 off=2
            #22 off=3 nxt=-2
            (__rt.155 var=23 stl=X off=10) assign (__tmp.110)  <221>;
            () out (__rt.155)  <222>;
            () sink (__sp.154)  <223>;
        } #9
        {
        } #12
    } #4
} #0
0 : 'SoftFloat-3e/source/f32_sub.c';
----------
0 : (0,43:0,0);
3 : (0,58:10,9);
4 : (0,58:4,9);
6 : (0,61:8,10);
8 : (0,59:15,10);
9 : (0,59:8,14);
11 : (0,61:15,14);
17 : (0,58:4,19);
18 : (0,58:4,19);
21 : (0,58:4,19);
22 : (0,58:4,19);
----------
42 : (0,43:10,0);
43 : (0,43:10,0);
45 : (0,43:10,0);
46 : (0,43:10,0);
48 : (0,45:19,0);
78 : (0,58:34,9);
79 : (0,58:42,0);
81 : (0,58:40,9);
82 : (0,58:10,0);
84 : (0,58:10,9);
101 : (0,58:4,9);
102 : (0,59:37,0);
103 : (0,59:42,0);
108 : (0,59:15,0);
109 : (0,59:15,10);
112 : (0,61:37,0);
113 : (0,61:42,0);
118 : (0,61:15,0);
119 : (0,61:15,14);
124 : (0,58:4,0);
211 : (0,58:4,0);
212 : (0,58:4,19);
214 : (0,58:4,0);
217 : (0,59:15,10);
218 : (0,58:4,0);
219 : (0,58:4,19);
221 : (0,58:4,0);
224 : (0,61:15,14);
226 : (0,58:4,9);

