
// File generated by noodle version U-2022.12#33f3808fcb#221128, Thu Jan 25 16:07:14 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -ISoftFloat-3e/source/include -ISoftFloat-3e/source/riscv -ISoftFloat-3e/build/chess -I../runtime/include -DCHESS_CXX_ATTRIBUTES -DSOFTFLOAT_NO_EXCEPTIONS -DINLINE_LEVEL=5 -DSOFTFLOAT_FAST_DIV32TO16 -D__tct_patch__=0 +Oextc -itrv32p3_cnn_chess.h +Opmsa +NOrlt +wRelease/chesswork SoftFloat-3e/source/f64_to_i64_r_minMag.c +Q0=+Sal,+Sca,+Osps,-Wflla,+Opmsa,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+Opmsa,+NOrlt trv32p3_cnn


/***
!!  int_fast64_t f64_to_i64_r_minMag(float64_t, bool)
Ff64_to_i64_r_minMag : user_defined, called {
    fnm : "f64_to_i64_r_minMag" 'long long f64_to_i64_r_minMag(float64_t, bool)';
    arg : ( w32:i w32:r w32:r w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] X[14] );
    frm : ( );
    llv : 0 0 0 0 0 ;
}
****
***/

[
    0 : f64_to_i64_r_minMag typ=u08 bnd=e stl=PMb
   12 : __R_SP typ=w32 bnd=d stl=SP
   18 : __sp typ=w32 bnd=b stl=SP
   20 : __rd___sp typ=w32 bnd=m
   21 : __la typ=w32 bnd=p tref=w32__
   23 : __rt_low typ=w32 bnd=m tref=__uint__
   24 : __rt_high typ=w32 bnd=m tref=__uint__
   26 : a_low typ=w32 bnd=m tref=__uint__
   27 : a_high typ=w32 bnd=m tref=__uint__
   28 : exact typ=w32 bnd=p tref=bool__
   30 : __ct_m8S0 typ=w32 val=0S0 bnd=m
   32 : __tmp typ=w32 bnd=m
   40 : exp typ=w32 bnd=m tref=int_fast16_t__
   42 : shiftDist typ=w32 bnd=m tref=int_fast16_t__
   45 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   68 : __ct_2047 typ=w32 val=2047f bnd=m
   74 : __ct_1075 typ=w32 val=1075f bnd=m
   79 : __tmp typ=bool bnd=m
   80 : __ct_m10 typ=w32 val=-10f bnd=m
   82 : __tmp typ=bool bnd=m
   85 : __tmp typ=bool bnd=m
   90 : __tmp typ=bool bnd=m
   96 : __tmp typ=bool bnd=m
  106 : __ct_8s0 typ=w32 val=0s0 bnd=m
  108 : __tmp typ=w32 bnd=m
  114 : __tmp typ=w32 bnd=m
  117 : __ct_53 typ=w32 val=53f bnd=m
  119 : __tmp typ=bool bnd=m
  146 : __ct_4294967295 typ=w32 val=-1f bnd=m
  147 : __ct_2147483648 typ=t20s_rp12 val=-524288f bnd=m
  148 : __ct_2147483647 typ=w32 val=2147483647f bnd=m
  153 : __rt_low typ=w32 bnd=m tref=__uint__
  154 : __rt_high typ=w32 bnd=m tref=__uint__
  158 : __apl_ff typ=w32 bnd=m tref=__sint__
  159 : __apl_carries typ=w32 bnd=m tref=__uint__
  161 : __tmp typ=bool bnd=m
  162 : __tmp typ=bool bnd=m
  163 : __tmp typ=w32 bnd=m
  164 : __tmp typ=w32 bnd=m
  165 : __apl_r_low typ=w32 bnd=m tref=__uint__
  166 : __apl_r_high typ=w32 bnd=m tref=__uint__
  168 : __ct_m32 typ=w32 val=-32f bnd=m
  180 : __tmp typ=bool bnd=m
  202 : sig_high typ=w32 bnd=m
  216 : __tmp typ=bool bnd=m
  217 : __tmp typ=bool bnd=m
  238 : sig_high typ=w32 bnd=m
  244 : __rt_low typ=w32 bnd=m tref=__uint__
  245 : __rt_high typ=w32 bnd=m tref=__uint__
  249 : __apl_ff typ=w32 bnd=m tref=__sint__
  250 : __apl_carries typ=w32 bnd=m tref=__uint__
  252 : __tmp typ=bool bnd=m
  253 : __tmp typ=bool bnd=m
  254 : __tmp typ=w32 bnd=m
  255 : __apl_r_low typ=w32 bnd=m tref=__uint__
  256 : __tmp typ=w32 bnd=m
  257 : __apl_r_high typ=w32 bnd=m tref=__uint__
  260 : __tmp_low typ=w32 bnd=m
  262 : __tmp_high typ=w32 bnd=m
  266 : __tmp_low typ=w32 bnd=m
  268 : __tmp_high typ=w32 bnd=m
  281 : __apl_r_low typ=w32 bnd=m tref=__uint__
  282 : __apl_r_high typ=w32 bnd=m tref=__uint__
  295 : __ct_31 typ=w32 val=31f bnd=m
  297 : __ct_20 typ=w32 val=20f bnd=m
  299 : __ct_1048575 typ=w32 val=1048575f bnd=m
  300 : __ct_3286237184 typ=t20s_rp12 val=-246272f bnd=m
  301 : __ct_1048576 typ=t20s_rp12 val=256f bnd=m
  304 : __tmpd typ=w32 bnd=m
  305 : __tmp typ=bool bnd=m
  315 : __tmp typ=w32 bnd=m
  330 : __false typ=bool val=0f bnd=m
  331 : __either typ=bool bnd=m
  332 : __trgt typ=t13s_s2 val=0j bnd=m
  333 : __trgt typ=t13s_s2 val=0j bnd=m
  334 : __trgt typ=t13s_s2 val=0j bnd=m
  335 : __trgt typ=t21s_s2 val=0j bnd=m
  336 : __trgt typ=t13s_s2 val=0j bnd=m
  337 : __trgt typ=t21s_s2 val=0j bnd=m
  338 : __trgt typ=t13s_s2 val=0j bnd=m
  339 : __trgt typ=t21s_s2 val=0j bnd=m
  340 : __trgt typ=t13s_s2 val=0j bnd=m
  341 : __trgt typ=t13s_s2 val=0j bnd=m
  342 : __trgt typ=t21s_s2 val=0j bnd=m
  343 : __trgt typ=t13s_s2 val=0j bnd=m
  344 : __trgt typ=t21s_s2 val=0j bnd=m
  345 : __trgt typ=t13s_s2 val=0j bnd=m
  346 : __trgt typ=t13s_s2 val=0j bnd=m
  347 : __trgt typ=t21s_s2 val=0j bnd=m
  348 : __trgt typ=t13s_s2 val=0j bnd=m
  349 : __trgt typ=t21s_s2 val=0j bnd=m
  350 : __trgt typ=t13s_s2 val=0j bnd=m
  351 : __trgt typ=t21s_s2 val=0j bnd=m
  352 : __trgt typ=t13s_s2 val=0j bnd=m
  353 : __trgt typ=t21s_s2 val=0j bnd=m
]
Ff64_to_i64_r_minMag {
    #224 off=0
    (__R_SP.11 var=12) st_def ()  <22>;
    (__sp.17 var=18) source ()  <28>;
    (__la.20 var=21 stl=X off=1) inp ()  <31>;
    (__la.21 var=21) deassign (__la.20)  <32>;
    (a_low.29 var=26 stl=X off=12) inp ()  <40>;
    (a_low.30 var=26) deassign (a_low.29)  <41>;
    (a_high.33 var=27 stl=X off=13) inp ()  <44>;
    (a_high.34 var=27) deassign (a_high.33)  <45>;
    (exact.37 var=28 stl=X off=14) inp ()  <48>;
    (__rd___sp.40 var=20) rd_res_reg (__R_SP.11 __sp.17)  <51>;
    (__ct_m8S0.41 var=30) const ()  <52>;
    (__tmp.43 var=32) __Pvoid__pl___Pvoid___sint (__rd___sp.40 __ct_m8S0.41)  <54>;
    (__R_SP.44 var=12 __sp.45 var=18) wr_res_reg (__tmp.43 __sp.17)  <55>;
    (__rd___sp.47 var=20) rd_res_reg (__R_SP.11 __sp.45)  <58>;
    (__ct_0.65 var=45) const ()  <76>;
    (__ct_2047.98 var=68) const ()  <107>;
    (exp.100 var=40) __sint__ad___sint___sint (__apl_r_low.547 __ct_2047.98)  <109>;
    (__ct_1075.104 var=74) const ()  <113>;
    (shiftDist.106 var=42) __sint__mi___sint___sint (__ct_1075.104 exp.100)  <115>;
    (__ct_8s0.246 var=106) const ()  <261>;
    (__tmp.248 var=108) __Pvoid__pl___Pvoid___sint (__rd___sp.47 __ct_8s0.246)  <263>;
    (__ct_m32.497 var=168) const ()  <605>;
    (__apl_r_low.506 var=165) __uint__rs___uint___sint (a_high.34 __ct_31.709)  <616>;
    (__apl_r_low.547 var=165) __uint__rs___uint___sint (a_high.34 __ct_20.711)  <667>;
    (sig_high.566 var=202) __uint__ad___uint___uint (a_high.34 __ct_1048575.713)  <690>;
    (__tmp.580 var=79) bool__ge___sint___sint (__ct_0.65 shiftDist.106)  <708>;
    (sig_high.613 var=238) __uint__or___uint___uint (sig_high.566 __ct_1048576.715)  <752>;
    (__ct_31.709 var=295) const ()  <889>;
    (__ct_20.711 var=297) const ()  <893>;
    (__ct_1048575.713 var=299) const ()  <897>;
    (__ct_1048576.715 var=301) const ()  <901>;
    (__trgt.784 var=350) const ()  <1096>;
    () void_br_bool_t13s_s2 (__tmp.580 __trgt.784)  <1097>;
    (__either.785 var=331) undefined ()  <1098>;
    if {
        {
            () if_expr (__either.785)  <137>;
        } #5
        {
            #7 off=11
            (__ct_m10.128 var=80) const ()  <138>;
            (__tmp.130 var=82) bool__lt___sint___sint (shiftDist.106 __ct_m10.128)  <140>;
            (__trgt.768 var=340) const ()  <1068>;
            () void_br_bool_t13s_s2 (__tmp.130 __trgt.768)  <1069>;
            (__either.769 var=331) undefined ()  <1070>;
            if {
                {
                    () if_expr (__either.769)  <159>;
                    () chess_rear_then ()  <1071>;
                } #9
                {
                    #136 off=13
                    (__ct_2147483648.468 var=147) const ()  <553>;
                    (__ct_3286237184.714 var=300) const ()  <899>;
                    (__tmp.748 var=216) bool__ne___uint___uint (a_high.34 __ct_3286237184.714)  <1022>;
                    (__trgt.753 var=332) const ()  <1045>;
                    () void_br_bool_t13s_s2 (__tmp.748 __trgt.753)  <1046>;
                    (__either.754 var=331) undefined ()  <1047>;
                    if {
                        {
                            () if_expr (__either.754)  <719>;
                        } #138
                        {
                            (__false.764 var=330) const ()  <1062>;
                        } #140
                        {
                            (__tmp.588 var=217) bool__eq___uint___uint (a_low.30 __ct_0.65)  <720>;
                            (__trgt.765 var=338) const ()  <1063>;
                            () void_br_bool_t13s_s2 (__tmp.588 __trgt.765)  <1064>;
                            (__either.766 var=331) undefined ()  <1065>;
                        } #139 off=14
                        {
                            (__tmp.589 var=85) merge (__false.764 __either.766)  <721>;
                        } #141
                    } #137
                    if {
                        {
                            () if_expr (__tmp.589)  <181>;
                        } #13
                        {
                        } #14 off=23
                        {
                            #16 off=15
                            (__ct_4294967295.461 var=146) const ()  <545>;
                            (__ct_2147483647.472 var=148) const ()  <558>;
                            (__tmp.749 var=90) bool__ne___sint___sint (exp.100 __ct_2047.98)  <1023>;
                            (__trgt.755 var=333) const ()  <1048>;
                            () void_br_bool_t13s_s2 (__tmp.749 __trgt.755)  <1049>;
                            (__either.756 var=331) undefined ()  <1050>;
                            if {
                                {
                                    () if_expr (__either.756)  <205>;
                                } #18
                                {
                                    (__false.760 var=330) const ()  <1056>;
                                } #20
                                {
                                    (__tmpd.724 var=304) __uint__or___uint___uint (sig_high.566 a_low.30)  <930>;
                                    (__tmp.725 var=305) bool__ne___uint___uint (__tmpd.724 __ct_0.65)  <931>;
                                    (__trgt.761 var=336) const ()  <1057>;
                                    () void_br_bool_t13s_s2 (__tmp.725 __trgt.761)  <1058>;
                                    (__either.762 var=331) undefined ()  <1059>;
                                } #146 off=16
                                {
                                    (__tmp.198 var=96) merge (__false.760 __either.762)  <211>;
                                } #21
                            } #17
                            if {
                                {
                                    () if_expr (__tmp.198)  <230>;
                                } #24
                                {
                                } #25 off=21
                                {
                                    #256 off=17
                                    (__trgt.757 var=334) const ()  <1051>;
                                    () void_br_bool_t13s_s2 (__tmp.790 __trgt.757)  <1052>;
                                    (__either.758 var=331) undefined ()  <1053>;
                                    (__tmp.790 var=180) bool__ne___uint___uint (__apl_r_low.506 __ct_0.65)  <1106>;
                                    if {
                                        {
                                            () if_expr (__either.758)  <251>;
                                        } #29
                                        {
                                        } #30 off=19
                                        {
                                            (__trgt.759 var=335) const ()  <1054>;
                                            () void_j_t21s_s2 (__trgt.759)  <1055>;
                                        } #31 off=18
                                        {
                                            (__rt_low.464 var=23) merge (__ct_0.65 __ct_4294967295.461)  <549>;
                                            (__rt_high.475 var=24) merge (__ct_2147483648.468 __ct_2147483647.472)  <562>;
                                        } #32
                                    } #28
                                    #257 off=20
                                    (__trgt.763 var=337) const ()  <1060>;
                                    () void_j_t21s_s2 (__trgt.763)  <1061>;
                                } #26
                                {
                                    (__rt_low.460 var=23) merge (__ct_4294967295.461 __rt_low.464)  <544>;
                                    (__rt_high.471 var=24) merge (__ct_2147483647.472 __rt_high.475)  <557>;
                                } #33
                            } #23
                            #258 off=22
                            (__trgt.767 var=339) const ()  <1066>;
                            () void_j_t21s_s2 (__trgt.767)  <1067>;
                        } #15
                        {
                            (__rt_low.456 var=23) merge (__ct_0.65 __rt_low.460)  <539>;
                            (__rt_high.467 var=24) merge (__ct_2147483648.468 __rt_high.471)  <552>;
                        } #34
                    } #12
                    #37 off=24 nxt=-2
                    (__R_SP.249 var=12 __sp.250 var=18) wr_res_reg (__tmp.248 __sp.45)  <264>;
                    () void___rts_jr_w32 (__la.21)  <265>;
                    (__rt_low.252 var=23 stl=X off=10) assign (__rt_low.456)  <267>;
                    () out (__rt_low.252)  <268>;
                    (__rt_high.254 var=24 stl=X off=11) assign (__rt_high.467)  <270>;
                    () out (__rt_high.254)  <271>;
                    () sink (__sp.250)  <279>;
                } #10
                {
                } #38 off=12
                {
                } #39
            } #8
            #164 off=25
            (__tmp.298 var=114) __sint__mi___sint___sint (__ct_0.65 shiftDist.106)  <321>;
            (__tmp.629 var=252) bool__eq___sint___sint (__tmp.298 __ct_0.65)  <772>;
            (__trgt.773 var=343) const ()  <1077>;
            () void_br_bool_t13s_s2 (__tmp.629 __trgt.773)  <1078>;
            (__either.774 var=331) undefined ()  <1079>;
            if {
                {
                    () if_expr (__either.774)  <775>;
                } #166
                {
                } #167 off=30
                {
                    #169 off=26
                    (__apl_ff.632 var=249) __sint__pl___sint___sint (__tmp.298 __ct_m32.497)  <776>;
                    (__tmp.633 var=253) bool__lt___sint___sint (__apl_ff.632 __ct_0.65)  <777>;
                    (__trgt.770 var=341) const ()  <1072>;
                    () void_br_bool_t13s_s2 (__tmp.633 __trgt.770)  <1073>;
                    (__either.771 var=331) undefined ()  <1074>;
                    if {
                        {
                            () if_expr (__either.771)  <778>;
                        } #171
                        {
                            (__tmp.634 var=254) __sint__mi___sint___sint (__ct_0.65 __apl_ff.632)  <779>;
                            (__apl_carries.635 var=250) __uint__rs___uint___sint (a_low.30 __tmp.634)  <780>;
                            (__apl_r_low.636 var=255) __uint__ls___uint___sint (a_low.30 __tmp.298)  <781>;
                            (__tmp.637 var=256) __uint__ls___uint___sint (sig_high.613 __tmp.298)  <782>;
                            (__apl_r_high.638 var=257) __uint__or___uint___uint (__tmp.637 __apl_carries.635)  <783>;
                        } #172 off=28
                        {
                            (__apl_r_high.639 var=257) __uint__ls___uint___sint (a_low.30 __apl_ff.632)  <784>;
                            (__trgt.772 var=342) const ()  <1075>;
                            () void_j_t21s_s2 (__trgt.772)  <1076>;
                        } #173 off=27
                        {
                            (__rt_low.640 var=244) merge (__apl_r_low.636 __ct_0.65)  <785>;
                            (__rt_high.641 var=245) merge (__apl_r_high.638 __apl_r_high.639)  <786>;
                        } #174
                    } #170
                    #259 off=29
                    (__trgt.775 var=344) const ()  <1080>;
                    () void_j_t21s_s2 (__trgt.775)  <1081>;
                } #168
                {
                    (__tmp_low.642 var=260) merge (a_low.30 __rt_low.640)  <787>;
                    (__tmp_high.643 var=262) merge (sig_high.613 __rt_high.641)  <788>;
                } #175
            } #165
        } #6
        {
            #42 off=1
            (__ct_53.301 var=117) const ()  <324>;
            (__tmp.303 var=119) bool__ge___sint___sint (shiftDist.106 __ct_53.301)  <326>;
            (__trgt.776 var=345) const ()  <1082>;
            () void_br_bool_t13s_s2 (__tmp.303 __trgt.776)  <1083>;
            (__either.777 var=331) undefined ()  <1084>;
            if {
                {
                    () if_expr (__either.777)  <345>;
                    () chess_rear_then ()  <1085>;
                } #44
                {
                    (__R_SP.329 var=12 __sp.330 var=18) wr_res_reg (__tmp.248 __sp.45)  <353>;
                    () void___rts_jr_w32 (__la.21)  <354>;
                    (__rt_low.332 var=23 stl=X off=10) assign (__ct_0.65)  <356>;
                    () out (__rt_low.332)  <357>;
                    (__rt_high.334 var=24 stl=X off=11) assign (__ct_0.65)  <359>;
                    () out (__rt_high.334)  <360>;
                    () sink (__sp.330)  <368>;
                } #48 off=3 nxt=-2
                {
                } #49 off=2
                {
                } #50
            } #43
            #183 off=4
            (__tmp.657 var=161) bool__eq___sint___sint (shiftDist.106 __ct_0.65)  <806>;
            (__trgt.781 var=348) const ()  <1091>;
            () void_br_bool_t13s_s2 (__tmp.657 __trgt.781)  <1092>;
            (__either.782 var=331) undefined ()  <1093>;
            if {
                {
                    () if_expr (__either.782)  <809>;
                } #185
                {
                } #186 off=9
                {
                    #188 off=5
                    (__apl_ff.660 var=158) __sint__pl___sint___sint (shiftDist.106 __ct_m32.497)  <810>;
                    (__tmp.661 var=162) bool__lt___sint___sint (__apl_ff.660 __ct_0.65)  <811>;
                    (__trgt.778 var=346) const ()  <1086>;
                    () void_br_bool_t13s_s2 (__tmp.661 __trgt.778)  <1087>;
                    (__either.779 var=331) undefined ()  <1088>;
                    if {
                        {
                            () if_expr (__either.779)  <812>;
                        } #190
                        {
                            (__tmp.662 var=163) __sint__mi___sint___sint (__ct_0.65 __apl_ff.660)  <813>;
                            (__apl_carries.663 var=159) __uint__ls___uint___sint (sig_high.613 __tmp.662)  <814>;
                            (__tmp.664 var=164) __uint__rs___uint___sint (a_low.30 shiftDist.106)  <815>;
                            (__apl_r_low.665 var=165) __uint__or___uint___uint (__tmp.664 __apl_carries.663)  <816>;
                            (__apl_r_high.666 var=166) __uint__rs___uint___sint (sig_high.613 shiftDist.106)  <817>;
                        } #191 off=7
                        {
                            (__apl_r_low.667 var=165) __uint__rs___uint___sint (sig_high.613 __apl_ff.660)  <818>;
                            (__trgt.780 var=347) const ()  <1089>;
                            () void_j_t21s_s2 (__trgt.780)  <1090>;
                        } #192 off=6
                        {
                            (__rt_low.668 var=153) merge (__apl_r_low.665 __apl_r_low.667)  <819>;
                            (__rt_high.669 var=154) merge (__apl_r_high.666 __ct_0.65)  <820>;
                        } #193
                    } #189
                    #261 off=8
                    (__trgt.783 var=349) const ()  <1094>;
                    () void_j_t21s_s2 (__trgt.783)  <1095>;
                } #187
                {
                    (__tmp_low.670 var=266) merge (a_low.30 __rt_low.668)  <821>;
                    (__tmp_high.671 var=268) merge (sig_high.613 __rt_high.669)  <822>;
                } #194
            } #184
            #262 off=10
            (__trgt.786 var=351) const ()  <1099>;
            () void_j_t21s_s2 (__trgt.786)  <1100>;
        } #41
        {
            (__rt_low.481 var=23) merge (__tmp_low.642 __tmp_low.670)  <568>;
            (__rt_high.487 var=24) merge (__tmp_high.643 __tmp_high.671)  <574>;
        } #52
    } #4
    #263 off=32
    (__trgt.787 var=352) const ()  <1101>;
    () void_br_bool_t13s_s2 (__tmp.791 __trgt.787)  <1102>;
    (__either.788 var=331) undefined ()  <1103>;
    (__tmp.791 var=180) bool__eq___uint___uint (__apl_r_low.506 __ct_0.65)  <1107>;
    if {
        {
            () if_expr (__either.788)  <446>;
        } #55
        {
        } #57 off=34
        {
            (__apl_r_low.689 var=281) __uint_sub___uint___uint (__ct_0.65 __rt_low.481)  <845>;
            (__apl_r_high.690 var=282) __uint_sub___uint___uint (__ct_0.65 __rt_high.487)  <846>;
            (__apl_r_high.693 var=282) __uint__mi___uint___uint (__apl_r_high.690 __tmp.742)  <849>;
            (__tmp.742 var=315) __sint_sne0___sint (__rt_low.481)  <976>;
            (__trgt.789 var=353) const ()  <1104>;
            () void_j_t21s_s2 (__trgt.789)  <1105>;
        } #232 off=33
        {
            (__rt_low.478 var=23) merge (__rt_low.481 __apl_r_low.689)  <565>;
            (__rt_high.484 var=24) merge (__rt_high.487 __apl_r_high.693)  <571>;
        } #58
    } #54
    #61 off=35 nxt=-2
    (__R_SP.423 var=12 __sp.424 var=18) wr_res_reg (__tmp.248 __sp.45)  <456>;
    () void___rts_jr_w32 (__la.21)  <457>;
    (__rt_low.426 var=23 stl=X off=10) assign (__rt_low.478)  <459>;
    () out (__rt_low.426)  <460>;
    (__rt_high.428 var=24 stl=X off=11) assign (__rt_high.484)  <462>;
    () out (__rt_high.428)  <463>;
    () sink (__sp.424)  <471>;
} #0
0 : 'SoftFloat-3e/source/f64_to_i64_r_minMag.c';
----------
0 : (0,44:0,0);
4 : (0,67:4,15);
6 : (0,67:26,16);
7 : (0,70:23,16);
8 : (0,70:8,16);
10 : (0,70:31,17);
12 : (0,71:12,17);
14 : (0,71:105,18);
15 : (0,72:16,21);
16 : (0,78:21,22);
17 : (0,78:31,22);
20 : (0,78:31,24);
23 : (0,78:38,26);
25 : (0,78:40,27);
26 : (0,79:8,28);
28 : (0,79:8,28);
30 : (0,79:33,29);
31 : (0,79:40,30);
37 : (0,77:12,38);
38 : (0,70:8,42);
41 : (0,85:11,49);
42 : (0,88:16,49);
43 : (0,88:8,49);
48 : (0,94:12,50);
49 : (0,88:8,54);
54 : (0,106:16,62);
57 : (0,106:26,64);
61 : (0,106:4,66);
136 : (0,71:21,17);
137 : (0,71:21,17);
138 : (0,71:21,17);
139 : (0,71:21,17);
140 : (0,71:21,17);
141 : (0,71:21,17);
146 : (0,78:31,23);
164 : (0,84:18,46);
165 : (0,84:18,46);
166 : (0,84:18,46);
167 : (0,84:18,46);
168 : (0,84:18,46);
169 : (0,84:18,46);
170 : (0,84:18,46);
171 : (0,84:18,46);
172 : (0,84:18,46);
173 : (0,84:18,46);
174 : (0,84:18,46);
175 : (0,84:18,46);
183 : (0,99:18,58);
184 : (0,99:18,58);
185 : (0,99:18,58);
186 : (0,99:18,58);
187 : (0,99:18,58);
188 : (0,99:18,58);
189 : (0,99:18,58);
190 : (0,99:18,58);
191 : (0,99:18,58);
192 : (0,99:18,58);
193 : (0,99:18,58);
194 : (0,99:18,58);
224 : (0,61:12,11);
232 : (0,106:18,63);
----------
51 : (0,44:13,0);
52 : (0,44:13,0);
54 : (0,44:13,0);
55 : (0,44:13,0);
58 : (0,49:19,0);
76 : (0,59:6,0);
107 : (0,62:39,0);
109 : (0,62:39,12);
113 : (0,66:22,0);
115 : (0,66:22,14);
137 : (0,67:4,15);
138 : (0,70:23,0);
140 : (0,70:23,16);
159 : (0,70:8,16);
181 : (0,71:12,17);
205 : (0,78:31,22);
211 : (0,78:31,25);
230 : (0,78:38,26);
251 : (0,79:8,28);
261 : (0,77:12,0);
263 : (0,77:12,0);
264 : (0,77:12,38);
265 : (0,77:12,38);
267 : (0,77:12,0);
270 : (0,77:12,0);
321 : (0,84:20,46);
324 : (0,88:16,0);
326 : (0,88:16,49);
345 : (0,88:8,49);
353 : (0,94:12,50);
354 : (0,94:12,50);
356 : (0,94:19,0);
359 : (0,94:19,0);
446 : (0,106:16,62);
456 : (0,106:4,66);
457 : (0,106:4,66);
459 : (0,106:16,0);
462 : (0,106:16,0);
545 : (0,78:40,0);
553 : (0,72:45,0);
558 : (0,78:40,0);
605 : (0,61:36,0);
616 : (0,61:36,11);
667 : (0,62:33,12);
690 : (0,63:18,13);
708 : (0,67:19,15);
719 : (0,71:21,17);
720 : (0,71:21,17);
721 : (0,71:21,17);
752 : (0,83:12,45);
772 : (0,84:18,46);
775 : (0,84:18,46);
776 : (0,84:18,46);
777 : (0,84:18,46);
778 : (0,84:18,46);
779 : (0,84:18,46);
780 : (0,84:18,46);
781 : (0,84:18,46);
782 : (0,84:18,46);
783 : (0,84:18,46);
784 : (0,84:18,46);
785 : (0,84:18,46);
786 : (0,84:18,46);
787 : (0,84:18,46);
788 : (0,84:18,46);
806 : (0,99:18,58);
809 : (0,99:18,58);
810 : (0,99:18,58);
811 : (0,99:18,58);
812 : (0,99:18,58);
813 : (0,99:18,58);
814 : (0,99:18,58);
815 : (0,99:18,58);
816 : (0,99:18,58);
817 : (0,99:18,58);
818 : (0,99:18,58);
819 : (0,99:18,58);
820 : (0,99:18,58);
821 : (0,99:18,58);
822 : (0,99:18,58);
845 : (0,106:18,63);
846 : (0,106:18,63);
849 : (0,106:18,63);
889 : (0,61:36,0);
893 : (0,62:33,0);
897 : (0,63:20,0);
899 : (0,71:25,0);
901 : (0,83:15,0);
930 : (0,78:31,23);
931 : (0,78:31,23);
976 : (0,106:18,63);
1022 : (0,71:21,17);
1023 : (0,78:21,22);
1046 : (0,71:21,17);
1049 : (0,78:31,22);
1052 : (0,79:8,28);
1058 : (0,78:38,26);
1064 : (0,71:12,17);
1069 : (0,70:8,16);
1073 : (0,84:18,46);
1078 : (0,84:18,46);
1083 : (0,88:8,49);
1087 : (0,99:18,58);
1092 : (0,99:18,58);
1097 : (0,67:4,15);
1102 : (0,106:16,62);

