
// File generated by noodle version U-2022.12#33f3808fcb#221128, Fri Mar 22 18:32:41 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -ISoftFloat-3e/source/include -ISoftFloat-3e/source/riscv -ISoftFloat-3e/build/chess -I../runtime/include -DCHESS_CXX_ATTRIBUTES -DSOFTFLOAT_NO_EXCEPTIONS -DINLINE_LEVEL=5 -DSOFTFLOAT_FAST_DIV32TO16 -D__tct_patch__=0 +Oextc -itrv32p3_cnn_chess.h +Opmsa +NOrlt +wRelease/chesswork SoftFloat-3e/source/f64_div.c +Q0=+Sal,+Sca,+Osps,-Wflla,+Opmsa,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+Opmsa,+NOrlt trv32p3_cnn


/***
!!  float64_t f64_div(float64_t, float64_t)
Ff64_div : user_defined, called {
    fnm : "f64_div" 'float64_t f64_div(float64_t, float64_t)';
    arg : ( w32:i w32:r w32:r w32:i w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] X[14] X[15] );
    frm : ( l=36 );
    llv : 0 0 0 0 0 ;
}
****
!!  exp16_sig64 softfloat_normSubnormalF64Sig(uint_fast64_t)
Fsoftfloat_normSubnormalF64Sig : user_defined, called {
    fnm : "softfloat_normSubnormalF64Sig" 'exp16_sig64 softfloat_normSubnormalF64Sig(uint_fast64_t)';
    arg : ( w32:i w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
    llv : 0 0 0 0 0 ;
}
!!  uint32_t softfloat_approxRecip32_1(uint32_t)
Fsoftfloat_approxRecip32_1 : user_defined, called {
    fnm : "softfloat_approxRecip32_1" 'uint32_t softfloat_approxRecip32_1(uint32_t)';
    arg : ( w32:i w32:r w32:i );
    loc : ( X[1] X[10] X[11] );
    llv : 0 0 0 0 0 ;
}
!!  float64_t softfloat_roundPackToF64(bool, int_fast16_t, uint_fast64_t)
Fsoftfloat_roundPackToF64 : user_defined, called {
    fnm : "softfloat_roundPackToF64" 'float64_t softfloat_roundPackToF64(bool, int_fast16_t, uint_fast64_t)';
    arg : ( w32:i w32:r w32:r w32:i w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] X[14] X[15] );
    llv : 0 0 0 0 0 ;
}
!!  uint_fast64_t softfloat_propagateNaNF64UI(uint_fast64_t, uint_fast64_t)
Fsoftfloat_propagateNaNF64UI : user_defined, called {
    fnm : "softfloat_propagateNaNF64UI" 'uint_fast64_t softfloat_propagateNaNF64UI(uint_fast64_t, uint_fast64_t)';
    arg : ( w32:i w32:r w32:r w32:i w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] X[14] X[15] );
    llv : 0 0 0 0 0 ;
}
***/

[
    0 : f64_div typ=u08 bnd=e stl=PMb
    5 : __M_DMw typ=w32 bnd=d stl=DMw
   12 : __R_SP typ=w32 bnd=d stl=SP
   18 : __sp typ=w32 bnd=b stl=SP
   21 : normExpSig typ=w08 val=16t0 bnd=a sz=12 algn=4 stl=DMb tref=exp16_sig64_DMb
   23 : normExpSig_exp typ=w08 bnd=B stl=DMb
   24 : normExpSig_sig typ=w08 bnd=B stl=DMb
   25 : normExpSig_sig_low typ=w08 bnd=B stl=DMb
   26 : normExpSig_sig_high typ=w08 bnd=B stl=DMb
   27 : __rd___sp typ=w32 bnd=m
   28 : __la typ=w32 bnd=p tref=w32__
   30 : __rt_low typ=w32 bnd=m tref=__uint__
   31 : __rt_high typ=w32 bnd=m tref=__uint__
   33 : a_low typ=w32 bnd=m tref=__uint__
   34 : a_high typ=w32 bnd=m tref=__uint__
   36 : b_low typ=w32 bnd=m tref=__uint__
   37 : b_high typ=w32 bnd=m tref=__uint__
   38 : __ct_m36S0 typ=w32 val=-36S0 bnd=m
   40 : __tmp typ=w32 bnd=m
   49 : __ptr_normExpSig typ=w32 bnd=m
   50 : __ct_16t0 typ=w32 val=16t0 bnd=m
   52 : __adr_normExpSig typ=w32 bnd=m adro=21
   59 : expA typ=w32 bnd=m tref=int_fast16_t__
   63 : expB typ=w32 bnd=m tref=int_fast16_t__
   67 : expZ typ=w32 bnd=m tref=int_fast16_t__
   68 : recip32 typ=w32 bnd=m tref=uint32_t__
   70 : doubleTerm typ=w32 bnd=m tref=uint32_t__
   72 : q typ=w32 bnd=m tref=uint32_t__
   74 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   77 : __ct_4 typ=w32 val=4f bnd=m
   97 : __ct_2047 typ=w32 val=2047f bnd=m
  132 : __tmp typ=w32 bnd=m
  133 : __tmp typ=w32 bnd=m
  134 : __tmp typ=w32 bnd=m
  140 : __tmp typ=bool bnd=m
  146 : __tmp typ=bool bnd=m
  178 : __tmp typ=bool bnd=m
  190 : sigB_low typ=w32 bnd=m tref=__uint__
  191 : sigB_high typ=w32 bnd=m tref=__uint__
  194 : softfloat_normSubnormalF64Sig typ=t21s_s2 val=0r bnd=m
  195 : __link typ=w32 bnd=m
  205 : __fch_normExpSig_sig_low typ=w32 bnd=m
  208 : __fch_normExpSig_sig_high typ=w32 bnd=m
  211 : __tmp typ=bool bnd=m
  217 : sigA_low typ=w32 bnd=m tref=__uint__
  218 : sigA_high typ=w32 bnd=m tref=__uint__
  222 : __link typ=w32 bnd=m
  232 : __fch_normExpSig_sig_low typ=w32 bnd=m
  235 : __fch_normExpSig_sig_high typ=w32 bnd=m
  236 : __tmp typ=w32 bnd=m
  237 : __ct_1022 typ=w32 val=1022f bnd=m
  246 : __tmp typ=bool bnd=m
  247 : __ct_1 typ=w32 val=1f bnd=m
  250 : __ct_11 typ=w32 val=11f bnd=m
  253 : __ct_10 typ=w32 val=10f bnd=m
  262 : __tmp typ=w32 bnd=m
  265 : softfloat_approxRecip32_1 typ=t21s_s2 val=0r bnd=m
  266 : __link typ=w32 bnd=m
  267 : __tmp typ=w32 bnd=m
  293 : __ct_28 typ=w32 val=28f bnd=m
  300 : __tmp typ=w32 bnd=m
  333 : __ct_4294967288 typ=w32 val=-8f bnd=m
  376 : __tmp typ=w32 bnd=m
  377 : sigZ_low typ=w32 bnd=m tref=__uint__
  378 : sigZ_high typ=w32 bnd=m tref=__uint__
  381 : softfloat_roundPackToF64 typ=t21s_s2 val=0r bnd=m
  384 : __tmp typ=w32 bnd=m
  385 : __tmp typ=w32 bnd=m
  386 : __ct_36s0 typ=w32 val=36s0 bnd=m
  388 : __tmp typ=w32 bnd=m
  389 : uiA_low typ=w32 bnd=m tref=__uint__
  390 : uiA_high typ=w32 bnd=m tref=__uint__
  391 : uiB_low typ=w32 bnd=m tref=__uint__
  392 : uiB_high typ=w32 bnd=m tref=__uint__
  395 : softfloat_propagateNaNF64UI typ=t21s_s2 val=0r bnd=m
  396 : __link typ=w32 bnd=m
  398 : __tmp typ=w32 bnd=m
  399 : __tmp typ=w32 bnd=m
  405 : uiZ_low typ=w32 bnd=m tref=__uint__
  406 : uiZ_high typ=w32 bnd=m tref=__uint__
  430 : __ct_2146959360 typ=t20s_rp12 val=524160f bnd=m
  443 : __ct_m1 typ=w32 val=-1f bnd=m
  444 : __ct_4294967294 typ=w32 val=-2f bnd=m
  452 : __ct_20t0 typ=w32 val=20t0 bnd=m
  453 : __adr_normExpSig typ=w32 bnd=m adro=21
  454 : __ct_24t0 typ=w32 val=24t0 bnd=m
  455 : __adr_normExpSig typ=w32 bnd=m adro=21
  477 : __apl_r_low typ=w32 bnd=m tref=__uint__
  491 : __tmp typ=bool bnd=m
  514 : sigA_high typ=w32 bnd=m
  539 : sigB_high typ=w32 bnd=m
  561 : __apl_carries typ=w32 bnd=m tref=__uint__
  566 : __apl_r_low typ=w32 bnd=m tref=__uint__
  567 : __tmp typ=w32 bnd=m
  568 : __apl_r_high typ=w32 bnd=m tref=__uint__
  586 : __apl_r_low typ=w32 bnd=m tref=__uint__
  587 : __apl_r_high typ=w32 bnd=m tref=__uint__
  606 : __tmp_low typ=w32 bnd=m
  608 : __tmp_high typ=w32 bnd=m
  616 : sigA_high typ=w32 bnd=m
  618 : sigA_low typ=w32 bnd=m
  619 : sigA_high typ=w32 bnd=m
  624 : sigB_high typ=w32 bnd=m
  626 : sigB_low typ=w32 bnd=m
  627 : sigB_high typ=w32 bnd=m
  630 : __rt typ=bool bnd=m tref=bool__
  635 : __tmp typ=bool bnd=m
  636 : __tmp typ=bool bnd=m
  673 : sigA_high typ=w32 bnd=m
  678 : __apl_p1lo typ=w32 bnd=m tref=__uint__
  679 : __apl_p1hi typ=w32 bnd=m tref=__uint__
  734 : __apl_r_low typ=w32 bnd=m tref=__uint__
  735 : __apl_r_high typ=w32 bnd=m tref=__uint__
  742 : sigA_low typ=w32 bnd=m
  816 : __tmp_low typ=w32 bnd=m
  829 : sigZ_low typ=w32 bnd=m
  877 : __tmp_high typ=w32 bnd=m
  901 : sigZ_low typ=w32 bnd=m
  934 : __ct_31 typ=w32 val=31f bnd=m
  936 : __ct_20 typ=w32 val=20f bnd=m
  939 : __ct_21 typ=w32 val=21f bnd=m
  941 : __ct_22 typ=w32 val=22f bnd=m
  945 : __ct_1048575 typ=w32 val=1048575f bnd=m
  946 : __ct_2146435072 typ=t20s_rp12 val=524032f bnd=m
  947 : __ct_1048576 typ=t20s_rp12 val=256f bnd=m
  949 : __ct_511 typ=w32 val=511f bnd=m
  950 : __ct_64 typ=w32 val=64f bnd=m
  951 : __ct_4294967168 typ=w32 val=-128f bnd=m
  952 : __ct_2147483648 typ=t20s_rp12 val=-524288f bnd=m
  956 : __tmpd typ=w32 bnd=m
  957 : __tmp typ=bool bnd=m
  958 : __tmpd typ=w32 bnd=m
  960 : __tmpd typ=w32 bnd=m
  961 : __tmp typ=bool bnd=m
  963 : __tmp typ=bool bnd=m
  964 : __tmpd typ=w32 bnd=m
  965 : __tmp typ=bool bnd=m
  967 : __tmp typ=bool bnd=m
  980 : __tmp_high typ=w32 bnd=m
 1068 : __tmp typ=w32 bnd=m
 1069 : __tmp typ=w32 bnd=m
 1071 : __tmp typ=w32 bnd=m
 1072 : __tmp typ=w32 bnd=m
 1073 : __tmp typ=w32 bnd=m
 1162 : __true typ=bool val=1f bnd=m
 1163 : __false typ=bool val=0f bnd=m
 1164 : __either typ=bool bnd=m
 1165 : __trgt typ=t13s_s2 val=0j bnd=m
 1166 : __trgt typ=t13s_s2 val=0j bnd=m
 1167 : __trgt typ=t13s_s2 val=0j bnd=m
 1168 : __trgt typ=t13s_s2 val=0j bnd=m
 1169 : __trgt typ=t13s_s2 val=0j bnd=m
 1170 : __trgt typ=t13s_s2 val=0j bnd=m
 1171 : __trgt typ=t13s_s2 val=0j bnd=m
 1172 : __trgt typ=t13s_s2 val=0j bnd=m
 1173 : __trgt typ=t21s_s2 val=0j bnd=m
 1174 : __trgt typ=t13s_s2 val=0j bnd=m
 1175 : __trgt typ=t13s_s2 val=0j bnd=m
 1176 : __trgt typ=t21s_s2 val=0j bnd=m
 1177 : __trgt typ=t13s_s2 val=0j bnd=m
 1178 : __trgt typ=t13s_s2 val=0j bnd=m
 1179 : __trgt typ=t13s_s2 val=0j bnd=m
 1180 : __trgt typ=t21s_s2 val=0j bnd=m
 1181 : __trgt typ=t13s_s2 val=0j bnd=m
 1182 : __trgt typ=t21s_s2 val=0j bnd=m
 1183 : __trgt typ=t13s_s2 val=0j bnd=m
 1184 : __trgt typ=t21s_s2 val=0j bnd=m
 1185 : __trgt typ=t13s_s2 val=0j bnd=m
 1186 : __trgt typ=t21s_s2 val=0j bnd=m
 1187 : __trgt typ=t13s_s2 val=0j bnd=m
 1188 : __trgt typ=t21s_s2 val=0j bnd=m
 1189 : __trgt typ=t21s_s2 val=0j bnd=m
 1190 : __trgt typ=t21s_s2 val=0j bnd=m
 1191 : __trgt typ=t21s_s2 val=0j bnd=m
 1192 : __trgt typ=t21s_s2 val=0j bnd=m
 1193 : __trgt typ=t21s_s2 val=0j bnd=m
 1194 : __trgt typ=t21s_s2 val=0j bnd=m
 1195 : __trgt typ=t21s_s2 val=0j bnd=m
 1196 : __trgt typ=t21s_s2 val=0j bnd=m
 1197 : __trgt typ=t21s_s2 val=0j bnd=m
 1198 : __trgt typ=t21s_s2 val=0j bnd=m
]
Ff64_div {
    #1340 off=0
    (__M_DMw.4 var=5) st_def ()  <8>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__sp.17 var=18) source ()  <28>;
    (normExpSig.20 var=21) source ()  <31>;
    (normExpSig_exp.22 var=23) source ()  <33>;
    (normExpSig_sig.23 var=24) source ()  <34>;
    (normExpSig_sig_low.24 var=25) source ()  <35>;
    (normExpSig_sig_high.25 var=26) source ()  <36>;
    (__la.27 var=28 stl=X off=1) inp ()  <38>;
    (__la.28 var=28) deassign (__la.27)  <39>;
    (a_low.36 var=33 stl=X off=12) inp ()  <47>;
    (a_low.37 var=33) deassign (a_low.36)  <48>;
    (a_high.40 var=34 stl=X off=13) inp ()  <51>;
    (a_high.41 var=34) deassign (a_high.40)  <52>;
    (b_low.45 var=36 stl=X off=14) inp ()  <56>;
    (b_low.46 var=36) deassign (b_low.45)  <57>;
    (b_high.49 var=37 stl=X off=15) inp ()  <60>;
    (b_high.50 var=37) deassign (b_high.49)  <61>;
    (__rd___sp.53 var=27) rd_res_reg (__R_SP.11 __sp.17)  <64>;
    (__ct_m36S0.54 var=38) const ()  <65>;
    (__tmp.56 var=40) __Pvoid__pl___Pvoid___sint (__rd___sp.53 __ct_m36S0.54)  <67>;
    (__R_SP.57 var=12 __sp.58 var=18) wr_res_reg (__tmp.56 __sp.17)  <68>;
    (__rd___sp.59 var=27) rd_res_reg (__R_SP.11 __sp.58)  <70>;
    (__ct_0.113 var=74) const ()  <124>;
    (__ct_2047.146 var=97) const ()  <155>;
    (expA.148 var=59) __sint__ad___sint___sint (__apl_r_low.2374 __ct_2047.146)  <157>;
    (expB.187 var=63) __sint__ad___sint___sint (__apl_r_low.2460 __ct_2047.146)  <194>;
    (__tmp.193 var=134) __sint__er___sint___sint (__tmp.3844 __tmp.3850)  <200>;
    (__tmp.199 var=140) bool__eq___sint___sint (expA.148 __ct_2047.146)  <206>;
    (__ct_36s0.1897 var=386) const ()  <2315>;
    (__tmp.1899 var=388) __Pvoid__pl___Pvoid___sint (__rd___sp.59 __ct_36s0.1897)  <2317>;
    (__tmp.2315 var=376) __sint_sne0___sint (__tmp.193)  <2881>;
    (__apl_r_low.2333 var=477) __uint__rs___uint___sint (a_high.41 __ct_31.3585)  <2941>;
    (__apl_r_low.2374 var=477) __uint__rs___uint___sint (a_high.41 __ct_20.3587)  <2992>;
    (sigA_high.2393 var=514) __uint__ad___uint___uint (a_high.41 __ct_1048575.3596)  <3015>;
    (__apl_r_low.2419 var=477) __uint__rs___uint___sint (b_high.50 __ct_31.3585)  <3047>;
    (__apl_r_low.2460 var=477) __uint__rs___uint___sint (b_high.50 __ct_20.3587)  <3098>;
    (sigB_high.2479 var=539) __uint__ad___uint___uint (b_high.50 __ct_1048575.3596)  <3121>;
    (__apl_r_high.2531 var=568) __uint__ls___uint___sint (__tmp.2315 __ct_31.3585)  <3187>;
    (__ct_31.3585 var=934) const ()  <4528>;
    (__ct_20.3587 var=936) const ()  <4532>;
    (__ct_1048575.3596 var=945) const ()  <4550>;
    (__tmpd.3625 var=956) __uint__or___uint___uint (sigA_high.2393 a_low.37)  <4626>;
    (__tmpd.3627 var=958) __uint__or___uint___uint (sigB_high.2479 b_low.46)  <4628>;
    (__tmp.3844 var=132) __sint_sne0___sint (__apl_r_low.2333)  <5143>;
    (__tmp.3850 var=133) __sint_sne0___sint (__apl_r_low.2419)  <5152>;
    (__trgt.4215 var=1187) const ()  <5801>;
    () void_br_bool_t13s_s2 (__tmp.199 __trgt.4215)  <5802>;
    (__either.4216 var=1164) undefined ()  <5803>;
    if {
        {
            () if_expr (__either.4216)  <246>;
        } #10
        {
            #296 off=51
            (__tmp.3626 var=957) bool__ne___uint___uint (__tmpd.3625 __ct_0.113)  <4627>;
            (__trgt.4175 var=1165) const ()  <5734>;
            () void_br_bool_t13s_s2 (__tmp.3626 __trgt.4175)  <5735>;
            (__either.4176 var=1164) undefined ()  <5736>;
            if {
                {
                    () if_expr (__either.4176)  <289>;
                    () chess_rear_then ()  <5737>;
                } #14
                {
                    () sink (__sp.58)  <295>;
                    (__trgt.4218 var=1189) const ()  <5806>;
                    () void_j_t21s_s2 (__trgt.4218)  <5807>;
                } #16 off=53 nxt=-3 tgt=3
                {
                } #17 off=52
                {
                } #18
            } #13
            #2174 off=54
            (__trgt.4179 var=1167) const ()  <5741>;
            () void_br_bool_t13s_s2 (__tmp.4228 __trgt.4179)  <5742>;
            (__either.4180 var=1164) undefined ()  <5743>;
            (__tmp.4228 var=146) bool__eq___sint___sint (expB.187 __ct_2047.146)  <5826>;
            if {
                {
                    () if_expr (__either.4180)  <455>;
                    () chess_rear_then ()  <5744>;
                } #21
                {
                    #2170 off=56
                    (__trgt.4177 var=1166) const ()  <5738>;
                    () void_br_bool_t13s_s2 (__tmp.4230 __trgt.4177)  <5739>;
                    (__either.4178 var=1164) undefined ()  <5740>;
                    (__tmp.4230 var=963) bool__eq___uint___uint (__tmpd.3627 __ct_0.113)  <5828>;
                    if {
                        {
                            () if_expr (__either.4178)  <498>;
                        } #25
                        {
                        } #28 off=58
                        {
                            () sink (__sp.58)  <504>;
                            (__trgt.4219 var=1190) const ()  <5808>;
                            () void_j_t21s_s2 (__trgt.4219)  <5809>;
                        } #27 off=57 nxt=-3 tgt=3
                        {
                        } #29
                    } #24
                    #30 off=59 nxt=-3 tgt=4
                    () sink (__sp.58)  <627>;
                    (__trgt.4220 var=1191) const ()  <5810>;
                    () void_j_t21s_s2 (__trgt.4220)  <5811>;
                } #22
                {
                } #31 off=55
                {
                } #32
            } #20
            sync {
            } #1 off=60
            #34 off=61 nxt=-3 tgt=5
            () sink (__sp.58)  <799>;
            () sync_sink (__ct_0.113) sid=196  <2833>;
            () sync_sink (__apl_r_high.2552) sid=197  <2844>;
            (__apl_r_high.2552 var=587) __uint__pl___uint___uint (__apl_r_high.2531 __ct_2146435072.3597)  <3213>;
            (__ct_2146435072.3597 var=946) const ()  <4552>;
            (__trgt.4221 var=1192) const ()  <5812>;
            () void_j_t21s_s2 (__trgt.4221)  <5813>;
            sync {
            } #2 off=62
        } #11
        {
            #2173 off=1
            (__trgt.4183 var=1169) const ()  <5748>;
            () void_br_bool_t13s_s2 (__tmp.4229 __trgt.4183)  <5749>;
            (__either.4184 var=1164) undefined ()  <5750>;
            (__tmp.4229 var=146) bool__eq___sint___sint (expB.187 __ct_2047.146)  <5827>;
            if {
                {
                    () if_expr (__either.4184)  <969>;
                    () chess_rear_then ()  <5751>;
                } #39
                {
                    #2171 off=3
                    (__trgt.4181 var=1168) const ()  <5745>;
                    () void_br_bool_t13s_s2 (__tmp.4231 __trgt.4181)  <5746>;
                    (__either.4182 var=1164) undefined ()  <5747>;
                    (__tmp.4231 var=963) bool__eq___uint___uint (__tmpd.3627 __ct_0.113)  <5829>;
                    if {
                        {
                            () if_expr (__either.4182)  <1012>;
                        } #43
                        {
                        } #46 off=5
                        {
                            () sink (__sp.58)  <1018>;
                            (__trgt.4222 var=1193) const ()  <5814>;
                            () void_j_t21s_s2 (__trgt.4222)  <5815>;
                        } #45 off=4 nxt=-3 tgt=3
                        {
                        } #47
                    } #42
                    #48 off=6 nxt=-3 tgt=2
                    () sink (__sp.58)  <1141>;
                    (__trgt.4223 var=1194) const ()  <5816>;
                    () void_j_t21s_s2 (__trgt.4223)  <5817>;
                } #40
                {
                } #49 off=2
                {
                } #50
            } #38
            #51 off=7
            (__ct_16t0.70 var=50) const ()  <81>;
            (__adr_normExpSig.72 var=52) __Pvoid__pl___Pvoid___sint (__rd___sp.59 __ct_16t0.70)  <83>;
            (softfloat_normSubnormalF64Sig.1270 var=194) const ()  <1646>;
            (__ct_20t0.2305 var=452) const ()  <2868>;
            (__adr_normExpSig.2306 var=453) __Pvoid__pl___Pvoid___sint (__rd___sp.59 __ct_20t0.2305)  <2870>;
            (__ct_24t0.2307 var=454) const ()  <2871>;
            (__adr_normExpSig.2308 var=455) __Pvoid__pl___Pvoid___sint (__rd___sp.59 __ct_24t0.2307)  <2873>;
            (__tmp.4103 var=178) bool__ne___sint___sint (expB.187 __ct_0.113)  <5597>;
            (__trgt.4189 var=1172) const ()  <5759>;
            () void_br_bool_t13s_s2 (__tmp.4103 __trgt.4189)  <5760>;
            (__either.4190 var=1164) undefined ()  <5761>;
            if {
                {
                    () if_expr (__either.4190)  <1302>;
                } #53
                {
                } #72 off=17
                {
                    #2172 off=8
                    (__trgt.4187 var=1171) const ()  <5755>;
                    () void_br_bool_t13s_s2 (__tmp.4232 __trgt.4187)  <5756>;
                    (__either.4188 var=1164) undefined ()  <5757>;
                    (__tmp.4232 var=963) bool__eq___uint___uint (__tmpd.3627 __ct_0.113)  <5830>;
                    if {
                        {
                            () if_expr (__either.4188)  <1346>;
                            () chess_rear_then ()  <5758>;
                        } #57
                        {
                            #1250 off=10
                            (__tmp_low.2580 var=606) __uint__or___uint___uint (expA.148 a_low.37)  <3246>;
                            (__tmp_high.2581 var=608) __uint__or___uint___uint (__tmp_high.3645 sigA_high.2393)  <3247>;
                            (__tmpd.3633 var=964) __uint__or___uint___uint (__tmp_high.2581 __tmp_low.2580)  <4634>;
                            (__tmp_high.3645 var=980) __sint__rs___sint___sint (expA.148 __ct_31.3585)  <4651>;
                            (__tmp.4102 var=965) bool__ne___uint___uint (__tmpd.3633 __ct_0.113)  <5596>;
                            (__trgt.4185 var=1170) const ()  <5752>;
                            () void_br_bool_t13s_s2 (__tmp.4102 __trgt.4185)  <5753>;
                            (__either.4186 var=1164) undefined ()  <5754>;
                            if {
                                {
                                    () if_expr (__either.4186)  <1392>;
                                } #61
                                {
                                } #64 off=12
                                {
                                    () sink (__sp.58)  <1398>;
                                    (__trgt.4224 var=1195) const ()  <5818>;
                                    () void_j_t21s_s2 (__trgt.4224)  <5819>;
                                } #63 off=11 nxt=-3 tgt=4
                                {
                                } #65
                            } #60
                            #66 off=13 nxt=-3 tgt=1
                            () sink (__sp.58)  <1521>;
                            (__trgt.4225 var=1196) const ()  <5820>;
                            () void_j_t21s_s2 (__trgt.4225)  <5821>;
                        } #58
                        {
                        } #67 off=9
                        {
                        } #68
                    } #56
                    #69 off=14
                    (__link.1271 var=195) w32_jal_t21s_s2 (softfloat_normSubnormalF64Sig.1270)  <1647>;
                    call {
                        (__ptr_normExpSig.1263 var=49 stl=X off=10) assign (__adr_normExpSig.72)  <1639>;
                        (sigB_low.1265 var=190 stl=X off=11) assign (b_low.46)  <1641>;
                        (sigB_high.1267 var=191 stl=X off=12) assign (sigB_high.2479)  <1643>;
                        (__link.1272 var=195 stl=X off=1) assign (__link.1271)  <1648>;
                        (normExpSig.1273 var=21 normExpSig_exp.1274 var=23 normExpSig_sig.1275 var=24 normExpSig_sig_high.1276 var=26 normExpSig_sig_low.1277 var=25) Fsoftfloat_normSubnormalF64Sig (__link.1272 __ptr_normExpSig.1263 sigB_low.1265 sigB_high.1267 normExpSig.20 normExpSig_exp.22 normExpSig_sig.23 normExpSig_sig_high.25 normExpSig_sig_low.24)  <1649>;
                    } #70 off=15
                    #71 off=16
                    (expB.1282 var=63) load (__M_DMw.4 __adr_normExpSig.72 normExpSig_exp.1274)  <1654>;
                    (__fch_normExpSig_sig_low.1287 var=205) load (__M_DMw.4 __adr_normExpSig.2306 normExpSig_sig_low.1277)  <1659>;
                    (__fch_normExpSig_sig_high.1292 var=208) load (__M_DMw.4 __adr_normExpSig.2308 normExpSig_sig_high.1276)  <1664>;
                    (__trgt.4191 var=1173) const ()  <5762>;
                    () void_j_t21s_s2 (__trgt.4191)  <5763>;
                } #54
                {
                    (normExpSig.1302 var=21) merge (normExpSig.20 normExpSig.1273)  <1674>;
                    (normExpSig_exp.1304 var=23) merge (normExpSig_exp.22 normExpSig_exp.1274)  <1676>;
                    (normExpSig_sig.1305 var=24) merge (normExpSig_sig.23 normExpSig_sig.1275)  <1677>;
                    (normExpSig_sig_low.1306 var=25) merge (normExpSig_sig_low.24 normExpSig_sig_low.1277)  <1678>;
                    (normExpSig_sig_high.1307 var=26) merge (normExpSig_sig_high.25 normExpSig_sig_high.1276)  <1679>;
                    (expB.1319 var=63) merge (expB.187 expB.1282)  <1691>;
                    (sigB_low.3607 var=626) merge (b_low.46 __fch_normExpSig_sig_low.1287)  <4564>;
                    (sigB_high.3610 var=627) merge (sigB_high.2479 __fch_normExpSig_sig_high.1292)  <4567>;
                } #73
            } #52
            #74 off=18
            (__tmp.4104 var=211) bool__ne___sint___sint (expA.148 __ct_0.113)  <5598>;
            (__trgt.4194 var=1175) const ()  <5768>;
            () void_br_bool_t13s_s2 (__tmp.4104 __trgt.4194)  <5769>;
            (__either.4195 var=1164) undefined ()  <5770>;
            if {
                {
                    () if_expr (__either.4195)  <1748>;
                } #76
                {
                } #88 off=25
                {
                    #1183 off=19
                    (__tmp.3636 var=967) bool__eq___uint___uint (__tmpd.3625 __ct_0.113)  <4637>;
                    (__trgt.4192 var=1174) const ()  <5764>;
                    () void_br_bool_t13s_s2 (__tmp.3636 __trgt.4192)  <5765>;
                    (__either.4193 var=1164) undefined ()  <5766>;
                    if {
                        {
                            () if_expr (__either.4193)  <1792>;
                            () chess_rear_then ()  <5767>;
                        } #80
                        {
                            () sink (__sp.58)  <1798>;
                            (__trgt.4226 var=1197) const ()  <5822>;
                            () void_j_t21s_s2 (__trgt.4226)  <5823>;
                        } #82 off=21 nxt=-3 tgt=2
                        {
                        } #83 off=20
                        {
                        } #84
                    } #79
                    #85 off=22
                    (__link.1505 var=222) w32_jal_t21s_s2 (softfloat_normSubnormalF64Sig.1270)  <1924>;
                    call {
                        (__ptr_normExpSig.1497 var=49 stl=X off=10) assign (__adr_normExpSig.72)  <1916>;
                        (sigA_low.1499 var=217 stl=X off=11) assign (a_low.37)  <1918>;
                        (sigA_high.1501 var=218 stl=X off=12) assign (sigA_high.2393)  <1920>;
                        (__link.1506 var=222 stl=X off=1) assign (__link.1505)  <1925>;
                        (normExpSig.1507 var=21 normExpSig_exp.1508 var=23 normExpSig_sig.1509 var=24 normExpSig_sig_high.1510 var=26 normExpSig_sig_low.1511 var=25) Fsoftfloat_normSubnormalF64Sig (__link.1506 __ptr_normExpSig.1497 sigA_low.1499 sigA_high.1501 normExpSig.1302 normExpSig_exp.1304 normExpSig_sig.1305 normExpSig_sig_high.1307 normExpSig_sig_low.1306)  <1926>;
                    } #86 off=23
                    #87 off=24
                    (expA.1516 var=59) load (__M_DMw.4 __adr_normExpSig.72 normExpSig_exp.1508)  <1931>;
                    (__fch_normExpSig_sig_low.1521 var=232) load (__M_DMw.4 __adr_normExpSig.2306 normExpSig_sig_low.1511)  <1936>;
                    (__fch_normExpSig_sig_high.1526 var=235) load (__M_DMw.4 __adr_normExpSig.2308 normExpSig_sig_high.1510)  <1941>;
                    (__trgt.4196 var=1176) const ()  <5771>;
                    () void_j_t21s_s2 (__trgt.4196)  <5772>;
                } #77
                {
                    (expA.1547 var=59) merge (expA.148 expA.1516)  <1962>;
                    (sigA_low.3600 var=618) merge (a_low.37 __fch_normExpSig_sig_low.1521)  <4556>;
                    (sigA_high.3603 var=619) merge (sigA_high.2393 __fch_normExpSig_sig_high.1526)  <4559>;
                } #89
            } #75
            #375 off=26
            (__tmp.1567 var=236) __sint__mi___sint___sint (expA.1547 expB.1319)  <1982>;
            (__ct_1022.1568 var=237) const ()  <1983>;
            (expZ.1570 var=67) __sint__pl___sint___sint (__tmp.1567 __ct_1022.1568)  <1985>;
            (__ct_11.1620 var=250) const ()  <2036>;
            (__ct_m1.2298 var=443) const ()  <2858>;
            (sigA_high.2598 var=616) __uint__or___uint___uint (sigA_high.3603 __ct_1048576.3604)  <3268>;
            (sigB_high.2615 var=624) __uint__or___uint___uint (sigB_high.3610 __ct_1048576.3604)  <3289>;
            (__tmp.2631 var=635) bool__lt___uint___uint (sigA_high.2598 sigB_high.2615)  <3309>;
            (__ct_21.3590 var=939) const ()  <4538>;
            (__ct_1048576.3604 var=947) const ()  <4560>;
            (__trgt.4199 var=1178) const ()  <5776>;
            () void_br_bool_t13s_s2 (__tmp.2631 __trgt.4199)  <5777>;
            (__either.4200 var=1164) undefined ()  <5778>;
            if {
                {
                    () if_expr (__either.4200)  <3312>;
                } #377
                {
                    (__true.4201 var=1162) const ()  <5779>;
                } #378
                {
                    #380 off=27
                    (__tmp.4105 var=636) bool__ne___uint___uint (sigA_high.2598 sigB_high.2615)  <5599>;
                    (__trgt.4197 var=1177) const ()  <5773>;
                    () void_br_bool_t13s_s2 (__tmp.4105 __trgt.4197)  <5774>;
                    (__either.4198 var=1164) undefined ()  <5775>;
                    if {
                        {
                            () if_expr (__either.4198)  <3314>;
                        } #382
                        {
                            (__false.4202 var=1163) const ()  <5780>;
                        } #384
                        {
                            (__rt.2635 var=630) bool__lt___uint___uint (sigA_low.3600 sigB_low.3607)  <3315>;
                            (__trgt.4203 var=1179) const ()  <5781>;
                            () void_br_bool_t13s_s2 (__rt.2635 __trgt.4203)  <5782>;
                            (__either.4204 var=1164) undefined ()  <5783>;
                        } #383 off=28
                        {
                            (__rt.2636 var=630) merge (__false.4202 __either.4204)  <3316>;
                        } #385
                    } #381
                } #379
                {
                    (__tmp.2637 var=246) merge (__true.4201 __rt.2636)  <3317>;
                } #386
            } #376
            if {
                {
                    () if_expr (__tmp.2637)  <2032>;
                } #92
                {
                    (expZ.1619 var=67) __sint__pl___sint___sint (expZ.1570 __ct_m1.2298)  <2035>;
                    (__apl_carries.2653 var=561) __uint__rs___uint___sint (sigA_low.3600 __ct_21.3590)  <3338>;
                    (__apl_r_low.2654 var=566) __uint__ls___uint___sint (sigA_low.3600 __ct_11.1620)  <3339>;
                    (__tmp.2655 var=567) __uint__ls___uint___sint (sigA_high.2598 __ct_11.1620)  <3340>;
                    (__apl_r_high.2656 var=568) __uint__or___uint___uint (__tmp.2655 __apl_carries.2653)  <3341>;
                } #407 off=30
                {
                    (__ct_10.1623 var=253) const ()  <2039>;
                    (__apl_carries.2681 var=561) __uint__rs___uint___sint (sigA_low.3600 __ct_22.3592)  <3372>;
                    (__apl_r_low.2682 var=566) __uint__ls___uint___sint (sigA_low.3600 __ct_10.1623)  <3373>;
                    (__tmp.2683 var=567) __uint__ls___uint___sint (sigA_high.2598 __ct_10.1623)  <3374>;
                    (__apl_r_high.2684 var=568) __uint__or___uint___uint (__tmp.2683 __apl_carries.2681)  <3375>;
                    (__ct_22.3592 var=941) const ()  <4542>;
                    (__trgt.4205 var=1180) const ()  <5784>;
                    () void_j_t21s_s2 (__trgt.4205)  <5785>;
                } #423 off=29
                {
                    (expZ.1627 var=67) merge (expZ.1619 expZ.1570)  <2043>;
                    (sigA_high.3613 var=673) merge (__apl_r_high.2656 __apl_r_high.2684)  <4570>;
                    (sigA_low.3616 var=742) merge (__apl_r_low.2654 __apl_r_low.2682)  <4573>;
                } #95
            } #91
            #1378 off=31
            (softfloat_approxRecip32_1.1638 var=265) const ()  <2054>;
            (__link.1639 var=266) w32_jal_t21s_s2 (softfloat_approxRecip32_1.1638)  <2055>;
            (__apl_carries.2709 var=561) __uint__rs___uint___sint (sigB_low.3607 __ct_21.3590)  <3406>;
            (__apl_r_low.2710 var=566) __uint__ls___uint___sint (sigB_low.3607 __ct_11.1620)  <3407>;
            (__tmp.2711 var=567) __uint__ls___uint___sint (sigB_high.2615 __ct_11.1620)  <3408>;
            (__apl_r_high.2712 var=568) __uint__or___uint___uint (__tmp.2711 __apl_carries.2709)  <3409>;
            call {
                (__tmp.1635 var=262 stl=X off=11) assign (__apl_r_high.2712)  <2051>;
                (__link.1640 var=266 stl=X off=1) assign (__link.1639)  <2056>;
                (__tmp.1641 var=267 stl=X off=10) Fsoftfloat_approxRecip32_1 (__link.1640 __tmp.1635)  <2057>;
                (__tmp.1642 var=267) deassign (__tmp.1641)  <2058>;
            } #97 off=32
            #2055 off=33
            (__ct_4.119 var=77) const ()  <129>;
            (__ct_1.1617 var=247) const ()  <2033>;
            (recip32.1646 var=68) __uint__pl___uint___uint (__tmp.1642 __ct_4294967294.2299)  <2062>;
            (doubleTerm.1660 var=70) __uint__ls___uint___sint (__apl_p1hi.2799 __ct_1.1617)  <2076>;
            (__ct_28.1669 var=293) const ()  <2085>;
            (__tmp.1676 var=300) __uint__rs___uint___sint (__apl_r_low.2710 __ct_4.119)  <2092>;
            (__ct_4294967294.2299 var=444) const ()  <2860>;
            (__apl_p1hi.2799 var=679) __uint_mulhu___uint___uint (sigA_high.3613 recip32.1646)  <3516>;
            (__apl_p1lo.2865 var=678) __uint_mul___uint___uint (doubleTerm.1660 __apl_r_high.2712)  <3598>;
            (__apl_p1hi.2870 var=679) __uint_mulhu___uint___uint (doubleTerm.1660 __apl_r_high.2712)  <3605>;
            (__apl_r_low.2905 var=734) __uint_sub___uint___uint (sigA_low.3616 __apl_p1lo.2865)  <3649>;
            (__apl_r_high.2906 var=735) __uint_sub___uint___uint (sigA_high.3613 __apl_p1hi.2870)  <3650>;
            (__apl_r_high.2909 var=735) __uint__mi___uint___uint (__apl_r_high.2906 __tmp.3855)  <3653>;
            (__apl_carries.2933 var=561) __uint__rs___uint___sint (__apl_r_low.2905 __ct_4.119)  <3683>;
            (__apl_r_low.2934 var=566) __uint__ls___uint___sint (__apl_r_low.2905 __ct_28.1669)  <3684>;
            (__tmp.2935 var=567) __uint__ls___uint___sint (__apl_r_high.2909 __ct_28.1669)  <3685>;
            (__apl_r_high.2936 var=568) __uint__or___uint___uint (__tmp.2935 __apl_carries.2933)  <3686>;
            (__apl_p1lo.2962 var=678) __uint_mul___uint___uint (doubleTerm.1660 __tmp.1676)  <3718>;
            (__apl_p1hi.2967 var=679) __uint_mulhu___uint___uint (doubleTerm.1660 __tmp.1676)  <3725>;
            (__apl_r_low.3002 var=734) __uint_sub___uint___uint (__apl_r_low.2934 __apl_p1lo.2962)  <3769>;
            (__apl_r_high.3003 var=735) __uint_sub___uint___uint (__apl_r_high.2936 __apl_p1hi.2967)  <3770>;
            (__apl_r_high.3006 var=735) __uint__mi___uint___uint (__apl_r_high.3003 __tmp.3860)  <3773>;
            (__apl_p1hi.3064 var=679) __uint_mulhu___uint___uint (__apl_r_high.3006 recip32.1646)  <3845>;
            (__apl_r_low.3130 var=586) __uint_add___uint___uint (__apl_p1hi.3064 __ct_4.119)  <3927>;
            (__apl_carries.3188 var=561) __uint__rs___uint___sint (__apl_r_low.3130 __ct_28.1669)  <3997>;
            (__apl_r_low.3189 var=566) __uint__ls___uint___sint (__apl_r_low.3130 __ct_4.119)  <3998>;
            (__apl_r_high.3213 var=587) __uint__pl___uint___uint (__apl_p1hi.2799 __apl_carries.3188)  <4027>;
            (__tmp_low.3241 var=816) __uint__ad___uint___uint (__apl_r_low.3189 __ct_511.3618)  <4060>;
            (__ct_511.3618 var=949) const ()  <4576>;
            (__ct_64.3619 var=950) const ()  <4578>;
            (__tmp.3855 var=1068) __sint_slt___uint___uint (sigA_low.3616 __apl_p1lo.2865)  <5160>;
            (__tmp.3860 var=1069) __sint_slt___uint___uint (__apl_r_low.2934 __apl_p1lo.2962)  <5168>;
            (__rt.4107 var=630) bool__ge___uint___uint (__tmp_low.3241 __ct_64.3619)  <5601>;
            (__trgt.4212 var=1185) const ()  <5796>;
            () void_br_bool_t13s_s2 (__rt.4107 __trgt.4212)  <5797>;
            (__either.4213 var=1164) undefined ()  <5798>;
            if {
                {
                    () if_expr (__either.4213)  <2164>;
                } #100
                {
                } #114 off=41
                {
                    #2111 off=34
                    (__ct_4294967288.1748 var=333) const ()  <2165>;
                    (q.1750 var=72) __uint__ad___uint___uint (__apl_r_low.3130 __ct_4294967288.1748)  <2167>;
                    (doubleTerm.1756 var=70) __uint__ls___uint___sint (q.1750 __ct_1.1617)  <2173>;
                    (sigZ_low.3274 var=829) __uint__ad___uint___uint (__apl_r_low.3189 __ct_4294967168.3620)  <4102>;
                    (__apl_p1lo.3298 var=678) __uint_mul___uint___uint (doubleTerm.1756 __apl_r_high.2712)  <4132>;
                    (__apl_p1hi.3303 var=679) __uint_mulhu___uint___uint (doubleTerm.1756 __apl_r_high.2712)  <4139>;
                    (__apl_r_low.3338 var=734) __uint_sub___uint___uint (__apl_r_low.3002 __apl_p1lo.3298)  <4183>;
                    (__apl_r_high.3339 var=735) __uint_sub___uint___uint (__apl_r_high.3006 __apl_p1hi.3303)  <4184>;
                    (__apl_r_high.3342 var=735) __uint__mi___uint___uint (__apl_r_high.3339 __tmp.3870)  <4187>;
                    (__apl_carries.3366 var=561) __uint__rs___uint___sint (__apl_r_low.3338 __ct_4.119)  <4217>;
                    (__apl_r_low.3367 var=566) __uint__ls___uint___sint (__apl_r_low.3338 __ct_28.1669)  <4218>;
                    (__tmp.3368 var=567) __uint__ls___uint___sint (__apl_r_high.3342 __ct_28.1669)  <4219>;
                    (__apl_r_high.3369 var=568) __uint__or___uint___uint (__tmp.3368 __apl_carries.3366)  <4220>;
                    (__apl_p1lo.3395 var=678) __uint_mul___uint___uint (doubleTerm.1756 __tmp.1676)  <4252>;
                    (__apl_p1hi.3400 var=679) __uint_mulhu___uint___uint (doubleTerm.1756 __tmp.1676)  <4259>;
                    (__apl_r_low.3435 var=734) __uint_sub___uint___uint (__apl_r_low.3367 __apl_p1lo.3395)  <4303>;
                    (__apl_r_high.3436 var=735) __uint_sub___uint___uint (__apl_r_high.3369 __apl_p1hi.3400)  <4304>;
                    (__apl_r_high.3439 var=735) __uint__mi___uint___uint (__apl_r_high.3436 __tmp.3875)  <4307>;
                    (__tmp_high.3458 var=877) __uint__ad___uint___uint (__apl_r_high.3439 __ct_2147483648.3621)  <4330>;
                    (__tmp.3474 var=491) bool__ne___uint___uint (__tmp_high.3458 __ct_0.113)  <4350>;
                    (__ct_4294967168.3620 var=951) const ()  <4580>;
                    (__ct_2147483648.3621 var=952) const ()  <4582>;
                    (__tmp.3870 var=1071) __sint_slt___uint___uint (__apl_r_low.3002 __apl_p1lo.3298)  <5184>;
                    (__tmp.3875 var=1072) __sint_slt___uint___uint (__apl_r_low.3367 __apl_p1lo.3395)  <5192>;
                    (__trgt.4209 var=1183) const ()  <5791>;
                    () void_br_bool_t13s_s2 (__tmp.3474 __trgt.4209)  <5792>;
                    (__either.4210 var=1164) undefined ()  <5793>;
                    if {
                        {
                            () if_expr (__either.4210)  <2238>;
                        } #104
                        {
                            (__apl_r_low.3494 var=586) __uint_add___uint___uint (sigZ_low.3274 __ct_4294967168.3620)  <4376>;
                            (__apl_r_high.3495 var=587) __uint_add___uint___uint (__apl_r_high.3213 __ct_m1.2298)  <4377>;
                            (__apl_r_high.3498 var=587) __uint__pl___uint___uint (__apl_r_high.3495 __tmp.3880)  <4380>;
                            (__tmp.3880 var=1073) __sint_slt___uint___uint (__apl_r_low.3494 sigZ_low.3274)  <5200>;
                        } #2154 off=39
                        {
                            #1141 off=35
                            (__tmpd.3629 var=960) __uint__or___uint___uint (__apl_r_high.3439 __apl_r_low.3435)  <4630>;
                            (__tmp.4106 var=961) bool__eq___uint___uint (__tmpd.3629 __ct_0.113)  <5600>;
                            (__trgt.4206 var=1181) const ()  <5786>;
                            () void_br_bool_t13s_s2 (__tmp.4106 __trgt.4206)  <5787>;
                            (__either.4207 var=1164) undefined ()  <5788>;
                            if {
                                {
                                    () if_expr (__either.4207)  <2284>;
                                } #109
                                {
                                } #111 off=37
                                {
                                    (sigZ_low.3531 var=901) __uint__or___uint___uint (sigZ_low.3274 __ct_1.1617)  <4421>;
                                    (__trgt.4208 var=1182) const ()  <5789>;
                                    () void_j_t21s_s2 (__trgt.4208)  <5790>;
                                } #1151 off=36
                                {
                                    (sigZ_low.2266 var=377) merge (sigZ_low.3274 sigZ_low.3531)  <2820>;
                                } #112
                            } #108
                            #2175 off=38
                            (__trgt.4211 var=1184) const ()  <5794>;
                            () void_j_t21s_s2 (__trgt.4211)  <5795>;
                        } #106
                        {
                            (sigZ_low.2263 var=377) merge (__apl_r_low.3494 sigZ_low.2266)  <2817>;
                            (sigZ_high.2272 var=378) merge (__apl_r_high.3498 __apl_r_high.3213)  <2826>;
                        } #113
                    } #103
                    #2176 off=40
                    (__trgt.4214 var=1186) const ()  <5799>;
                    () void_j_t21s_s2 (__trgt.4214)  <5800>;
                } #101
                {
                    (sigZ_low.2260 var=377) merge (__apl_r_low.3189 sigZ_low.2263)  <2814>;
                    (sigZ_high.2269 var=378) merge (__apl_r_high.3213 sigZ_high.2272)  <2823>;
                } #115
            } #99
            #118 off=42
            (softfloat_roundPackToF64.1884 var=381) const ()  <2303>;
            (__R_SP.1900 var=12 __sp.1901 var=18) wr_res_reg (__tmp.1899 __sp.58)  <2318>;
            () void_j_t21s_s2 (softfloat_roundPackToF64.1884)  <5733>;
            call {
                (__tmp.1876 var=376 stl=X off=12) assign (__tmp.2315)  <2295>;
                (expZ.1877 var=67 stl=X off=13) assign (expZ.1627)  <2296>;
                (sigZ_low.1879 var=377 stl=X off=14) assign (sigZ_low.2260)  <2298>;
                (sigZ_high.1881 var=378 stl=X off=15) assign (sigZ_high.2269)  <2300>;
                (__la.1886 var=28 stl=X off=1) assign (__la.28)  <2305>;
                (__tmp.1888 var=384 stl=X off=10 __tmp.1892 var=385 stl=X off=11) Fsoftfloat_roundPackToF64 (__la.1886 __tmp.1876 expZ.1877 sigZ_low.1879 sigZ_high.1881)  <2306>;
                (__tmp.1889 var=384) deassign (__tmp.1888)  <2308>;
                (__tmp.1893 var=385) deassign (__tmp.1892)  <2311>;
            } #117 off=43
            #119 off=44 nxt=-2
            (__rt_low.1903 var=30 stl=X off=10) assign (__tmp.1889)  <2321>;
            () out (__rt_low.1903)  <2322>;
            (__rt_high.1905 var=31 stl=X off=11) assign (__tmp.1893)  <2324>;
            () out (__rt_high.1905)  <2325>;
            () sink (__sp.1901)  <2335>;
            sync {
            } #3 off=45
            #120 off=46
            (softfloat_propagateNaNF64UI.1998 var=395) const ()  <2424>;
            (__link.1999 var=396) w32_jal_t21s_s2 (softfloat_propagateNaNF64UI.1998)  <2425>;
            call {
                (uiA_low.1989 var=389 stl=X off=12) assign (a_low.37)  <2415>;
                (uiA_high.1991 var=390 stl=X off=13) assign (a_high.41)  <2417>;
                (uiB_low.1993 var=391 stl=X off=14) assign (b_low.46)  <2419>;
                (uiB_high.1995 var=392 stl=X off=15) assign (b_high.50)  <2421>;
                (__link.2000 var=396 stl=X off=1) assign (__link.1999)  <2426>;
                (__tmp.2002 var=398 stl=X off=10 __tmp.2006 var=399 stl=X off=11) Fsoftfloat_propagateNaNF64UI (__link.2000 uiA_low.1989 uiA_high.1991 uiB_low.1993 uiB_high.1995)  <2427>;
                (__tmp.2003 var=398) deassign (__tmp.2002)  <2429>;
                (__tmp.2007 var=399) deassign (__tmp.2006)  <2432>;
            } #121 off=47
            #122 off=48 nxt=-3 tgt=5
            () sink (__sp.58)  <2440>;
            () sync_sink (__tmp.2003) sid=196  <2835>;
            () sync_sink (__tmp.2007) sid=197  <2846>;
            (__trgt.4227 var=1198) const ()  <5824>;
            () void_j_t21s_s2 (__trgt.4227)  <5825>;
            sync {
            } #4 off=49
            #2168 off=50
            (__ct_2146959360.2291 var=430) const ()  <2850>;
            (__trgt.4217 var=1188) const ()  <5804>;
            () void_j_t21s_s2 (__trgt.4217)  <5805>;
        } #36
        {
            (uiZ_high.2290 var=406) merge (__apl_r_high.2531 __ct_2146959360.2291)  <2849>;
        } #124
    } #9
    sync {
        (uiZ_low.2277 var=405) sync_link (__ct_0.113) sid=196  <2831>;
        (uiZ_high.2285 var=406) sync_link (uiZ_high.2290) sid=197  <2842>;
    } #5 off=65
    #127 off=66 nxt=-2
    (__R_SP.2195 var=12 __sp.2196 var=18) wr_res_reg (__tmp.1899 __sp.58)  <2663>;
    () void___rts_jr_w32 (__la.28)  <2664>;
    (__rt_low.2198 var=30 stl=X off=10) assign (uiZ_low.2277)  <2666>;
    () out (__rt_low.2198)  <2667>;
    (__rt_high.2200 var=31 stl=X off=11) assign (uiZ_high.2285)  <2669>;
    () out (__rt_high.2200)  <2670>;
    () sink (__sp.2196)  <2680>;
} #0
0 : 'SoftFloat-3e/source/f64_div.c';
----------
0 : (0,44:0,0);
1 : (0,164:1,53);
2 : (0,169:1,56);
3 : (0,151:1,157);
4 : (0,156:1,160);
5 : (0,171:1,166);
9 : (0,81:4,31);
11 : (0,171:1,32);
13 : (0,82:8,32);
16 : (0,82:20,33);
17 : (0,82:8,35);
20 : (0,83:8,38);
22 : (0,83:29,39);
24 : (0,84:12,39);
27 : (0,84:24,40);
28 : (0,84:12,42);
30 : (0,85:12,45);
31 : (0,83:8,48);
34 : (0,166:4,55);
36 : (0,171:1,60);
38 : (0,89:4,61);
40 : (0,89:25,62);
42 : (0,90:8,62);
45 : (0,90:20,63);
46 : (0,90:8,65);
48 : (0,91:8,68);
49 : (0,89:4,71);
51 : (0,95:9,74);
52 : (0,95:4,74);
54 : (0,95:18,75);
56 : (0,96:8,75);
58 : (0,96:22,76);
60 : (0,97:12,76);
63 : (0,97:35,77);
64 : (0,97:12,79);
66 : (0,101:12,82);
67 : (0,96:8,85);
69 : (0,103:52,88);
70 : (0,103:21,88);
71 : (0,95:18,93);
72 : (0,95:4,94);
74 : (0,107:9,97);
75 : (0,107:4,97);
77 : (0,107:18,98);
79 : (0,108:8,98);
82 : (0,108:22,99);
83 : (0,108:8,101);
85 : (0,109:52,104);
86 : (0,109:21,104);
87 : (0,107:18,109);
88 : (0,107:4,110);
91 : (0,118:4,116);
97 : (0,125:14,126);
99 : (0,135:4,132);
101 : (0,135:33,133);
103 : (0,142:8,137);
106 : (0,144:15,141);
108 : (0,145:12,141);
111 : (0,145:12,144);
114 : (0,135:4,152);
117 : (0,148:11,155);
118 : (0,148:4,155);
119 : (0,148:4,155);
120 : (0,152:44,158);
121 : (0,152:10,158);
122 : (0,153:4,159);
127 : (0,173:4,168);
296 : (0,82:8,32);
375 : (0,118:14,116);
376 : (0,118:14,116);
377 : (0,118:14,116);
378 : (0,118:14,116);
379 : (0,118:14,116);
380 : (0,118:14,116);
381 : (0,118:14,116);
382 : (0,118:14,116);
383 : (0,118:14,116);
384 : (0,118:14,116);
385 : (0,118:14,116);
386 : (0,118:14,116);
1141 : (0,145:12,141);
1151 : (0,145:28,142);
1183 : (0,108:13,98);
1250 : (0,97:17,76);
1340 : (0,84:12,39);
1378 : (0,125:14,126);
2055 : (0,135:27,132);
2111 : (0,142:8,137);
2154 : (0,143:17,138);
----------
64 : (0,44:10,0);
65 : (0,44:10,0);
67 : (0,44:10,0);
68 : (0,44:10,0);
70 : (0,46:19,0);
81 : (0,57:23,0);
83 : (0,57:23,0);
124 : (0,68:6,0);
155 : (0,71:40,0);
157 : (0,71:40,23);
194 : (0,76:40,28);
200 : (0,78:18,30);
206 : (0,81:14,31);
246 : (0,81:4,31);
289 : (0,82:8,32);
455 : (0,83:8,38);
498 : (0,84:12,39);
969 : (0,89:4,61);
1012 : (0,90:8,62);
1302 : (0,95:4,74);
1346 : (0,96:8,75);
1392 : (0,97:12,76);
1639 : (0,103:19,0);
1641 : (0,103:52,0);
1643 : (0,103:52,0);
1647 : (0,103:21,88);
1648 : (0,103:21,0);
1649 : (0,103:21,88);
1654 : (0,104:25,90);
1659 : (0,105:25,91);
1664 : (0,105:25,91);
1674 : (0,95:4,96);
1676 : (0,95:4,96);
1677 : (0,95:4,96);
1678 : (0,95:4,96);
1679 : (0,95:4,96);
1691 : (0,95:4,96);
1748 : (0,107:4,97);
1792 : (0,108:8,98);
1916 : (0,109:19,0);
1918 : (0,109:52,0);
1920 : (0,109:52,0);
1924 : (0,109:21,104);
1925 : (0,109:21,0);
1926 : (0,109:21,104);
1931 : (0,110:25,106);
1936 : (0,111:25,107);
1941 : (0,111:25,107);
1962 : (0,107:4,112);
1982 : (0,115:16,113);
1983 : (0,115:23,0);
1985 : (0,115:23,113);
2032 : (0,118:4,116);
2033 : (0,119:8,0);
2035 : (0,119:8,117);
2036 : (0,120:17,0);
2039 : (0,122:17,0);
2043 : (0,118:4,124);
2051 : (0,125:45,0);
2055 : (0,125:14,126);
2056 : (0,125:14,0);
2057 : (0,125:14,126);
2062 : (0,125:52,126);
2076 : (0,127:23,128);
2085 : (0,129:70,0);
2092 : (0,130:59,129);
2164 : (0,135:4,132);
2165 : (0,136:10,0);
2167 : (0,136:10,133);
2173 : (0,138:22,135);
2238 : (0,142:8,137);
2284 : (0,145:12,141);
2295 : (0,148:37,0);
2296 : (0,148:44,0);
2298 : (0,148:50,0);
2300 : (0,148:50,0);
2305 : (0,148:11,0);
2306 : (0,148:11,155);
2315 : (0,148:4,0);
2317 : (0,148:4,0);
2318 : (0,148:4,155);
2321 : (0,148:35,0);
2324 : (0,148:35,0);
2415 : (0,152:39,0);
2417 : (0,152:39,0);
2419 : (0,152:44,0);
2421 : (0,152:44,0);
2425 : (0,152:10,158);
2426 : (0,152:10,0);
2427 : (0,152:10,158);
2663 : (0,173:4,168);
2664 : (0,173:4,168);
2666 : (0,173:13,0);
2669 : (0,173:13,0);
2850 : (0,160:10,0);
2858 : (0,119:8,0);
2860 : (0,125:52,0);
2868 : (0,57:23,0);
2870 : (0,105:25,0);
2871 : (0,57:23,0);
2941 : (0,70:37,22);
2992 : (0,71:34,23);
3015 : (0,72:19,24);
3047 : (0,75:37,27);
3098 : (0,76:34,28);
3121 : (0,77:19,29);
3187 : (0,165:47,54);
3213 : (0,165:53,54);
3246 : (0,97:25,76);
3247 : (0,97:25,76);
3268 : (0,116:9,114);
3289 : (0,117:9,115);
3309 : (0,118:14,116);
3312 : (0,118:14,116);
3314 : (0,118:14,116);
3315 : (0,118:14,116);
3316 : (0,118:14,116);
3317 : (0,118:14,116);
3338 : (0,120:13,118);
3339 : (0,120:13,118);
3340 : (0,120:13,118);
3341 : (0,120:13,118);
3372 : (0,122:13,121);
3373 : (0,122:13,121);
3374 : (0,122:13,121);
3375 : (0,122:13,121);
3406 : (0,124:9,125);
3407 : (0,124:9,125);
3408 : (0,124:9,125);
3409 : (0,124:9,125);
3516 : (0,126:36,127);
3598 : (0,129:44,129);
3605 : (0,129:44,129);
3649 : (0,129:15,129);
3650 : (0,129:15,129);
3653 : (0,129:15,129);
3683 : (0,129:68,129);
3684 : (0,129:68,129);
3685 : (0,129:68,129);
3686 : (0,129:68,129);
3718 : (0,130:41,129);
3725 : (0,130:41,129);
3769 : (0,130:12,129);
3770 : (0,130:12,129);
3773 : (0,130:12,129);
3845 : (0,131:31,130);
3927 : (0,131:63,130);
3997 : (0,132:60,131);
3998 : (0,132:60,131);
4027 : (0,132:40,131);
4060 : (0,135:15,132);
4102 : (0,137:13,134);
4132 : (0,140:47,136);
4139 : (0,140:47,136);
4183 : (0,140:18,136);
4184 : (0,140:18,136);
4187 : (0,140:18,136);
4217 : (0,140:71,136);
4218 : (0,140:71,136);
4219 : (0,140:71,136);
4220 : (0,140:71,136);
4252 : (0,141:45,136);
4259 : (0,141:45,136);
4303 : (0,141:16,136);
4304 : (0,141:16,136);
4307 : (0,141:16,136);
4330 : (0,142:17,137);
4350 : (0,142:8,137);
4376 : (0,143:17,138);
4377 : (0,143:17,138);
4380 : (0,143:17,138);
4421 : (0,145:28,142);
4528 : (0,70:37,0);
4532 : (0,71:34,0);
4538 : (0,120:13,0);
4542 : (0,122:13,0);
4550 : (0,72:21,0);
4552 : (0,165:79,0);
4560 : (0,116:12,0);
4576 : (0,135:15,0);
4578 : (0,135:27,0);
4580 : (0,137:16,0);
4582 : (0,142:19,0);
4626 : (0,82:8,32);
4627 : (0,82:8,32);
4628 : (0,84:12,39);
4630 : (0,145:12,141);
4634 : (0,97:17,76);
4637 : (0,108:13,98);
4651 : (0,97:25,76);
5143 : (0,78:18,30);
5152 : (0,78:18,30);
5160 : (0,129:15,129);
5168 : (0,130:12,129);
5184 : (0,140:18,136);
5192 : (0,141:16,136);
5200 : (0,143:17,138);
5596 : (0,97:17,76);
5597 : (0,95:9,74);
5598 : (0,107:9,97);
5599 : (0,118:14,116);
5600 : (0,145:12,141);
5601 : (0,135:27,132);
5733 : (0,148:11,155);
5735 : (0,82:8,32);
5739 : (0,84:12,39);
5742 : (0,83:8,38);
5746 : (0,90:8,62);
5749 : (0,89:4,61);
5753 : (0,97:12,76);
5756 : (0,96:8,75);
5760 : (0,95:4,74);
5765 : (0,108:8,98);
5769 : (0,107:4,97);
5774 : (0,118:14,116);
5777 : (0,118:14,116);
5782 : (0,118:4,116);
5787 : (0,145:12,141);
5792 : (0,142:8,137);
5797 : (0,135:4,132);
5802 : (0,81:4,31);

