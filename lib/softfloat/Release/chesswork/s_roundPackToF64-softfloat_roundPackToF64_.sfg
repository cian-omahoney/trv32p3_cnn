
// File generated by noodle version U-2022.12#33f3808fcb#221128, Tue Mar 19 17:29:46 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -ISoftFloat-3e/source/include -ISoftFloat-3e/source/riscv -ISoftFloat-3e/build/chess -I../runtime/include -DCHESS_CXX_ATTRIBUTES -DSOFTFLOAT_NO_EXCEPTIONS -DINLINE_LEVEL=5 -DSOFTFLOAT_FAST_DIV32TO16 -D__tct_patch__=0 +Oextc -itrv32p3_cnn_chess.h +Opmsa +NOrlt +wRelease/chesswork SoftFloat-3e/source/s_roundPackToF64.c +Q0=+Sal,+Sca,+Osps,-Wflla,+Opmsa,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+Opmsa,+NOrlt trv32p3_cnn


/***
!!  float64_t softfloat_roundPackToF64(bool, int_fast16_t, uint_fast64_t)
Fsoftfloat_roundPackToF64 : user_defined, called {
    fnm : "softfloat_roundPackToF64" 'float64_t softfloat_roundPackToF64(bool, int_fast16_t, uint_fast64_t)';
    arg : ( w32:i w32:r w32:r w32:i w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] X[14] X[15] );
    frm : ( );
    llv : 0 0 0 0 0 ;
}
****
***/

[
    0 : softfloat_roundPackToF64 typ=u08 bnd=e stl=PMb
   12 : __R_SP typ=w32 bnd=d stl=SP
   18 : __sp typ=w32 bnd=b stl=SP
   20 : __rd___sp typ=w32 bnd=m
   21 : __la typ=w32 bnd=p tref=w32__
   23 : __rt_low typ=w32 bnd=m tref=__uint__
   24 : __rt_high typ=w32 bnd=m tref=__uint__
   25 : sign typ=w32 bnd=p tref=bool__
   27 : exp typ=w32 bnd=p tref=int_fast16_t__
   29 : sig_low typ=w32 bnd=m tref=__uint__
   30 : sig_high typ=w32 bnd=m tref=__uint__
   31 : __ct_m8S0 typ=w32 val=0S0 bnd=m
   33 : __tmp typ=w32 bnd=m
   42 : roundBits typ=w32 bnd=m tref=uint_fast16_t__
   44 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   49 : __ct_512 typ=w32 val=512f bnd=m
   75 : __ct_2045 typ=w32 val=2045f bnd=m
   77 : __tmp typ=__ushort bnd=m
   79 : __tmp typ=bool bnd=m
   82 : __tmp typ=bool bnd=m
   85 : __tmp typ=w32 bnd=m
   96 : __tmp typ=bool bnd=m
  103 : __tmp typ=bool bnd=m
  104 : __tmp typ=bool bnd=m
  123 : __ct_10 typ=w32 val=10f bnd=m
  131 : __tmp typ=w32 bnd=m
  138 : __tmp typ=w32 bnd=m
  161 : uiZ_low typ=w32 bnd=m tref=__uint__
  162 : uiZ_high typ=w32 bnd=m tref=__uint__
  174 : __ct_8s0 typ=w32 val=0s0 bnd=m
  176 : __tmp typ=w32 bnd=m
  199 : __tmp_low typ=w32 bnd=m
  209 : __ct_63 typ=w32 val=63f bnd=m
  210 : __tmp typ=bool bnd=m
  213 : __tmp typ=w32 bnd=m
  214 : __tmp typ=w32 bnd=m
  224 : __tmp_low typ=w32 bnd=m
  228 : sig_low typ=w32 bnd=m
  229 : sig_high typ=w32 bnd=m
  241 : __apl_r_low typ=w32 bnd=m tref=__uint__
  242 : __apl_r_high typ=w32 bnd=m tref=__uint__
  260 : __tmp typ=bool bnd=m
  261 : __tmp typ=bool bnd=m
  269 : __rt_low typ=w32 bnd=m tref=__uint__
  270 : __rt_high typ=w32 bnd=m tref=__uint__
  274 : __apl_ff typ=w32 bnd=m tref=__sint__
  275 : __apl_carries typ=w32 bnd=m tref=__uint__
  277 : __tmp typ=bool bnd=m
  278 : __tmp typ=bool bnd=m
  279 : __tmp typ=w32 bnd=m
  280 : __apl_r_low typ=w32 bnd=m tref=__uint__
  281 : __tmp typ=w32 bnd=m
  282 : __apl_r_high typ=w32 bnd=m tref=__uint__
  303 : sig_low typ=w32 bnd=m
  304 : sig_high typ=w32 bnd=m
  307 : __rt_low typ=w32 bnd=m tref=__uint__
  308 : __rt_high typ=w32 bnd=m tref=__uint__
  312 : __apl_ff typ=w32 bnd=m tref=__sint__
  313 : __apl_carries typ=w32 bnd=m tref=__uint__
  315 : __tmp typ=bool bnd=m
  316 : __tmp typ=bool bnd=m
  317 : __tmp typ=w32 bnd=m
  318 : __tmp typ=w32 bnd=m
  319 : __apl_r_low typ=w32 bnd=m tref=__uint__
  320 : __apl_r_high typ=w32 bnd=m tref=__uint__
  322 : __ct_m32 typ=w32 val=-32f bnd=m
  333 : __tmp_low typ=w32 bnd=m
  335 : __tmp_high typ=w32 bnd=m
  339 : sig_low typ=w32 bnd=m
  341 : sig_high typ=w32 bnd=m
  384 : __ct_31 typ=w32 val=31f bnd=m
  387 : __ct_22 typ=w32 val=22f bnd=m
  388 : __ct_20 typ=w32 val=20f bnd=m
  390 : __ct_1023 typ=w32 val=1023f bnd=m
  391 : __ct_2147483648 typ=t20s_rp12 val=-524288f bnd=m
  392 : __ct_2146435072 typ=t20s_rp12 val=524032f bnd=m
  395 : __tmpd typ=w32 bnd=m
  396 : __tmp typ=bool bnd=m
  397 : __tmp_low typ=w32 bnd=m
  399 : __tmp_high typ=w32 bnd=m
  403 : __tmp_low typ=w32 bnd=m
  405 : __tmp_high typ=w32 bnd=m
  428 : __tmp_low typ=w32 bnd=m
  430 : __tmp_high typ=w32 bnd=m
  443 : __ct_4294967295 typ=w32 val=-1f bnd=m
  450 : __tmpd typ=w32 bnd=m
  452 : __tmpd typ=w32 bnd=m
  458 : __tmp typ=w32 bnd=m
  466 : __tmp_high typ=w32 bnd=m
  495 : __tmp_high typ=w32 bnd=m
  499 : __tmp_high typ=w32 bnd=m
  521 : __tmp typ=w32 bnd=m
  522 : __tmp typ=w32 bnd=m
  568 : __true typ=bool val=1f bnd=m
  570 : __either typ=bool bnd=m
  571 : __trgt typ=t13s_s2 val=0j bnd=m
  572 : __trgt typ=t21s_s2 val=0j bnd=m
  573 : __trgt typ=t13s_s2 val=0j bnd=m
  574 : __trgt typ=t21s_s2 val=0j bnd=m
  575 : __trgt typ=t13s_s2 val=0j bnd=m
  576 : __trgt typ=t21s_s2 val=0j bnd=m
  577 : __trgt typ=t13s_s2 val=0j bnd=m
  578 : __trgt typ=t21s_s2 val=0j bnd=m
  579 : __trgt typ=t13s_s2 val=0j bnd=m
  580 : __trgt typ=t21s_s2 val=0j bnd=m
  581 : __trgt typ=t13s_s2 val=0j bnd=m
  582 : __trgt typ=t13s_s2 val=0j bnd=m
  583 : __trgt typ=t13s_s2 val=0j bnd=m
  584 : __trgt typ=t13s_s2 val=0j bnd=m
  585 : __trgt typ=t21s_s2 val=0j bnd=m
  586 : __trgt typ=t13s_s2 val=0j bnd=m
  587 : __trgt typ=t21s_s2 val=0j bnd=m
  588 : __trgt typ=t13s_s2 val=0j bnd=m
  589 : __trgt typ=t21s_s2 val=0j bnd=m
  590 : __trgt typ=t21s_s2 val=0j bnd=m
]
Fsoftfloat_roundPackToF64 {
    #576 off=0
    (__R_SP.11 var=12) st_def ()  <22>;
    (__sp.17 var=18) source ()  <28>;
    (__la.20 var=21 stl=X off=1) inp ()  <31>;
    (__la.21 var=21) deassign (__la.20)  <32>;
    (sign.28 var=25 stl=X off=12) inp ()  <39>;
    (sign.29 var=25) deassign (sign.28)  <40>;
    (exp.31 var=27 stl=X off=13) inp ()  <42>;
    (exp.32 var=27) deassign (exp.31)  <43>;
    (sig_low.35 var=29 stl=X off=14) inp ()  <46>;
    (sig_low.36 var=29) deassign (sig_low.35)  <47>;
    (sig_high.39 var=30 stl=X off=15) inp ()  <50>;
    (sig_high.40 var=30) deassign (sig_high.39)  <51>;
    (__rd___sp.43 var=20) rd_res_reg (__R_SP.11 __sp.17)  <54>;
    (__ct_m8S0.44 var=31) const ()  <55>;
    (__tmp.46 var=33) __Pvoid__pl___Pvoid___sint (__rd___sp.43 __ct_m8S0.44)  <57>;
    (__R_SP.47 var=12 __sp.48 var=18) wr_res_reg (__tmp.46 __sp.17)  <58>;
    (__rd___sp.50 var=20) rd_res_reg (__R_SP.11 __sp.48)  <61>;
    (__ct_0.65 var=44) const ()  <76>;
    (__ct_512.70 var=49) const ()  <81>;
    (__ct_2045.169 var=75) const ()  <184>;
    (__tmp.171 var=77) __ushort___ushort___sint (exp.32)  <186>;
    (__tmp_low.532 var=199) __uint__ad___uint___uint (sig_low.36 __ct_1023.885)  <650>;
    (__apl_r_high.640 var=282) __uint__ls___uint___sint (__tmp.1069 __ct_31.879)  <783>;
    (__ct_31.879 var=384) const ()  <1092>;
    (__ct_1023.885 var=390) const ()  <1104>;
    (__tmp.1069 var=458) __sint_sne0___sint (sign.29)  <1418>;
    (__tmp.1247 var=79) bool__lt___sint___sint (__tmp.171 __ct_2045.169)  <1791>;
    (__trgt.1303 var=586) const ()  <1892>;
    () void_br_bool_t13s_s2 (__tmp.1247 __trgt.1303)  <1893>;
    (__either.1304 var=570) undefined ()  <1894>;
    if {
        {
            () if_expr (__either.1304)  <207>;
        } #31
        {
        } #53 off=25
        {
            #33 off=1
            (__tmp.194 var=82) bool__lt___sint___sint (exp.32 __ct_0.65)  <210>;
            (__trgt.1300 var=584) const ()  <1887>;
            () void_br_bool_t13s_s2 (__tmp.194 __trgt.1300)  <1888>;
            (__either.1301 var=570) undefined ()  <1889>;
            if {
                {
                    () if_expr (__either.1301)  <229>;
                } #35
                {
                    #98 off=8
                    (__tmp.215 var=85) __sint__mi___sint___sint (__ct_0.65 exp.32)  <232>;
                    (__ct_63.547 var=209) const ()  <669>;
                    (__tmp.548 var=210) bool__lt___uint___uint (__tmp.215 __ct_63.547)  <670>;
                    (__trgt.1289 var=579) const ()  <1870>;
                    () void_br_bool_t13s_s2 (__tmp.548 __trgt.1289)  <1871>;
                    (__either.1290 var=570) undefined ()  <1872>;
                    if {
                        {
                            () if_expr (__either.1290)  <673>;
                        } #100
                        {
                            #346 off=10
                            (__tmp.914 var=315) bool__eq___sint___sint (__tmp.215 __ct_0.65)  <1155>;
                            (__ct_m32.915 var=322) const ()  <1156>;
                            (__trgt.1280 var=573) const ()  <1855>;
                            () void_br_bool_t13s_s2 (__tmp.914 __trgt.1280)  <1856>;
                            (__either.1281 var=570) undefined ()  <1857>;
                            if {
                                {
                                    () if_expr (__either.1281)  <1158>;
                                } #348
                                {
                                } #349 off=15
                                {
                                    #351 off=11
                                    (__apl_ff.917 var=312) __sint__pl___sint___sint (__tmp.215 __ct_m32.915)  <1159>;
                                    (__tmp.918 var=316) bool__lt___sint___sint (__apl_ff.917 __ct_0.65)  <1160>;
                                    (__trgt.1277 var=571) const ()  <1850>;
                                    () void_br_bool_t13s_s2 (__tmp.918 __trgt.1277)  <1851>;
                                    (__either.1278 var=570) undefined ()  <1852>;
                                    if {
                                        {
                                            () if_expr (__either.1278)  <1161>;
                                        } #353
                                        {
                                            (__tmp.919 var=317) __sint__mi___sint___sint (__ct_0.65 __apl_ff.917)  <1162>;
                                            (__apl_carries.920 var=313) __uint__ls___uint___sint (sig_high.40 __tmp.919)  <1163>;
                                            (__tmp.921 var=318) __uint__rs___uint___sint (sig_low.36 __tmp.215)  <1164>;
                                            (__apl_r_low.922 var=319) __uint__or___uint___uint (__tmp.921 __apl_carries.920)  <1165>;
                                            (__apl_r_high.923 var=320) __uint__rs___uint___sint (sig_high.40 __tmp.215)  <1166>;
                                        } #354 off=13
                                        {
                                            (__apl_r_low.924 var=319) __uint__rs___uint___sint (sig_high.40 __apl_ff.917)  <1167>;
                                            (__trgt.1279 var=572) const ()  <1853>;
                                            () void_j_t21s_s2 (__trgt.1279)  <1854>;
                                        } #355 off=12
                                        {
                                            (__rt_low.925 var=307) merge (__apl_r_low.922 __apl_r_low.924)  <1168>;
                                            (__rt_high.926 var=308) merge (__apl_r_high.923 __ct_0.65)  <1169>;
                                        } #356
                                    } #352
                                    #854 off=14
                                    (__trgt.1282 var=574) const ()  <1858>;
                                    () void_j_t21s_s2 (__trgt.1282)  <1859>;
                                } #350
                                {
                                    (__tmp_low.927 var=397) merge (sig_low.36 __rt_low.925)  <1170>;
                                    (__tmp_high.928 var=399) merge (sig_high.40 __rt_high.926)  <1171>;
                                } #357
                            } #347
                            #362 off=16
                            (__tmp.552 var=213) __uint__mi___uint___uint (__ct_0.65 __tmp.215)  <675>;
                            (__tmp.553 var=214) __uint__ad___uint___uint (__tmp.552 __ct_63.547)  <676>;
                            (__tmp.942 var=277) bool__eq___sint___sint (__tmp.553 __ct_0.65)  <1189>;
                            (__trgt.1286 var=577) const ()  <1865>;
                            () void_br_bool_t13s_s2 (__tmp.942 __trgt.1286)  <1866>;
                            (__either.1287 var=570) undefined ()  <1867>;
                            if {
                                {
                                    () if_expr (__either.1287)  <1192>;
                                } #364
                                {
                                } #365 off=21
                                {
                                    #367 off=17
                                    (__apl_ff.945 var=274) __sint__pl___sint___sint (__tmp.553 __ct_m32.915)  <1193>;
                                    (__tmp.946 var=278) bool__lt___sint___sint (__apl_ff.945 __ct_0.65)  <1194>;
                                    (__trgt.1283 var=575) const ()  <1860>;
                                    () void_br_bool_t13s_s2 (__tmp.946 __trgt.1283)  <1861>;
                                    (__either.1284 var=570) undefined ()  <1862>;
                                    if {
                                        {
                                            () if_expr (__either.1284)  <1195>;
                                        } #369
                                        {
                                            (__tmp.947 var=279) __sint__mi___sint___sint (__ct_0.65 __apl_ff.945)  <1196>;
                                            (__apl_carries.948 var=275) __uint__rs___uint___sint (sig_low.36 __tmp.947)  <1197>;
                                            (__apl_r_low.949 var=280) __uint__ls___uint___sint (sig_low.36 __tmp.553)  <1198>;
                                            (__tmp.950 var=281) __uint__ls___uint___sint (sig_high.40 __tmp.553)  <1199>;
                                            (__apl_r_high.951 var=282) __uint__or___uint___uint (__tmp.950 __apl_carries.948)  <1200>;
                                        } #370 off=19
                                        {
                                            (__apl_r_high.952 var=282) __uint__ls___uint___sint (sig_low.36 __apl_ff.945)  <1201>;
                                            (__trgt.1285 var=576) const ()  <1863>;
                                            () void_j_t21s_s2 (__trgt.1285)  <1864>;
                                        } #371 off=18
                                        {
                                            (__rt_low.953 var=269) merge (__apl_r_low.949 __ct_0.65)  <1202>;
                                            (__rt_high.954 var=270) merge (__apl_r_high.951 __apl_r_high.952)  <1203>;
                                        } #372
                                    } #368
                                    #855 off=20
                                    (__trgt.1288 var=578) const ()  <1868>;
                                    () void_j_t21s_s2 (__trgt.1288)  <1869>;
                                } #366
                                {
                                    (__tmp_low.955 var=403) merge (sig_low.36 __rt_low.953)  <1204>;
                                    (__tmp_high.956 var=405) merge (sig_high.40 __rt_high.954)  <1205>;
                                } #373
                            } #363
                            #555 off=22
                            (__tmp_low.983 var=428) __uint__or___uint___uint (__tmp_low.927 __tmp.1075)  <1240>;
                            (__tmp_high.984 var=430) __uint__or___uint___uint (__tmp_high.928 __tmp_high.1097)  <1241>;
                            (__tmpd.1021 var=450) __uint__or___uint___uint (__tmp_high.956 __tmp_low.955)  <1330>;
                            (__tmp.1075 var=458) __sint_sne0___sint (__tmpd.1021)  <1427>;
                            (__tmp_high.1097 var=495) __sint__rs___sint___sint (__tmp.1075 __ct_31.879)  <1478>;
                        } #101
                        {
                            (__tmpd.1023 var=452) __uint__or___uint___uint (sig_high.40 sig_low.36)  <1332>;
                            (__tmp.1081 var=458) __sint_sne0___sint (__tmpd.1023)  <1436>;
                            (__tmp_high.1107 var=499) __sint__rs___sint___sint (__tmp.1081 __ct_31.879)  <1492>;
                            (__trgt.1291 var=580) const ()  <1873>;
                            () void_j_t21s_s2 (__trgt.1291)  <1874>;
                        } #563 off=9
                        {
                            (sig_low.888 var=228) merge (__tmp_low.983 __tmp.1081)  <1108>;
                            (sig_high.891 var=229) merge (__tmp_high.984 __tmp_high.1107)  <1111>;
                        } #103
                    } #99
                    #583 off=23
                    (__tmp_low.566 var=224) __uint__ad___uint___uint (sig_low.888 __ct_1023.885)  <692>;
                } #36
                {
                    #38 off=2
                    (__tmp.226 var=96) bool__lt___sint___sint (__ct_2045.169 exp.32)  <243>;
                    (__trgt.1294 var=582) const ()  <1878>;
                    () void_br_bool_t13s_s2 (__tmp.226 __trgt.1294)  <1879>;
                    (__either.1295 var=570) undefined ()  <1880>;
                    if {
                        {
                            () if_expr (__either.1295)  <262>;
                        } #40
                        {
                            (__true.1296 var=568) const ()  <1881>;
                        } #41
                        {
                            #798 off=3
                            (__apl_r_low.590 var=241) __uint_add___uint___uint (sig_low.36 __ct_512.70)  <722>;
                            (__apl_r_high.591 var=242) __uint_add___uint___uint (sig_high.40 __ct_0.65)  <723>;
                            (__apl_r_high.594 var=242) __uint__pl___uint___uint (__apl_r_high.591 __tmp.1152)  <726>;
                            (__tmp.614 var=260) bool__lt___uint___uint (__ct_2147483648.892 __apl_r_high.594)  <750>;
                            (__ct_2147483648.892 var=391) const ()  <1112>;
                            (__tmp.1152 var=521) __sint_slt___uint___uint (__apl_r_low.590 sig_low.36)  <1616>;
                            (__trgt.1292 var=581) const ()  <1875>;
                            () void_br_bool_t13s_s2 (__tmp.614 __trgt.1292)  <1876>;
                            (__either.1293 var=570) undefined ()  <1877>;
                            if {
                                {
                                    () if_expr (__either.1293)  <753>;
                                } #137
                                {
                                    (__true.1297 var=568) const ()  <1882>;
                                } #138
                                {
                                    (__tmp.617 var=261) bool__eq___uint___uint (__apl_r_high.594 __ct_2147483648.892)  <754>;
                                    (__trgt.1298 var=583) const ()  <1883>;
                                    () void_br_bool_t13s_s2 (__tmp.617 __trgt.1298)  <1884>;
                                    (__either.1299 var=570) undefined ()  <1885>;
                                } #140 off=4
                                {
                                    (__tmp.620 var=103) merge (__true.1297 __either.1299)  <758>;
                                } #146
                            } #136
                        } #42
                        {
                            (__tmp.252 var=104) merge (__true.1296 __tmp.620)  <270>;
                        } #43
                    } #39
                    if {
                        {
                            () if_expr (__tmp.252)  <289>;
                            () chess_rear_then ()  <1886>;
                        } #46
                        {
                            () sink (__sp.48)  <311>;
                            () sync_sink (__ct_0.65) sid=19  <619>;
                            () sync_sink (__apl_r_high.661) sid=20  <623>;
                            (__apl_r_high.661 var=242) __uint__pl___uint___uint (__apl_r_high.640 __ct_2146435072.893)  <809>;
                            (__ct_2146435072.893 var=392) const ()  <1114>;
                            (__trgt.1309 var=590) const ()  <1902>;
                            () void_j_t21s_s2 (__trgt.1309)  <1903>;
                        } #49 off=6 nxt=-3 tgt=1
                        {
                        } #50 off=5
                        {
                        } #51
                    } #45
                    #856 off=7
                    (__trgt.1302 var=585) const ()  <1890>;
                    () void_j_t21s_s2 (__trgt.1302)  <1891>;
                } #37
                {
                    (roundBits.335 var=42) merge (__tmp_low.566 __tmp_low.532)  <378>;
                    (exp.337 var=27) merge (__ct_0.65 exp.32)  <380>;
                    (sig_low.899 var=303) merge (sig_low.888 sig_low.36)  <1121>;
                    (sig_high.905 var=304) merge (sig_high.891 sig_high.40)  <1127>;
                } #52
            } #34
            #857 off=24
            (__trgt.1305 var=587) const ()  <1895>;
            () void_j_t21s_s2 (__trgt.1305)  <1896>;
        } #32
        {
            (roundBits.353 var=42) merge (__tmp_low.532 roundBits.335)  <396>;
            (exp.355 var=27) merge (exp.32 exp.337)  <398>;
            (sig_low.896 var=303) merge (sig_low.36 sig_low.899)  <1118>;
            (sig_high.902 var=304) merge (sig_high.40 sig_high.905)  <1124>;
        } #54
    } #30
    #832 off=26
    (__ct_10.361 var=123) const ()  <404>;
    (__tmp.387 var=131) __uint__er___uint___uint (roundBits.353 __ct_512.70)  <431>;
    (__apl_r_low.696 var=241) __uint_add___uint___uint (sig_low.896 __ct_512.70)  <851>;
    (__apl_r_high.697 var=242) __uint_add___uint___uint (sig_high.902 __ct_0.65)  <852>;
    (__apl_r_high.700 var=242) __uint__pl___uint___uint (__apl_r_high.697 __tmp.1157)  <855>;
    (__apl_carries.726 var=313) __uint__ls___uint___sint (__apl_r_high.700 __ct_22.882)  <887>;
    (__tmp.727 var=318) __uint__rs___uint___sint (__apl_r_low.696 __ct_10.361)  <888>;
    (__apl_r_low.728 var=319) __uint__or___uint___uint (__tmp.727 __apl_carries.726)  <889>;
    (__apl_r_high.729 var=320) __uint__rs___uint___sint (__apl_r_high.700 __ct_10.361)  <890>;
    (sig_low.761 var=339) __uint__ad___uint___uint (__apl_r_low.728 __tmp_low.1011)  <930>;
    (sig_high.762 var=341) __uint__ad___uint___uint (__apl_r_high.729 __tmp_high.1015)  <931>;
    (__ct_22.882 var=387) const ()  <1098>;
    (__tmpd.908 var=395) __uint__or___uint___uint (sig_high.762 sig_low.761)  <1148>;
    (__ct_4294967295.1010 var=443) const ()  <1275>;
    (__tmp_low.1011 var=333) __uint__er___uint___uint (__tmp.1163 __ct_4294967295.1010)  <1276>;
    (__tmp_high.1015 var=335) __uint__er___uint___uint (__tmp_high.1033 __ct_4294967295.1010)  <1283>;
    (__tmp_high.1033 var=466) __sint__rs___sint___sint (__tmp.1163 __ct_31.879)  <1347>;
    (__tmp.1157 var=522) __sint_slt___uint___uint (__apl_r_low.696 sig_low.896)  <1624>;
    (__tmp.1163 var=138) __sint_seq0___sint (__tmp.387)  <1633>;
    (__tmp.1248 var=396) bool__ne___uint___uint (__tmpd.908 __ct_0.65)  <1792>;
    (__trgt.1306 var=588) const ()  <1897>;
    () void_br_bool_t13s_s2 (__tmp.1248 __trgt.1306)  <1898>;
    (__either.1307 var=570) undefined ()  <1899>;
    if {
        {
            () if_expr (__either.1307)  <464>;
        } #63
        {
        } #65 off=28
        {
            (__trgt.1308 var=589) const ()  <1900>;
            () void_j_t21s_s2 (__trgt.1308)  <1901>;
        } #64 off=27
        {
            (exp.422 var=27) merge (exp.355 __ct_0.65)  <467>;
        } #66
    } #62
    #478 off=29
    (__apl_r_high.788 var=282) __uint__ls___uint___sint (exp.422 __ct_20.883)  <963>;
    (__apl_r_high.809 var=242) __uint__pl___uint___uint (__apl_r_high.640 __apl_r_high.788)  <989>;
    (__apl_r_high.840 var=242) __uint__pl___uint___uint (__apl_r_high.809 sig_high.762)  <1026>;
    (__ct_20.883 var=388) const ()  <1100>;
    sync {
        (uiZ_low.519 var=161) sync_link (sig_low.761) sid=19  <617>;
        (uiZ_high.522 var=162) sync_link (__apl_r_high.840) sid=20  <621>;
    } #1 off=30
    #70 off=31 nxt=-2
    (__ct_8s0.476 var=174) const ()  <519>;
    (__tmp.478 var=176) __Pvoid__pl___Pvoid___sint (__rd___sp.50 __ct_8s0.476)  <521>;
    (__R_SP.479 var=12 __sp.480 var=18) wr_res_reg (__tmp.478 __sp.48)  <522>;
    () void___rts_jr_w32 (__la.21)  <523>;
    (__rt_low.482 var=23 stl=X off=10) assign (uiZ_low.519)  <525>;
    () out (__rt_low.482)  <526>;
    (__rt_high.484 var=24 stl=X off=11) assign (uiZ_high.522)  <528>;
    () out (__rt_high.484)  <529>;
    () sink (__sp.480)  <537>;
} #0
0 : 'SoftFloat-3e/source/s_roundPackToF64.c';
----------
0 : (0,43:0,0);
1 : (0,122:1,71);
30 : (0,70:4,29);
32 : (0,70:35,30);
33 : (0,71:17,30);
34 : (0,71:8,30);
36 : (0,71:23,31);
37 : (0,88:15,36);
38 : (0,89:19,36);
39 : (0,90:16,36);
41 : (0,90:16,37);
42 : (0,90:42,38);
45 : (0,88:15,40);
49 : (0,99:12,42);
50 : (0,88:15,45);
53 : (0,70:4,52);
62 : (0,117:4,63);
64 : (0,117:21,64);
65 : (0,117:4,66);
70 : (0,124:4,73);
98 : (0,80:18,31);
99 : (0,80:18,31);
100 : (0,80:18,31);
101 : (0,80:18,31);
103 : (0,80:18,31);
136 : (0,90:42,38);
137 : (0,90:42,38);
138 : (0,90:42,38);
140 : (0,90:42,38);
146 : (0,90:42,38);
346 : (0,80:18,31);
347 : (0,80:18,31);
348 : (0,80:18,31);
349 : (0,80:18,31);
350 : (0,80:18,31);
351 : (0,80:18,31);
352 : (0,80:18,31);
353 : (0,80:18,31);
354 : (0,80:18,31);
355 : (0,80:18,31);
356 : (0,80:18,31);
357 : (0,80:18,31);
362 : (0,80:18,31);
363 : (0,80:18,31);
364 : (0,80:18,31);
365 : (0,80:18,31);
366 : (0,80:18,31);
367 : (0,80:18,31);
368 : (0,80:18,31);
369 : (0,80:18,31);
370 : (0,80:18,31);
371 : (0,80:18,31);
372 : (0,80:18,31);
373 : (0,80:18,31);
478 : (0,121:82,70);
555 : (0,80:18,31);
563 : (0,80:18,31);
576 : (0,70:15,29);
798 : (0,90:42,38);
832 : (0,117:9,63);
----------
54 : (0,44:1,0);
55 : (0,44:1,0);
57 : (0,44:1,0);
58 : (0,44:1,0);
61 : (0,53:19,0);
76 : (0,57:17,0);
81 : (0,59:19,0);
184 : (0,70:9,0);
186 : (0,70:18,29);
207 : (0,70:4,29);
210 : (0,71:17,30);
229 : (0,71:8,30);
232 : (0,80:50,31);
243 : (0,89:19,36);
262 : (0,90:16,36);
270 : (0,90:16,39);
289 : (0,88:15,40);
378 : (0,71:8,49);
380 : (0,71:8,49);
396 : (0,70:4,54);
398 : (0,70:4,54);
404 : (0,104:34,0);
431 : (0,116:42,62);
464 : (0,117:4,63);
467 : (0,117:4,68);
519 : (0,124:4,0);
521 : (0,124:4,0);
522 : (0,124:4,73);
523 : (0,124:4,73);
525 : (0,124:13,0);
528 : (0,124:13,0);
650 : (0,67:20,28);
669 : (0,80:18,0);
670 : (0,80:18,31);
673 : (0,80:18,31);
675 : (0,80:18,31);
676 : (0,80:18,31);
692 : (0,82:28,33);
722 : (0,90:49,38);
723 : (0,90:49,38);
726 : (0,90:49,38);
750 : (0,90:42,38);
753 : (0,90:42,38);
754 : (0,90:42,38);
758 : (0,90:42,38);
783 : (0,98:54,41);
809 : (0,98:60,41);
851 : (0,104:15,55);
852 : (0,104:15,55);
855 : (0,104:15,55);
887 : (0,104:32,55);
888 : (0,104:32,55);
889 : (0,104:32,55);
890 : (0,104:32,55);
930 : (0,116:8,62);
931 : (0,116:8,62);
963 : (0,121:76,70);
989 : (0,121:52,70);
1026 : (0,121:82,70);
1092 : (0,98:54,0);
1098 : (0,104:32,0);
1100 : (0,121:76,0);
1104 : (0,67:20,0);
1112 : (0,90:20,0);
1114 : (0,98:86,0);
1148 : (0,117:9,63);
1155 : (0,80:18,31);
1156 : (0,80:18,0);
1158 : (0,80:18,31);
1159 : (0,80:18,31);
1160 : (0,80:18,31);
1161 : (0,80:18,31);
1162 : (0,80:18,31);
1163 : (0,80:18,31);
1164 : (0,80:18,31);
1165 : (0,80:18,31);
1166 : (0,80:18,31);
1167 : (0,80:18,31);
1168 : (0,80:18,31);
1169 : (0,80:18,31);
1170 : (0,80:18,31);
1171 : (0,80:18,31);
1189 : (0,80:18,31);
1192 : (0,80:18,31);
1193 : (0,80:18,31);
1194 : (0,80:18,31);
1195 : (0,80:18,31);
1196 : (0,80:18,31);
1197 : (0,80:18,31);
1198 : (0,80:18,31);
1199 : (0,80:18,31);
1200 : (0,80:18,31);
1201 : (0,80:18,31);
1202 : (0,80:18,31);
1203 : (0,80:18,31);
1204 : (0,80:18,31);
1205 : (0,80:18,31);
1240 : (0,80:18,31);
1241 : (0,80:18,31);
1275 : (0,116:11,0);
1276 : (0,116:11,62);
1283 : (0,116:11,62);
1330 : (0,80:18,31);
1332 : (0,80:18,31);
1347 : (0,116:12,62);
1418 : (0,98:32,41);
1427 : (0,80:18,31);
1436 : (0,80:18,31);
1478 : (0,80:18,31);
1492 : (0,80:18,31);
1616 : (0,90:49,38);
1624 : (0,104:15,55);
1633 : (0,116:51,62);
1791 : (0,70:15,29);
1792 : (0,117:9,63);
1851 : (0,80:18,31);
1856 : (0,80:18,31);
1861 : (0,80:18,31);
1866 : (0,80:18,31);
1871 : (0,80:18,31);
1876 : (0,90:42,38);
1879 : (0,90:16,36);
1884 : (0,88:15,40);
1888 : (0,71:8,30);
1893 : (0,70:4,29);
1898 : (0,117:4,63);

