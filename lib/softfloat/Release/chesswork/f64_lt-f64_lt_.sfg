
// File generated by noodle version U-2022.12#33f3808fcb#221128, Fri Mar 22 18:54:16 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -ISoftFloat-3e/source/include -ISoftFloat-3e/source/riscv -ISoftFloat-3e/build/chess -I../runtime/include -DCHESS_CXX_ATTRIBUTES -DSOFTFLOAT_NO_EXCEPTIONS -DINLINE_LEVEL=5 -DSOFTFLOAT_FAST_DIV32TO16 -D__tct_patch__=0 +Oextc -itrv32p3_cnn_chess.h +Opmsa +NOrlt +wRelease/chesswork SoftFloat-3e/source/f64_lt.c +Q0=+Sal,+Sca,+Osps,-Wflla,+Opmsa,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+Opmsa,+NOrlt trv32p3_cnn


/***
!!  bool f64_lt(float64_t, float64_t)
Ff64_lt : user_defined, called {
    fnm : "f64_lt" 'bool f64_lt(float64_t, float64_t)';
    arg : ( w32:i w32:r w32:i w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] X[14] );
    frm : ( );
    llv : 0 0 0 0 0 ;
}
****
***/

[
    0 : f64_lt typ=u08 bnd=e stl=PMb
   12 : __R_SP typ=w32 bnd=d stl=SP
   18 : __sp typ=w32 bnd=b stl=SP
   21 : __rd___sp typ=w32 bnd=m
   22 : __la typ=w32 bnd=p tref=w32__
   24 : __rt typ=bool bnd=m
   26 : a_low typ=w32 bnd=m tref=__uint__
   27 : a_high typ=w32 bnd=m tref=__uint__
   29 : b_low typ=w32 bnd=m tref=__uint__
   30 : b_high typ=w32 bnd=m tref=__uint__
   31 : __ct_m16S0 typ=w32 val=0S0 bnd=m
   33 : __tmp typ=w32 bnd=m
   46 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   87 : __tmp typ=bool bnd=m
  105 : __tmp typ=bool bnd=m
  106 : __tmp typ=bool bnd=m
  121 : __tmp typ=w32 bnd=m
  122 : __tmp typ=w32 bnd=m
  123 : __tmp typ=bool bnd=m
  133 : __tmp typ=bool bnd=m
  134 : __tmp typ=bool bnd=m
  136 : __tmp typ=bool bnd=m
  137 : __tmp typ=w32 bnd=m
  138 : __tmp typ=w32 bnd=m
  141 : __tmp typ=bool bnd=m
  144 : __tmp typ=bool bnd=m
  145 : __tmp typ=bool bnd=m
  146 : __tmp typ=w32 bnd=m
  147 : __ct_16s0 typ=w32 val=0s0 bnd=m
  149 : __tmp typ=w32 bnd=m
  153 : __ct_1 typ=w32 val=1f bnd=m
  171 : __tmp_high typ=w32 bnd=m
  183 : __tmp_high typ=w32 bnd=m
  193 : __tmp typ=bool bnd=m
  204 : __tmp_high typ=w32 bnd=m
  214 : __tmp typ=bool bnd=m
  215 : __tmp typ=bool bnd=m
  225 : __tmp_high typ=w32 bnd=m
  231 : __tmp_high typ=w32 bnd=m
  244 : __tmp_high typ=w32 bnd=m
  267 : __apl_r_low typ=w32 bnd=m tref=__uint__
  299 : __tmp_low typ=w32 bnd=m
  301 : __tmp_high typ=w32 bnd=m
  309 : __tmp_high typ=w32 bnd=m
  325 : __rt typ=bool bnd=m tref=bool__
  330 : __tmp typ=bool bnd=m
  341 : __ct_31 typ=w32 val=31f bnd=m
  343 : __ct_2146435072 typ=t20s_rp12 val=524032f bnd=m
  345 : __ct_1048575 typ=w32 val=1048575f bnd=m
  346 : __ct_2147483647 typ=w32 val=2147483647f bnd=m
  349 : __tmpd typ=w32 bnd=m
  350 : __tmp typ=bool bnd=m
  351 : __tmpd typ=w32 bnd=m
  352 : __tmp typ=bool bnd=m
  353 : __tmpd typ=w32 bnd=m
  354 : __tmp typ=bool bnd=m
  357 : __ct_4294967295 typ=w32 val=-1f bnd=m
  381 : __true typ=bool val=1f bnd=m
  382 : __false typ=bool val=0f bnd=m
  383 : __either typ=bool bnd=m
  386 : __t_f typ=bool bnd=m
  387 : __trgt typ=t13s_s2 val=0j bnd=m
  388 : __trgt typ=t13s_s2 val=0j bnd=m
  389 : __trgt typ=t13s_s2 val=0j bnd=m
  390 : __trgt typ=t13s_s2 val=0j bnd=m
  391 : __trgt typ=t13s_s2 val=0j bnd=m
  392 : __trgt typ=t13s_s2 val=0j bnd=m
  393 : __trgt typ=t13s_s2 val=0j bnd=m
  394 : __trgt typ=t13s_s2 val=0j bnd=m
  395 : __trgt typ=t21s_s2 val=0j bnd=m
  396 : __trgt typ=t13s_s2 val=0j bnd=m
  397 : __trgt typ=t13s_s2 val=0j bnd=m
  398 : __trgt typ=t13s_s2 val=0j bnd=m
  399 : __trgt typ=t13s_s2 val=0j bnd=m
  400 : __trgt typ=t13s_s2 val=0j bnd=m
  401 : __trgt typ=t21s_s2 val=0j bnd=m
  402 : __trgt typ=t21s_s2 val=0j bnd=m
  403 : __trgt typ=t21s_s2 val=0j bnd=m
]
Ff64_lt {
    #286 off=0
    (__R_SP.11 var=12) st_def ()  <22>;
    (__sp.17 var=18) source ()  <28>;
    (__la.21 var=22 stl=X off=1) inp ()  <32>;
    (__la.22 var=22) deassign (__la.21)  <33>;
    (a_low.26 var=26 stl=X off=11) inp ()  <37>;
    (a_low.27 var=26) deassign (a_low.26)  <38>;
    (a_high.30 var=27 stl=X off=12) inp ()  <41>;
    (a_high.31 var=27) deassign (a_high.30)  <42>;
    (b_low.35 var=29 stl=X off=13) inp ()  <46>;
    (b_low.36 var=29) deassign (b_low.35)  <47>;
    (b_high.39 var=30 stl=X off=14) inp ()  <50>;
    (b_high.40 var=30) deassign (b_high.39)  <51>;
    (__rd___sp.43 var=21) rd_res_reg (__R_SP.11 __sp.17)  <54>;
    (__ct_m16S0.44 var=31) const ()  <55>;
    (__tmp.46 var=33) __Pvoid__pl___Pvoid___sint (__rd___sp.43 __ct_m16S0.44)  <57>;
    (__R_SP.47 var=12 __sp.48 var=18) wr_res_reg (__tmp.46 __sp.17)  <58>;
    (__rd___sp.49 var=21) rd_res_reg (__R_SP.11 __sp.48)  <60>;
    (__ct_0.67 var=46) const ()  <78>;
    (__ct_1.349 var=153) const ()  <385>;
    (__tmp_high.379 var=183) __uint__ad___uint___uint (__tmp_high.683 __ct_2146435072.669)  <447>;
    (__ct_2146435072.669 var=343) const ()  <828>;
    (__ct_1048575.671 var=345) const ()  <832>;
    (__ct_4294967295.682 var=357) const ()  <858>;
    (__tmp_high.683 var=171) __uint__er___uint___uint (a_high.31 __ct_4294967295.682)  <859>;
    (__tmp.722 var=193) bool__ne___uint___uint (__tmp_high.379 __ct_0.67)  <957>;
    (__trgt.733 var=387) const ()  <980>;
    () void_br_bool_t13s_s2 (__tmp.722 __trgt.733)  <981>;
    (__either.734 var=383) undefined ()  <982>;
    if {
        {
            () if_expr (__either.734)  <145>;
        } #5
        {
            (__false.737 var=382) const ()  <986>;
        } #7
        {
            (__tmp_high.409 var=204) __uint__ad___uint___uint (a_high.31 __ct_1048575.671)  <485>;
            (__tmpd.675 var=349) __uint__or___uint___uint (__tmp_high.409 a_low.27)  <850>;
            (__tmp.676 var=350) bool__ne___uint___uint (__tmpd.675 __ct_0.67)  <851>;
            (__trgt.738 var=389) const ()  <987>;
            () void_br_bool_t13s_s2 (__tmp.676 __trgt.738)  <988>;
            (__either.739 var=383) undefined ()  <989>;
        } #105 off=1
        {
            (__tmp.146 var=87) merge (__false.737 __either.739)  <154>;
        } #8
    } #4
    if {
        {
            () if_expr (__tmp.146)  <173>;
        } #11
        {
            (__true.761 var=381) const ()  <1020>;
        } #12
        {
            #292 off=2
            (__tmp_high.452 var=231) __uint__ad___uint___uint (__tmp_high.687 __ct_2146435072.669)  <540>;
            (__tmp_high.687 var=225) __uint__er___uint___uint (b_high.40 __ct_4294967295.682)  <866>;
            (__tmp.723 var=193) bool__ne___uint___uint (__tmp_high.452 __ct_0.67)  <958>;
            (__trgt.735 var=388) const ()  <983>;
            () void_br_bool_t13s_s2 (__tmp.723 __trgt.735)  <984>;
            (__either.736 var=383) undefined ()  <985>;
            if {
                {
                    () if_expr (__either.736)  <201>;
                } #16
                {
                    (__false.762 var=382) const ()  <1021>;
                } #18
                {
                    (__tmp_high.482 var=244) __uint__ad___uint___uint (b_high.40 __ct_1048575.671)  <578>;
                    (__tmpd.677 var=351) __uint__or___uint___uint (__tmp_high.482 b_low.36)  <852>;
                    (__tmp.678 var=352) bool__ne___uint___uint (__tmpd.677 __ct_0.67)  <853>;
                    (__trgt.763 var=399) const ()  <1022>;
                    () void_br_bool_t13s_s2 (__tmp.678 __trgt.763)  <1023>;
                    (__either.764 var=383) undefined ()  <1024>;
                } #152 off=3
                {
                    (__tmp.200 var=105) merge (__false.762 __either.764)  <210>;
                } #19
            } #15
        } #13
        {
            (__tmp.201 var=106) merge (__true.761 __tmp.200)  <211>;
        } #20
    } #10
    if {
        {
            () if_expr (__tmp.201)  <230>;
        } #23
        {
            (__false.765 var=382) const ()  <1025>;
        } #24
        {
            #302 off=4
            (__tmp.236 var=123) bool__ne___sint___sint (__tmp.712 __tmp.718)  <247>;
            (__apl_r_low.521 var=267) __uint__rs___uint___sint (a_high.31 __ct_31.667)  <627>;
            (__apl_r_low.562 var=267) __uint__rs___uint___sint (b_high.40 __ct_31.667)  <678>;
            (__ct_31.667 var=341) const ()  <824>;
            (__tmp.712 var=121) __sint_sne0___sint (__apl_r_low.521)  <930>;
            (__tmp.718 var=122) __sint_sne0___sint (__apl_r_low.562)  <939>;
            (__trgt.759 var=398) const ()  <1017>;
            () void_br_bool_t13s_s2 (__tmp.236 __trgt.759)  <1018>;
            (__either.760 var=383) undefined ()  <1019>;
            if {
                {
                    () if_expr (__either.760)  <266>;
                } #28
                {
                    #353 off=15
                    (__trgt.740 var=390) const ()  <990>;
                    () void_br_bool_t13s_s2 (__tmp.775 __trgt.740)  <991>;
                    (__either.741 var=383) undefined ()  <992>;
                    (__tmp.775 var=215) bool__eq___uint___uint (__apl_r_low.521 __ct_0.67)  <1039>;
                    if {
                        {
                            () if_expr (__either.741)  <285>;
                        } #32
                        {
                            (__false.766 var=382) const ()  <1026>;
                        } #34
                        {
                            (__tmp_low.593 var=299) __uint__or___uint___uint (a_low.27 b_low.36)  <717>;
                            (__tmp_high.594 var=301) __uint__or___uint___uint (a_high.31 b_high.40)  <718>;
                            (__tmp_high.611 var=309) __uint__ad___uint___uint (__tmp_high.594 __ct_2147483647.672)  <739>;
                            (__ct_2147483647.672 var=346) const ()  <834>;
                            (__tmpd.679 var=353) __uint__or___uint___uint (__tmp_high.611 __tmp_low.593)  <854>;
                            (__tmp.680 var=354) bool__ne___uint___uint (__tmpd.679 __ct_0.67)  <855>;
                            (__trgt.767 var=400) const ()  <1027>;
                            () void_br_bool_t13s_s2 (__tmp.680 __trgt.767)  <1028>;
                            (__either.768 var=383) undefined ()  <1029>;
                        } #245 off=16
                        {
                            (__tmp.282 var=133) merge (__false.766 __either.768)  <295>;
                        } #35
                    } #31
                } #29
                {
                    #255 off=5
                    (__tmp.640 var=214) bool__ne___uint___uint (a_high.31 b_high.40)  <776>;
                    (__trgt.742 var=391) const ()  <993>;
                    () void_br_bool_t13s_s2 (__tmp.640 __trgt.742)  <994>;
                    (__either.743 var=383) undefined ()  <995>;
                    if {
                        {
                            () if_expr (__either.743)  <778>;
                        } #257
                        {
                            (__false.753 var=382) const ()  <1009>;
                        } #258
                        {
                            (__tmp.726 var=215) bool__eq___uint___uint (a_low.27 b_low.36)  <961>;
                            (__trgt.754 var=396) const ()  <1010>;
                            () void_br_bool_t13s_s2 (__tmp.726 __trgt.754)  <1011>;
                            (__either.755 var=383) undefined ()  <1012>;
                        } #259 off=6
                        {
                            (__tmp.727 var=134) merge (__false.753 __either.755)  <962>;
                        } #260
                    } #256
                    if {
                        {
                            () if_expr (__tmp.727)  <315>;
                        } #39
                        {
                            (__false.756 var=382) const ()  <1013>;
                        } #41
                        {
                            #269 off=7
                            (__tmp.653 var=330) bool__lt___uint___uint (a_high.31 b_high.40)  <793>;
                            (__trgt.746 var=393) const ()  <999>;
                            () void_br_bool_t13s_s2 (__tmp.653 __trgt.746)  <1000>;
                            (__either.747 var=383) undefined ()  <1001>;
                            if {
                                {
                                    () if_expr (__either.747)  <796>;
                                } #271
                                {
                                    (__true.748 var=381) const ()  <1002>;
                                } #272
                                {
                                    #352 off=8
                                    (__trgt.744 var=392) const ()  <996>;
                                    () void_br_bool_t13s_s2 (__tmp.774 __trgt.744)  <997>;
                                    (__either.745 var=383) undefined ()  <998>;
                                    (__tmp.774 var=214) bool__ne___uint___uint (a_high.31 b_high.40)  <1038>;
                                    if {
                                        {
                                            () if_expr (__either.745)  <798>;
                                        } #276
                                        {
                                            (__false.749 var=382) const ()  <1003>;
                                        } #278
                                        {
                                            (__rt.657 var=325) bool__lt___uint___uint (a_low.27 b_low.36)  <799>;
                                            (__trgt.750 var=394) const ()  <1004>;
                                            () void_br_bool_t13s_s2 (__rt.657 __trgt.750)  <1005>;
                                            (__either.751 var=383) undefined ()  <1006>;
                                        } #277 off=9
                                        {
                                            (__rt.658 var=325) merge (__false.749 __either.751)  <800>;
                                        } #279
                                    } #275
                                } #273
                                {
                                    (__tmp.659 var=136) merge (__true.748 __rt.658)  <801>;
                                } #280
                            } #270
                            if {
                                {
                                    () if_expr (__tmp.659)  <906>;
                                } #330
                                {
                                } #331 off=11
                                {
                                    (__trgt.752 var=395) const ()  <1007>;
                                    () void_j_t21s_s2 (__trgt.752)  <1008>;
                                } #332 off=10
                                {
                                    (__tmp.704 var=137) merge (__ct_1.349 __ct_0.67)  <907>;
                                } #333
                            } #329
                            #325 off=12
                            (__tmp.305 var=138) __sint__er___sint___sint (__tmp.712 __tmp.704)  <319>;
                            (__tmp.308 var=141) bool__ne___sint___sint (__tmp.305 __ct_0.67)  <322>;
                            (__trgt.757 var=397) const ()  <1014>;
                            () void_br_bool_t13s_s2 (__tmp.308 __trgt.757)  <1015>;
                            (__either.758 var=383) undefined ()  <1016>;
                        } #40
                        {
                            (__tmp.311 var=144) merge (__false.756 __either.758)  <325>;
                        } #42
                    } #38
                    if {
                        {
                            () if_expr (__tmp.311)  <976>;
                        } #355
                        {
                            (__trgt.769 var=401) const ()  <1030>;
                            () void_j_t21s_s2 (__trgt.769)  <1031>;
                            (__true.770 var=381) const ()  <1032>;
                        } #356 off=14
                        {
                            (__trgt.771 var=402) const ()  <1033>;
                            () void_j_t21s_s2 (__trgt.771)  <1034>;
                            (__false.772 var=382) const ()  <1035>;
                        } #357 off=13
                        {
                            (__t_f.732 var=386) merge (__true.770 __false.772)  <979>;
                        } #358
                    } #354
                } #36
                {
                    (__tmp.312 var=145) merge (__tmp.282 __t_f.732)  <326>;
                } #43
            } #27
        } #25
        {
            (__rt.313 var=24) merge (__false.765 __tmp.312)  <327>;
        } #44
    } #22
    if {
        {
            () if_expr (__rt.313)  <384>;
        } #52
        {
        } #53 off=18
        {
            (__trgt.773 var=403) const ()  <1036>;
            () void_j_t21s_s2 (__trgt.773)  <1037>;
        } #54 off=17
        {
            (__tmp.351 var=146) merge (__ct_1.349 __ct_0.67)  <387>;
        } #55
    } #51
    #47 off=19 nxt=-2
    (__ct_16s0.318 var=147) const ()  <332>;
    (__tmp.320 var=149) __Pvoid__pl___Pvoid___sint (__rd___sp.49 __ct_16s0.318)  <334>;
    (__R_SP.321 var=12 __sp.322 var=18) wr_res_reg (__tmp.320 __sp.48)  <335>;
    () void___rts_jr_w32 (__la.22)  <336>;
    (__tmp.323 var=146 stl=X off=10) assign (__tmp.351)  <337>;
    () out (__tmp.323)  <338>;
    () sink (__sp.322)  <348>;
} #0
0 : 'SoftFloat-3e/source/f64_lt.c';
----------
0 : (0,43:0,0);
4 : (0,55:50,10);
7 : (0,55:50,12);
10 : (0,55:86,14);
12 : (0,55:86,15);
13 : (0,55:130,16);
15 : (0,55:130,16);
18 : (0,55:130,18);
22 : (0,55:4,22);
24 : (0,55:168,23);
25 : (0,59:8,26);
27 : (0,65:12,29);
29 : (0,65:20,30);
31 : (0,65:20,30);
34 : (0,65:20,32);
36 : (0,66:27,35);
38 : (0,66:27,35);
40 : (0,66:27,36);
41 : (0,66:27,37);
47 : (0,63:4,45);
51 : (0,63:4,45);
52 : (0,63:4,45);
53 : (0,63:4,45);
54 : (0,63:4,45);
55 : (0,63:4,45);
105 : (0,55:50,11);
152 : (0,55:130,17);
245 : (0,65:20,31);
255 : (0,66:19,35);
256 : (0,66:19,35);
257 : (0,66:19,35);
258 : (0,66:19,35);
259 : (0,66:19,35);
260 : (0,66:19,35);
269 : (0,66:44,36);
270 : (0,66:44,36);
271 : (0,66:44,36);
272 : (0,66:44,36);
273 : (0,66:44,36);
275 : (0,66:44,36);
276 : (0,66:44,36);
277 : (0,66:44,36);
278 : (0,66:44,36);
279 : (0,66:44,36);
280 : (0,66:44,36);
286 : (0,55:44,10);
292 : (0,55:124,16);
302 : (0,64:15,29);
325 : (0,66:27,36);
329 : (0,66:37,36);
330 : (0,66:37,36);
331 : (0,66:37,36);
332 : (0,66:37,36);
333 : (0,66:37,36);
----------
54 : (0,43:5,0);
55 : (0,43:5,0);
57 : (0,43:5,0);
58 : (0,43:5,0);
60 : (0,45:19,0);
78 : (0,51:6,0);
145 : (0,55:50,10);
154 : (0,55:50,13);
173 : (0,55:86,14);
201 : (0,55:130,16);
210 : (0,55:130,19);
211 : (0,55:86,21);
230 : (0,55:4,22);
247 : (0,64:15,29);
266 : (0,65:12,29);
285 : (0,65:20,30);
295 : (0,65:20,33);
315 : (0,66:27,35);
319 : (0,66:37,36);
322 : (0,66:27,36);
325 : (0,66:27,38);
326 : (0,65:12,40);
327 : (0,55:4,44);
332 : (0,63:4,0);
334 : (0,63:4,0);
335 : (0,63:4,45);
336 : (0,63:4,45);
337 : (0,63:4,0);
447 : (0,55:19,10);
485 : (0,55:60,11);
540 : (0,55:99,16);
578 : (0,55:140,17);
627 : (0,61:37,27);
678 : (0,62:37,28);
717 : (0,65:29,31);
718 : (0,65:29,31);
739 : (0,65:36,31);
776 : (0,66:19,35);
778 : (0,66:19,35);
793 : (0,66:44,36);
796 : (0,66:44,36);
798 : (0,66:44,36);
799 : (0,66:44,36);
800 : (0,66:44,36);
801 : (0,66:44,36);
824 : (0,61:37,0);
828 : (0,55:21,0);
832 : (0,55:62,0);
834 : (0,65:38,0);
850 : (0,55:50,11);
851 : (0,55:50,11);
852 : (0,55:130,17);
853 : (0,55:130,17);
854 : (0,65:20,31);
855 : (0,65:20,31);
858 : (0,55:12,0);
859 : (0,55:12,10);
866 : (0,55:92,16);
906 : (0,66:37,36);
907 : (0,66:37,36);
930 : (0,64:15,29);
939 : (0,64:15,29);
957 : (0,55:44,10);
958 : (0,55:124,16);
961 : (0,66:19,35);
962 : (0,66:19,35);
981 : (0,55:50,10);
984 : (0,55:130,16);
988 : (0,55:86,14);
991 : (0,65:20,30);
994 : (0,66:19,35);
997 : (0,66:44,36);
1000 : (0,66:44,36);
1005 : (0,66:37,36);
1011 : (0,66:27,35);
1018 : (0,65:12,29);
1023 : (0,55:4,22);

