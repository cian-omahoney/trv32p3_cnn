
// File generated by noodle version U-2022.12#33f3808fcb#221128, Fri Mar  8 12:18:24 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -ISoftFloat-3e/source/include -ISoftFloat-3e/source/riscv -ISoftFloat-3e/build/chess -I../runtime/include -DCHESS_CXX_ATTRIBUTES -DSOFTFLOAT_NO_EXCEPTIONS -DINLINE_LEVEL=5 -DSOFTFLOAT_FAST_DIV32TO16 -D__tct_patch__=0 +Oextc -itrv32p3_cnn_chess.h +Opmsa +NOrlt +wRelease/chesswork SoftFloat-3e/source/f64_to_i32_r_minMag.c +Q0=+Sal,+Sca,+Osps,-Wflla,+Opmsa,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+Opmsa,+NOrlt trv32p3_cnn


/***
!!  int_fast32_t f64_to_i32_r_minMag(float64_t, bool)
Ff64_to_i32_r_minMag : user_defined, called {
    fnm : "f64_to_i32_r_minMag" 'long f64_to_i32_r_minMag(float64_t, bool)';
    arg : ( w32:i w32:r w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] );
    frm : ( );
    llv : 0 0 0 0 0 ;
}
****
***/

[
    0 : f64_to_i32_r_minMag typ=u08 bnd=e stl=PMb
   12 : __R_SP typ=w32 bnd=d stl=SP
   18 : __sp typ=w32 bnd=b stl=SP
   20 : __rd___sp typ=w32 bnd=m
   21 : __la typ=w32 bnd=p tref=w32__
   22 : __rt typ=w32 bnd=p tref=int_fast32_t__
   24 : a_low typ=w32 bnd=m tref=__uint__
   25 : a_high typ=w32 bnd=m tref=__uint__
   26 : exact typ=w32 bnd=p tref=bool__
   28 : __ct_m8S0 typ=w32 val=0S0 bnd=m
   30 : __tmp typ=w32 bnd=m
   37 : exp typ=w32 bnd=m tref=int_fast16_t__
   39 : shiftDist typ=w32 bnd=m tref=int_fast16_t__
   43 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   60 : __ct_2047 typ=w32 val=2047f bnd=m
   66 : __ct_1075 typ=w32 val=1075f bnd=m
   69 : __ct_53 typ=w32 val=53f bnd=m
   71 : __tmp typ=bool bnd=m
   80 : __ct_22 typ=w32 val=22f bnd=m
   82 : __tmp typ=bool bnd=m
   83 : __ct_1054 typ=w32 val=1054f bnd=m
   85 : __tmp typ=bool bnd=m
   88 : __tmp typ=bool bnd=m
   94 : __tmp typ=bool bnd=m
   95 : __ct_m2147483648 typ=t20s_rp12 val=-524288f bnd=m
   99 : __tmp typ=bool bnd=m
  105 : __tmp typ=bool bnd=m
  106 : __ct_2147483647 typ=w32 val=2147483647f bnd=m
  112 : __tmp typ=w32 bnd=m
  113 : __tmp typ=w32 bnd=m
  121 : __tmp typ=w32 bnd=m
  122 : __tmp typ=w32 bnd=m
  124 : __ct_8s0 typ=w32 val=0s0 bnd=m
  126 : __tmp typ=w32 bnd=m
  135 : __rt_low typ=w32 bnd=m tref=__uint__
  140 : __apl_ff typ=w32 bnd=m tref=__sint__
  141 : __apl_carries typ=w32 bnd=m tref=__uint__
  143 : __tmp typ=bool bnd=m
  144 : __tmp typ=bool bnd=m
  145 : __tmp typ=w32 bnd=m
  146 : __tmp typ=w32 bnd=m
  147 : __apl_r_low typ=w32 bnd=m tref=__uint__
  150 : __ct_m32 typ=w32 val=-32f bnd=m
  165 : sig_high typ=w32 bnd=m
  182 : __tmp typ=bool bnd=m
  190 : __rt typ=bool bnd=m tref=bool__
  196 : __tmp typ=bool bnd=m
  217 : sig_high typ=w32 bnd=m
  223 : __tmp_low typ=w32 bnd=m
  231 : __ct_20 typ=w32 val=20f bnd=m
  233 : __ct_31 typ=w32 val=31f bnd=m
  236 : __ct_1048575 typ=w32 val=1048575f bnd=m
  237 : __ct_2097152 typ=t20s_rp12 val=512f bnd=m
  238 : __ct_1048576 typ=t20s_rp12 val=256f bnd=m
  241 : __tmpd typ=w32 bnd=m
  242 : __tmp typ=bool bnd=m
  259 : __true typ=bool val=1f bnd=m
  260 : __false typ=bool val=0f bnd=m
  261 : __either typ=bool bnd=m
  262 : __trgt typ=t13s_s2 val=0j bnd=m
  263 : __trgt typ=t13s_s2 val=0j bnd=m
  264 : __trgt typ=t13s_s2 val=0j bnd=m
  265 : __trgt typ=t13s_s2 val=0j bnd=m
  266 : __trgt typ=t13s_s2 val=0j bnd=m
  267 : __trgt typ=t21s_s2 val=0j bnd=m
  268 : __trgt typ=t13s_s2 val=0j bnd=m
  269 : __trgt typ=t21s_s2 val=0j bnd=m
  270 : __trgt typ=t13s_s2 val=0j bnd=m
  271 : __trgt typ=t21s_s2 val=0j bnd=m
  272 : __trgt typ=t13s_s2 val=0j bnd=m
  273 : __trgt typ=t21s_s2 val=0j bnd=m
  274 : __trgt typ=t13s_s2 val=0j bnd=m
  275 : __trgt typ=t21s_s2 val=0j bnd=m
  276 : __trgt typ=t13s_s2 val=0j bnd=m
  277 : __trgt typ=t21s_s2 val=0j bnd=m
  278 : __trgt typ=t13s_s2 val=0j bnd=m
  279 : __trgt typ=t21s_s2 val=0j bnd=m
  280 : __trgt typ=t13s_s2 val=0j bnd=m
  281 : __trgt typ=t21s_s2 val=0j bnd=m
]
Ff64_to_i32_r_minMag {
    #188 off=0
    (__R_SP.11 var=12) st_def ()  <22>;
    (__sp.17 var=18) source ()  <28>;
    (__la.20 var=21 stl=X off=1) inp ()  <31>;
    (__la.21 var=21) deassign (__la.20)  <32>;
    (a_low.25 var=24 stl=X off=11) inp ()  <36>;
    (a_low.26 var=24) deassign (a_low.25)  <37>;
    (a_high.29 var=25 stl=X off=12) inp ()  <40>;
    (a_high.30 var=25) deassign (a_high.29)  <41>;
    (exact.33 var=26 stl=X off=13) inp ()  <44>;
    (__rd___sp.36 var=20) rd_res_reg (__R_SP.11 __sp.17)  <47>;
    (__ct_m8S0.37 var=28) const ()  <48>;
    (__tmp.39 var=30) __Pvoid__pl___Pvoid___sint (__rd___sp.36 __ct_m8S0.37)  <50>;
    (__R_SP.40 var=12 __sp.41 var=18) wr_res_reg (__tmp.39 __sp.17)  <51>;
    (__rd___sp.43 var=20) rd_res_reg (__R_SP.11 __sp.41)  <54>;
    (__ct_0.61 var=43) const ()  <72>;
    (__ct_2047.88 var=60) const ()  <97>;
    (exp.90 var=37) __sint__ad___sint___sint (__apl_r_low.371 __ct_2047.88)  <99>;
    (__ct_1075.94 var=66) const ()  <103>;
    (shiftDist.96 var=39) __sint__mi___sint___sint (__ct_1075.94 exp.90)  <105>;
    (__ct_53.97 var=69) const ()  <106>;
    (__tmp.99 var=71) bool__ge___sint___sint (shiftDist.96 __ct_53.97)  <108>;
    (__apl_r_low.371 var=147) __uint__rs___uint___sint (a_high.30 __ct_20.519)  <457>;
    (sig_high.390 var=165) __uint__ad___uint___uint (a_high.30 __ct_1048575.524)  <480>;
    (__ct_20.519 var=231) const ()  <661>;
    (__ct_1048575.524 var=236) const ()  <671>;
    (__trgt.588 var=280) const ()  <857>;
    () void_br_bool_t13s_s2 (__tmp.99 __trgt.588)  <858>;
    (__either.589 var=261) undefined ()  <859>;
    if {
        {
            () if_expr (__either.589)  <127>;
        } #5
        {
        } #6 off=27
        {
            #91 off=1
            (__ct_22.126 var=80) const ()  <136>;
            (__tmp.128 var=82) bool__lt___sint___sint (shiftDist.96 __ct_22.126)  <138>;
            (__apl_r_low.416 var=147) __uint__rs___uint___sint (a_high.30 __ct_31.521)  <512>;
            (__ct_31.521 var=233) const ()  <665>;
            (__trgt.585 var=278) const ()  <852>;
            () void_br_bool_t13s_s2 (__tmp.128 __trgt.585)  <853>;
            (__either.586 var=261) undefined ()  <854>;
            if {
                {
                    () if_expr (__either.586)  <157>;
                } #10
                {
                    #202 off=12
                    (__ct_m2147483648.213 var=95) const ()  <227>;
                    (__trgt.555 var=262) const ()  <806>;
                    () void_br_bool_t13s_s2 (__tmp.592 __trgt.555)  <807>;
                    (__either.556 var=261) undefined ()  <808>;
                    (__tmp.592 var=182) bool__eq___uint___uint (__apl_r_low.416 __ct_0.61)  <863>;
                    if {
                        {
                            () if_expr (__either.556)  <176>;
                        } #14
                        {
                            (__true.559 var=259) const ()  <812>;
                        } #16
                        {
                            (__ct_1054.165 var=83) const ()  <177>;
                            (__tmp.549 var=85) bool__ne___sint___sint (exp.90 __ct_1054.165)  <782>;
                            (__trgt.560 var=264) const ()  <813>;
                            () void_br_bool_t13s_s2 (__tmp.549 __trgt.560)  <814>;
                            (__either.561 var=261) undefined ()  <815>;
                        } #15 off=13
                        {
                            (__tmp.550 var=88) merge (__true.559 __either.561)  <783>;
                        } #17
                    } #13
                    if {
                        {
                            () if_expr (__tmp.550)  <201>;
                        } #20
                        {
                            (__false.571 var=260) const ()  <830>;
                        } #22
                        {
                            #131 off=14
                            (__tmp.548 var=196) bool__ne___uint___uint (sig_high.390 __ct_0.61)  <781>;
                            (__trgt.557 var=263) const ()  <809>;
                            () void_br_bool_t13s_s2 (__tmp.548 __trgt.557)  <810>;
                            (__either.558 var=261) undefined ()  <811>;
                            if {
                                {
                                    () if_expr (__either.558)  <556>;
                                } #133
                                {
                                    (__false.572 var=260) const ()  <831>;
                                } #135
                                {
                                    (__rt.451 var=190) bool__lt___uint___uint (a_low.26 __ct_2097152.525)  <557>;
                                    (__ct_2097152.525 var=237) const ()  <673>;
                                    (__trgt.573 var=270) const ()  <832>;
                                    () void_br_bool_t13s_s2 (__rt.451 __trgt.573)  <833>;
                                    (__either.574 var=261) undefined ()  <834>;
                                } #134 off=15
                                {
                                    (__rt.452 var=190) merge (__false.572 __either.574)  <558>;
                                } #136
                            } #132
                        } #21
                        {
                            (__tmp.194 var=94) merge (__false.571 __rt.452)  <207>;
                        } #23
                    } #19
                    if {
                        {
                            () if_expr (__tmp.194)  <226>;
                        } #26
                        {
                        } #27 off=24
                        {
                            #29 off=16
                            (__ct_2147483647.260 var=106) const ()  <276>;
                            (__tmp.551 var=99) bool__ne___sint___sint (exp.90 __ct_2047.88)  <784>;
                            (__trgt.562 var=265) const ()  <816>;
                            () void_br_bool_t13s_s2 (__tmp.551 __trgt.562)  <817>;
                            (__either.563 var=261) undefined ()  <818>;
                            if {
                                {
                                    () if_expr (__either.563)  <250>;
                                } #31
                                {
                                    (__false.567 var=260) const ()  <824>;
                                } #33
                                {
                                    (__tmpd.529 var=241) __uint__or___uint___uint (sig_high.390 a_low.26)  <699>;
                                    (__tmp.530 var=242) bool__ne___uint___uint (__tmpd.529 __ct_0.61)  <700>;
                                    (__trgt.568 var=268) const ()  <825>;
                                    () void_br_bool_t13s_s2 (__tmp.530 __trgt.568)  <826>;
                                    (__either.569 var=261) undefined ()  <827>;
                                } #142 off=17
                                {
                                    (__tmp.241 var=105) merge (__false.567 __either.569)  <256>;
                                } #34
                            } #30
                            if {
                                {
                                    () if_expr (__tmp.241)  <275>;
                                } #37
                                {
                                } #38 off=22
                                {
                                    #204 off=18
                                    (__trgt.564 var=266) const ()  <819>;
                                    () void_br_bool_t13s_s2 (__tmp.591 __trgt.564)  <820>;
                                    (__either.565 var=261) undefined ()  <821>;
                                    (__tmp.591 var=182) bool__ne___uint___uint (__apl_r_low.416 __ct_0.61)  <862>;
                                    if {
                                        {
                                            () if_expr (__either.565)  <296>;
                                        } #42
                                        {
                                        } #43 off=20
                                        {
                                            (__trgt.566 var=267) const ()  <822>;
                                            () void_j_t21s_s2 (__trgt.566)  <823>;
                                        } #44 off=19
                                        {
                                            (__tmp.284 var=112) merge (__ct_m2147483648.213 __ct_2147483647.260)  <301>;
                                        } #45
                                    } #41
                                    #205 off=21
                                    (__trgt.570 var=269) const ()  <828>;
                                    () void_j_t21s_s2 (__trgt.570)  <829>;
                                } #39
                                {
                                    (__tmp.285 var=113) merge (__ct_2147483647.260 __tmp.284)  <302>;
                                } #46
                            } #36
                            #206 off=23
                            (__trgt.575 var=271) const ()  <835>;
                            () void_j_t21s_s2 (__trgt.575)  <836>;
                        } #28
                        {
                            (__rt.286 var=22) merge (__ct_m2147483648.213 __tmp.285)  <303>;
                        } #47
                    } #25
                } #11
                {
                    #164 off=2
                    (sig_high.477 var=217) __uint__or___uint___uint (sig_high.390 __ct_1048576.526)  <590>;
                    (__tmp.493 var=143) bool__eq___sint___sint (shiftDist.96 __ct_0.61)  <610>;
                    (__ct_1048576.526 var=238) const ()  <675>;
                    (__trgt.579 var=274) const ()  <842>;
                    () void_br_bool_t13s_s2 (__tmp.493 __trgt.579)  <843>;
                    (__either.580 var=261) undefined ()  <844>;
                    if {
                        {
                            () if_expr (__either.580)  <613>;
                        } #166
                        {
                        } #167 off=7
                        {
                            #169 off=3
                            (__ct_m32.362 var=150) const ()  <446>;
                            (__apl_ff.496 var=140) __sint__pl___sint___sint (shiftDist.96 __ct_m32.362)  <614>;
                            (__tmp.497 var=144) bool__lt___sint___sint (__apl_ff.496 __ct_0.61)  <615>;
                            (__trgt.576 var=272) const ()  <837>;
                            () void_br_bool_t13s_s2 (__tmp.497 __trgt.576)  <838>;
                            (__either.577 var=261) undefined ()  <839>;
                            if {
                                {
                                    () if_expr (__either.577)  <616>;
                                } #171
                                {
                                    (__tmp.498 var=145) __sint__mi___sint___sint (__ct_0.61 __apl_ff.496)  <617>;
                                    (__apl_carries.499 var=141) __uint__ls___uint___sint (sig_high.477 __tmp.498)  <618>;
                                    (__tmp.500 var=146) __uint__rs___uint___sint (a_low.26 shiftDist.96)  <619>;
                                    (__apl_r_low.501 var=147) __uint__or___uint___uint (__tmp.500 __apl_carries.499)  <620>;
                                } #172 off=5
                                {
                                    (__apl_r_low.503 var=147) __uint__rs___uint___sint (sig_high.477 __apl_ff.496)  <622>;
                                    (__trgt.578 var=273) const ()  <840>;
                                    () void_j_t21s_s2 (__trgt.578)  <841>;
                                } #173 off=4
                                {
                                    (__rt_low.504 var=135) merge (__apl_r_low.501 __apl_r_low.503)  <623>;
                                } #174
                            } #170
                            #208 off=6
                            (__trgt.581 var=275) const ()  <845>;
                            () void_j_t21s_s2 (__trgt.581)  <846>;
                        } #168
                        {
                            (__tmp_low.506 var=223) merge (a_low.26 __rt_low.504)  <625>;
                        } #175
                    } #165
                    #209 off=8
                    (__trgt.582 var=276) const ()  <847>;
                    () void_br_bool_t13s_s2 (__tmp.593 __trgt.582)  <848>;
                    (__either.583 var=261) undefined ()  <849>;
                    (__tmp.593 var=182) bool__eq___uint___uint (__apl_r_low.416 __ct_0.61)  <864>;
                    if {
                        {
                            () if_expr (__either.583)  <327>;
                        } #51
                        {
                        } #53 off=10
                        {
                            (__tmp.312 var=121) __sint__mi___sint___sint (__ct_0.61 __tmp_low.506)  <330>;
                            (__trgt.584 var=277) const ()  <850>;
                            () void_j_t21s_s2 (__trgt.584)  <851>;
                        } #52 off=9
                        {
                            (__tmp.313 var=122) merge (__tmp_low.506 __tmp.312)  <331>;
                        } #54
                    } #50
                    #210 off=11
                    (__trgt.587 var=279) const ()  <855>;
                    () void_j_t21s_s2 (__trgt.587)  <856>;
                } #48
                {
                    (__rt.315 var=22) merge (__rt.286 __tmp.313)  <333>;
                } #55
            } #9
            #211 off=26
            (__trgt.590 var=281) const ()  <860>;
            () void_j_t21s_s2 (__trgt.590)  <861>;
        } #7
        {
            (__rt.318 var=22) merge (__ct_0.61 __rt.315)  <336>;
        } #56
    } #4
    #59 off=28 nxt=-2
    (__ct_8s0.323 var=124) const ()  <341>;
    (__tmp.325 var=126) __Pvoid__pl___Pvoid___sint (__rd___sp.43 __ct_8s0.323)  <343>;
    (__R_SP.326 var=12 __sp.327 var=18) wr_res_reg (__tmp.325 __sp.41)  <344>;
    () void___rts_jr_w32 (__la.21)  <345>;
    (__rt.328 var=22 stl=X off=10) assign (__rt.318)  <346>;
    () out (__rt.328)  <347>;
    () sink (__sp.327)  <355>;
} #0
0 : 'SoftFloat-3e/source/f64_to_i32_r_minMag.c';
----------
0 : (0,44:0,0);
4 : (0,66:4,14);
6 : (0,66:27,15);
7 : (0,72:8,18);
9 : (0,77:4,20);
11 : (0,77:26,21);
13 : (0,79:17,21);
15 : (0,79:25,22);
16 : (0,79:17,23);
19 : (0,79:35,25);
21 : (0,79:43,26);
22 : (0,79:35,27);
25 : (0,78:8,29);
27 : (0,80:10,30);
28 : (0,86:12,33);
29 : (0,92:17,34);
30 : (0,92:27,34);
33 : (0,92:27,36);
36 : (0,92:34,38);
38 : (0,92:36,39);
39 : (0,93:8,40);
41 : (0,93:8,40);
43 : (0,93:23,41);
44 : (0,93:30,42);
48 : (0,91:8,53);
50 : (0,104:16,56);
52 : (0,104:18,57);
53 : (0,104:26,58);
59 : (0,104:4,67);
91 : (0,77:19,20);
131 : (0,79:43,26);
132 : (0,79:43,26);
133 : (0,79:43,26);
134 : (0,79:43,26);
135 : (0,79:43,26);
136 : (0,79:43,26);
142 : (0,92:27,35);
164 : (0,98:14,55);
165 : (0,98:14,55);
166 : (0,98:14,55);
167 : (0,98:14,55);
168 : (0,98:14,55);
169 : (0,98:14,55);
170 : (0,98:14,55);
171 : (0,98:14,55);
172 : (0,98:14,55);
173 : (0,98:14,55);
174 : (0,98:14,55);
175 : (0,98:14,55);
188 : (0,66:12,14);
----------
47 : (0,44:13,0);
48 : (0,44:13,0);
50 : (0,44:13,0);
51 : (0,44:13,0);
54 : (0,49:19,0);
72 : (0,59:6,0);
97 : (0,61:38,0);
99 : (0,61:38,11);
103 : (0,65:22,0);
105 : (0,65:22,13);
106 : (0,66:12,0);
108 : (0,66:12,14);
127 : (0,66:4,14);
136 : (0,77:19,0);
138 : (0,77:19,20);
157 : (0,77:4,20);
176 : (0,79:17,21);
177 : (0,79:25,0);
201 : (0,79:35,25);
207 : (0,79:35,28);
226 : (0,78:8,29);
227 : (0,86:31,0);
250 : (0,92:27,34);
256 : (0,92:27,37);
275 : (0,92:34,38);
276 : (0,92:36,0);
296 : (0,93:8,40);
301 : (0,93:8,43);
302 : (0,92:34,45);
303 : (0,78:8,49);
327 : (0,104:16,56);
330 : (0,104:18,57);
331 : (0,104:16,59);
333 : (0,77:4,63);
336 : (0,66:4,66);
341 : (0,104:4,0);
343 : (0,104:4,0);
344 : (0,104:4,67);
345 : (0,104:4,67);
346 : (0,104:4,0);
446 : (0,61:32,0);
457 : (0,61:32,11);
480 : (0,62:17,12);
512 : (0,76:36,19);
556 : (0,79:43,26);
557 : (0,79:43,26);
558 : (0,79:43,26);
590 : (0,97:8,54);
610 : (0,98:14,55);
613 : (0,98:14,55);
614 : (0,98:14,55);
615 : (0,98:14,55);
616 : (0,98:14,55);
617 : (0,98:14,55);
618 : (0,98:14,55);
619 : (0,98:14,55);
620 : (0,98:14,55);
622 : (0,98:14,55);
623 : (0,98:14,55);
625 : (0,98:14,55);
661 : (0,61:32,0);
665 : (0,76:36,0);
671 : (0,62:19,0);
673 : (0,79:45,0);
675 : (0,97:11,0);
699 : (0,92:27,35);
700 : (0,92:27,35);
781 : (0,79:43,26);
782 : (0,79:25,22);
783 : (0,79:17,24);
784 : (0,92:17,34);
807 : (0,79:17,21);
810 : (0,79:43,26);
814 : (0,79:35,25);
817 : (0,92:27,34);
820 : (0,93:8,40);
826 : (0,92:34,38);
833 : (0,78:8,29);
838 : (0,98:14,55);
843 : (0,98:14,55);
848 : (0,104:16,56);
853 : (0,77:4,20);
858 : (0,66:4,14);

