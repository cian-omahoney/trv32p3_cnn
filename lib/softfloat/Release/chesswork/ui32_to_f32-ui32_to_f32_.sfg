
// File generated by noodle version U-2022.12#33f3808fcb#221128, Fri Mar 22 17:52:33 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -ISoftFloat-3e/source/include -ISoftFloat-3e/source/riscv -ISoftFloat-3e/build/chess -I../runtime/include -DCHESS_CXX_ATTRIBUTES -DSOFTFLOAT_NO_EXCEPTIONS -DINLINE_LEVEL=5 -DSOFTFLOAT_FAST_DIV32TO16 -D__tct_patch__=0 +Oextc -itrv32p3_cnn_chess.h +Opmsa +NOrlt +wRelease/chesswork SoftFloat-3e/source/ui32_to_f32.c +Q0=+Sal,+Sca,+Osps,-Wflla,+Opmsa,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+Opmsa,+NOrlt trv32p3_cnn


/***
!!  float32_t ui32_to_f32(uint32_t)
Fui32_to_f32 : user_defined, called {
    fnm : "ui32_to_f32" 'float32_t ui32_to_f32(unsigned)';
    arg : ( w32:i w32:r w32:i );
    loc : ( X[1] X[10] X[11] );
    frm : ( );
    llv : 0 0 0 0 0 ;
}
****
!!  float32_t softfloat_roundPackToF32(bool, int_fast16_t, uint_fast32_t)
Fsoftfloat_roundPackToF32 : user_defined, called {
    fnm : "softfloat_roundPackToF32" 'float32_t softfloat_roundPackToF32(bool, int_fast16_t, uint_fast32_t)';
    arg : ( w32:i w32:r w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] );
    llv : 0 0 0 0 0 ;
}
!!  float32_t softfloat_normRoundPackToF32(bool, int_fast16_t, uint_fast32_t)
Fsoftfloat_normRoundPackToF32 : user_defined, called {
    fnm : "softfloat_normRoundPackToF32" 'float32_t softfloat_normRoundPackToF32(bool, int_fast16_t, uint_fast32_t)';
    arg : ( w32:i w32:r w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] );
    llv : 0 0 0 0 0 ;
}
***/

[
    0 : ui32_to_f32 typ=u08 bnd=e stl=PMb
   12 : __R_SP typ=w32 bnd=d stl=SP
   18 : __sp typ=w32 bnd=b stl=SP
   20 : __rd___sp typ=w32 bnd=m
   21 : __la typ=w32 bnd=p tref=w32__
   22 : __rt typ=w32 bnd=p tref=float32_t___1
   23 : a typ=w32 bnd=p tref=uint32_t__
   24 : __ct_m4S0 typ=w32 val=0S0 bnd=m
   26 : __tmp typ=w32 bnd=m
   31 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   33 : __tmp typ=bool bnd=m
   44 : __ct_2147483648 typ=t20s_rp12 val=-524288f bnd=m
   46 : __tmp typ=w32 bnd=m
   49 : __tmp typ=bool bnd=m
   52 : __tmp typ=w32 bnd=m
   53 : __ct_157 typ=w32 val=157f bnd=m
   54 : __ct typ=w32 bnd=m
   55 : __ct_1 typ=w32 val=1f bnd=m
   57 : __tmp typ=w32 bnd=m
   60 : __tmp typ=w32 bnd=m
   61 : __tmp typ=w32 bnd=m
   64 : softfloat_roundPackToF32 typ=t21s_s2 val=0r bnd=m
   66 : __tmp typ=w32 bnd=m
   69 : __tmp typ=w32 bnd=m
   70 : __ct_156 typ=w32 val=156f bnd=m
   71 : __ct typ=w32 bnd=m
   74 : softfloat_normRoundPackToF32 typ=t21s_s2 val=0r bnd=m
   76 : __tmp typ=w32 bnd=m
   77 : __ct_4s0 typ=w32 val=0s0 bnd=m
   79 : __tmp typ=w32 bnd=m
  100 : __either typ=bool bnd=m
  101 : __trgt typ=t13s_s2 val=0j bnd=m
  102 : __trgt typ=t13s_s2 val=0j bnd=m
]
Fui32_to_f32 {
    #3 off=0
    (__R_SP.11 var=12) st_def ()  <22>;
    (__sp.17 var=18) source ()  <28>;
    (__la.20 var=21 stl=X off=1) inp ()  <31>;
    (__la.21 var=21) deassign (__la.20)  <32>;
    (a.24 var=23 stl=X off=11) inp ()  <35>;
    (a.25 var=23) deassign (a.24)  <36>;
    (__rd___sp.27 var=20) rd_res_reg (__R_SP.11 __sp.17)  <38>;
    (__ct_m4S0.28 var=24) const ()  <39>;
    (__tmp.30 var=26) __Pvoid__pl___Pvoid___sint (__rd___sp.27 __ct_m4S0.28)  <41>;
    (__R_SP.31 var=12 __sp.32 var=18) wr_res_reg (__tmp.30 __sp.17)  <42>;
    (__rd___sp.33 var=20) rd_res_reg (__R_SP.11 __sp.32)  <44>;
    (__ct_0.38 var=31) const ()  <49>;
    (__ct_4s0.124 var=77) const ()  <136>;
    (__tmp.155 var=33) bool__eq___uint___uint (a.25 __ct_0.38)  <210>;
    (__trgt.175 var=102) const ()  <277>;
    () void_br_bool_t13s_s2 (__tmp.155 __trgt.175)  <278>;
    (__either.176 var=100) undefined ()  <279>;
    if {
        {
            () if_expr (__either.176)  <64>;
        } #5
        {
        } #6 off=8
        {
            #8 off=1
            (__ct_2147483648.64 var=44) const ()  <75>;
            (__tmp.66 var=46) __uint__ad___uint___uint (a.25 __ct_2147483648.64)  <77>;
            (__tmp.69 var=49) bool__ne___uint___uint (__tmp.66 __ct_0.38)  <80>;
            (__trgt.173 var=101) const ()  <274>;
            () void_br_bool_t13s_s2 (__tmp.69 __trgt.173)  <275>;
            (__either.174 var=100) undefined ()  <276>;
            if {
                {
                    () if_expr (__either.174)  <92>;
                } #10
                {
                    #50 off=5
                    (__ct_157.85 var=53) const ()  <97>;
                    (__ct_1.88 var=55) const ()  <100>;
                    (__tmp.90 var=57) __uint__rs___uint___sint (a.25 __ct_1.88)  <102>;
                    (__tmp.93 var=60) __uint__ad___uint___uint (a.25 __ct_1.88)  <105>;
                    (__tmp.94 var=61) __uint__or___uint___uint (__tmp.90 __tmp.93)  <106>;
                    (softfloat_roundPackToF32.98 var=64) const ()  <110>;
                    (__tmp.164 var=79) __Pvoid__pl___Pvoid___sint (__rd___sp.33 __ct_4s0.124)  <259>;
                    (__R_SP.165 var=12 __sp.166 var=18) wr_res_reg (__tmp.164 __sp.32)  <260>;
                    () void_j_t21s_s2 (softfloat_roundPackToF32.98)  <265>;
                    call {
                        (__tmp.84 var=52 stl=X off=11) assign (__ct_0.38)  <96>;
                        (__ct.87 var=54 stl=X off=12) assign (__ct_157.85)  <99>;
                        (__tmp.95 var=61 stl=X off=13) assign (__tmp.94)  <107>;
                        (__la.100 var=21 stl=X off=1) assign (__la.21)  <112>;
                        (__tmp.101 var=66 stl=X off=10) Fsoftfloat_roundPackToF32 (__la.100 __tmp.84 __ct.87 __tmp.95)  <113>;
                        (__tmp.102 var=66) deassign (__tmp.101)  <114>;
                    } #13 off=6
                    #51 off=7 nxt=-2
                    (__rt.167 var=22 stl=X off=10) assign (__tmp.102)  <262>;
                    () out (__rt.167)  <263>;
                    () sink (__sp.166)  <264>;
                } #11
                {
                    #54 off=2
                    (__ct_156.108 var=70) const ()  <120>;
                    (softfloat_normRoundPackToF32.114 var=74) const ()  <126>;
                    (__tmp.168 var=79) __Pvoid__pl___Pvoid___sint (__rd___sp.33 __ct_4s0.124)  <266>;
                    (__R_SP.169 var=12 __sp.170 var=18) wr_res_reg (__tmp.168 __sp.32)  <267>;
                    () void_j_t21s_s2 (softfloat_normRoundPackToF32.114)  <272>;
                    call {
                        (__tmp.107 var=69 stl=X off=11) assign (__ct_0.38)  <119>;
                        (__ct.110 var=71 stl=X off=12) assign (__ct_156.108)  <122>;
                        (a.111 var=23 stl=X off=13) assign (a.25)  <123>;
                        (__la.116 var=21 stl=X off=1) assign (__la.21)  <128>;
                        (__tmp.117 var=76 stl=X off=10) Fsoftfloat_normRoundPackToF32 (__la.116 __tmp.107 __ct.110 a.111)  <129>;
                        (__tmp.118 var=76) deassign (__tmp.117)  <130>;
                    } #16 off=3
                    #55 off=4 nxt=-2
                    (__rt.171 var=22 stl=X off=10) assign (__tmp.118)  <269>;
                    () out (__rt.171)  <270>;
                    () sink (__sp.170)  <271>;
                } #14
                {
                } #17
            } #9
        } #7
        {
        } #18
    } #4
    #20 off=9 nxt=-2
    (__tmp.126 var=79) __Pvoid__pl___Pvoid___sint (__rd___sp.33 __ct_4s0.124)  <138>;
    (__R_SP.127 var=12 __sp.128 var=18) wr_res_reg (__tmp.126 __sp.32)  <139>;
    () void___rts_jr_w32 (__la.21)  <140>;
    (__rt.129 var=22 stl=X off=10) assign (__ct_0.38)  <141>;
    () out (__rt.129)  <142>;
    () sink (__sp.128)  <148>;
} #0
0 : 'SoftFloat-3e/source/ui32_to_f32.c';
----------
0 : (0,42:0,0);
3 : (0,46:9,2);
4 : (0,46:4,2);
6 : (0,46:15,3);
7 : (0,48:8,7);
8 : (0,50:4,8);
9 : (0,50:4,8);
11 : (0,53:8,9);
13 : (0,51:15,9);
14 : (0,51:8,13);
16 : (0,53:15,13);
20 : (0,50:4,21);
50 : (0,50:4,21);
51 : (0,50:4,21);
54 : (0,50:4,21);
55 : (0,50:4,21);
----------
38 : (0,42:10,0);
39 : (0,42:10,0);
41 : (0,42:10,0);
42 : (0,42:10,0);
44 : (0,44:19,0);
49 : (0,46:9,0);
64 : (0,46:4,2);
75 : (0,50:13,0);
77 : (0,50:11,8);
80 : (0,50:4,8);
92 : (0,50:4,8);
96 : (0,51:42,0);
97 : (0,51:42,0);
99 : (0,51:42,0);
100 : (0,51:53,0);
102 : (0,51:51,9);
105 : (0,51:60,9);
106 : (0,51:55,9);
107 : (0,51:42,0);
112 : (0,51:15,0);
113 : (0,51:15,9);
119 : (0,53:46,0);
120 : (0,53:46,0);
122 : (0,53:46,0);
123 : (0,53:46,0);
128 : (0,53:15,0);
129 : (0,53:15,13);
136 : (0,50:4,0);
138 : (0,50:4,0);
139 : (0,50:4,21);
140 : (0,50:4,21);
141 : (0,50:4,0);
210 : (0,46:9,2);
259 : (0,50:4,0);
260 : (0,50:4,21);
262 : (0,50:4,0);
265 : (0,51:15,9);
266 : (0,50:4,0);
267 : (0,50:4,21);
269 : (0,50:4,0);
272 : (0,53:15,13);
275 : (0,50:4,8);
278 : (0,46:4,2);

