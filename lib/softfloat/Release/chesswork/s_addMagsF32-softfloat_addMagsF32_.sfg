
// File generated by noodle version U-2022.12#33f3808fcb#221128, Fri Mar  8 16:46:02 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -ISoftFloat-3e/source/include -ISoftFloat-3e/source/riscv -ISoftFloat-3e/build/chess -I../runtime/include -DCHESS_CXX_ATTRIBUTES -DSOFTFLOAT_NO_EXCEPTIONS -DINLINE_LEVEL=5 -DSOFTFLOAT_FAST_DIV32TO16 -D__tct_patch__=0 +Oextc -itrv32p3_cnn_chess.h +Opmsa +NOrlt +wRelease/chesswork SoftFloat-3e/source/s_addMagsF32.c +Q0=+Sal,+Sca,+Osps,-Wflla,+Opmsa,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+Opmsa,+NOrlt trv32p3_cnn


/***
!!  float32_t softfloat_addMagsF32(uint_fast32_t, uint_fast32_t)
Fsoftfloat_addMagsF32 : user_defined, called {
    fnm : "softfloat_addMagsF32" 'float32_t softfloat_addMagsF32(uint_fast32_t, uint_fast32_t)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
    frm : ( );
    llv : 0 0 0 0 0 ;
}
****
!!  float32_t softfloat_roundPackToF32(bool, int_fast16_t, uint_fast32_t)
Fsoftfloat_roundPackToF32 : user_defined, called {
    fnm : "softfloat_roundPackToF32" 'float32_t softfloat_roundPackToF32(bool, int_fast16_t, uint_fast32_t)';
    arg : ( w32:i w32:r w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] );
    llv : 0 0 0 0 0 ;
}
!!  uint_fast32_t softfloat_propagateNaNF32UI(uint_fast32_t, uint_fast32_t)
Fsoftfloat_propagateNaNF32UI : user_defined, called {
    fnm : "softfloat_propagateNaNF32UI" 'uint_fast32_t softfloat_propagateNaNF32UI(uint_fast32_t, uint_fast32_t)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
    llv : 0 0 0 0 0 ;
}
***/

[
    0 : softfloat_addMagsF32 typ=u08 bnd=e stl=PMb
   12 : __R_SP typ=w32 bnd=d stl=SP
   18 : __sp typ=w32 bnd=b stl=SP
   20 : __rd___sp typ=w32 bnd=m
   21 : __la typ=w32 bnd=p tref=w32__
   22 : __rt typ=w32 bnd=p tref=float32_t___1
   23 : uiA typ=w32 bnd=p tref=uint_fast32_t__
   24 : uiB typ=w32 bnd=p tref=uint_fast32_t__
   25 : __ct_m4S0 typ=w32 val=0S0 bnd=m
   27 : __tmp typ=w32 bnd=m
   32 : expA typ=w32 bnd=m tref=int_fast16_t__
   33 : sigA typ=w32 bnd=m tref=uint_fast32_t__
   34 : expB typ=w32 bnd=m tref=int_fast16_t__
   35 : sigB typ=w32 bnd=m tref=uint_fast32_t__
   36 : expDiff typ=w32 bnd=m tref=int_fast16_t__
   37 : uiZ typ=w32 bnd=m tref=uint_fast32_t__
   38 : signZ typ=bool bnd=m tref=bool__
   39 : expZ typ=w32 bnd=m tref=int_fast16_t__
   40 : sigZ typ=w32 bnd=m tref=uint_fast32_t__
   41 : __ct_23 typ=w32 val=23f bnd=m
   43 : __tmp typ=w32 bnd=m
   45 : __ct_255 typ=w32 val=255f bnd=m
   48 : __ct_8388607 typ=w32 val=8388607f bnd=m
   53 : __tmp typ=w32 bnd=m
   62 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   64 : __tmp typ=bool bnd=m
   68 : __tmp typ=bool bnd=m
   73 : __tmp typ=bool bnd=m
   74 : __tmp typ=w32 bnd=m
   77 : __tmp typ=bool bnd=m
   78 : __ct_31 typ=w32 val=31f bnd=m
   80 : __tmp typ=w32 bnd=m
   84 : __ct_16777216 typ=t20s_rp12 val=4096f bnd=m
   86 : __tmp typ=w32 bnd=m
   88 : __ct_1 typ=w32 val=1f bnd=m
   90 : __tmp typ=w32 bnd=m
   93 : __tmp typ=bool bnd=m
   95 : __ct_254 typ=w32 val=254f bnd=m
   97 : __tmp typ=bool bnd=m
  100 : __tmp typ=bool bnd=m
  108 : __tmp typ=w32 bnd=m
  109 : __tmp typ=w32 bnd=m
  112 : __tmp typ=w32 bnd=m
  114 : __ct_6 typ=w32 val=6f bnd=m
  131 : __tmp typ=bool bnd=m
  134 : __tmp typ=bool bnd=m
  137 : __tmp typ=bool bnd=m
  142 : __ct_2139095040 typ=t20s_rp12 val=522240f bnd=m
  144 : __tmp typ=w32 bnd=m
  150 : __tmp typ=bool bnd=m
  151 : __ct_536870912 typ=t20s_rp12 val=131072f bnd=m
  153 : __tmp typ=w32 bnd=m
  157 : __tmp typ=w32 bnd=m
  165 : __tmp typ=bool bnd=m
  168 : __tmp typ=bool bnd=m
  171 : __tmp typ=w32 bnd=m
  177 : __tmp typ=w32 bnd=m
  179 : __ct_1073741824 typ=t20s_rp12 val=262144f bnd=m
  181 : __tmp typ=bool bnd=m
  188 : __tmp typ=w32 bnd=m
  191 : softfloat_roundPackToF32 typ=t21s_s2 val=0r bnd=m
  193 : __tmp typ=w32 bnd=m
  194 : __ct_4s0 typ=w32 val=0s0 bnd=m
  196 : __tmp typ=w32 bnd=m
  199 : softfloat_propagateNaNF32UI typ=t21s_s2 val=0r bnd=m
  200 : __link typ=w32 bnd=m
  201 : __tmp typ=w32 bnd=m
  222 : __ct_m1 typ=w32 val=-1f bnd=m
  233 : __tmp typ=bool bnd=m
  234 : __tmp typ=w32 bnd=m
  236 : __tmp typ=w32 bnd=m
  237 : __tmp typ=w32 bnd=m
  238 : __tmp typ=w32 bnd=m
  241 : __tmp typ=w32 bnd=m
  254 : __tmp typ=w32 bnd=m
  255 : __tmp typ=w32 bnd=m
  256 : __tmp typ=w32 bnd=m
  257 : __tmp typ=w32 bnd=m
  260 : __ct_2147483648 typ=t20s_rp12 val=-524288f bnd=m
  269 : __tmp typ=t20s_rp12 bnd=m
  271 : __false typ=bool val=0f bnd=m
  272 : __either typ=bool bnd=m
  273 : __trgt typ=t13s_s2 val=0j bnd=m
  274 : __trgt typ=t21s_s2 val=0j bnd=m
  275 : __trgt typ=t13s_s2 val=0j bnd=m
  276 : __trgt typ=t13s_s2 val=0j bnd=m
  277 : __trgt typ=t13s_s2 val=0j bnd=m
  278 : __trgt typ=t13s_s2 val=0j bnd=m
  279 : __trgt typ=t13s_s2 val=0j bnd=m
  280 : __trgt typ=t13s_s2 val=0j bnd=m
  281 : __trgt typ=t13s_s2 val=0j bnd=m
  282 : __trgt typ=t13s_s2 val=0j bnd=m
  283 : __trgt typ=t21s_s2 val=0j bnd=m
  284 : __trgt typ=t13s_s2 val=0j bnd=m
  285 : __trgt typ=t21s_s2 val=0j bnd=m
  286 : __trgt typ=t13s_s2 val=0j bnd=m
  287 : __trgt typ=t13s_s2 val=0j bnd=m
  288 : __trgt typ=t13s_s2 val=0j bnd=m
  289 : __trgt typ=t21s_s2 val=0j bnd=m
  290 : __trgt typ=t13s_s2 val=0j bnd=m
  291 : __trgt typ=t21s_s2 val=0j bnd=m
  292 : __trgt typ=t13s_s2 val=0j bnd=m
  293 : __trgt typ=t21s_s2 val=0j bnd=m
  294 : __trgt typ=t13s_s2 val=0j bnd=m
  295 : __trgt typ=t21s_s2 val=0j bnd=m
  296 : __trgt typ=t13s_s2 val=0j bnd=m
  297 : __trgt typ=t21s_s2 val=0j bnd=m
  298 : __trgt typ=t21s_s2 val=0j bnd=m
  299 : __trgt typ=t21s_s2 val=0j bnd=m
  300 : __trgt typ=t21s_s2 val=0j bnd=m
  301 : __trgt typ=t21s_s2 val=0j bnd=m
  302 : __trgt typ=t21s_s2 val=0j bnd=m
  303 : __trgt typ=t21s_s2 val=0j bnd=m
  304 : __trgt typ=t21s_s2 val=0j bnd=m
  305 : __trgt typ=t21s_s2 val=0j bnd=m
]
Fsoftfloat_addMagsF32 {
    #174 off=0
    (__R_SP.11 var=12) st_def ()  <22>;
    (__sp.17 var=18) source ()  <28>;
    (__la.20 var=21 stl=X off=1) inp ()  <31>;
    (__la.21 var=21) deassign (__la.20)  <32>;
    (uiA.24 var=23 stl=X off=11) inp ()  <35>;
    (uiA.25 var=23) deassign (uiA.24)  <36>;
    (uiB.27 var=24 stl=X off=12) inp ()  <38>;
    (uiB.28 var=24) deassign (uiB.27)  <39>;
    (__rd___sp.30 var=20) rd_res_reg (__R_SP.11 __sp.17)  <41>;
    (__ct_m4S0.31 var=25) const ()  <42>;
    (__tmp.33 var=27) __Pvoid__pl___Pvoid___sint (__rd___sp.30 __ct_m4S0.31)  <44>;
    (__R_SP.34 var=12 __sp.35 var=18) wr_res_reg (__tmp.33 __sp.17)  <45>;
    (__rd___sp.36 var=20) rd_res_reg (__R_SP.11 __sp.35)  <47>;
    (__ct_23.59 var=41) const ()  <70>;
    (__tmp.61 var=43) __uint__rs___uint___sint (uiA.25 __ct_23.59)  <72>;
    (__ct_255.63 var=45) const ()  <74>;
    (expA.65 var=32) __sint__ad___sint___sint (__tmp.61 __ct_255.63)  <76>;
    (__ct_8388607.66 var=48) const ()  <77>;
    (sigA.68 var=33) __uint__ad___uint___uint (uiA.25 __ct_8388607.66)  <79>;
    (__tmp.71 var=53) __uint__rs___uint___sint (uiB.28 __ct_23.59)  <82>;
    (expB.75 var=34) __sint__ad___sint___sint (__tmp.71 __ct_255.63)  <86>;
    (sigB.78 var=35) __uint__ad___uint___uint (uiB.28 __ct_8388607.66)  <89>;
    (expDiff.79 var=36) __sint__mi___sint___sint (expA.65 expB.75)  <90>;
    (__ct_0.80 var=62) const ()  <91>;
    (__ct_31.306 var=78) const ()  <402>;
    (__tmp.308 var=80) __uint__rs___uint___sint (uiA.25 __ct_31.306)  <404>;
    (signZ.311 var=38) bool__ne___uint___uint (__tmp.308 __ct_0.80)  <407>;
    (__ct_2147483648.1094 var=260) const ()  <1491>;
    (__trgt.1128 var=273) const ()  <1582>;
    () void_br_bool_t13s_s2 (signZ.311 __trgt.1128)  <1583>;
    (__either.1129 var=272) undefined ()  <1584>;
    if {
        {
            () if_expr (__either.1129)  <1424>;
        } #176
        {
        } #177 off=2
        {
            (__trgt.1130 var=274) const ()  <1585>;
            () void_j_t21s_s2 (__trgt.1130)  <1586>;
        } #178 off=1
        {
            (__tmp.1095 var=269) merge (__ct_2147483648.1094 __ct_0.80)  <1493>;
        } #179
    } #175
    #171 off=3
    (__ct_1.316 var=88) const ()  <412>;
    (__ct_6.426 var=114) const ()  <551>;
    (__ct_4s0.893 var=194) const ()  <1134>;
    (__tmp.895 var=196) __Pvoid__pl___Pvoid___sint (__rd___sp.36 __ct_4s0.893)  <1136>;
    (__tmp.1018 var=64) bool__eq___sint___sint (expDiff.79 __ct_0.80)  <1318>;
    (__trgt.1168 var=296) const ()  <1651>;
    () void_br_bool_t13s_s2 (__tmp.1018 __trgt.1168)  <1652>;
    (__either.1169 var=272) undefined ()  <1653>;
    if {
        {
            () if_expr (__either.1169)  <116>;
        } #7
        {
            #9 off=35
            (__tmp.1019 var=68) bool__eq___sint___sint (expA.65 __ct_0.80)  <1319>;
            (__trgt.1131 var=275) const ()  <1587>;
            () void_br_bool_t13s_s2 (__tmp.1019 __trgt.1131)  <1588>;
            (__either.1132 var=272) undefined ()  <1589>;
            if {
                {
                    () if_expr (__either.1132)  <142>;
                    () chess_rear_then ()  <1590>;
                } #11
                {
                    (uiZ.130 var=37) __uint__pl___uint___uint (uiA.25 sigB.78)  <143>;
                    () sink (__sp.35)  <149>;
                    () sync_sink (uiZ.130) sid=37  <165>;
                    (__trgt.1171 var=298) const ()  <1656>;
                    () void_j_t21s_s2 (__trgt.1171)  <1657>;
                } #14 off=37 nxt=-3 tgt=2
                {
                } #15 off=36
                {
                } #16
            } #10
            #272 off=38
            (__trgt.1135 var=277) const ()  <1594>;
            () void_br_bool_t13s_s2 (__tmp.1179 __trgt.1135)  <1595>;
            (__either.1136 var=272) undefined ()  <1596>;
            (__tmp.1179 var=73) bool__eq___sint___sint (expA.65 __ct_255.63)  <1672>;
            if {
                {
                    () if_expr (__either.1136)  <237>;
                    () chess_rear_then ()  <1597>;
                } #19
                {
                    #21 off=40
                    (__tmp.197 var=74) __uint__or___uint___uint (sigA.68 sigB.78)  <238>;
                    (__tmp.1122 var=77) bool__eq___uint___uint (__tmp.197 __ct_0.80)  <1555>;
                    (__trgt.1133 var=276) const ()  <1591>;
                    () void_br_bool_t13s_s2 (__tmp.1122 __trgt.1133)  <1592>;
                    (__either.1134 var=272) undefined ()  <1593>;
                    if {
                        {
                            () if_expr (__either.1134)  <263>;
                        } #23
                        {
                        } #26 off=42
                        {
                            () sink (__sp.35)  <269>;
                            (__trgt.1172 var=299) const ()  <1658>;
                            () void_j_t21s_s2 (__trgt.1172)  <1659>;
                        } #25 off=41 nxt=-3 tgt=1
                        {
                        } #27
                    } #22
                    #28 off=43 nxt=-3 tgt=2
                    () sink (__sp.35)  <338>;
                    () sync_sink (uiA.25) sid=37  <354>;
                    (__trgt.1173 var=300) const ()  <1660>;
                    () void_j_t21s_s2 (__trgt.1173)  <1661>;
                } #20
                {
                } #29 off=39
                {
                } #30
            } #18
            #31 off=44
            (__ct_16777216.312 var=84) const ()  <408>;
            (__tmp.314 var=86) __uint__pl___uint___uint (sigA.68 __ct_16777216.312)  <410>;
            (sigZ.315 var=40) __uint__pl___uint___uint (__tmp.314 sigB.78)  <411>;
            (__tmp.318 var=90) __uint__ad___uint___uint (sigZ.315 __ct_1.316)  <414>;
            (__tmp.1123 var=93) bool__ne___uint___uint (__tmp.318 __ct_0.80)  <1556>;
            (__trgt.1137 var=278) const ()  <1598>;
            () void_br_bool_t13s_s2 (__tmp.1123 __trgt.1137)  <1599>;
            (__either.1138 var=272) undefined ()  <1600>;
            if {
                {
                    () if_expr (__either.1138)  <440>;
                } #33
                {
                    (__false.1139 var=271) const ()  <1601>;
                } #35
                {
                    (__ct_254.344 var=95) const ()  <441>;
                    (__tmp.346 var=97) bool__lt___sint___sint (expA.65 __ct_254.344)  <443>;
                    (__trgt.1140 var=279) const ()  <1602>;
                    () void_br_bool_t13s_s2 (__tmp.346 __trgt.1140)  <1603>;
                    (__either.1141 var=272) undefined ()  <1604>;
                } #34 off=45
                {
                    (__tmp.349 var=100) merge (__false.1139 __either.1141)  <446>;
                } #36
            } #32
            if {
                {
                    () if_expr (__tmp.349)  <468>;
                    () chess_rear_then ()  <1605>;
                } #39
                {
                    (__tmp.378 var=108) __uint__ls___uint___sint (expA.65 __ct_23.59)  <476>;
                    (__tmp.379 var=109) __uint__pl___uint___uint (__tmp.1095 __tmp.378)  <477>;
                    (__tmp.382 var=112) __uint__rs___uint___sint (sigZ.315 __ct_1.316)  <480>;
                    (uiZ.383 var=37) __uint__pl___uint___uint (__tmp.379 __tmp.382)  <481>;
                    () sink (__sp.35)  <487>;
                    () sync_sink (uiZ.383) sid=37  <503>;
                    (__trgt.1174 var=301) const ()  <1662>;
                    () void_j_t21s_s2 (__trgt.1174)  <1663>;
                } #42 off=47 nxt=-3 tgt=2
                {
                } #43 off=46
                {
                } #44
            } #38
            #45 off=48
            (sigZ.428 var=40) __uint__ls___uint___sint (sigZ.315 __ct_6.426)  <553>;
        } #8
        {
            #47 off=4
            (sigA.437 var=33) __uint__ls___uint___sint (sigA.68 __ct_6.426)  <562>;
            (sigB.440 var=35) __uint__ls___uint___sint (sigB.78 __ct_6.426)  <565>;
            (__tmp.443 var=131) bool__lt___sint___sint (expDiff.79 __ct_0.80)  <568>;
            (__ct_536870912.631 var=151) const ()  <814>;
            (__trgt.1162 var=292) const ()  <1641>;
            () void_br_bool_t13s_s2 (__tmp.443 __trgt.1162)  <1642>;
            (__either.1163 var=272) undefined ()  <1643>;
            if {
                {
                    () if_expr (__either.1163)  <590>;
                } #49
                {
                    #51 off=18
                    (__tmp.467 var=134) bool__eq___sint___sint (expB.75 __ct_255.63)  <593>;
                    (__trgt.1144 var=281) const ()  <1610>;
                    () void_br_bool_t13s_s2 (__tmp.467 __trgt.1144)  <1611>;
                    (__either.1145 var=272) undefined ()  <1612>;
                    if {
                        {
                            () if_expr (__either.1145)  <615>;
                            () chess_rear_then ()  <1613>;
                        } #53
                        {
                            #55 off=20
                            (__tmp.491 var=137) bool__ne___uint___uint (sigB.440 __ct_0.80)  <618>;
                            (__trgt.1142 var=280) const ()  <1606>;
                            () void_br_bool_t13s_s2 (__tmp.491 __trgt.1142)  <1607>;
                            (__either.1143 var=272) undefined ()  <1608>;
                            if {
                                {
                                    () if_expr (__either.1143)  <640>;
                                    () chess_rear_then ()  <1609>;
                                } #57
                                {
                                    () sink (__sp.35)  <646>;
                                    (__trgt.1175 var=302) const ()  <1664>;
                                    () void_j_t21s_s2 (__trgt.1175)  <1665>;
                                } #59 off=22 nxt=-3 tgt=1
                                {
                                } #60 off=21
                                {
                                } #61
                            } #56
                            #63 off=23 nxt=-3 tgt=2
                            (__ct_2139095040.559 var=142) const ()  <714>;
                            (__tmp.561 var=144) __uint__pl___uint___uint (__tmp.1095 __ct_2139095040.559)  <716>;
                            () sink (__sp.35)  <725>;
                            () sync_sink (__tmp.561) sid=37  <741>;
                            (__trgt.1176 var=303) const ()  <1666>;
                            () void_j_t21s_s2 (__trgt.1176)  <1667>;
                        } #54
                        {
                        } #64 off=19
                        {
                        } #65
                    } #52
                    #66 off=24
                    (__tmp.609 var=150) bool__ne___sint___sint (expA.65 __ct_0.80)  <791>;
                    (__trgt.1146 var=282) const ()  <1614>;
                    () void_br_bool_t13s_s2 (__tmp.609 __trgt.1146)  <1615>;
                    (__either.1147 var=272) undefined ()  <1616>;
                    if {
                        {
                            () if_expr (__either.1147)  <813>;
                        } #68
                        {
                        } #69 off=26
                        {
                            (__trgt.1148 var=283) const ()  <1617>;
                            () void_j_t21s_s2 (__trgt.1148)  <1618>;
                        } #70 off=25
                        {
                            (__tmp.633 var=153) merge (__ct_536870912.631 sigA.437)  <816>;
                        } #71
                    } #67
                    #137 off=27
                    (sigA.634 var=33) __uint__pl___uint___uint (sigA.437 __tmp.633)  <817>;
                    (__tmp.637 var=157) __sint__mi___sint___sint (__ct_0.80 expDiff.79)  <820>;
                    (__tmp.1034 var=233) bool__lt___uint___uint (__tmp.637 __ct_31.306)  <1360>;
                    (__trgt.1149 var=284) const ()  <1619>;
                    () void_br_bool_t13s_s2 (__tmp.1034 __trgt.1149)  <1620>;
                    (__either.1150 var=272) undefined ()  <1621>;
                    if {
                        {
                            () if_expr (__either.1150)  <1362>;
                        } #139
                        {
                            (__tmp.1036 var=234) __uint__rs___uint___sint (sigA.634 __tmp.637)  <1363>;
                            (__tmp.1037 var=236) __uint__mi___uint___uint (__ct_0.80 __tmp.637)  <1364>;
                            (__tmp.1038 var=237) __uint__ad___uint___uint (__tmp.1037 __ct_31.306)  <1365>;
                            (__tmp.1039 var=238) __uint__ls___uint___sint (sigA.634 __tmp.1038)  <1366>;
                            (__tmp.1042 var=241) __uint__or___uint___uint (__tmp.1036 __tmp.1100)  <1369>;
                            (__tmp.1100 var=254) __sint_sne0___sint (__tmp.1039)  <1499>;
                        } #188 off=29
                        {
                            (__tmp.1106 var=255) __sint_sne0___sint (sigA.634)  <1508>;
                            (__trgt.1151 var=285) const ()  <1622>;
                            () void_j_t21s_s2 (__trgt.1151)  <1623>;
                        } #250 off=28
                        {
                            (sigA.1045 var=33) merge (__tmp.1042 __tmp.1106)  <1372>;
                        } #142
                    } #138
                } #50
                {
                    #271 off=5
                    (__trgt.1154 var=287) const ()  <1627>;
                    () void_br_bool_t13s_s2 (__tmp.1180 __trgt.1154)  <1628>;
                    (__either.1155 var=272) undefined ()  <1629>;
                    (__tmp.1180 var=73) bool__eq___sint___sint (expA.65 __ct_255.63)  <1673>;
                    if {
                        {
                            () if_expr (__either.1155)  <847>;
                            () chess_rear_then ()  <1630>;
                        } #76
                        {
                            #78 off=7
                            (__tmp.1124 var=165) bool__eq___uint___uint (sigA.437 __ct_0.80)  <1557>;
                            (__trgt.1152 var=286) const ()  <1624>;
                            () void_br_bool_t13s_s2 (__tmp.1124 __trgt.1152)  <1625>;
                            (__either.1153 var=272) undefined ()  <1626>;
                            if {
                                {
                                    () if_expr (__either.1153)  <872>;
                                } #80
                                {
                                } #83 off=9
                                {
                                    () sink (__sp.35)  <878>;
                                    (__trgt.1177 var=304) const ()  <1668>;
                                    () void_j_t21s_s2 (__trgt.1177)  <1669>;
                                } #82 off=8 nxt=-3 tgt=1
                                {
                                } #84
                            } #79
                            #85 off=10 nxt=-3 tgt=2
                            () sink (__sp.35)  <947>;
                            () sync_sink (uiA.25) sid=37  <963>;
                            (__trgt.1178 var=305) const ()  <1670>;
                            () void_j_t21s_s2 (__trgt.1178)  <1671>;
                        } #77
                        {
                        } #86 off=6
                        {
                        } #87
                    } #75
                    #88 off=11
                    (__tmp.774 var=168) bool__ne___sint___sint (expB.75 __ct_0.80)  <1013>;
                    (__trgt.1156 var=288) const ()  <1631>;
                    () void_br_bool_t13s_s2 (__tmp.774 __trgt.1156)  <1632>;
                    (__either.1157 var=272) undefined ()  <1633>;
                    if {
                        {
                            () if_expr (__either.1157)  <1035>;
                        } #90
                        {
                        } #91 off=13
                        {
                            (__trgt.1158 var=289) const ()  <1634>;
                            () void_j_t21s_s2 (__trgt.1158)  <1635>;
                        } #92 off=12
                        {
                            (__tmp.798 var=171) merge (__ct_536870912.631 sigB.440)  <1038>;
                        } #93
                    } #89
                    #149 off=14
                    (sigB.799 var=35) __uint__pl___uint___uint (sigB.440 __tmp.798)  <1039>;
                    (__tmp.1050 var=233) bool__lt___uint___uint (expDiff.79 __ct_31.306)  <1380>;
                    (__trgt.1159 var=290) const ()  <1636>;
                    () void_br_bool_t13s_s2 (__tmp.1050 __trgt.1159)  <1637>;
                    (__either.1160 var=272) undefined ()  <1638>;
                    if {
                        {
                            () if_expr (__either.1160)  <1382>;
                        } #151
                        {
                            (__tmp.1052 var=234) __uint__rs___uint___sint (sigB.799 expDiff.79)  <1383>;
                            (__tmp.1053 var=236) __uint__mi___uint___uint (__ct_0.80 expDiff.79)  <1384>;
                            (__tmp.1054 var=237) __uint__ad___uint___uint (__tmp.1053 __ct_31.306)  <1385>;
                            (__tmp.1055 var=238) __uint__ls___uint___sint (sigB.799 __tmp.1054)  <1386>;
                            (__tmp.1058 var=241) __uint__or___uint___uint (__tmp.1052 __tmp.1112)  <1389>;
                            (__tmp.1112 var=256) __sint_sne0___sint (__tmp.1055)  <1517>;
                        } #217 off=16
                        {
                            (__tmp.1118 var=257) __sint_sne0___sint (sigB.799)  <1526>;
                            (__trgt.1161 var=291) const ()  <1639>;
                            () void_j_t21s_s2 (__trgt.1161)  <1640>;
                        } #264 off=15
                        {
                            (sigB.1061 var=35) merge (__tmp.1058 __tmp.1118)  <1392>;
                        } #154
                    } #150
                    #274 off=17
                    (__trgt.1164 var=293) const ()  <1644>;
                    () void_j_t21s_s2 (__trgt.1164)  <1645>;
                } #73
                {
                    (sigA.812 var=33) merge (sigA.1045 sigA.437)  <1052>;
                    (sigB.815 var=35) merge (sigB.440 sigB.1061)  <1055>;
                    (expZ.819 var=39) merge (expB.75 expA.65)  <1059>;
                } #95
            } #48
            #96 off=31
            (__tmp.825 var=177) __uint__pl___uint___uint (sigA.812 __ct_536870912.631)  <1065>;
            (sigZ.826 var=40) __uint__pl___uint___uint (__tmp.825 sigB.815)  <1066>;
            (__ct_1073741824.827 var=179) const ()  <1067>;
            (__tmp.1125 var=181) bool__ge___uint___uint (sigZ.826 __ct_1073741824.827)  <1558>;
            (__trgt.1165 var=294) const ()  <1646>;
            () void_br_bool_t13s_s2 (__tmp.1125 __trgt.1165)  <1647>;
            (__either.1166 var=272) undefined ()  <1648>;
            if {
                {
                    () if_expr (__either.1166)  <1091>;
                } #98
                {
                } #100 off=33
                {
                    (expZ.853 var=39) __sint__pl___sint___sint (expZ.819 __ct_m1.1022)  <1094>;
                    (sigZ.856 var=40) __uint__ls___uint___sint (sigZ.826 __ct_1.316)  <1097>;
                    (__ct_m1.1022 var=222) const ()  <1322>;
                    (__trgt.1167 var=295) const ()  <1649>;
                    () void_j_t21s_s2 (__trgt.1167)  <1650>;
                } #99 off=32
                {
                    (expZ.857 var=39) merge (expZ.819 expZ.853)  <1098>;
                    (sigZ.858 var=40) merge (sigZ.826 sigZ.856)  <1099>;
                } #101
            } #97
            #275 off=34
            (__trgt.1170 var=297) const ()  <1654>;
            () void_j_t21s_s2 (__trgt.1170)  <1655>;
        } #46
        {
            (expZ.876 var=39) merge (expA.65 expZ.857)  <1117>;
            (sigZ.877 var=40) merge (sigZ.428 sigZ.858)  <1118>;
        } #102
    } #6
    #105 off=49
    (softfloat_roundPackToF32.886 var=191) const ()  <1127>;
    (__R_SP.896 var=12 __sp.897 var=18) wr_res_reg (__tmp.895 __sp.35)  <1137>;
    (__tmp.1027 var=188) __sint_sne0___sint (__tmp.308)  <1329>;
    () void_j_t21s_s2 (softfloat_roundPackToF32.886)  <1581>;
    call {
        (__tmp.881 var=188 stl=X off=11) assign (__tmp.1027)  <1122>;
        (expZ.882 var=39 stl=X off=12) assign (expZ.876)  <1123>;
        (sigZ.883 var=40 stl=X off=13) assign (sigZ.877)  <1124>;
        (__la.888 var=21 stl=X off=1) assign (__la.21)  <1129>;
        (__tmp.889 var=193 stl=X off=10) Fsoftfloat_roundPackToF32 (__la.888 __tmp.881 expZ.882 sigZ.883)  <1130>;
        (__tmp.890 var=193) deassign (__tmp.889)  <1131>;
    } #104 off=50
    #106 off=51 nxt=-2
    (__rt.898 var=22 stl=X off=10) assign (__tmp.890)  <1139>;
    () out (__rt.898)  <1140>;
    () sink (__sp.897)  <1146>;
    sync {
    } #1 off=52
    #107 off=53
    (softfloat_propagateNaNF32UI.945 var=199) const ()  <1193>;
    (__link.946 var=200) w32_jal_t21s_s2 (softfloat_propagateNaNF32UI.945)  <1194>;
    call {
        (uiA.941 var=23 stl=X off=11) assign (uiA.25)  <1189>;
        (uiB.942 var=24 stl=X off=12) assign (uiB.28)  <1190>;
        (__link.947 var=200 stl=X off=1) assign (__link.946)  <1195>;
        (__tmp.948 var=201 stl=X off=10) Fsoftfloat_propagateNaNF32UI (__link.947 uiA.941 uiB.942)  <1196>;
        (__tmp.949 var=201) deassign (__tmp.948)  <1197>;
    } #108 off=54
    sync {
        (uiZ.966 var=37) sync_link (__tmp.949) sid=37  <1214>;
    } #2 off=55
    #111 off=56 nxt=-2
    (__R_SP.985 var=12 __sp.986 var=18) wr_res_reg (__tmp.895 __sp.35)  <1232>;
    () void___rts_jr_w32 (__la.21)  <1233>;
    (__rt.987 var=22 stl=X off=10) assign (uiZ.966)  <1234>;
    () out (__rt.987)  <1235>;
    () sink (__sp.986)  <1241>;
} #0
0 : 'SoftFloat-3e/source/s_addMagsF32.c';
----------
0 : (0,43:0,0);
1 : (0,119:1,122);
2 : (0,121:1,124);
6 : (0,65:4,16);
8 : (0,65:21,17);
9 : (0,68:13,17);
10 : (0,68:8,17);
14 : (0,70:12,19);
15 : (0,68:8,22);
18 : (0,72:8,25);
20 : (0,72:28,26);
21 : (0,73:12,26);
22 : (0,73:12,26);
25 : (0,73:31,27);
26 : (0,73:12,29);
28 : (0,75:12,33);
29 : (0,72:8,36);
31 : (0,80:13,42);
32 : (0,80:26,42);
34 : (0,80:35,43);
35 : (0,80:26,44);
38 : (0,80:8,46);
42 : (0,82:12,48);
43 : (0,80:8,51);
45 : (0,65:21,56);
46 : (0,85:11,57);
47 : (0,91:21,60);
48 : (0,91:8,60);
50 : (0,91:27,61);
51 : (0,92:22,61);
52 : (0,92:12,61);
54 : (0,92:32,62);
55 : (0,93:16,62);
56 : (0,93:16,62);
59 : (0,93:28,63);
60 : (0,93:16,65);
63 : (0,95:16,69);
64 : (0,92:12,72);
66 : (0,98:25,76);
67 : (0,98:25,76);
69 : (0,98:25,77);
70 : (0,98:40,78);
73 : (0,100:15,84);
75 : (0,101:12,84);
77 : (0,101:32,85);
78 : (0,102:16,85);
79 : (0,102:16,85);
82 : (0,102:28,86);
83 : (0,102:16,88);
85 : (0,104:16,92);
86 : (0,101:12,95);
88 : (0,107:25,99);
89 : (0,107:25,99);
91 : (0,107:25,100);
92 : (0,107:40,101);
96 : (0,111:18,109);
97 : (0,111:8,109);
99 : (0,111:33,110);
100 : (0,111:8,114);
104 : (0,116:11,120);
105 : (0,116:4,120);
106 : (0,116:4,120);
107 : (0,120:44,123);
108 : (0,120:10,123);
111 : (0,123:4,126);
137 : (0,99:19,81);
138 : (0,99:19,81);
139 : (0,99:19,81);
142 : (0,99:19,81);
149 : (0,108:19,104);
150 : (0,108:19,104);
151 : (0,108:19,104);
154 : (0,108:19,104);
171 : (0,72:18,25);
174 : (0,81:20,47);
175 : (0,81:20,47);
176 : (0,81:20,47);
177 : (0,81:20,47);
178 : (0,81:20,47);
179 : (0,81:20,47);
188 : (0,99:19,81);
217 : (0,108:19,104);
250 : (0,99:19,81);
264 : (0,108:19,104);
----------
41 : (0,43:10,0);
42 : (0,43:10,0);
44 : (0,43:10,0);
45 : (0,43:10,0);
47 : (0,54:19,0);
70 : (0,58:35,0);
72 : (0,58:33,11);
74 : (0,58:39,0);
76 : (0,58:39,11);
77 : (0,59:18,0);
79 : (0,59:18,12);
82 : (0,60:33,13);
86 : (0,60:39,13);
89 : (0,61:18,14);
90 : (0,64:19,15);
91 : (0,65:9,0);
116 : (0,65:4,16);
142 : (0,68:8,17);
143 : (0,69:22,18);
237 : (0,72:8,25);
238 : (0,73:22,26);
263 : (0,73:12,26);
402 : (0,77:43,0);
404 : (0,77:41,39);
407 : (0,77:17,39);
408 : (0,79:26,0);
410 : (0,79:26,41);
411 : (0,79:33,41);
412 : (0,80:21,0);
414 : (0,80:21,42);
440 : (0,80:26,42);
441 : (0,80:35,0);
443 : (0,80:35,43);
446 : (0,80:26,45);
468 : (0,80:8,46);
476 : (0,81:64,47);
477 : (0,81:44,47);
480 : (0,81:77,47);
481 : (0,81:70,47);
551 : (0,84:17,0);
553 : (0,84:13,54);
562 : (0,89:13,58);
565 : (0,90:13,59);
568 : (0,91:21,60);
590 : (0,91:8,60);
593 : (0,92:22,61);
615 : (0,92:12,61);
618 : (0,93:16,62);
640 : (0,93:16,62);
714 : (0,94:68,0);
716 : (0,94:48,68);
791 : (0,98:25,76);
813 : (0,98:25,76);
814 : (0,98:25,0);
816 : (0,98:25,79);
817 : (0,98:17,80);
820 : (0,99:52,81);
847 : (0,101:12,84);
872 : (0,102:16,85);
1013 : (0,107:25,99);
1035 : (0,107:25,99);
1038 : (0,107:25,102);
1039 : (0,107:17,103);
1052 : (0,91:8,107);
1055 : (0,91:8,107);
1059 : (0,91:8,107);
1065 : (0,110:26,108);
1066 : (0,110:33,108);
1067 : (0,111:18,0);
1091 : (0,111:8,109);
1094 : (0,112:12,110);
1097 : (0,113:17,111);
1098 : (0,111:8,116);
1099 : (0,111:8,116);
1117 : (0,65:4,119);
1118 : (0,65:4,119);
1122 : (0,116:37,0);
1123 : (0,116:44,0);
1124 : (0,116:50,0);
1129 : (0,116:11,0);
1130 : (0,116:11,120);
1134 : (0,116:4,0);
1136 : (0,116:4,0);
1137 : (0,116:4,120);
1139 : (0,116:35,0);
1189 : (0,120:39,0);
1190 : (0,120:44,0);
1194 : (0,120:10,123);
1195 : (0,120:10,0);
1196 : (0,120:10,123);
1232 : (0,123:4,126);
1233 : (0,123:4,126);
1234 : (0,123:13,0);
1318 : (0,65:9,16);
1319 : (0,68:13,17);
1322 : (0,112:12,0);
1360 : (0,99:19,81);
1362 : (0,99:19,81);
1363 : (0,99:19,81);
1364 : (0,99:19,81);
1365 : (0,99:19,81);
1366 : (0,99:19,81);
1369 : (0,99:19,81);
1372 : (0,99:19,81);
1380 : (0,108:19,104);
1382 : (0,108:19,104);
1383 : (0,108:19,104);
1384 : (0,108:19,104);
1385 : (0,108:19,104);
1386 : (0,108:19,104);
1389 : (0,108:19,104);
1392 : (0,108:19,104);
1424 : (0,81:20,47);
1491 : (0,81:38,0);
1493 : (0,81:20,47);
1499 : (0,99:19,81);
1508 : (0,99:19,81);
1517 : (0,108:19,104);
1526 : (0,108:19,104);
1555 : (0,73:12,26);
1556 : (0,80:13,42);
1557 : (0,102:16,85);
1558 : (0,111:18,109);
1581 : (0,116:11,120);
1583 : (0,81:20,47);
1588 : (0,68:8,17);
1592 : (0,73:12,26);
1595 : (0,72:8,25);
1599 : (0,80:26,42);
1603 : (0,80:8,46);
1607 : (0,93:16,62);
1611 : (0,92:12,61);
1615 : (0,98:25,76);
1620 : (0,99:19,81);
1625 : (0,102:16,85);
1628 : (0,101:12,84);
1632 : (0,107:25,99);
1637 : (0,108:19,104);
1642 : (0,91:8,60);
1647 : (0,111:8,109);
1652 : (0,65:4,16);

