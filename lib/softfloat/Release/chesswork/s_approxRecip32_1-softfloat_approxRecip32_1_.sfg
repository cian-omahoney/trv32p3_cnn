
// File generated by noodle version U-2022.12#33f3808fcb#221128, Tue Mar 19 15:57:50 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -ISoftFloat-3e/source/include -ISoftFloat-3e/source/riscv -ISoftFloat-3e/build/chess -I../runtime/include -DCHESS_CXX_ATTRIBUTES -DSOFTFLOAT_NO_EXCEPTIONS -DINLINE_LEVEL=5 -DSOFTFLOAT_FAST_DIV32TO16 -D__tct_patch__=0 +Oextc -itrv32p3_cnn_chess.h +Opmsa +NOrlt +wRelease/chesswork SoftFloat-3e/source/s_approxRecip32_1.c +Q0=+Sal,+Sca,+Osps,-Wflla,+Opmsa,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+Opmsa,+NOrlt trv32p3_cnn


/***
!!  uint32_t softfloat_approxRecip32_1(uint32_t)
Fsoftfloat_approxRecip32_1 : user_defined, called {
    fnm : "softfloat_approxRecip32_1" 'uint32_t softfloat_approxRecip32_1(uint32_t)';
    arg : ( w32:i w32:r w32:i );
    loc : ( X[1] X[10] X[11] );
    frm : ( );
}
****
***/

[
    0 : softfloat_approxRecip32_1 typ=u08 bnd=e stl=PMb
    4 : __M_DMh typ=w16 bnd=d stl=DMh
   12 : __R_SP typ=w32 bnd=d stl=SP
   18 : __sp typ=w32 bnd=b stl=SP
   19 : softfloat_approxRecip_1k0s typ=w08 bnd=e sz=32 algn=2 stl=DMb tref=__A16__ushort_DMb
   21 : softfloat_approxRecip_1k1s typ=w08 bnd=e sz=32 algn=2 stl=DMb tref=__A16__ushort_DMb
   22 : __rd___sp typ=w32 bnd=m
   24 : __ptr_softfloat_approxRecip_1k0s typ=w32 val=0a bnd=m adro=19
   26 : __ptr_softfloat_approxRecip_1k1s typ=w32 val=0a bnd=m adro=21
   27 : __la typ=w32 bnd=p tref=w32__
   28 : __rt typ=w32 bnd=p tref=uint32_t__
   29 : a typ=w32 bnd=p tref=uint32_t__
   30 : __ct_0S0 typ=w32 val=0S0 bnd=m
   32 : __tmp typ=w32 bnd=m
   34 : eps typ=__ushort bnd=m tref=uint16_t__
   35 : r0 typ=__ushort bnd=m tref=uint16_t__
   36 : sigma0 typ=w32 bnd=m tref=uint32_t__
   39 : __ct_27 typ=w32 val=27f bnd=m
   41 : __tmp typ=w32 bnd=m
   42 : __ct_15 typ=w32 val=15f bnd=m
   44 : __tmp typ=w32 bnd=m
   46 : __ct_11 typ=w32 val=11f bnd=m
   48 : __tmp typ=w32 bnd=m
   52 : __tmp typ=w32 bnd=m
   53 : __tmp typ=w32 bnd=m
   54 : __fch_softfloat_approxRecip_1k0s typ=__ushort bnd=m
   59 : __tmp typ=w32 bnd=m
   60 : __fch_softfloat_approxRecip_1k1s typ=__ushort bnd=m
   63 : __tmp typ=w32 bnd=m
   64 : __ct_20 typ=w32 val=20f bnd=m
   66 : __tmp typ=w32 bnd=m
   67 : __tmp typ=w32 bnd=m
   72 : __ct_7 typ=w32 val=7f bnd=m
   78 : __ct_16 typ=w32 val=16f bnd=m
   80 : __tmp typ=w32 bnd=m
   85 : __ct_24 typ=w32 val=24f bnd=m
  106 : __ct_0s0 typ=w32 val=0s0 bnd=m
  108 : __tmp typ=w32 bnd=m
  113 : __ct_1 typ=w32 val=1f bnd=m
  120 : __apl_p1lo typ=w32 bnd=m tref=__uint__
  121 : __apl_p1hi typ=w32 bnd=m tref=__uint__
  159 : __apl_carries typ=w32 bnd=m tref=__uint__
  164 : __tmp typ=w32 bnd=m
  165 : __apl_r_low typ=w32 bnd=m tref=__uint__
  177 : __ct_4294967295 typ=w32 val=-1f bnd=m
  202 : __apl_r_low typ=w32 bnd=m tref=__uint__
  255 : __ct_25 typ=w32 val=25f bnd=m
  257 : __ct_8 typ=w32 val=8f bnd=m
]
Fsoftfloat_approxRecip32_1 {
    (__M_DMh.3 var=4) st_def ()  <6>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__sp.17 var=18) source ()  <28>;
    (softfloat_approxRecip_1k0s.18 var=19) source ()  <29>;
    (softfloat_approxRecip_1k1s.20 var=21) source ()  <31>;
    (__ptr_softfloat_approxRecip_1k0s.22 var=24) const ()  <33>;
    (__ptr_softfloat_approxRecip_1k1s.24 var=26) const ()  <35>;
    (__la.26 var=27 stl=X off=1) inp ()  <37>;
    (__la.27 var=27) deassign (__la.26)  <38>;
    (a.30 var=29 stl=X off=11) inp ()  <41>;
    (a.31 var=29) deassign (a.30)  <42>;
    (__rd___sp.33 var=22) rd_res_reg (__R_SP.11 __sp.17)  <44>;
    (__ct_0S0.34 var=30) const ()  <45>;
    (__tmp.36 var=32) __Pvoid__pl___Pvoid___sint (__rd___sp.33 __ct_0S0.34)  <47>;
    (__R_SP.37 var=12 __sp.38 var=18) wr_res_reg (__tmp.36 __sp.17)  <48>;
    (__ct_27.51 var=39) const ()  <62>;
    (__tmp.53 var=41) __uint__rs___uint___sint (a.31 __ct_27.51)  <64>;
    (__ct_15.54 var=42) const ()  <65>;
    (__tmp.56 var=44) __uint__ad___uint___uint (__tmp.53 __ct_15.54)  <67>;
    (__ct_11.58 var=46) const ()  <69>;
    (__tmp.60 var=48) __uint__rs___uint___sint (a.31 __ct_11.58)  <71>;
    (eps.61 var=34) __ushort___ushort___uint (__tmp.60)  <72>;
    (__tmp.64 var=52) __sint__ls___sint___sint (__tmp.56 __ct_1.149)  <75>;
    (__tmp.65 var=53) __Pvoid__pl___Pvoid___sint (__ptr_softfloat_approxRecip_1k0s.22 __tmp.64)  <76>;
    (__fch_softfloat_approxRecip_1k0s.66 var=54) load (__M_DMh.3 __tmp.65 softfloat_approxRecip_1k0s.18)  <77>;
    (__tmp.71 var=59) __Pvoid__pl___Pvoid___sint (__ptr_softfloat_approxRecip_1k1s.24 __tmp.64)  <82>;
    (__fch_softfloat_approxRecip_1k1s.72 var=60) load (__M_DMh.3 __tmp.71 softfloat_approxRecip_1k1s.20)  <83>;
    (__tmp.75 var=63) __uint__ml___uint___uint (__fch_softfloat_approxRecip_1k1s.72 eps.61)  <86>;
    (__ct_20.76 var=64) const ()  <87>;
    (__tmp.78 var=66) __uint__rs___uint___sint (__tmp.75 __ct_20.76)  <89>;
    (__tmp.79 var=67) __uint__mi___uint___uint (__fch_softfloat_approxRecip_1k0s.66 __tmp.78)  <90>;
    (r0.80 var=35) __ushort___ushort___uint (__tmp.79)  <91>;
    (__ct_7.84 var=72) const ()  <95>;
    (__ct_16.90 var=78) const ()  <101>;
    (__tmp.92 var=80) __uint__ls___uint___sint (r0.80 __ct_16.90)  <103>;
    (__ct_24.97 var=85) const ()  <108>;
    (__rd___sp.118 var=22) rd_res_reg (__R_SP.11 __sp.38)  <129>;
    (__ct_0s0.119 var=106) const ()  <130>;
    (__tmp.121 var=108) __Pvoid__pl___Pvoid___sint (__rd___sp.118 __ct_0s0.119)  <132>;
    (__R_SP.122 var=12 __sp.123 var=18) wr_res_reg (__tmp.121 __sp.38)  <133>;
    () void___rts_jr_w32 (__la.27)  <134>;
    (__rt.124 var=28 stl=X off=10) assign (__apl_r_low.482)  <135>;
    () out (__rt.124)  <136>;
    () sink (__sp.123)  <142>;
    (__ct_1.149 var=113) const ()  <202>;
    (__apl_p1lo.163 var=120) __uint_mul___uint___uint (r0.80 a.31)  <236>;
    (__apl_p1hi.168 var=121) __uint_mulhu___uint___uint (r0.80 a.31)  <243>;
    (__apl_carries.205 var=159) __uint__ls___uint___sint (__apl_p1hi.168 __ct_25.505)  <290>;
    (__tmp.206 var=164) __uint__rs___uint___sint (__apl_p1lo.163 __ct_7.84)  <291>;
    (__apl_r_low.207 var=165) __uint__or___uint___uint (__tmp.206 __apl_carries.205)  <292>;
    (__ct_4294967295.224 var=177) const ()  <313>;
    (sigma0.225 var=36) __uint__er___uint___uint (__apl_r_low.207 __ct_4294967295.224)  <314>;
    (__apl_p1lo.238 var=120) __uint_mul___uint___uint (r0.80 sigma0.225)  <332>;
    (__apl_p1hi.243 var=121) __uint_mulhu___uint___uint (r0.80 sigma0.225)  <339>;
    (__apl_carries.280 var=159) __uint__ls___uint___sint (__apl_p1hi.243 __ct_8.507)  <386>;
    (__tmp.281 var=164) __uint__rs___uint___sint (__apl_p1lo.238 __ct_24.97)  <387>;
    (__apl_r_low.282 var=165) __uint__or___uint___uint (__tmp.281 __apl_carries.280)  <388>;
    (__apl_r_low.309 var=202) __uint_add___uint___uint (__tmp.92 __apl_r_low.282)  <421>;
    (__apl_p1hi.345 var=121) __uint_mulhu___uint___uint (sigma0.225 sigma0.225)  <465>;
    (__apl_p1hi.416 var=121) __uint_mulhu___uint___uint (__apl_r_low.309 __apl_p1hi.345)  <554>;
    (__apl_r_low.457 var=165) __uint__rs___uint___sint (__apl_p1hi.416 __ct_16.90)  <605>;
    (__apl_r_low.482 var=202) __uint_add___uint___uint (__apl_r_low.309 __apl_r_low.457)  <636>;
    (__ct_25.505 var=255) const ()  <683>;
    (__ct_8.507 var=257) const ()  <687>;
} #5 off=0 nxt=-2
0 : 'SoftFloat-3e/source/s_approxRecip32_1.c';
----------
5 : (0,61:4,13);
----------
33 : (0,55:9,0);
35 : (0,56:17,0);
44 : (0,45:9,0);
45 : (0,45:9,0);
47 : (0,45:9,0);
48 : (0,45:9,0);
62 : (0,53:15,0);
64 : (0,53:13,6);
65 : (0,53:18,0);
67 : (0,53:18,6);
69 : (0,54:25,0);
71 : (0,54:23,7);
72 : (0,54:10,7);
75 : (0,55:36,8);
76 : (0,55:35,8);
77 : (0,55:35,8);
82 : (0,56:43,8);
83 : (0,56:43,8);
86 : (0,56:51,8);
87 : (0,56:75,0);
89 : (0,56:73,8);
90 : (0,56:13,8);
91 : (0,55:7,8);
95 : (0,57:57,0);
101 : (0,58:29,0);
103 : (0,58:27,10);
108 : (0,58:67,0);
129 : (0,61:4,0);
130 : (0,61:4,0);
132 : (0,61:4,0);
133 : (0,61:4,13);
134 : (0,61:4,13);
135 : (0,61:11,0);
202 : (0,55:36,0);
236 : (0,57:35,9);
243 : (0,57:35,9);
290 : (0,57:55,9);
291 : (0,57:55,9);
292 : (0,57:55,9);
313 : (0,57:13,0);
314 : (0,57:13,9);
332 : (0,58:40,10);
339 : (0,58:40,10);
386 : (0,58:65,10);
387 : (0,58:65,10);
388 : (0,58:65,10);
421 : (0,58:33,10);
465 : (0,59:40,11);
554 : (0,60:23,12);
605 : (0,60:51,12);
636 : (0,60:6,12);
683 : (0,57:55,0);
687 : (0,58:65,0);

