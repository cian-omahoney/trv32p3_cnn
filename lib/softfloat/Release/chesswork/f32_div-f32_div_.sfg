
// File generated by noodle version U-2022.12#33f3808fcb#221128, Fri Mar 22 17:52:21 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -ISoftFloat-3e/source/include -ISoftFloat-3e/source/riscv -ISoftFloat-3e/build/chess -I../runtime/include -DCHESS_CXX_ATTRIBUTES -DSOFTFLOAT_NO_EXCEPTIONS -DINLINE_LEVEL=5 -DSOFTFLOAT_FAST_DIV32TO16 -D__tct_patch__=0 +Oextc -itrv32p3_cnn_chess.h +Opmsa +NOrlt +wRelease/chesswork SoftFloat-3e/source/f32_div.c +Q0=+Sal,+Sca,+Osps,-Wflla,+Opmsa,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+Opmsa,+NOrlt trv32p3_cnn


/***
!!  float32_t f32_div(float32_t, float32_t)
Ff32_div : user_defined, called {
    fnm : "f32_div" 'float32_t f32_div(float32_t, float32_t)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
    frm : ( l=20 );
    llv : 0 0 0 0 0 ;
}
****
!!  exp16_sig32 softfloat_normSubnormalF32Sig(uint_fast32_t)
Fsoftfloat_normSubnormalF32Sig : user_defined, called {
    fnm : "softfloat_normSubnormalF32Sig" 'exp16_sig32 softfloat_normSubnormalF32Sig(uint_fast32_t)';
    arg : ( w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] );
    llv : 0 0 0 0 0 ;
}
!!  uint32_t softfloat_approxRecip32_1(uint32_t)
Fsoftfloat_approxRecip32_1 : user_defined, called {
    fnm : "softfloat_approxRecip32_1" 'uint32_t softfloat_approxRecip32_1(uint32_t)';
    arg : ( w32:i w32:r w32:i );
    loc : ( X[1] X[10] X[11] );
    llv : 0 0 0 0 0 ;
}
!!  float32_t softfloat_roundPackToF32(bool, int_fast16_t, uint_fast32_t)
Fsoftfloat_roundPackToF32 : user_defined, called {
    fnm : "softfloat_roundPackToF32" 'float32_t softfloat_roundPackToF32(bool, int_fast16_t, uint_fast32_t)';
    arg : ( w32:i w32:r w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] );
    llv : 0 0 0 0 0 ;
}
!!  uint_fast32_t softfloat_propagateNaNF32UI(uint_fast32_t, uint_fast32_t)
Fsoftfloat_propagateNaNF32UI : user_defined, called {
    fnm : "softfloat_propagateNaNF32UI" 'uint_fast32_t softfloat_propagateNaNF32UI(uint_fast32_t, uint_fast32_t)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
    llv : 0 0 0 0 0 ;
}
***/

[
    0 : f32_div typ=u08 bnd=e stl=PMb
    5 : __M_DMw typ=w32 bnd=d stl=DMw
   12 : __R_SP typ=w32 bnd=d stl=SP
   18 : __sp typ=w32 bnd=b stl=SP
   21 : normExpSig typ=w08 val=8t0 bnd=a sz=8 algn=4 stl=DMb tref=exp16_sig32_DMb
   23 : normExpSig_exp typ=w08 bnd=B stl=DMb
   24 : normExpSig_sig typ=w08 bnd=B stl=DMb
   25 : __rd___sp typ=w32 bnd=m
   26 : __la typ=w32 bnd=p tref=w32__
   27 : __rt typ=w32 bnd=p tref=float32_t___1
   28 : a typ=w32 bnd=p tref=float32_t___1
   29 : b typ=w32 bnd=p tref=float32_t___1
   30 : __ct_m20S0 typ=w32 val=-20S0 bnd=m
   32 : __tmp typ=w32 bnd=m
   41 : __ptr_normExpSig typ=w32 bnd=m
   42 : __ct_8t0 typ=w32 val=8t0 bnd=m
   44 : __adr_normExpSig typ=w32 bnd=m adro=21
   49 : uiA typ=w32 bnd=m tref=uint_fast32_t__
   51 : expA typ=w32 bnd=m tref=int_fast16_t__
   52 : sigA typ=w32 bnd=m tref=uint_fast32_t__
   53 : uiB typ=w32 bnd=m tref=uint_fast32_t__
   55 : expB typ=w32 bnd=m tref=int_fast16_t__
   56 : sigB typ=w32 bnd=m tref=uint_fast32_t__
   57 : signZ typ=bool bnd=m tref=bool__
   58 : uiZ typ=w32 bnd=m tref=uint_fast32_t__
   59 : expZ typ=w32 bnd=m tref=int_fast16_t__
   60 : sigZ typ=w32 bnd=m tref=uint_fast32_t__
   62 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   69 : __ct_31 typ=w32 val=31f bnd=m
   71 : __tmp typ=w32 bnd=m
   75 : __ct_23 typ=w32 val=23f bnd=m
   77 : __tmp typ=w32 bnd=m
   79 : __ct_255 typ=w32 val=255f bnd=m
   82 : __ct_8388607 typ=w32 val=8388607f bnd=m
   94 : __tmp typ=w32 bnd=m
  100 : __tmp typ=w32 bnd=m
  108 : __tmp typ=w32 bnd=m
  109 : __tmp typ=w32 bnd=m
  110 : __tmp typ=w32 bnd=m
  116 : __tmp typ=bool bnd=m
  119 : __tmp typ=bool bnd=m
  122 : __tmp typ=bool bnd=m
  130 : __ct_2139095040 typ=t20s_rp12 val=522240f bnd=m
  132 : __tmp typ=w32 bnd=m
  154 : __tmp typ=bool bnd=m
  158 : __tmp typ=bool bnd=m
  161 : __tmp typ=w32 bnd=m
  164 : __tmp typ=bool bnd=m
  168 : softfloat_normSubnormalF32Sig typ=t21s_s2 val=0r bnd=m
  169 : __link typ=w32 bnd=m
  181 : __tmp typ=bool bnd=m
  185 : __tmp typ=bool bnd=m
  190 : __link typ=w32 bnd=m
  200 : __tmp typ=w32 bnd=m
  201 : __ct_126 typ=w32 val=126f bnd=m
  204 : __ct_8388608 typ=t20s_rp12 val=2048f bnd=m
  210 : __tmp typ=bool bnd=m
  211 : __ct_1 typ=w32 val=1f bnd=m
  214 : __ct_8 typ=w32 val=8f bnd=m
  217 : __ct_7 typ=w32 val=7f bnd=m
  226 : softfloat_approxRecip32_1 typ=t21s_s2 val=0r bnd=m
  227 : __link typ=w32 bnd=m
  228 : __tmp typ=w32 bnd=m
  235 : __ct_2 typ=w32 val=2f bnd=m
  238 : __ct_63 typ=w32 val=63f bnd=m
  240 : __tmp typ=w32 bnd=m
  243 : __tmp typ=bool bnd=m
  244 : __ct_4294967292 typ=w32 val=-4f bnd=m
  253 : __tmp typ=w32 bnd=m
  273 : __tmp typ=w32 bnd=m
  276 : softfloat_roundPackToF32 typ=t21s_s2 val=0r bnd=m
  278 : __tmp typ=w32 bnd=m
  279 : __ct_20s0 typ=w32 val=20s0 bnd=m
  281 : __tmp typ=w32 bnd=m
  284 : softfloat_propagateNaNF32UI typ=t21s_s2 val=0r bnd=m
  285 : __link typ=w32 bnd=m
  286 : __tmp typ=w32 bnd=m
  287 : __ct_2143289344 typ=t20s_rp12 val=523264f bnd=m
  313 : __ct_m1 typ=w32 val=-1f bnd=m
  316 : __ct_12t0 typ=w32 val=12t0 bnd=m
  317 : __adr_normExpSig typ=w32 bnd=m adro=21
  330 : __apl_p1lo typ=w32 bnd=m tref=__uint__
  331 : __apl_p1hi typ=w32 bnd=m tref=__uint__
  424 : __apl_r_low typ=w32 bnd=m tref=__uint__
  425 : __apl_r_high typ=w32 bnd=m tref=__uint__
  444 : __tmp_high typ=w32 bnd=m
  454 : __tmp typ=bool bnd=m
  470 : __ct_2147483648 typ=t20s_rp12 val=-524288f bnd=m
  473 : __tmpd typ=w32 bnd=m
  474 : __tmp typ=bool bnd=m
  509 : __tmp typ=w32 bnd=m
  522 : __linex typ=w32 bnd=m
  529 : __tmp typ=t20s_rp12 bnd=m
  530 : uiZ typ=t20s_rp12 bnd=m
  533 : __either typ=bool bnd=m
  534 : __trgt typ=t13s_s2 val=0j bnd=m
  535 : __trgt typ=t21s_s2 val=0j bnd=m
  536 : __trgt typ=t13s_s2 val=0j bnd=m
  537 : __trgt typ=t13s_s2 val=0j bnd=m
  538 : __trgt typ=t13s_s2 val=0j bnd=m
  539 : __trgt typ=t13s_s2 val=0j bnd=m
  540 : __trgt typ=t13s_s2 val=0j bnd=m
  541 : __trgt typ=t13s_s2 val=0j bnd=m
  542 : __trgt typ=t13s_s2 val=0j bnd=m
  543 : __trgt typ=t13s_s2 val=0j bnd=m
  544 : __trgt typ=t21s_s2 val=0j bnd=m
  545 : __trgt typ=t13s_s2 val=0j bnd=m
  546 : __trgt typ=t13s_s2 val=0j bnd=m
  547 : __trgt typ=t21s_s2 val=0j bnd=m
  548 : __trgt typ=t13s_s2 val=0j bnd=m
  549 : __trgt typ=t21s_s2 val=0j bnd=m
  550 : __trgt typ=t13s_s2 val=0j bnd=m
  551 : __trgt typ=t21s_s2 val=0j bnd=m
  552 : __trgt typ=t13s_s2 val=0j bnd=m
  553 : __trgt typ=t21s_s2 val=0j bnd=m
  554 : __trgt typ=t13s_s2 val=0j bnd=m
  555 : __trgt typ=t21s_s2 val=0j bnd=m
  556 : __trgt typ=t13s_s2 val=0j bnd=m
  557 : __trgt typ=t21s_s2 val=0j bnd=m
  558 : __trgt typ=t21s_s2 val=0j bnd=m
  559 : __trgt typ=t21s_s2 val=0j bnd=m
  560 : __trgt typ=t21s_s2 val=0j bnd=m
  561 : __trgt typ=t21s_s2 val=0j bnd=m
  562 : __trgt typ=t21s_s2 val=0j bnd=m
  563 : __trgt typ=t21s_s2 val=0j bnd=m
  564 : __trgt typ=t21s_s2 val=0j bnd=m
  565 : __trgt typ=t21s_s2 val=0j bnd=m
  566 : __trgt typ=t21s_s2 val=0j bnd=m
  567 : __trgt typ=t21s_s2 val=0j bnd=m
]
Ff32_div {
    #405 off=0
    (__M_DMw.4 var=5) st_def ()  <8>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__sp.17 var=18) source ()  <28>;
    (normExpSig.20 var=21) source ()  <31>;
    (normExpSig_exp.22 var=23) source ()  <33>;
    (normExpSig_sig.23 var=24) source ()  <34>;
    (__la.25 var=26 stl=X off=1) inp ()  <36>;
    (__la.26 var=26) deassign (__la.25)  <37>;
    (a.29 var=28 stl=X off=11) inp ()  <40>;
    (a.30 var=28) deassign (a.29)  <41>;
    (b.32 var=29 stl=X off=12) inp ()  <43>;
    (b.33 var=29) deassign (b.32)  <44>;
    (__rd___sp.35 var=25) rd_res_reg (__R_SP.11 __sp.17)  <46>;
    (__ct_m20S0.36 var=30) const ()  <47>;
    (__tmp.38 var=32) __Pvoid__pl___Pvoid___sint (__rd___sp.35 __ct_m20S0.36)  <49>;
    (__R_SP.39 var=12 __sp.40 var=18) wr_res_reg (__tmp.38 __sp.17)  <50>;
    (__rd___sp.41 var=25) rd_res_reg (__R_SP.11 __sp.40)  <52>;
    (__ct_0.87 var=62) const ()  <98>;
    (__ct_31.96 var=69) const ()  <106>;
    (__tmp.98 var=71) __uint__rs___uint___sint (a.30 __ct_31.96)  <108>;
    (__ct_23.102 var=75) const ()  <112>;
    (__tmp.104 var=77) __uint__rs___uint___sint (a.30 __ct_23.102)  <114>;
    (__ct_255.106 var=79) const ()  <116>;
    (expA.108 var=51) __sint__ad___sint___sint (__tmp.104 __ct_255.106)  <118>;
    (__ct_8388607.109 var=82) const ()  <119>;
    (sigA.111 var=52) __uint__ad___uint___uint (a.30 __ct_8388607.109)  <121>;
    (__tmp.123 var=94) __uint__rs___uint___sint (b.33 __ct_31.96)  <132>;
    (__tmp.129 var=100) __uint__rs___uint___sint (b.33 __ct_23.102)  <138>;
    (expB.133 var=55) __sint__ad___sint___sint (__tmp.129 __ct_255.106)  <142>;
    (sigB.136 var=56) __uint__ad___uint___uint (b.33 __ct_8388607.109)  <145>;
    (__tmp.139 var=110) __sint__er___sint___sint (__tmp.2109 __tmp.2115)  <148>;
    (signZ.142 var=57) bool__ne___sint___sint (__tmp.139 __ct_0.87)  <151>;
    (__ct_2147483648.2034 var=470) const ()  <2650>;
    (__tmp.2109 var=108) __sint_sne0___sint (__tmp.98)  <2820>;
    (__tmp.2115 var=109) __sint_sne0___sint (__tmp.123)  <2829>;
    (__trgt.2138 var=534) const ()  <2943>;
    () void_br_bool_t13s_s2 (signZ.142 __trgt.2138)  <2944>;
    (__either.2139 var=533) undefined ()  <2945>;
    if {
        {
            () if_expr (__either.2139)  <2707>;
        } #407
        {
        } #408 off=2
        {
            (__trgt.2140 var=535) const ()  <2946>;
            () void_j_t21s_s2 (__trgt.2140)  <2947>;
        } #409 off=1
        {
            (__tmp.2104 var=529) merge (__ct_2147483648.2034 __ct_0.87)  <2814>;
        } #410
    } #406
    #382 off=3
    (__tmp.145 var=116) bool__eq___sint___sint (expA.108 __ct_255.106)  <154>;
    (__ct_20s0.1525 var=279) const ()  <1896>;
    (__tmp.1527 var=281) __Pvoid__pl___Pvoid___sint (__rd___sp.41 __ct_20s0.1525)  <1898>;
    (__trgt.2175 var=556) const ()  <3007>;
    () void_br_bool_t13s_s2 (__tmp.145 __trgt.2175)  <3008>;
    (__either.2176 var=533) undefined ()  <3009>;
    if {
        {
            () if_expr (__either.2176)  <188>;
        } #10
        {
            #12 off=52
            (__tmp.181 var=119) bool__ne___uint___uint (sigA.111 __ct_0.87)  <191>;
            (__trgt.2141 var=536) const ()  <2948>;
            () void_br_bool_t13s_s2 (__tmp.181 __trgt.2141)  <2949>;
            (__either.2142 var=533) undefined ()  <2950>;
            if {
                {
                    () if_expr (__either.2142)  <225>;
                    () chess_rear_then ()  <2951>;
                } #14
                {
                    () sink (__sp.40)  <231>;
                    (__trgt.2178 var=558) const ()  <3012>;
                    () void_j_t21s_s2 (__trgt.2178)  <3013>;
                } #16 off=54 nxt=-3 tgt=3
                {
                } #17 off=53
                {
                } #18
            } #13
            #526 off=55
            (__trgt.2145 var=538) const ()  <2955>;
            () void_br_bool_t13s_s2 (__tmp.2188 __trgt.2145)  <2956>;
            (__either.2146 var=533) undefined ()  <2957>;
            (__tmp.2188 var=122) bool__eq___sint___sint (expB.133 __ct_255.106)  <3032>;
            if {
                {
                    () if_expr (__either.2146)  <367>;
                    () chess_rear_then ()  <2958>;
                } #21
                {
                    #522 off=57
                    (__trgt.2143 var=537) const ()  <2952>;
                    () void_br_bool_t13s_s2 (__tmp.2190 __trgt.2143)  <2953>;
                    (__either.2144 var=533) undefined ()  <2954>;
                    (__tmp.2190 var=158) bool__eq___uint___uint (sigB.136 __ct_0.87)  <3034>;
                    if {
                        {
                            () if_expr (__either.2144)  <404>;
                        } #25
                        {
                        } #28 off=59
                        {
                            () sink (__sp.40)  <410>;
                            (__trgt.2179 var=559) const ()  <3014>;
                            () void_j_t21s_s2 (__trgt.2179)  <3015>;
                        } #27 off=58 nxt=-3 tgt=3
                        {
                        } #29
                    } #24
                    #30 off=60 nxt=-3 tgt=4
                    () sink (__sp.40)  <515>;
                    (__trgt.2180 var=560) const ()  <3016>;
                    () void_j_t21s_s2 (__trgt.2180)  <3017>;
                } #22
                {
                } #31 off=56
                {
                } #32
            } #20
            sync {
            } #1 off=61
            #34 off=62 nxt=-3 tgt=5
            (__ct_2139095040.522 var=130) const ()  <652>;
            (__tmp.524 var=132) __uint__pl___uint___uint (__tmp.2104 __ct_2139095040.522)  <654>;
            () sink (__sp.40)  <663>;
            () sync_sink (__tmp.524) sid=159  <690>;
            (__trgt.2181 var=561) const ()  <3018>;
            () void_j_t21s_s2 (__trgt.2181)  <3019>;
            sync {
            } #2 off=63
        } #11
        {
            #525 off=4
            (__trgt.2149 var=540) const ()  <2962>;
            () void_br_bool_t13s_s2 (__tmp.2189 __trgt.2149)  <2963>;
            (__either.2150 var=533) undefined ()  <2964>;
            (__tmp.2189 var=122) bool__eq___sint___sint (expB.133 __ct_255.106)  <3033>;
            if {
                {
                    () if_expr (__either.2150)  <809>;
                    () chess_rear_then ()  <2965>;
                } #39
                {
                    #523 off=6
                    (__trgt.2147 var=539) const ()  <2959>;
                    () void_br_bool_t13s_s2 (__tmp.2191 __trgt.2147)  <2960>;
                    (__either.2148 var=533) undefined ()  <2961>;
                    (__tmp.2191 var=158) bool__eq___uint___uint (sigB.136 __ct_0.87)  <3035>;
                    if {
                        {
                            () if_expr (__either.2148)  <846>;
                        } #43
                        {
                        } #46 off=8
                        {
                            () sink (__sp.40)  <852>;
                            (__trgt.2182 var=562) const ()  <3020>;
                            () void_j_t21s_s2 (__trgt.2182)  <3021>;
                        } #45 off=7 nxt=-3 tgt=3
                        {
                        } #47
                    } #42
                    #48 off=9 nxt=-3 tgt=2
                    () sink (__sp.40)  <957>;
                    (__trgt.2183 var=563) const ()  <3022>;
                    () void_j_t21s_s2 (__trgt.2183)  <3023>;
                } #40
                {
                } #49 off=5
                {
                } #50
            } #38
            #51 off=10
            (__ct_8t0.52 var=42) const ()  <63>;
            (__adr_normExpSig.54 var=44) __Pvoid__pl___Pvoid___sint (__rd___sp.41 __ct_8t0.52)  <65>;
            (softfloat_normSubnormalF32Sig.1057 var=168) const ()  <1387>;
            (__ct_12t0.1810 var=316) const ()  <2306>;
            (__adr_normExpSig.1811 var=317) __Pvoid__pl___Pvoid___sint (__rd___sp.41 __ct_12t0.1810)  <2308>;
            (__tmp.2132 var=154) bool__ne___sint___sint (expB.133 __ct_0.87)  <2909>;
            (__trgt.2155 var=543) const ()  <2973>;
            () void_br_bool_t13s_s2 (__tmp.2132 __trgt.2155)  <2974>;
            (__either.2156 var=533) undefined ()  <2975>;
            if {
                {
                    () if_expr (__either.2156)  <1094>;
                } #53
                {
                } #72 off=20
                {
                    #524 off=11
                    (__trgt.2153 var=542) const ()  <2969>;
                    () void_br_bool_t13s_s2 (__tmp.2192 __trgt.2153)  <2970>;
                    (__either.2154 var=533) undefined ()  <2971>;
                    (__tmp.2192 var=158) bool__eq___uint___uint (sigB.136 __ct_0.87)  <3036>;
                    if {
                        {
                            () if_expr (__either.2154)  <1132>;
                            () chess_rear_then ()  <2972>;
                        } #57
                        {
                            #59 off=13
                            (__tmp.883 var=161) __uint__or___uint___uint (expA.108 sigA.111)  <1134>;
                            (__tmp.2131 var=164) bool__ne___uint___uint (__tmp.883 __ct_0.87)  <2908>;
                            (__trgt.2151 var=541) const ()  <2966>;
                            () void_br_bool_t13s_s2 (__tmp.2131 __trgt.2151)  <2967>;
                            (__either.2152 var=533) undefined ()  <2968>;
                            if {
                                {
                                    () if_expr (__either.2152)  <1172>;
                                } #61
                                {
                                } #64 off=15
                                {
                                    () sink (__sp.40)  <1178>;
                                    (__trgt.2184 var=564) const ()  <3024>;
                                    () void_j_t21s_s2 (__trgt.2184)  <3025>;
                                } #63 off=14 nxt=-3 tgt=4
                                {
                                } #65
                            } #60
                            #66 off=16 nxt=-3 tgt=1
                            () sink (__sp.40)  <1283>;
                            (__trgt.2185 var=565) const ()  <3026>;
                            () void_j_t21s_s2 (__trgt.2185)  <3027>;
                        } #58
                        {
                        } #67 off=12
                        {
                        } #68
                    } #56
                    #69 off=17
                    (__link.1058 var=169) w32_jal_t21s_s2 (softfloat_normSubnormalF32Sig.1057)  <1388>;
                    call {
                        (__ptr_normExpSig.1053 var=41 stl=X off=10) assign (__adr_normExpSig.54)  <1383>;
                        (sigB.1054 var=56 stl=X off=11) assign (sigB.136)  <1384>;
                        (__link.1059 var=169 stl=X off=1) assign (__link.1058)  <1389>;
                        (normExpSig.1060 var=21 normExpSig_exp.1061 var=23 normExpSig_sig.1062 var=24) Fsoftfloat_normSubnormalF32Sig (__link.1059 __ptr_normExpSig.1053 sigB.1054 normExpSig.20 normExpSig_exp.22 normExpSig_sig.23)  <1390>;
                    } #70 off=18
                    #71 off=19
                    (expB.1067 var=55) load (__M_DMw.4 __adr_normExpSig.54 normExpSig_exp.1061)  <1395>;
                    (sigB.1071 var=56) load (__M_DMw.4 __adr_normExpSig.1811 normExpSig_sig.1062)  <1399>;
                    (__trgt.2157 var=544) const ()  <2976>;
                    () void_j_t21s_s2 (__trgt.2157)  <2977>;
                } #54
                {
                    (normExpSig.1080 var=21) merge (normExpSig.20 normExpSig.1060)  <1408>;
                    (normExpSig_exp.1082 var=23) merge (normExpSig_exp.22 normExpSig_exp.1061)  <1410>;
                    (normExpSig_sig.1083 var=24) merge (normExpSig_sig.23 normExpSig_sig.1062)  <1411>;
                    (expB.1095 var=55) merge (expB.133 expB.1067)  <1423>;
                    (sigB.1096 var=56) merge (sigB.136 sigB.1071)  <1424>;
                } #73
            } #52
            #74 off=21
            (__tmp.2133 var=181) bool__ne___sint___sint (expA.108 __ct_0.87)  <2910>;
            (__trgt.2160 var=546) const ()  <2982>;
            () void_br_bool_t13s_s2 (__tmp.2133 __trgt.2160)  <2983>;
            (__either.2161 var=533) undefined ()  <2984>;
            if {
                {
                    () if_expr (__either.2161)  <1470>;
                } #76
                {
                } #88 off=28
                {
                    #78 off=22
                    (__tmp.1803 var=185) bool__eq___uint___uint (sigA.111 __ct_0.87)  <2298>;
                    (__trgt.2158 var=545) const ()  <2978>;
                    () void_br_bool_t13s_s2 (__tmp.1803 __trgt.2158)  <2979>;
                    (__either.2159 var=533) undefined ()  <2980>;
                    if {
                        {
                            () if_expr (__either.2159)  <1508>;
                            () chess_rear_then ()  <2981>;
                        } #80
                        {
                            () sink (__sp.40)  <1514>;
                            (__trgt.2186 var=566) const ()  <3028>;
                            () void_j_t21s_s2 (__trgt.2186)  <3029>;
                        } #82 off=24 nxt=-3 tgt=2
                        {
                        } #83 off=23
                        {
                        } #84
                    } #79
                    #85 off=25
                    (__link.1250 var=190) w32_jal_t21s_s2 (softfloat_normSubnormalF32Sig.1057)  <1619>;
                    call {
                        (__ptr_normExpSig.1245 var=41 stl=X off=10) assign (__adr_normExpSig.54)  <1614>;
                        (sigA.1246 var=52 stl=X off=11) assign (sigA.111)  <1615>;
                        (__link.1251 var=190 stl=X off=1) assign (__link.1250)  <1620>;
                        (normExpSig.1252 var=21 normExpSig_exp.1253 var=23 normExpSig_sig.1254 var=24) Fsoftfloat_normSubnormalF32Sig (__link.1251 __ptr_normExpSig.1245 sigA.1246 normExpSig.1080 normExpSig_exp.1082 normExpSig_sig.1083)  <1621>;
                    } #86 off=26
                    #87 off=27
                    (expA.1259 var=51) load (__M_DMw.4 __adr_normExpSig.54 normExpSig_exp.1253)  <1626>;
                    (sigA.1263 var=52) load (__M_DMw.4 __adr_normExpSig.1811 normExpSig_sig.1254)  <1630>;
                    (__trgt.2162 var=547) const ()  <2985>;
                    () void_j_t21s_s2 (__trgt.2162)  <2986>;
                } #77
                {
                    (expA.1281 var=51) merge (expA.108 expA.1259)  <1648>;
                    (sigA.1282 var=52) merge (sigA.111 sigA.1263)  <1649>;
                } #89
            } #75
            #90 off=29
            (__tmp.1297 var=200) __sint__mi___sint___sint (expA.1281 expB.1095)  <1664>;
            (__ct_126.1298 var=201) const ()  <1665>;
            (expZ.1300 var=59) __sint__pl___sint___sint (__tmp.1297 __ct_126.1298)  <1667>;
            (__ct_8388608.1301 var=204) const ()  <1668>;
            (sigA.1303 var=52) __uint__or___uint___uint (sigA.1282 __ct_8388608.1301)  <1670>;
            (sigB.1306 var=56) __uint__or___uint___uint (sigB.1096 __ct_8388608.1301)  <1673>;
            (__tmp.1307 var=210) bool__lt___uint___uint (sigA.1303 sigB.1306)  <1674>;
            (__ct_8.1344 var=214) const ()  <1712>;
            (__trgt.2163 var=548) const ()  <2987>;
            () void_br_bool_t13s_s2 (__tmp.1307 __trgt.2163)  <2988>;
            (__either.2164 var=533) undefined ()  <2989>;
            if {
                {
                    () if_expr (__either.2164)  <1708>;
                } #92
                {
                    (expZ.1343 var=59) __sint__pl___sint___sint (expZ.1300 __ct_m1.1807)  <1711>;
                    (sigA.1346 var=52) __uint__ls___uint___sint (sigA.1303 __ct_8.1344)  <1714>;
                    (__ct_m1.1807 var=313) const ()  <2302>;
                } #93 off=31
                {
                    (__ct_7.1347 var=217) const ()  <1715>;
                    (sigA.1349 var=52) __uint__ls___uint___sint (sigA.1303 __ct_7.1347)  <1717>;
                    (__trgt.2165 var=549) const ()  <2990>;
                    () void_j_t21s_s2 (__trgt.2165)  <2991>;
                } #94 off=30
                {
                    (sigA.1350 var=52) merge (sigA.1346 sigA.1349)  <1718>;
                    (expZ.1351 var=59) merge (expZ.1343 expZ.1300)  <1719>;
                } #95
            } #91
            #417 off=32
            (sigB.1354 var=56) __uint__ls___uint___sint (sigB.1306 __ct_8.1344)  <1722>;
            (softfloat_approxRecip32_1.1359 var=226) const ()  <1727>;
            (__link.1360 var=227) w32_jal_t21s_s2 (softfloat_approxRecip32_1.1359)  <1728>;
            call {
                (sigB.1356 var=56 stl=X off=11) assign (sigB.1354)  <1724>;
                (__link.1361 var=227 stl=X off=1) assign (__link.1360)  <1729>;
                (__tmp.1362 var=228 stl=X off=10) Fsoftfloat_approxRecip32_1 (__link.1361 sigB.1356)  <1730>;
                (__tmp.1363 var=228) deassign (__tmp.1362)  <1731>;
            } #97 off=33
            #437 off=34
            (__ct_2.1371 var=235) const ()  <1739>;
            (__ct_63.1374 var=238) const ()  <1742>;
            (__tmp.1376 var=240) __uint__ad___uint___uint (__linex.2125 __ct_63.1374)  <1744>;
            (__apl_p1hi.1837 var=331) __uint_mulhu___uint___uint (sigA.1350 __tmp.1363)  <2373>;
            (__linex.2125 var=522) __uint__pl___uint___uint (__apl_p1hi.1837 __ct_2.1371)  <2873>;
            (__tmp.2135 var=243) bool__ge___uint___uint (__tmp.1376 __ct_2.1371)  <2912>;
            (__trgt.2172 var=554) const ()  <3002>;
            () void_br_bool_t13s_s2 (__tmp.2135 __trgt.2172)  <3003>;
            (__either.2173 var=533) undefined ()  <3004>;
            if {
                {
                    () if_expr (__either.2173)  <1781>;
                } #100
                {
                } #114 off=42
                {
                    #343 off=35
                    (__ct_1.1341 var=211) const ()  <1709>;
                    (__ct_4294967292.1413 var=244) const ()  <1782>;
                    (sigZ.1415 var=60) __uint__ad___uint___uint (__linex.2125 __ct_4294967292.1413)  <1784>;
                    (__tmp.1422 var=253) __uint__ls___uint___sint (sigZ.1415 __ct_1.1341)  <1791>;
                    (__apl_p1lo.1931 var=330) __uint_mul___uint___uint (__tmp.1422 sigB.1354)  <2489>;
                    (__apl_p1hi.1936 var=331) __uint_mulhu___uint___uint (__tmp.1422 sigB.1354)  <2496>;
                    (__apl_r_low.1971 var=424) __uint_sub___uint___uint (__ct_0.87 __apl_p1lo.1931)  <2540>;
                    (__apl_r_high.1972 var=425) __uint_sub___uint___uint (sigA.1350 __apl_p1hi.1936)  <2541>;
                    (__apl_r_high.1975 var=425) __uint__mi___uint___uint (__apl_r_high.1972 __tmp.2121)  <2544>;
                    (__tmp_high.1994 var=444) __uint__ad___uint___uint (__apl_r_high.1975 __ct_2147483648.2034)  <2567>;
                    (__tmp.2010 var=454) bool__ne___uint___uint (__tmp_high.1994 __ct_0.87)  <2587>;
                    (__tmp.2121 var=509) __sint_sne0___sint (__apl_p1lo.1931)  <2838>;
                    (__trgt.2169 var=552) const ()  <2997>;
                    () void_br_bool_t13s_s2 (__tmp.2010 __trgt.2169)  <2998>;
                    (__either.2170 var=533) undefined ()  <2999>;
                    if {
                        {
                            () if_expr (__either.2170)  <1835>;
                        } #104
                        {
                            (sigZ.1468 var=60) __uint__pl___uint___uint (sigZ.1415 __ct_4294967292.1413)  <1838>;
                        } #105 off=40
                        {
                            #353 off=36
                            (__tmpd.2037 var=473) __uint__or___uint___uint (__apl_r_high.1975 __apl_r_low.1971)  <2683>;
                            (__tmp.2134 var=474) bool__eq___uint___uint (__tmpd.2037 __ct_0.87)  <2911>;
                            (__trgt.2166 var=550) const ()  <2992>;
                            () void_br_bool_t13s_s2 (__tmp.2134 __trgt.2166)  <2993>;
                            (__either.2167 var=533) undefined ()  <2994>;
                            if {
                                {
                                    () if_expr (__either.2167)  <1875>;
                                } #109
                                {
                                } #111 off=38
                                {
                                    (sigZ.1507 var=60) __uint__or___uint___uint (sigZ.1415 __ct_1.1341)  <1878>;
                                    (__trgt.2168 var=551) const ()  <2995>;
                                    () void_j_t21s_s2 (__trgt.2168)  <2996>;
                                } #110 off=37
                                {
                                    (sigZ.1508 var=60) merge (sigZ.1415 sigZ.1507)  <1879>;
                                } #112
                            } #108
                            #527 off=39
                            (__trgt.2171 var=553) const ()  <3000>;
                            () void_j_t21s_s2 (__trgt.2171)  <3001>;
                        } #106
                        {
                            (sigZ.1509 var=60) merge (sigZ.1468 sigZ.1508)  <1880>;
                        } #113
                    } #103
                    #528 off=41
                    (__trgt.2174 var=555) const ()  <3005>;
                    () void_j_t21s_s2 (__trgt.2174)  <3006>;
                } #101
                {
                    (sigZ.1510 var=60) merge (__linex.2125 sigZ.1509)  <1881>;
                } #115
            } #99
            #118 off=43
            (softfloat_roundPackToF32.1518 var=276) const ()  <1889>;
            (__R_SP.1528 var=12 __sp.1529 var=18) wr_res_reg (__tmp.1527 __sp.40)  <1899>;
            (__tmp.1817 var=273) __sint_sne0___sint (__tmp.139)  <2315>;
            () void_j_t21s_s2 (softfloat_roundPackToF32.1518)  <2942>;
            call {
                (__tmp.1513 var=273 stl=X off=11) assign (__tmp.1817)  <1884>;
                (expZ.1514 var=59 stl=X off=12) assign (expZ.1351)  <1885>;
                (sigZ.1515 var=60 stl=X off=13) assign (sigZ.1510)  <1886>;
                (__la.1520 var=26 stl=X off=1) assign (__la.26)  <1891>;
                (__tmp.1521 var=278 stl=X off=10) Fsoftfloat_roundPackToF32 (__la.1520 __tmp.1513 expZ.1514 sigZ.1515)  <1892>;
                (__tmp.1522 var=278) deassign (__tmp.1521)  <1893>;
            } #117 off=44
            #119 off=45 nxt=-2
            (__rt.1530 var=27 stl=X off=10) assign (__tmp.1522)  <1901>;
            () out (__rt.1530)  <1902>;
            () sink (__sp.1529)  <1908>;
            sync {
            } #3 off=46
            #120 off=47
            (softfloat_propagateNaNF32UI.1601 var=284) const ()  <1979>;
            (__link.1602 var=285) w32_jal_t21s_s2 (softfloat_propagateNaNF32UI.1601)  <1980>;
            call {
                (uiA.1597 var=49 stl=X off=11) assign (a.30)  <1975>;
                (uiB.1598 var=53 stl=X off=12) assign (b.33)  <1976>;
                (__link.1603 var=285 stl=X off=1) assign (__link.1602)  <1981>;
                (__tmp.1604 var=286 stl=X off=10) Fsoftfloat_propagateNaNF32UI (__link.1603 uiA.1597 uiB.1598)  <1982>;
                (__tmp.1605 var=286) deassign (__tmp.1604)  <1983>;
            } #121 off=48
            #122 off=49 nxt=-3 tgt=5
            () sink (__sp.40)  <1990>;
            () sync_sink (__tmp.1605) sid=159  <2017>;
            (__trgt.2187 var=567) const ()  <3030>;
            () void_j_t21s_s2 (__trgt.2187)  <3031>;
            sync {
            } #4 off=50
            #521 off=51
            (__ct_2143289344.1673 var=287) const ()  <2090>;
            (__trgt.2177 var=557) const ()  <3010>;
            () void_j_t21s_s2 (__trgt.2177)  <3011>;
        } #36
        {
            (uiZ.1701 var=530) merge (__tmp.2104 __ct_2143289344.1673)  <2118>;
        } #124
    } #9
    sync {
        (uiZ.1734 var=58) sync_link (uiZ.1701) sid=159  <2151>;
    } #5 off=66
    #127 off=67 nxt=-2
    (__R_SP.1754 var=12 __sp.1755 var=18) wr_res_reg (__tmp.1527 __sp.40)  <2170>;
    () void___rts_jr_w32 (__la.26)  <2171>;
    (__rt.1756 var=27 stl=X off=10) assign (uiZ.1734)  <2172>;
    () out (__rt.1756)  <2173>;
    () sink (__sp.1755)  <2179>;
} #0
0 : 'SoftFloat-3e/source/f32_div.c';
----------
0 : (0,44:0,0);
1 : (0,172:1,51);
2 : (0,177:1,54);
3 : (0,159:1,149);
4 : (0,164:1,152);
5 : (0,179:1,158);
9 : (0,84:4,29);
11 : (0,179:1,30);
12 : (0,85:8,30);
13 : (0,85:8,30);
16 : (0,85:20,31);
17 : (0,85:8,33);
20 : (0,86:8,36);
22 : (0,86:28,37);
24 : (0,87:12,37);
27 : (0,87:24,38);
28 : (0,87:12,40);
30 : (0,88:12,43);
31 : (0,86:8,46);
34 : (0,174:4,53);
36 : (0,179:1,58);
38 : (0,92:4,59);
40 : (0,92:24,60);
42 : (0,93:8,60);
45 : (0,93:20,61);
46 : (0,93:8,63);
48 : (0,94:8,66);
49 : (0,92:4,69);
51 : (0,98:9,72);
52 : (0,98:4,72);
54 : (0,98:18,73);
56 : (0,99:8,73);
58 : (0,99:22,74);
59 : (0,100:17,74);
60 : (0,100:12,74);
63 : (0,100:35,75);
64 : (0,100:12,77);
66 : (0,104:12,80);
67 : (0,99:8,83);
69 : (0,106:52,86);
70 : (0,106:21,86);
71 : (0,98:18,91);
72 : (0,98:4,92);
74 : (0,110:9,95);
75 : (0,110:4,95);
77 : (0,110:18,96);
78 : (0,111:13,96);
79 : (0,111:8,96);
82 : (0,111:22,97);
83 : (0,111:8,99);
85 : (0,112:52,102);
86 : (0,112:21,102);
87 : (0,110:18,107);
88 : (0,110:4,108);
90 : (0,131:14,114);
91 : (0,131:4,114);
93 : (0,131:23,115);
94 : (0,134:11,119);
97 : (0,138:35,124);
99 : (0,142:4,126);
101 : (0,142:29,127);
103 : (0,149:8,129);
105 : (0,149:43,130);
106 : (0,151:15,133);
108 : (0,152:12,133);
110 : (0,152:28,134);
111 : (0,152:12,136);
114 : (0,142:4,144);
117 : (0,156:11,147);
118 : (0,156:4,147);
119 : (0,156:4,147);
120 : (0,160:44,150);
121 : (0,160:10,150);
122 : (0,161:4,151);
127 : (0,181:4,160);
343 : (0,149:8,129);
353 : (0,152:12,133);
382 : (0,84:14,29);
405 : (0,173:12,52);
406 : (0,173:12,52);
407 : (0,173:12,52);
408 : (0,173:12,52);
409 : (0,173:12,52);
410 : (0,173:12,52);
417 : (0,138:35,124);
437 : (0,142:23,126);
----------
46 : (0,44:10,0);
47 : (0,44:10,0);
49 : (0,44:10,0);
50 : (0,44:10,0);
52 : (0,46:19,0);
63 : (0,57:23,0);
65 : (0,57:23,0);
98 : (0,71:6,0);
106 : (0,73:39,0);
108 : (0,73:37,20);
112 : (0,74:36,0);
114 : (0,74:34,21);
116 : (0,74:40,0);
118 : (0,74:40,21);
119 : (0,75:19,0);
121 : (0,75:19,22);
132 : (0,78:37,25);
138 : (0,79:34,26);
142 : (0,79:40,26);
145 : (0,80:19,27);
148 : (0,81:18,28);
151 : (0,81:10,28);
154 : (0,84:14,29);
188 : (0,84:4,29);
191 : (0,85:8,30);
225 : (0,85:8,30);
367 : (0,86:8,36);
404 : (0,87:12,37);
652 : (0,173:56,0);
654 : (0,173:36,52);
809 : (0,92:4,59);
846 : (0,93:8,60);
1094 : (0,98:4,72);
1132 : (0,99:8,73);
1134 : (0,100:25,74);
1172 : (0,100:12,74);
1383 : (0,106:19,0);
1384 : (0,106:52,0);
1388 : (0,106:21,86);
1389 : (0,106:21,0);
1390 : (0,106:21,86);
1395 : (0,107:25,88);
1399 : (0,108:25,89);
1408 : (0,98:4,94);
1410 : (0,98:4,94);
1411 : (0,98:4,94);
1423 : (0,98:4,94);
1424 : (0,98:4,94);
1470 : (0,110:4,95);
1508 : (0,111:8,96);
1614 : (0,112:19,0);
1615 : (0,112:52,0);
1619 : (0,112:21,102);
1620 : (0,112:21,0);
1621 : (0,112:21,102);
1626 : (0,113:25,104);
1630 : (0,114:25,105);
1648 : (0,110:4,110);
1649 : (0,110:4,110);
1664 : (0,118:16,111);
1665 : (0,118:23,0);
1667 : (0,118:23,111);
1668 : (0,119:9,0);
1670 : (0,119:9,112);
1673 : (0,120:9,113);
1674 : (0,131:14,114);
1708 : (0,131:4,114);
1709 : (0,132:8,0);
1711 : (0,132:8,115);
1712 : (0,133:17,0);
1714 : (0,133:13,116);
1715 : (0,135:17,0);
1717 : (0,135:13,119);
1718 : (0,131:4,122);
1719 : (0,131:4,122);
1722 : (0,137:9,123);
1724 : (0,138:67,0);
1728 : (0,138:35,124);
1729 : (0,138:35,0);
1730 : (0,138:35,124);
1739 : (0,141:9,0);
1742 : (0,142:15,0);
1744 : (0,142:15,126);
1781 : (0,142:4,126);
1782 : (0,143:13,0);
1784 : (0,143:13,127);
1791 : (0,147:64,128);
1835 : (0,149:8,129);
1838 : (0,150:17,130);
1875 : (0,152:12,133);
1878 : (0,152:28,134);
1879 : (0,152:12,138);
1880 : (0,149:8,141);
1881 : (0,142:4,146);
1884 : (0,156:37,0);
1885 : (0,156:44,0);
1886 : (0,156:50,0);
1891 : (0,156:11,0);
1892 : (0,156:11,147);
1896 : (0,156:4,0);
1898 : (0,156:4,0);
1899 : (0,156:4,147);
1901 : (0,156:35,0);
1975 : (0,160:39,0);
1976 : (0,160:44,0);
1980 : (0,160:10,150);
1981 : (0,160:10,0);
1982 : (0,160:10,150);
2090 : (0,168:8,0);
2118 : (0,84:4,157);
2170 : (0,181:4,160);
2171 : (0,181:4,160);
2172 : (0,181:13,0);
2298 : (0,111:13,96);
2302 : (0,132:8,0);
2306 : (0,57:23,0);
2308 : (0,108:25,0);
2373 : (0,138:33,124);
2489 : (0,147:69,128);
2496 : (0,147:69,128);
2540 : (0,147:41,128);
2541 : (0,147:41,128);
2544 : (0,147:41,128);
2567 : (0,149:17,129);
2587 : (0,149:8,129);
2650 : (0,149:19,0);
2683 : (0,152:12,133);
2707 : (0,173:12,52);
2814 : (0,173:12,52);
2820 : (0,81:18,28);
2829 : (0,81:18,28);
2838 : (0,147:41,128);
2873 : (0,141:9,125);
2908 : (0,100:17,74);
2909 : (0,98:9,72);
2910 : (0,110:9,95);
2911 : (0,152:12,133);
2912 : (0,142:23,126);
2942 : (0,156:11,147);
2944 : (0,173:12,52);
2949 : (0,85:8,30);
2953 : (0,87:12,37);
2956 : (0,86:8,36);
2960 : (0,93:8,60);
2963 : (0,92:4,59);
2967 : (0,100:12,74);
2970 : (0,99:8,73);
2974 : (0,98:4,72);
2979 : (0,111:8,96);
2983 : (0,110:4,95);
2988 : (0,131:4,114);
2993 : (0,152:12,133);
2998 : (0,149:8,129);
3003 : (0,142:4,126);
3008 : (0,84:4,29);

