
// File generated by noodle version U-2022.12#33f3808fcb#221128, Thu Feb 29 17:34:07 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I. -I./isg -I./runtime/include -DCHESS_CXX_ATTRIBUTES -D__tct_patch__=0 -itrv32p3_cnn_chess.h +Sal +Sca +Osps -Wflla +NOtcr +NOcse +NOlsw +NOifv +NOrle +NOrlt +wDebug/chesswork trv32p3_cnn_basic.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!! extern int _start_basic(int, char **)
F_start_basic : user_defined, called {
    fnm : "_start_basic" 'int _start_basic(int, char **)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
    frm : ( l=8 );
}
****
!!  int main(int, char **)
F_main : user_defined, called {
    fnm : "main" 'int main(int, char **)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
}
***/

[
    0 : _start_basic typ=u08 bnd=e stl=PMb
    5 : __M_DMw typ=w32 bnd=d stl=DMw
   12 : __R_SP typ=w32 bnd=d stl=SP
   13 : __vola typ=u08 bnd=b stl=PMb
   16 : __extPMb typ=u08 bnd=b stl=PMb
   17 : __extDMb typ=w08 bnd=b stl=DMb
   18 : __sp typ=w32 bnd=b stl=SP
   19 : argv typ=w08 val=0t0 bnd=a sz=4 algn=4 stl=DMb tref=__P__P__cchar_DMb
   20 : argc typ=w08 val=4t0 bnd=a sz=4 algn=4 stl=DMb tref=__sint_DMb
   21 : __extDMb___PDMbvoid typ=w08 bnd=b stl=DMb
   22 : __extPMb_void typ=u08 bnd=b stl=PMb
   23 : __extDMb_void typ=w08 bnd=b stl=DMb
   24 : __rd___sp typ=w32 bnd=m
   25 : __la typ=w32 bnd=p tref=w32__
   27 : __arg_argc typ=w32 bnd=p tref=__sint__
   28 : __arg_argv typ=w32 bnd=p tref=__P__P__cchar__
   29 : __ct_m8S0 typ=w32 val=-8S0 bnd=m
   31 : __tmp typ=w32 bnd=m
   33 : __ct_0t0 typ=w32 val=0t0 bnd=m
   35 : __adr_argv typ=w32 bnd=m adro=19
   37 : __ct_4t0 typ=w32 val=4t0 bnd=m
   39 : __adr_argc typ=w32 bnd=m adro=20
   40 : __fch_argc typ=w32 bnd=m
   41 : __fch_argv typ=w32 bnd=m
   44 : _main typ=t21s_s2 val=0r bnd=m
   45 : __link typ=w32 bnd=m
   46 : __tmp typ=w32 bnd=m
   66 : __true typ=bool val=1f bnd=m
   69 : __trgt typ=t21s_s2 val=0j bnd=m
]
F_start_basic {
    #3 off=0
    (__M_DMw.4 var=5) st_def ()  <8>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__vola.12 var=13) source ()  <23>;
    (__extPMb.15 var=16) source ()  <26>;
    (__extDMb.16 var=17) source ()  <27>;
    (__sp.17 var=18) source ()  <28>;
    (argv.18 var=19) source ()  <29>;
    (argc.19 var=20) source ()  <30>;
    (__extDMb___PDMbvoid.20 var=21) source ()  <31>;
    (__extPMb_void.21 var=22) source ()  <32>;
    (__extDMb_void.22 var=23) source ()  <33>;
    (__la.24 var=25 stl=X off=1) inp ()  <35>;
    (__arg_argc.28 var=27 stl=X off=11) inp ()  <39>;
    (__arg_argc.29 var=27) deassign (__arg_argc.28)  <40>;
    (__arg_argv.31 var=28 stl=X off=12) inp ()  <42>;
    (__arg_argv.32 var=28) deassign (__arg_argv.31)  <43>;
    (__rd___sp.34 var=24) rd_res_reg (__R_SP.11 __sp.17)  <45>;
    (__ct_m8S0.35 var=29) const ()  <46>;
    (__tmp.37 var=31) __Pvoid__pl___Pvoid___sint (__rd___sp.34 __ct_m8S0.35)  <48>;
    (__R_SP.38 var=12 __sp.39 var=18) wr_res_reg (__tmp.37 __sp.17)  <49>;
    (__rd___sp.40 var=24) rd_res_reg (__R_SP.11 __sp.39)  <51>;
    (__ct_0t0.41 var=33) const ()  <52>;
    (__adr_argv.43 var=35) __Pvoid__pl___Pvoid___sint (__rd___sp.40 __ct_0t0.41)  <54>;
    (__rd___sp.45 var=24) rd_res_reg (__R_SP.11 __sp.39)  <56>;
    (__M_DMw.50 var=5 argv.51 var=19) store (__arg_argv.32 __adr_argv.43 argv.18)  <61>;
    call {
        () chess_separator_scheduler ()  <62>;
    } #4 off=1
    #5 off=2
    (__ct_4t0.46 var=37) const ()  <57>;
    (__adr_argc.48 var=39) __Pvoid__pl___Pvoid___sint (__rd___sp.45 __ct_4t0.46)  <59>;
    (__M_DMw.52 var=5 argc.53 var=20) store (__arg_argc.29 __adr_argc.48 argc.19)  <63>;
    call {
        () chess_separator_scheduler ()  <64>;
    } #6 off=3
    #7 off=4
    (__fch_argc.54 var=40) load (__M_DMw.4 __adr_argc.48 argc.53)  <65>;
    (__fch_argv.56 var=41) load (__M_DMw.4 __adr_argv.43 argv.51)  <67>;
    (_main.60 var=44) const ()  <71>;
    (__link.61 var=45) w32_jal_t21s_s2 (_main.60)  <72>;
    call {
        (__fch_argc.55 var=40 stl=X off=11) assign (__fch_argc.54)  <66>;
        (__fch_argv.57 var=41 stl=X off=12) assign (__fch_argv.56)  <68>;
        (__link.62 var=45 stl=X off=1) assign (__link.61)  <73>;
        (__tmp.63 var=46 stl=X off=10 __extDMb.66 var=17 __extDMb___PDMbvoid.67 var=21 __extDMb_void.68 var=23 __extPMb.69 var=16 __extPMb_void.70 var=22 __vola.71 var=13) F_main (__link.62 __fch_argc.55 __fch_argv.57 __extDMb.16 __extDMb___PDMbvoid.20 __extDMb_void.22 __extPMb.15 __extPMb_void.21 __vola.12)  <74>;
        (__tmp.64 var=46) deassign (__tmp.63)  <75>;
    } #8 off=5
    call {
        (__tmp.72 var=46 stl=X off=10) assign (__tmp.64)  <77>;
        () void_chess_exit___sint (__tmp.72)  <78>;
    } #9 off=6
    #37 off=7
    (__trgt.186 var=69) const ()  <234>;
    do {
        {
        } #16
        {
            () void_j_t21s_s2 (__trgt.186)  <235>;
            (__true.187 var=66) const ()  <236>;
        } #17 off=8
        {
            () while_expr (__true.187)  <120>;
        } #18
    } #15 rng=[1,2147483647]
    #25 off=9 nxt=-4
    () sink (__vola.71)  <196>;
    () sink (__extPMb.69)  <197>;
    () sink (__extDMb.66)  <198>;
    () sink (__sp.39)  <199>;
    () sink (argv.51)  <200>;
    () sink (argc.53)  <201>;
    () sink (__extDMb___PDMbvoid.67)  <202>;
    () sink (__extPMb_void.70)  <203>;
    () sink (__extDMb_void.68)  <204>;
} #0
0 : 'trv32p3_cnn_basic.c';
----------
0 : (0,13:0,0);
3 : (0,14:27,0);
4 : (0,14:27,0);
5 : (0,14:17,0);
6 : (0,14:17,0);
7 : (0,15:23,3);
8 : (0,15:13,3);
9 : (0,15:2,3);
15 : (0,16:2,5);
17 : (0,16:11,5);
----------
45 : (0,14:4,0);
46 : (0,14:4,0);
48 : (0,14:4,0);
49 : (0,14:4,0);
51 : (0,14:34,0);
52 : (0,14:34,0);
54 : (0,14:34,0);
56 : (0,14:21,0);
57 : (0,14:21,0);
59 : (0,14:21,0);
61 : (0,14:27,0);
62 : (0,14:27,0);
63 : (0,14:17,0);
64 : (0,14:17,0);
65 : (0,15:18,3);
66 : (0,15:18,0);
67 : (0,15:23,3);
68 : (0,15:23,0);
72 : (0,15:13,3);
73 : (0,15:13,0);
74 : (0,15:13,3);
77 : (0,15:13,0);
78 : (0,15:2,3);
120 : (0,16:2,6);
235 : (0,16:2,6);

