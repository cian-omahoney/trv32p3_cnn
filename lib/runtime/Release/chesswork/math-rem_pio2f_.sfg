
// File generated by noodle version U-2022.12#33f3808fcb#221128, Wed Feb 21 13:34:47 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -DNDEBUG -D__tct_patch__=0 -itrv32p3_cnn_chess.h +NOrlt +wRelease/chesswork src/math.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!! static int32_t rem_pio2f(float, float *)
Frem_pio2f : user_defined, called {
    fnm : "rem_pio2f" 'int32_t rem_pio2f(float, float *)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
    frm : ( );
}
****
!!  float32_t f32_sub(float32_t, float32_t)
Ff32_sub : user_defined, called {
    fnm : "f32_sub" 'float32_t f32_sub(float32_t, float32_t)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
}
!!  float32_t f32_add(float32_t, float32_t)
Ff32_add : user_defined, called {
    fnm : "f32_add" 'float32_t f32_add(float32_t, float32_t)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
}
!!  float32_t f32_mul(float32_t, float32_t)
Ff32_mul : user_defined, called {
    fnm : "f32_mul" 'float32_t f32_mul(float32_t, float32_t)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
}
!!  long f32_to_i32_r_minMag(float32_t, bool)
Ff32_to_i32_r_minMag : user_defined, called {
    fnm : "f32_to_i32_r_minMag" 'long f32_to_i32_r_minMag(float32_t, bool)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
}
!!  float32_t i32_to_f32(int)
Fi32_to_f32 : user_defined, called {
    fnm : "i32_to_f32" 'float32_t i32_to_f32(int)';
    arg : ( w32:i w32:r w32:i );
    loc : ( X[1] X[10] X[11] );
}
***/

[
    0 : rem_pio2f typ=u08 bnd=i stl=PMb
    5 : __M_DMw typ=w32 bnd=d stl=DMw
   12 : __R_SP typ=w32 bnd=d stl=SP
   18 : __sp typ=w32 bnd=b stl=SP
   19 : _ZL9npio2f_hw typ=w08 bnd=i sz=128 algn=4 stl=DMb tref=__A32__sint_DMb
   20 : __extDMb_w32 typ=w08 bnd=b stl=DMb
   21 : __rd___sp typ=w32 bnd=m
   24 : __la typ=w32 bnd=p tref=w32__
   25 : __rt typ=w32 bnd=p tref=int32_t__
   26 : x typ=w32 bnd=p tref=__ffloat__
   27 : y typ=w32 bnd=p tref=__P__ffloat__
   28 : __ct_0S0 typ=w32 val=0S0 bnd=m
   30 : __tmp typ=w32 bnd=m
   32 : ix typ=w32 bnd=m tref=int32_t__
   33 : z typ=w32 bnd=m tref=__ffloat__
   38 : n typ=w32 bnd=m tref=int32_t__
   39 : fn typ=w32 bnd=m tref=__ffloat__
   40 : r typ=w32 bnd=m tref=__ffloat__
   41 : w typ=w32 bnd=m tref=__ffloat__
   42 : j typ=w32 bnd=m tref=int32_t__
   46 : __ct_2147483647 typ=w32 val=2147483647f bnd=m
   49 : __ct_1061752792 typ=w32 val=1061752792f bnd=m
   51 : __tmp typ=bool bnd=m
   52 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   57 : __ct_4 typ=w32 val=4f bnd=m
   62 : __ct_1075235812 typ=w32 val=1075235812f bnd=m
   64 : __tmp typ=bool bnd=m
   67 : __tmp typ=bool bnd=m
   68 : __ct_1070141312 typ=w32 val=1070141312f bnd=m
   72 : __ct_4294967280 typ=w32 val=-16f bnd=m
   74 : __tmp typ=w32 bnd=m
   75 : __ct_1070141392 typ=w32 val=1070141392f bnd=m
   77 : __tmp typ=bool bnd=m
   78 : __ct_926237763 typ=w32 val=926237763f bnd=m
   80 : __tmp typ=w32 bnd=m
   88 : __tmp typ=w32 bnd=m
   91 : __tmp typ=w32 bnd=m
   95 : __ct_926237696 typ=w32 val=926237696f bnd=m
   98 : __ct_780509960 typ=w32 val=780509960f bnd=m
  100 : __tmp typ=w32 bnd=m
  108 : __tmp typ=w32 bnd=m
  111 : __tmp typ=w32 bnd=m
  115 : __ct_1 typ=w32 val=1f bnd=m
  129 : __tmp typ=w32 bnd=m
  137 : __tmp typ=w32 bnd=m
  140 : __tmp typ=w32 bnd=m
  149 : __tmp typ=w32 bnd=m
  157 : __tmp typ=w32 bnd=m
  160 : __tmp typ=w32 bnd=m
  164 : __ct_m1 typ=w32 val=-1f bnd=m
  171 : __ct_1059256708 typ=w32 val=1059256708f bnd=m
  173 : __tmp typ=w32 bnd=m
  174 : __ct_1056964608 typ=t20s_rp12 val=258048f bnd=m
  176 : __tmp typ=w32 bnd=m
  181 : __tmp typ=w32 bnd=m
  196 : __ct_4294967040 typ=w32 val=-256f bnd=m
  198 : __tmp typ=w32 bnd=m
  206 : __fch__ZL9npio2f_hw typ=w32 bnd=m
  208 : __tmp typ=bool bnd=m
  211 : __tmp typ=bool bnd=m
  212 : __tmp typ=w32 bnd=m
  216 : __ct_23 typ=w32 val=23f bnd=m
  232 : __tmp typ=w32 bnd=m
  233 : __ct_255 typ=w32 val=255f bnd=m
  235 : __tmp typ=w32 bnd=m
  236 : __tmp typ=w32 bnd=m
  238 : __ct_8 typ=w32 val=8f bnd=m
  240 : __tmp typ=bool bnd=m
  247 : __tmp typ=w32 bnd=m
  248 : __tmp typ=w32 bnd=m
  249 : __tmp typ=w32 bnd=m
  251 : __tmp typ=w32 bnd=m
  264 : __tmp typ=w32 bnd=m
  267 : __tmp typ=w32 bnd=m
  268 : __tmp typ=w32 bnd=m
  270 : __ct_25 typ=w32 val=25f bnd=m
  272 : __tmp typ=bool bnd=m
  273 : __ct_780509952 typ=w32 val=780509952f bnd=m
  277 : __ct_613232946 typ=w32 val=613232946f bnd=m
  279 : __tmp typ=w32 bnd=m
  280 : __tmp typ=w32 bnd=m
  281 : __tmp typ=w32 bnd=m
  283 : __tmp typ=w32 bnd=m
  290 : __fchtmp typ=w32 bnd=m
  291 : __tmp typ=w32 bnd=m
  292 : __tmp typ=w32 bnd=m
  298 : __tmp typ=bool bnd=m
  304 : __fchtmp typ=w32 bnd=m
  305 : __tmp typ=w32 bnd=m
  314 : __fchtmp typ=w32 bnd=m
  315 : __tmp typ=w32 bnd=m
  322 : __ct_0s0 typ=w32 val=0s0 bnd=m
  324 : __tmp typ=w32 bnd=m
  331 : __tmp typ=bool bnd=m
  332 : __ct_31 typ=w32 val=31f bnd=m
  336 : __linex typ=w32 bnd=m
  337 : __linex typ=w32 bnd=m
  347 : __shv_y typ=w32 bnd=m
  348 : __shv_y typ=w32 bnd=m
  349 : __shv_y typ=w32 bnd=m
  350 : __shv_y typ=w32 bnd=m
  351 : __shv_y typ=w32 bnd=m
  352 : __shv_y typ=w32 bnd=m
  354 : __shv_n typ=w32 bnd=m
  355 : __ptr__ZL9npio2f_hw__m4 typ=w32 val=-4a bnd=m adro=19
  356 : __ct_2 typ=w32 val=2f bnd=m
  371 : a typ=w32 bnd=m tref=float32_t__
  372 : b typ=w32 bnd=m tref=float32_t__
  373 : f32_sub typ=t21s_s2 val=0r bnd=m
  374 : __link typ=w32 bnd=m
  384 : a typ=w32 bnd=m tref=float32_t__
  385 : b typ=w32 bnd=m tref=float32_t__
  386 : f32_add typ=t21s_s2 val=0r bnd=m
  387 : __link typ=w32 bnd=m
  397 : a typ=w32 bnd=m tref=float32_t__
  398 : b typ=w32 bnd=m tref=float32_t__
  399 : f32_mul typ=t21s_s2 val=0r bnd=m
  400 : __link typ=w32 bnd=m
  404 : a typ=w32 bnd=m tref=float32_t__
  405 : __tmp typ=w32 bnd=m
  406 : f32_to_i32_r_minMag typ=t21s_s2 val=0r bnd=m
  407 : __link typ=w32 bnd=m
  411 : a typ=w32 bnd=m tref=__sint__
  412 : i32_to_f32 typ=t21s_s2 val=0r bnd=m
  413 : __link typ=w32 bnd=m
  445 : __false typ=bool val=0f bnd=m
  446 : __either typ=bool bnd=m
  447 : __trgt typ=t13s_s2 val=0j bnd=m
  448 : __trgt typ=t21s_s2 val=0j bnd=m
  449 : __trgt typ=t13s_s2 val=0j bnd=m
  450 : __trgt typ=t21s_s2 val=0j bnd=m
  451 : __trgt typ=t13s_s2 val=0j bnd=m
  452 : __trgt typ=t21s_s2 val=0j bnd=m
  453 : __trgt typ=t13s_s2 val=0j bnd=m
  454 : __trgt typ=t13s_s2 val=0j bnd=m
  455 : __trgt typ=t21s_s2 val=0j bnd=m
  456 : __trgt typ=t13s_s2 val=0j bnd=m
  457 : __trgt typ=t21s_s2 val=0j bnd=m
  458 : __trgt typ=t13s_s2 val=0j bnd=m
  459 : __trgt typ=t21s_s2 val=0j bnd=m
  460 : __trgt typ=t21s_s2 val=0j bnd=m
  461 : __trgt typ=t13s_s2 val=0j bnd=m
  462 : __trgt typ=t21s_s2 val=0j bnd=m
  463 : __trgt typ=t13s_s2 val=0j bnd=m
  464 : __trgt typ=t21s_s2 val=0j bnd=m
  465 : __trgt typ=t13s_s2 val=0j bnd=m
  466 : __trgt typ=t21s_s2 val=0j bnd=m
]
Frem_pio2f {
    #101 off=0
    (__M_DMw.4 var=5) st_def ()  <8>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__sp.17 var=18) source ()  <28>;
    (_ZL9npio2f_hw.18 var=19) source ()  <29>;
    (__extDMb_w32.19 var=20) source ()  <30>;
    (__la.23 var=24 stl=X off=1) inp ()  <34>;
    (__la.24 var=24) deassign (__la.23)  <35>;
    (x.27 var=26 stl=X off=11) inp ()  <38>;
    (x.28 var=26) deassign (x.27)  <39>;
    (y.30 var=27 stl=X off=12) inp ()  <41>;
    (y.31 var=27) deassign (y.30)  <42>;
    (__rd___sp.33 var=21) rd_res_reg (__R_SP.11 __sp.17)  <44>;
    (__ct_0S0.34 var=28) const ()  <45>;
    (__tmp.36 var=30) __Pvoid__pl___Pvoid___sint (__rd___sp.33 __ct_0S0.34)  <47>;
    (__R_SP.37 var=12 __sp.38 var=18) wr_res_reg (__tmp.36 __sp.17)  <48>;
    (__ct_2147483647.64 var=46) const ()  <75>;
    (ix.66 var=32) __sint__ad___sint___sint (x.28 __ct_2147483647.64)  <77>;
    (__ct_1061752792.67 var=49) const ()  <78>;
    (__ct_0.97 var=52) const ()  <109>;
    (__ct_4.104 var=57) const ()  <115>;
    (__tmp.791 var=51) bool__ge___sint___sint (__ct_1061752792.67 ix.66)  <901>;
    (__trgt.1262 var=465) const ()  <1664>;
    () void_br_bool_t13s_s2 (__tmp.791 __trgt.1262)  <1665>;
    (__either.1263 var=446) undefined ()  <1666>;
    if {
        {
            () if_expr (__either.1263)  <108>;
        } #5
        {
            (__M_DMw.100 var=5 __extDMb_w32.101 var=20) store (x.28 y.31 __extDMb_w32.19)  <112>;
            (__M_DMw.107 var=5 __extDMb_w32.108 var=20) store (__ct_0.97 __shv_y.776 __extDMb_w32.101)  <118>;
            (__shv_y.776 var=347) __Pvoid__pl___Pvoid___sint (y.31 __ct_4.104)  <852>;
        } #6 off=112
        {
            #8 off=1
            (__ct_1075235812.111 var=62) const ()  <121>;
            (__tmp.113 var=64) bool__lt___sint___sint (ix.66 __ct_1075235812.111)  <123>;
            (__ct_1070141312.171 var=68) const ()  <183>;
            (__ct_926237763.208 var=78) const ()  <221>;
            (__ct_926237696.229 var=95) const ()  <240>;
            (__ct_780509960.232 var=98) const ()  <243>;
            (__ct_1.255 var=115) const ()  <264>;
            (__ct_m1.341 var=164) const ()  <347>;
            (f32_sub.809 var=373) const ()  <962>;
            (f32_add.889 var=386) const ()  <1066>;
            (__trgt.1259 var=463) const ()  <1659>;
            () void_br_bool_t13s_s2 (__tmp.113 __trgt.1259)  <1660>;
            (__either.1260 var=446) undefined ()  <1661>;
            if {
                {
                    () if_expr (__either.1260)  <151>;
                } #10
                {
                    #107 off=69
                    (__ct_4294967280.175 var=72) const ()  <187>;
                    (__tmp.177 var=74) __uint__ad___uint___uint (ix.66 __ct_4294967280.175)  <189>;
                    (__ct_1070141392.178 var=75) const ()  <190>;
                    (__tmp.795 var=67) bool__lt___sint___sint (__ct_0.97 x.28)  <908>;
                    (__trgt.1240 var=451) const ()  <1628>;
                    () void_br_bool_t13s_s2 (__tmp.795 __trgt.1240)  <1629>;
                    (__either.1241 var=446) undefined ()  <1630>;
                    if {
                        {
                            () if_expr (__either.1241)  <182>;
                        } #14
                        {
                            #140 off=90
                            (__link.810 var=374) w32_jal_t21s_s2 (f32_sub.809)  <963>;
                            call {
                                (a.811 var=371 stl=X off=11) assign (x.28)  <964>;
                                (b.812 var=372 stl=X off=12) assign (__ct_1070141312.171)  <965>;
                                (__link.813 var=374 stl=X off=1) assign (__link.810)  <966>;
                                (z.814 var=33 stl=X off=10) Ff32_sub (__link.813 a.811 b.812)  <967>;
                                (z.815 var=33) deassign (z.814)  <968>;
                            } #141 off=91
                            #471 off=92
                            (__trgt.1234 var=447) const ()  <1618>;
                            () void_br_bool_t13s_s2 (__tmp.1265 __trgt.1234)  <1619>;
                            (__either.1235 var=446) undefined ()  <1620>;
                            (__tmp.1265 var=77) bool__ne___uint___uint (__tmp.177 __ct_1070141392.178)  <1669>;
                            if {
                                {
                                    () if_expr (__either.1235)  <220>;
                                } #18
                                {
                                    #152 off=102
                                    (__link.820 var=374) w32_jal_t21s_s2 (f32_sub.809)  <976>;
                                    call {
                                        (a.821 var=371 stl=X off=11) assign (z.815)  <977>;
                                        (b.822 var=372 stl=X off=12) assign (__ct_926237763.208)  <978>;
                                        (__link.823 var=374 stl=X off=1) assign (__link.820)  <979>;
                                        (__tmp.824 var=80 stl=X off=10) Ff32_sub (__link.823 a.821 b.822)  <980>;
                                        (__tmp.825 var=80) deassign (__tmp.824)  <981>;
                                    } #153 off=103
                                    #158 off=104
                                    (__M_DMw.214 var=5 __extDMb_w32.215 var=20) store (__tmp.825 y.31 __extDMb_w32.19)  <227>;
                                    (__shv_y.777 var=348) __Pvoid__pl___Pvoid___sint (y.31 __ct_4.104)  <853>;
                                    (__link.830 var=374) w32_jal_t21s_s2 (f32_sub.809)  <989>;
                                    call {
                                        (a.831 var=371 stl=X off=11) assign (z.815)  <990>;
                                        (b.832 var=372 stl=X off=12) assign (__tmp.825)  <991>;
                                        (__link.833 var=374 stl=X off=1) assign (__link.830)  <992>;
                                        (__tmp.834 var=88 stl=X off=10) Ff32_sub (__link.833 a.831 b.832)  <993>;
                                        (__tmp.835 var=88) deassign (__tmp.834)  <994>;
                                    } #159 off=105
                                    #164 off=106
                                    (__link.840 var=374) w32_jal_t21s_s2 (f32_sub.809)  <1002>;
                                    call {
                                        (a.841 var=371 stl=X off=11) assign (__tmp.835)  <1003>;
                                        (b.842 var=372 stl=X off=12) assign (__ct_926237763.208)  <1004>;
                                        (__link.843 var=374 stl=X off=1) assign (__link.840)  <1005>;
                                        (__tmp.844 var=91 stl=X off=10) Ff32_sub (__link.843 a.841 b.842)  <1006>;
                                        (__tmp.845 var=91) deassign (__tmp.844)  <1007>;
                                    } #165 off=107
                                    #149 off=108
                                    (__M_DMw.227 var=5 __extDMb_w32.228 var=20) store (__tmp.845 __shv_y.777 __extDMb_w32.215)  <239>;
                                } #19
                                {
                                    #177 off=93
                                    (__link.850 var=374) w32_jal_t21s_s2 (f32_sub.809)  <1015>;
                                    call {
                                        (a.851 var=371 stl=X off=11) assign (z.815)  <1016>;
                                        (b.852 var=372 stl=X off=12) assign (__ct_926237696.229)  <1017>;
                                        (__link.853 var=374 stl=X off=1) assign (__link.850)  <1018>;
                                        (z.854 var=33 stl=X off=10) Ff32_sub (__link.853 a.851 b.852)  <1019>;
                                        (z.855 var=33) deassign (z.854)  <1020>;
                                    } #178 off=94
                                    #183 off=95
                                    (__link.860 var=374) w32_jal_t21s_s2 (f32_sub.809)  <1028>;
                                    call {
                                        (a.861 var=371 stl=X off=11) assign (z.855)  <1029>;
                                        (b.862 var=372 stl=X off=12) assign (__ct_780509960.232)  <1030>;
                                        (__link.863 var=374 stl=X off=1) assign (__link.860)  <1031>;
                                        (__tmp.864 var=100 stl=X off=10) Ff32_sub (__link.863 a.861 b.862)  <1032>;
                                        (__tmp.865 var=100) deassign (__tmp.864)  <1033>;
                                    } #184 off=96
                                    #189 off=97
                                    (__M_DMw.238 var=5 __extDMb_w32.239 var=20) store (__tmp.865 y.31 __extDMb_w32.19)  <249>;
                                    (__shv_y.778 var=349) __Pvoid__pl___Pvoid___sint (y.31 __ct_4.104)  <854>;
                                    (__link.870 var=374) w32_jal_t21s_s2 (f32_sub.809)  <1041>;
                                    call {
                                        (a.871 var=371 stl=X off=11) assign (z.855)  <1042>;
                                        (b.872 var=372 stl=X off=12) assign (__tmp.865)  <1043>;
                                        (__link.873 var=374 stl=X off=1) assign (__link.870)  <1044>;
                                        (__tmp.874 var=108 stl=X off=10) Ff32_sub (__link.873 a.871 b.872)  <1045>;
                                        (__tmp.875 var=108) deassign (__tmp.874)  <1046>;
                                    } #190 off=98
                                    #195 off=99
                                    (__link.880 var=374) w32_jal_t21s_s2 (f32_sub.809)  <1054>;
                                    call {
                                        (a.881 var=371 stl=X off=11) assign (__tmp.875)  <1055>;
                                        (b.882 var=372 stl=X off=12) assign (__ct_780509960.232)  <1056>;
                                        (__link.883 var=374 stl=X off=1) assign (__link.880)  <1057>;
                                        (__tmp.884 var=111 stl=X off=10) Ff32_sub (__link.883 a.881 b.882)  <1058>;
                                        (__tmp.885 var=111) deassign (__tmp.884)  <1059>;
                                    } #196 off=100
                                    #174 off=101
                                    (__M_DMw.251 var=5 __extDMb_w32.252 var=20) store (__tmp.885 __shv_y.778 __extDMb_w32.239)  <261>;
                                    (__trgt.1236 var=448) const ()  <1621>;
                                    () void_j_t21s_s2 (__trgt.1236)  <1622>;
                                } #20
                                {
                                    (__extDMb_w32.253 var=20) merge (__extDMb_w32.228 __extDMb_w32.252)  <262>;
                                } #21
                            } #17
                        } #15
                        {
                            #201 off=70
                            (__link.890 var=387) w32_jal_t21s_s2 (f32_add.889)  <1067>;
                            call {
                                (a.891 var=384 stl=X off=11) assign (x.28)  <1068>;
                                (b.892 var=385 stl=X off=12) assign (__ct_1070141312.171)  <1069>;
                                (__link.893 var=387 stl=X off=1) assign (__link.890)  <1070>;
                                (z.894 var=33 stl=X off=10) Ff32_add (__link.893 a.891 b.892)  <1071>;
                                (z.895 var=33) deassign (z.894)  <1072>;
                            } #202 off=71
                            #473 off=72
                            (__trgt.1237 var=449) const ()  <1623>;
                            () void_br_bool_t13s_s2 (__tmp.1266 __trgt.1237)  <1624>;
                            (__either.1238 var=446) undefined ()  <1625>;
                            (__tmp.1266 var=77) bool__ne___uint___uint (__tmp.177 __ct_1070141392.178)  <1670>;
                            if {
                                {
                                    () if_expr (__either.1238)  <303>;
                                } #26
                                {
                                    #213 off=82
                                    (__link.900 var=387) w32_jal_t21s_s2 (f32_add.889)  <1080>;
                                    call {
                                        (a.901 var=384 stl=X off=11) assign (z.895)  <1081>;
                                        (b.902 var=385 stl=X off=12) assign (__ct_926237763.208)  <1082>;
                                        (__link.903 var=387 stl=X off=1) assign (__link.900)  <1083>;
                                        (__tmp.904 var=129 stl=X off=10) Ff32_add (__link.903 a.901 b.902)  <1084>;
                                        (__tmp.905 var=129) deassign (__tmp.904)  <1085>;
                                    } #214 off=83
                                    #219 off=84
                                    (__M_DMw.300 var=5 __extDMb_w32.301 var=20) store (__tmp.905 y.31 __extDMb_w32.19)  <310>;
                                    (__shv_y.779 var=350) __Pvoid__pl___Pvoid___sint (y.31 __ct_4.104)  <855>;
                                    (__link.910 var=374) w32_jal_t21s_s2 (f32_sub.809)  <1093>;
                                    call {
                                        (a.911 var=371 stl=X off=11) assign (z.895)  <1094>;
                                        (b.912 var=372 stl=X off=12) assign (__tmp.905)  <1095>;
                                        (__link.913 var=374 stl=X off=1) assign (__link.910)  <1096>;
                                        (__tmp.914 var=137 stl=X off=10) Ff32_sub (__link.913 a.911 b.912)  <1097>;
                                        (__tmp.915 var=137) deassign (__tmp.914)  <1098>;
                                    } #220 off=85
                                    #225 off=86
                                    (__link.920 var=387) w32_jal_t21s_s2 (f32_add.889)  <1106>;
                                    call {
                                        (a.921 var=384 stl=X off=11) assign (__tmp.915)  <1107>;
                                        (b.922 var=385 stl=X off=12) assign (__ct_926237763.208)  <1108>;
                                        (__link.923 var=387 stl=X off=1) assign (__link.920)  <1109>;
                                        (__tmp.924 var=140 stl=X off=10) Ff32_add (__link.923 a.921 b.922)  <1110>;
                                        (__tmp.925 var=140) deassign (__tmp.924)  <1111>;
                                    } #226 off=87
                                    #210 off=88
                                    (__M_DMw.313 var=5 __extDMb_w32.314 var=20) store (__tmp.925 __shv_y.779 __extDMb_w32.301)  <322>;
                                } #27
                                {
                                    #238 off=73
                                    (__link.930 var=387) w32_jal_t21s_s2 (f32_add.889)  <1119>;
                                    call {
                                        (a.931 var=384 stl=X off=11) assign (z.895)  <1120>;
                                        (b.932 var=385 stl=X off=12) assign (__ct_926237696.229)  <1121>;
                                        (__link.933 var=387 stl=X off=1) assign (__link.930)  <1122>;
                                        (z.934 var=33 stl=X off=10) Ff32_add (__link.933 a.931 b.932)  <1123>;
                                        (z.935 var=33) deassign (z.934)  <1124>;
                                    } #239 off=74
                                    #244 off=75
                                    (__link.940 var=387) w32_jal_t21s_s2 (f32_add.889)  <1132>;
                                    call {
                                        (a.941 var=384 stl=X off=11) assign (z.935)  <1133>;
                                        (b.942 var=385 stl=X off=12) assign (__ct_780509960.232)  <1134>;
                                        (__link.943 var=387 stl=X off=1) assign (__link.940)  <1135>;
                                        (__tmp.944 var=149 stl=X off=10) Ff32_add (__link.943 a.941 b.942)  <1136>;
                                        (__tmp.945 var=149) deassign (__tmp.944)  <1137>;
                                    } #245 off=76
                                    #250 off=77
                                    (__M_DMw.324 var=5 __extDMb_w32.325 var=20) store (__tmp.945 y.31 __extDMb_w32.19)  <332>;
                                    (__shv_y.780 var=351) __Pvoid__pl___Pvoid___sint (y.31 __ct_4.104)  <856>;
                                    (__link.950 var=374) w32_jal_t21s_s2 (f32_sub.809)  <1145>;
                                    call {
                                        (a.951 var=371 stl=X off=11) assign (z.935)  <1146>;
                                        (b.952 var=372 stl=X off=12) assign (__tmp.945)  <1147>;
                                        (__link.953 var=374 stl=X off=1) assign (__link.950)  <1148>;
                                        (__tmp.954 var=157 stl=X off=10) Ff32_sub (__link.953 a.951 b.952)  <1149>;
                                        (__tmp.955 var=157) deassign (__tmp.954)  <1150>;
                                    } #251 off=78
                                    #256 off=79
                                    (__link.960 var=387) w32_jal_t21s_s2 (f32_add.889)  <1158>;
                                    call {
                                        (a.961 var=384 stl=X off=11) assign (__tmp.955)  <1159>;
                                        (b.962 var=385 stl=X off=12) assign (__ct_780509960.232)  <1160>;
                                        (__link.963 var=387 stl=X off=1) assign (__link.960)  <1161>;
                                        (__tmp.964 var=160 stl=X off=10) Ff32_add (__link.963 a.961 b.962)  <1162>;
                                        (__tmp.965 var=160) deassign (__tmp.964)  <1163>;
                                    } #257 off=80
                                    #235 off=81
                                    (__M_DMw.337 var=5 __extDMb_w32.338 var=20) store (__tmp.965 __shv_y.780 __extDMb_w32.325)  <344>;
                                    (__trgt.1239 var=450) const ()  <1626>;
                                    () void_j_t21s_s2 (__trgt.1239)  <1627>;
                                } #28
                                {
                                    (__extDMb_w32.339 var=20) merge (__extDMb_w32.314 __extDMb_w32.338)  <345>;
                                } #29
                            } #25
                            #474 off=89
                            (__trgt.1242 var=452) const ()  <1631>;
                            () void_j_t21s_s2 (__trgt.1242)  <1632>;
                        } #23
                        {
                            (__extDMb_w32.343 var=20) merge (__extDMb_w32.253 __extDMb_w32.339)  <349>;
                            (__rt.344 var=25) merge (__ct_1.255 __ct_m1.341)  <350>;
                        } #31
                    } #13
                } #11
                {
                    #273 off=2
                    (__ct_1059256708.354 var=171) const ()  <360>;
                    (f32_mul.969 var=399) const ()  <1170>;
                    (__link.970 var=400) w32_jal_t21s_s2 (f32_mul.969)  <1171>;
                    call {
                        (a.971 var=397 stl=X off=11) assign (ix.66)  <1172>;
                        (b.972 var=398 stl=X off=12) assign (__ct_1059256708.354)  <1173>;
                        (__link.973 var=400 stl=X off=1) assign (__link.970)  <1174>;
                        (__tmp.974 var=173 stl=X off=10) Ff32_mul (__link.973 a.971 b.972)  <1175>;
                        (__tmp.975 var=173) deassign (__tmp.974)  <1176>;
                    } #274 off=3
                    #279 off=4
                    (__ct_1056964608.357 var=174) const ()  <363>;
                    (__link.980 var=387) w32_jal_t21s_s2 (f32_add.889)  <1184>;
                    call {
                        (a.981 var=384 stl=X off=11) assign (__tmp.975)  <1185>;
                        (b.982 var=385 stl=X off=12) assign (__ct_1056964608.357)  <1186>;
                        (__link.983 var=387 stl=X off=1) assign (__link.980)  <1187>;
                        (__tmp.984 var=176 stl=X off=10) Ff32_add (__link.983 a.981 b.982)  <1188>;
                        (__tmp.985 var=176) deassign (__tmp.984)  <1189>;
                    } #280 off=5
                    #285 off=6
                    (f32_to_i32_r_minMag.989 var=406) const ()  <1196>;
                    (__link.990 var=407) w32_jal_t21s_s2 (f32_to_i32_r_minMag.989)  <1197>;
                    call {
                        (a.991 var=404 stl=X off=11) assign (__tmp.985)  <1198>;
                        (__tmp.992 var=405 stl=X off=12) assign (__ct_1.255)  <1199>;
                        (__link.993 var=407 stl=X off=1) assign (__link.990)  <1200>;
                        (n.994 var=38 stl=X off=10) Ff32_to_i32_r_minMag (__link.993 a.991 __tmp.992)  <1201>;
                        (n.995 var=38) deassign (n.994)  <1202>;
                    } #286 off=7
                    #291 off=8
                    (i32_to_f32.998 var=412) const ()  <1208>;
                    (__link.999 var=413) w32_jal_t21s_s2 (i32_to_f32.998)  <1209>;
                    call {
                        (a.1000 var=411 stl=X off=11) assign (n.995)  <1210>;
                        (__link.1001 var=413 stl=X off=1) assign (__link.999)  <1211>;
                        (fn.1002 var=39 stl=X off=10) Fi32_to_f32 (__link.1001 a.1000)  <1212>;
                        (fn.1003 var=39) deassign (fn.1002)  <1213>;
                    } #292 off=9
                    #297 off=10
                    (__link.1008 var=400) w32_jal_t21s_s2 (f32_mul.969)  <1221>;
                    call {
                        (a.1009 var=397 stl=X off=11) assign (fn.1003)  <1222>;
                        (b.1010 var=398 stl=X off=12) assign (__ct_1070141312.171)  <1223>;
                        (__link.1011 var=400 stl=X off=1) assign (__link.1008)  <1224>;
                        (__tmp.1012 var=181 stl=X off=10) Ff32_mul (__link.1011 a.1009 b.1010)  <1225>;
                        (__tmp.1013 var=181) deassign (__tmp.1012)  <1226>;
                    } #298 off=11
                    #303 off=12
                    (__link.1018 var=374) w32_jal_t21s_s2 (f32_sub.809)  <1234>;
                    call {
                        (a.1019 var=371 stl=X off=11) assign (ix.66)  <1235>;
                        (b.1020 var=372 stl=X off=12) assign (__tmp.1013)  <1236>;
                        (__link.1021 var=374 stl=X off=1) assign (__link.1018)  <1237>;
                        (r.1022 var=40 stl=X off=10) Ff32_sub (__link.1021 a.1019 b.1020)  <1238>;
                        (r.1023 var=40) deassign (r.1022)  <1239>;
                    } #304 off=13
                    #309 off=14
                    (__link.1028 var=400) w32_jal_t21s_s2 (f32_mul.969)  <1247>;
                    call {
                        (a.1029 var=397 stl=X off=11) assign (fn.1003)  <1248>;
                        (b.1030 var=398 stl=X off=12) assign (__ct_926237763.208)  <1249>;
                        (__link.1031 var=400 stl=X off=1) assign (__link.1028)  <1250>;
                        (w.1032 var=41 stl=X off=10) Ff32_mul (__link.1031 a.1029 b.1030)  <1251>;
                        (w.1033 var=41) deassign (w.1032)  <1252>;
                    } #310 off=15
                    #315 off=16
                    (__shv_n.784 var=354) __uint__pl___uint___uint (n.995 __ct_m1.341)  <860>;
                    (__link.1038 var=374) w32_jal_t21s_s2 (f32_sub.809)  <1260>;
                    call {
                        (a.1039 var=371 stl=X off=11) assign (r.1023)  <1261>;
                        (b.1040 var=372 stl=X off=12) assign (w.1033)  <1262>;
                        (__link.1041 var=374 stl=X off=1) assign (__link.1038)  <1263>;
                        (__tmp.1042 var=212 stl=X off=10) Ff32_sub (__link.1041 a.1039 b.1040)  <1264>;
                        (__tmp.1043 var=212) deassign (__tmp.1042)  <1265>;
                    } #316 off=17
                    #270 off=18
                    (__ct_31.770 var=332) const ()  <842>;
                    (__tmp.769 var=331) bool__lt___uint___uint (__shv_n.784 __ct_31.770)  <844>;
                    (__trgt.1243 var=453) const ()  <1633>;
                    () void_br_bool_t13s_s2 (__tmp.769 __trgt.1243)  <1634>;
                    (__either.1244 var=446) undefined ()  <1635>;
                    if {
                        {
                            () if_expr (__either.1244)  <439>;
                        } #41
                        {
                            (__ct_4294967040.433 var=196) const ()  <441>;
                            (__tmp.435 var=198) __uint__ad___uint___uint (ix.66 __ct_4294967040.433)  <443>;
                            (__fch__ZL9npio2f_hw.443 var=206) load (__M_DMw.4 __linex.774 _ZL9npio2f_hw.18)  <451>;
                            (__tmp.445 var=208) bool__ne___uint___uint (__tmp.435 __fch__ZL9npio2f_hw.443)  <453>;
                            (__linex.773 var=336) __sint__ls___sint___sint (n.995 __ct_2.786)  <848>;
                            (__linex.774 var=337) __Pvoid__pl___Pvoid___sint (__ptr__ZL9npio2f_hw__m4.785 __linex.773)  <849>;
                            (__ptr__ZL9npio2f_hw__m4.785 var=355) const ()  <861>;
                            (__ct_2.786 var=356) const ()  <863>;
                            (__trgt.1251 var=458) const ()  <1646>;
                            () void_br_bool_t13s_s2 (__tmp.445 __trgt.1251)  <1647>;
                            (__either.1252 var=446) undefined ()  <1648>;
                        } #42 off=20
                        {
                            (__trgt.1253 var=459) const ()  <1649>;
                            () void_j_t21s_s2 (__trgt.1253)  <1650>;
                            (__false.1254 var=445) const ()  <1651>;
                        } #43 off=19
                        {
                            (__tmp.448 var=211) merge (__either.1252 __false.1254)  <456>;
                        } #44
                    } #40
                    if {
                        {
                            () if_expr (__tmp.448)  <484>;
                        } #47
                        {
                            (__M_DMw.480 var=5 __extDMb_w32.481 var=20) store (__tmp.1043 y.31 __extDMb_w32.19)  <489>;
                        } #48 off=56
                        {
                            #116 off=21
                            (__ct_23.483 var=216) const ()  <491>;
                            (j.485 var=42) __sint__rs___sint___sint (ix.66 __ct_23.483)  <493>;
                            (__M_DMw.490 var=5 __extDMb_w32.491 var=20) store (__tmp.1043 y.31 __extDMb_w32.19)  <498>;
                            (__tmp.501 var=232) __uint__rs___uint___sint (__tmp.1043 __ct_23.483)  <508>;
                            (__ct_255.502 var=233) const ()  <509>;
                            (__tmp.504 var=235) __uint__ad___uint___uint (__tmp.501 __ct_255.502)  <511>;
                            (__tmp.505 var=236) __uint__mi___uint___uint (j.485 __tmp.504)  <512>;
                            (__ct_8.507 var=238) const ()  <514>;
                            (__tmp.1230 var=240) bool__ge___sint___sint (__ct_8.507 __tmp.505)  <1580>;
                            (__trgt.1248 var=456) const ()  <1641>;
                            () void_br_bool_t13s_s2 (__tmp.1230 __trgt.1248)  <1642>;
                            (__either.1249 var=446) undefined ()  <1643>;
                            if {
                                {
                                    () if_expr (__either.1249)  <544>;
                                } #52
                                {
                                } #60 off=54
                                {
                                    #334 off=22
                                    (__link.1048 var=400) w32_jal_t21s_s2 (f32_mul.969)  <1273>;
                                    call {
                                        (a.1049 var=397 stl=X off=11) assign (fn.1003)  <1274>;
                                        (b.1050 var=398 stl=X off=12) assign (__ct_926237696.229)  <1275>;
                                        (__link.1051 var=400 stl=X off=1) assign (__link.1048)  <1276>;
                                        (w.1052 var=41 stl=X off=10) Ff32_mul (__link.1051 a.1049 b.1050)  <1277>;
                                        (w.1053 var=41) deassign (w.1052)  <1278>;
                                    } #335 off=23
                                    #340 off=24
                                    (__link.1058 var=374) w32_jal_t21s_s2 (f32_sub.809)  <1286>;
                                    call {
                                        (a.1059 var=371 stl=X off=11) assign (r.1023)  <1287>;
                                        (b.1060 var=372 stl=X off=12) assign (w.1053)  <1288>;
                                        (__link.1061 var=374 stl=X off=1) assign (__link.1058)  <1289>;
                                        (r.1062 var=40 stl=X off=10) Ff32_sub (__link.1061 a.1059 b.1060)  <1290>;
                                        (r.1063 var=40) deassign (r.1062)  <1291>;
                                    } #341 off=25
                                    #346 off=26
                                    (__link.1068 var=400) w32_jal_t21s_s2 (f32_mul.969)  <1299>;
                                    call {
                                        (a.1069 var=397 stl=X off=11) assign (fn.1003)  <1300>;
                                        (b.1070 var=398 stl=X off=12) assign (__ct_780509960.232)  <1301>;
                                        (__link.1071 var=400 stl=X off=1) assign (__link.1068)  <1302>;
                                        (__tmp.1072 var=247 stl=X off=10) Ff32_mul (__link.1071 a.1069 b.1070)  <1303>;
                                        (__tmp.1073 var=247) deassign (__tmp.1072)  <1304>;
                                    } #347 off=27
                                    #352 off=28
                                    (__link.1078 var=374) w32_jal_t21s_s2 (f32_sub.809)  <1312>;
                                    call {
                                        (a.1079 var=371 stl=X off=11) assign (r.1023)  <1313>;
                                        (b.1080 var=372 stl=X off=12) assign (r.1063)  <1314>;
                                        (__link.1081 var=374 stl=X off=1) assign (__link.1078)  <1315>;
                                        (__tmp.1082 var=248 stl=X off=10) Ff32_sub (__link.1081 a.1079 b.1080)  <1316>;
                                        (__tmp.1083 var=248) deassign (__tmp.1082)  <1317>;
                                    } #353 off=29
                                    #358 off=30
                                    (__link.1088 var=374) w32_jal_t21s_s2 (f32_sub.809)  <1325>;
                                    call {
                                        (a.1089 var=371 stl=X off=11) assign (__tmp.1083)  <1326>;
                                        (b.1090 var=372 stl=X off=12) assign (w.1053)  <1327>;
                                        (__link.1091 var=374 stl=X off=1) assign (__link.1088)  <1328>;
                                        (__tmp.1092 var=249 stl=X off=10) Ff32_sub (__link.1091 a.1089 b.1090)  <1329>;
                                        (__tmp.1093 var=249) deassign (__tmp.1092)  <1330>;
                                    } #359 off=31
                                    #364 off=32
                                    (__link.1098 var=374) w32_jal_t21s_s2 (f32_sub.809)  <1338>;
                                    call {
                                        (a.1099 var=371 stl=X off=11) assign (__tmp.1073)  <1339>;
                                        (b.1100 var=372 stl=X off=12) assign (__tmp.1093)  <1340>;
                                        (__link.1101 var=374 stl=X off=1) assign (__link.1098)  <1341>;
                                        (w.1102 var=41 stl=X off=10) Ff32_sub (__link.1101 a.1099 b.1100)  <1342>;
                                        (w.1103 var=41) deassign (w.1102)  <1343>;
                                    } #365 off=33
                                    #370 off=34
                                    (__link.1108 var=374) w32_jal_t21s_s2 (f32_sub.809)  <1351>;
                                    call {
                                        (a.1109 var=371 stl=X off=11) assign (r.1063)  <1352>;
                                        (b.1110 var=372 stl=X off=12) assign (w.1103)  <1353>;
                                        (__link.1111 var=374 stl=X off=1) assign (__link.1108)  <1354>;
                                        (__tmp.1112 var=251 stl=X off=10) Ff32_sub (__link.1111 a.1109 b.1110)  <1355>;
                                        (__tmp.1113 var=251) deassign (__tmp.1112)  <1356>;
                                    } #371 off=35
                                    #331 off=36
                                    (__M_DMw.551 var=5 __extDMb_w32.552 var=20) store (__tmp.1113 y.31 __extDMb_w32.491)  <559>;
                                    (__tmp.562 var=264) __uint__rs___uint___sint (__tmp.1113 __ct_23.483)  <569>;
                                    (__tmp.565 var=267) __uint__ad___uint___uint (__tmp.562 __ct_255.502)  <572>;
                                    (__tmp.566 var=268) __uint__mi___uint___uint (j.485 __tmp.565)  <573>;
                                    (__ct_25.568 var=270) const ()  <575>;
                                    (__tmp.1229 var=272) bool__ge___sint___sint (__ct_25.568 __tmp.566)  <1579>;
                                    (__trgt.1245 var=454) const ()  <1636>;
                                    () void_br_bool_t13s_s2 (__tmp.1229 __trgt.1245)  <1637>;
                                    (__either.1246 var=446) undefined ()  <1638>;
                                    if {
                                        {
                                            () if_expr (__either.1246)  <605>;
                                        } #56
                                        {
                                        } #58 off=52
                                        {
                                            #384 off=37
                                            (__ct_780509952.598 var=273) const ()  <606>;
                                            (__link.1118 var=400) w32_jal_t21s_s2 (f32_mul.969)  <1364>;
                                            call {
                                                (a.1119 var=397 stl=X off=11) assign (fn.1003)  <1365>;
                                                (b.1120 var=398 stl=X off=12) assign (__ct_780509952.598)  <1366>;
                                                (__link.1121 var=400 stl=X off=1) assign (__link.1118)  <1367>;
                                                (w.1122 var=41 stl=X off=10) Ff32_mul (__link.1121 a.1119 b.1120)  <1368>;
                                                (w.1123 var=41) deassign (w.1122)  <1369>;
                                            } #385 off=38
                                            #390 off=39
                                            (__link.1128 var=374) w32_jal_t21s_s2 (f32_sub.809)  <1377>;
                                            call {
                                                (a.1129 var=371 stl=X off=11) assign (r.1063)  <1378>;
                                                (b.1130 var=372 stl=X off=12) assign (w.1123)  <1379>;
                                                (__link.1131 var=374 stl=X off=1) assign (__link.1128)  <1380>;
                                                (r.1132 var=40 stl=X off=10) Ff32_sub (__link.1131 a.1129 b.1130)  <1381>;
                                                (r.1133 var=40) deassign (r.1132)  <1382>;
                                            } #391 off=40
                                            #396 off=41
                                            (__ct_613232946.602 var=277) const ()  <610>;
                                            (__link.1138 var=400) w32_jal_t21s_s2 (f32_mul.969)  <1390>;
                                            call {
                                                (a.1139 var=397 stl=X off=11) assign (fn.1003)  <1391>;
                                                (b.1140 var=398 stl=X off=12) assign (__ct_613232946.602)  <1392>;
                                                (__link.1141 var=400 stl=X off=1) assign (__link.1138)  <1393>;
                                                (__tmp.1142 var=279 stl=X off=10) Ff32_mul (__link.1141 a.1139 b.1140)  <1394>;
                                                (__tmp.1143 var=279) deassign (__tmp.1142)  <1395>;
                                            } #397 off=42
                                            #402 off=43
                                            (__link.1148 var=374) w32_jal_t21s_s2 (f32_sub.809)  <1403>;
                                            call {
                                                (a.1149 var=371 stl=X off=11) assign (r.1063)  <1404>;
                                                (b.1150 var=372 stl=X off=12) assign (r.1133)  <1405>;
                                                (__link.1151 var=374 stl=X off=1) assign (__link.1148)  <1406>;
                                                (__tmp.1152 var=280 stl=X off=10) Ff32_sub (__link.1151 a.1149 b.1150)  <1407>;
                                                (__tmp.1153 var=280) deassign (__tmp.1152)  <1408>;
                                            } #403 off=44
                                            #408 off=45
                                            (__link.1158 var=374) w32_jal_t21s_s2 (f32_sub.809)  <1416>;
                                            call {
                                                (a.1159 var=371 stl=X off=11) assign (__tmp.1153)  <1417>;
                                                (b.1160 var=372 stl=X off=12) assign (w.1123)  <1418>;
                                                (__link.1161 var=374 stl=X off=1) assign (__link.1158)  <1419>;
                                                (__tmp.1162 var=281 stl=X off=10) Ff32_sub (__link.1161 a.1159 b.1160)  <1420>;
                                                (__tmp.1163 var=281) deassign (__tmp.1162)  <1421>;
                                            } #409 off=46
                                            #414 off=47
                                            (__link.1168 var=374) w32_jal_t21s_s2 (f32_sub.809)  <1429>;
                                            call {
                                                (a.1169 var=371 stl=X off=11) assign (__tmp.1143)  <1430>;
                                                (b.1170 var=372 stl=X off=12) assign (__tmp.1163)  <1431>;
                                                (__link.1171 var=374 stl=X off=1) assign (__link.1168)  <1432>;
                                                (w.1172 var=41 stl=X off=10) Ff32_sub (__link.1171 a.1169 b.1170)  <1433>;
                                                (w.1173 var=41) deassign (w.1172)  <1434>;
                                            } #415 off=48
                                            #420 off=49
                                            (__link.1178 var=374) w32_jal_t21s_s2 (f32_sub.809)  <1442>;
                                            call {
                                                (a.1179 var=371 stl=X off=11) assign (r.1133)  <1443>;
                                                (b.1180 var=372 stl=X off=12) assign (w.1173)  <1444>;
                                                (__link.1181 var=374 stl=X off=1) assign (__link.1178)  <1445>;
                                                (__tmp.1182 var=283 stl=X off=10) Ff32_sub (__link.1181 a.1179 b.1180)  <1446>;
                                                (__tmp.1183 var=283) deassign (__tmp.1182)  <1447>;
                                            } #421 off=50
                                            #381 off=51
                                            (__M_DMw.612 var=5 __extDMb_w32.613 var=20) store (__tmp.1183 y.31 __extDMb_w32.552)  <620>;
                                            (__trgt.1247 var=455) const ()  <1639>;
                                            () void_j_t21s_s2 (__trgt.1247)  <1640>;
                                        } #57
                                        {
                                            (__extDMb_w32.614 var=20) merge (__extDMb_w32.552 __extDMb_w32.613)  <621>;
                                            (r.616 var=40) merge (r.1063 r.1133)  <623>;
                                            (w.617 var=41) merge (w.1103 w.1173)  <624>;
                                        } #59
                                    } #55
                                    #476 off=53
                                    (__trgt.1250 var=457) const ()  <1644>;
                                    () void_j_t21s_s2 (__trgt.1250)  <1645>;
                                } #53
                                {
                                    (__extDMb_w32.618 var=20) merge (__extDMb_w32.491 __extDMb_w32.614)  <625>;
                                    (r.620 var=40) merge (r.1023 r.616)  <627>;
                                    (w.621 var=41) merge (w.1033 w.617)  <628>;
                                } #61
                            } #51
                            #477 off=55
                            (__trgt.1255 var=460) const ()  <1652>;
                            () void_j_t21s_s2 (__trgt.1255)  <1653>;
                        } #49
                        {
                            (__extDMb_w32.624 var=20) merge (__extDMb_w32.481 __extDMb_w32.618)  <631>;
                            (r.626 var=40) merge (r.1023 r.620)  <633>;
                            (w.627 var=41) merge (w.1033 w.621)  <634>;
                        } #62
                    } #46
                    #432 off=57
                    (__fchtmp.634 var=290) load (__M_DMw.4 y.31 _ZL9npio2f_hw.18 __extDMb_w32.624)  <641>;
                    (__shv_y.781 var=352) __Pvoid__pl___Pvoid___sint (y.31 __ct_4.104)  <857>;
                    (__link.1188 var=374) w32_jal_t21s_s2 (f32_sub.809)  <1455>;
                    call {
                        (a.1189 var=371 stl=X off=11) assign (r.626)  <1456>;
                        (b.1190 var=372 stl=X off=12) assign (__fchtmp.634)  <1457>;
                        (__link.1191 var=374 stl=X off=1) assign (__link.1188)  <1458>;
                        (__tmp.1192 var=291 stl=X off=10) Ff32_sub (__link.1191 a.1189 b.1190)  <1459>;
                        (__tmp.1193 var=291) deassign (__tmp.1192)  <1460>;
                    } #433 off=58
                    #438 off=59
                    (__link.1198 var=374) w32_jal_t21s_s2 (f32_sub.809)  <1468>;
                    call {
                        (a.1199 var=371 stl=X off=11) assign (__tmp.1193)  <1469>;
                        (b.1200 var=372 stl=X off=12) assign (w.627)  <1470>;
                        (__link.1201 var=374 stl=X off=1) assign (__link.1198)  <1471>;
                        (__tmp.1202 var=292 stl=X off=10) Ff32_sub (__link.1201 a.1199 b.1200)  <1472>;
                        (__tmp.1203 var=292) deassign (__tmp.1202)  <1473>;
                    } #439 off=60
                    #429 off=61
                    (__M_DMw.640 var=5 __extDMb_w32.641 var=20) store (__tmp.1203 __shv_y.781 __extDMb_w32.624)  <647>;
                    (__tmp.1231 var=298) bool__ge___sint___sint (x.28 __ct_0.97)  <1581>;
                    (__trgt.1256 var=461) const ()  <1654>;
                    () void_br_bool_t13s_s2 (__tmp.1231 __trgt.1256)  <1655>;
                    (__either.1257 var=446) undefined ()  <1656>;
                    if {
                        {
                            () if_expr (__either.1257)  <678>;
                        } #65
                        {
                        } #67 off=67
                        {
                            #451 off=62
                            (__fchtmp.677 var=304) load (__M_DMw.4 y.31 _ZL9npio2f_hw.18 __extDMb_w32.641)  <684>;
                            (__link.1208 var=374) w32_jal_t21s_s2 (f32_sub.809)  <1481>;
                            call {
                                (a.1209 var=371 stl=X off=11) assign (__ct_0.97)  <1482>;
                                (b.1210 var=372 stl=X off=12) assign (__fchtmp.677)  <1483>;
                                (__link.1211 var=374 stl=X off=1) assign (__link.1208)  <1484>;
                                (__tmp.1212 var=305 stl=X off=10) Ff32_sub (__link.1211 a.1209 b.1210)  <1485>;
                                (__tmp.1213 var=305) deassign (__tmp.1212)  <1486>;
                            } #452 off=63
                            #457 off=64
                            (__M_DMw.682 var=5 __extDMb_w32.683 var=20) store (__tmp.1213 y.31 __extDMb_w32.641)  <689>;
                            (__fchtmp.689 var=314) load (__M_DMw.4 __shv_y.781 _ZL9npio2f_hw.18 __extDMb_w32.683)  <695>;
                            (__link.1218 var=374) w32_jal_t21s_s2 (f32_sub.809)  <1494>;
                            call {
                                (a.1219 var=371 stl=X off=11) assign (__ct_0.97)  <1495>;
                                (b.1220 var=372 stl=X off=12) assign (__fchtmp.689)  <1496>;
                                (__link.1221 var=374 stl=X off=1) assign (__link.1218)  <1497>;
                                (__tmp.1222 var=315 stl=X off=10) Ff32_sub (__link.1221 a.1219 b.1220)  <1498>;
                                (__tmp.1223 var=315) deassign (__tmp.1222)  <1499>;
                            } #458 off=65
                            #448 off=66
                            (__M_DMw.694 var=5 __extDMb_w32.695 var=20) store (__tmp.1223 __shv_y.781 __extDMb_w32.683)  <700>;
                            (__rt.698 var=25) __sint__mi___sint___sint (__ct_0.97 n.995)  <703>;
                            (__trgt.1258 var=462) const ()  <1657>;
                            () void_j_t21s_s2 (__trgt.1258)  <1658>;
                        } #66
                        {
                            (__extDMb_w32.699 var=20) merge (__extDMb_w32.641 __extDMb_w32.695)  <704>;
                            (__rt.700 var=25) merge (n.995 __rt.698)  <705>;
                        } #68
                    } #64
                    #478 off=68
                    (__trgt.1261 var=464) const ()  <1662>;
                    () void_j_t21s_s2 (__trgt.1261)  <1663>;
                } #32
                {
                    (__extDMb_w32.701 var=20) merge (__extDMb_w32.343 __extDMb_w32.699)  <706>;
                    (__rt.702 var=25) merge (__rt.344 __rt.700)  <707>;
                } #69
            } #9
            #479 off=111
            (__trgt.1264 var=466) const ()  <1667>;
            () void_j_t21s_s2 (__trgt.1264)  <1668>;
        } #7
        {
            (__extDMb_w32.715 var=20) merge (__extDMb_w32.108 __extDMb_w32.701)  <720>;
            (__rt.716 var=25) merge (__ct_0.97 __rt.702)  <721>;
        } #70
    } #4
    #72 off=113 nxt=-2
    (__rd___sp.729 var=21) rd_res_reg (__R_SP.11 __sp.38)  <734>;
    (__ct_0s0.730 var=322) const ()  <735>;
    (__tmp.732 var=324) __Pvoid__pl___Pvoid___sint (__rd___sp.729 __ct_0s0.730)  <737>;
    (__R_SP.733 var=12 __sp.734 var=18) wr_res_reg (__tmp.732 __sp.38)  <738>;
    () void___rts_jr_w32 (__la.24)  <739>;
    (__rt.735 var=25 stl=X off=10) assign (__rt.716)  <740>;
    () out (__rt.735)  <741>;
    () sink (__sp.734)  <747>;
    () sink (__extDMb_w32.715)  <749>;
} #0
0 : 'src/math.c';
----------
0 : (0,402:0,0);
4 : (0,433:4,7);
6 : (0,434:8,8);
7 : (0,434:29,13);
8 : (0,435:9,14);
9 : (0,435:4,14);
11 : (0,435:22,15);
13 : (0,436:8,15);
15 : (0,457:12,16);
17 : (0,438:12,17);
19 : (0,438:44,18);
20 : (0,441:19,22);
23 : (0,446:12,32);
25 : (0,449:12,33);
27 : (0,449:44,34);
28 : (0,452:19,38);
32 : (0,436:8,52);
40 : (0,467:20,69);
42 : (0,467:37,70);
43 : (0,467:20,71);
46 : (0,467:8,73);
48 : (0,467:55,74);
49 : (0,469:15,77);
51 : (0,475:12,83);
53 : (0,475:20,84);
55 : (0,483:16,92);
57 : (0,483:26,93);
58 : (0,483:16,100);
60 : (0,475:12,105);
64 : (0,510:4,113);
66 : (0,510:13,114);
67 : (0,510:42,119);
72 : (0,511:4,130);
101 : (0,433:9,7);
107 : (0,436:13,15);
116 : (0,475:16,83);
140 : (0,438:30,17);
141 : (0,438:30,17);
149 : (0,440:17,19);
152 : (0,439:25,18);
153 : (0,439:25,18);
158 : (0,440:25,19);
159 : (0,440:25,19);
164 : (0,440:31,19);
165 : (0,440:31,19);
174 : (0,444:17,24);
177 : (0,442:18,22);
178 : (0,442:18,22);
183 : (0,443:25,23);
184 : (0,443:25,23);
189 : (0,444:25,24);
190 : (0,444:25,24);
195 : (0,444:31,24);
196 : (0,444:31,24);
201 : (0,449:30,33);
202 : (0,449:30,33);
210 : (0,451:17,35);
213 : (0,450:25,34);
214 : (0,450:25,34);
219 : (0,451:25,35);
220 : (0,451:25,35);
225 : (0,451:31,35);
226 : (0,451:31,35);
235 : (0,455:17,40);
238 : (0,453:18,38);
239 : (0,453:18,38);
244 : (0,454:25,39);
245 : (0,454:25,39);
250 : (0,455:25,40);
251 : (0,455:25,40);
256 : (0,455:31,40);
257 : (0,455:31,40);
270 : (0,467:14,68);
273 : (0,463:25,61);
274 : (0,463:25,61);
279 : (0,463:33,61);
280 : (0,463:33,61);
285 : (0,463:13,61);
286 : (0,463:13,61);
291 : (0,464:13,62);
292 : (0,464:13,62);
297 : (0,465:17,63);
298 : (0,465:17,63);
303 : (0,465:14,63);
304 : (0,465:14,63);
309 : (0,466:15,64);
310 : (0,466:15,64);
315 : (0,468:20,74);
316 : (0,468:20,74);
331 : (0,483:20,92);
334 : (0,477:23,85);
335 : (0,477:23,85);
340 : (0,478:22,86);
341 : (0,478:22,86);
346 : (0,479:23,87);
347 : (0,479:23,87);
352 : (0,479:35,87);
353 : (0,479:35,87);
358 : (0,479:38,87);
359 : (0,479:38,87);
364 : (0,479:31,87);
365 : (0,479:31,87);
370 : (0,480:24,88);
371 : (0,480:24,88);
381 : (0,488:21,97);
384 : (0,485:27,94);
385 : (0,485:27,94);
390 : (0,486:26,95);
391 : (0,486:26,95);
396 : (0,487:27,96);
397 : (0,487:27,96);
402 : (0,487:39,96);
403 : (0,487:39,96);
408 : (0,487:42,96);
409 : (0,487:42,96);
414 : (0,487:35,96);
415 : (0,487:35,96);
420 : (0,488:28,97);
421 : (0,488:28,97);
429 : (0,510:9,113);
432 : (0,492:17,111);
433 : (0,492:17,111);
438 : (0,492:23,111);
439 : (0,492:23,111);
448 : (0,510:49,116);
451 : (0,510:21,114);
452 : (0,510:21,114);
457 : (0,510:35,115);
458 : (0,510:35,115);
----------
44 : (0,402:15,0);
45 : (0,402:15,0);
47 : (0,402:15,0);
48 : (0,402:15,0);
75 : (0,432:12,0);
77 : (0,432:11,6);
78 : (0,433:11,0);
108 : (0,433:4,7);
109 : (0,434:11,0);
112 : (0,434:10,8);
115 : (0,434:21,0);
118 : (0,434:20,9);
121 : (0,435:10,0);
123 : (0,435:9,14);
151 : (0,435:4,14);
182 : (0,436:8,15);
183 : (0,437:20,0);
187 : (0,438:18,0);
189 : (0,438:18,17);
190 : (0,438:30,0);
220 : (0,438:12,17);
221 : (0,439:27,0);
227 : (0,439:17,18);
239 : (0,440:17,19);
240 : (0,442:21,0);
243 : (0,443:27,0);
249 : (0,443:17,23);
261 : (0,444:17,24);
262 : (0,438:12,27);
264 : (0,446:19,0);
303 : (0,449:12,33);
310 : (0,450:17,34);
322 : (0,451:17,35);
332 : (0,454:17,39);
344 : (0,455:17,40);
345 : (0,449:12,43);
347 : (0,457:19,0);
349 : (0,436:8,48);
350 : (0,436:8,48);
360 : (0,463:26,0);
363 : (0,463:34,0);
439 : (0,467:20,69);
441 : (0,467:25,0);
443 : (0,467:25,70);
451 : (0,467:48,70);
453 : (0,467:37,70);
456 : (0,467:20,72);
484 : (0,467:8,73);
489 : (0,468:13,74);
491 : (0,471:21,0);
493 : (0,471:19,78);
498 : (0,472:13,79);
508 : (0,474:24,82);
509 : (0,474:29,0);
511 : (0,474:29,82);
512 : (0,474:17,82);
514 : (0,475:17,0);
544 : (0,475:12,83);
559 : (0,480:17,88);
569 : (0,482:28,91);
572 : (0,482:33,91);
573 : (0,482:21,91);
575 : (0,483:21,0);
605 : (0,483:16,92);
606 : (0,485:28,0);
610 : (0,487:28,0);
620 : (0,488:21,97);
621 : (0,483:16,102);
623 : (0,483:16,102);
624 : (0,483:16,102);
625 : (0,475:12,107);
627 : (0,475:12,107);
628 : (0,475:12,107);
631 : (0,467:8,110);
633 : (0,467:8,110);
634 : (0,467:8,110);
641 : (0,492:19,111);
647 : (0,492:9,111);
678 : (0,510:4,113);
684 : (0,510:23,114);
689 : (0,510:15,114);
695 : (0,510:37,115);
700 : (0,510:29,115);
703 : (0,510:49,116);
704 : (0,510:4,123);
705 : (0,510:4,123);
706 : (0,435:4,126);
707 : (0,435:4,126);
720 : (0,433:4,129);
721 : (0,433:4,129);
734 : (0,511:4,0);
735 : (0,511:4,0);
737 : (0,511:4,0);
738 : (0,511:4,130);
739 : (0,511:4,130);
740 : (0,511:4,0);
842 : (0,467:14,0);
844 : (0,467:14,68);
848 : (0,467:48,70);
849 : (0,467:48,70);
852 : (0,434:20,0);
853 : (0,434:20,0);
854 : (0,434:20,0);
855 : (0,434:20,0);
856 : (0,434:20,0);
857 : (0,434:20,0);
860 : (0,467:14,0);
861 : (0,467:48,0);
863 : (0,467:48,0);
901 : (0,433:9,7);
908 : (0,436:13,15);
962 : (0,437:18,0);
963 : (0,437:18,16);
964 : (0,437:18,16);
965 : (0,437:18,16);
966 : (0,437:18,16);
967 : (0,437:18,16);
968 : (0,437:18,16);
976 : (0,439:25,18);
977 : (0,439:25,18);
978 : (0,439:25,18);
979 : (0,439:25,18);
980 : (0,439:25,18);
981 : (0,439:25,18);
989 : (0,440:25,19);
990 : (0,440:25,19);
991 : (0,440:25,19);
992 : (0,440:25,19);
993 : (0,440:25,19);
994 : (0,440:25,19);
1002 : (0,440:31,19);
1003 : (0,440:31,19);
1004 : (0,440:31,19);
1005 : (0,440:31,19);
1006 : (0,440:31,19);
1007 : (0,440:31,19);
1015 : (0,442:18,22);
1016 : (0,442:18,22);
1017 : (0,442:18,22);
1018 : (0,442:18,22);
1019 : (0,442:18,22);
1020 : (0,442:18,22);
1028 : (0,443:25,23);
1029 : (0,443:25,23);
1030 : (0,443:25,23);
1031 : (0,443:25,23);
1032 : (0,443:25,23);
1033 : (0,443:25,23);
1041 : (0,444:25,24);
1042 : (0,444:25,24);
1043 : (0,444:25,24);
1044 : (0,444:25,24);
1045 : (0,444:25,24);
1046 : (0,444:25,24);
1054 : (0,444:31,24);
1055 : (0,444:31,24);
1056 : (0,444:31,24);
1057 : (0,444:31,24);
1058 : (0,444:31,24);
1059 : (0,444:31,24);
1066 : (0,448:18,0);
1067 : (0,448:18,32);
1068 : (0,448:18,32);
1069 : (0,448:18,32);
1070 : (0,448:18,32);
1071 : (0,448:18,32);
1072 : (0,448:18,32);
1080 : (0,450:25,34);
1081 : (0,450:25,34);
1082 : (0,450:25,34);
1083 : (0,450:25,34);
1084 : (0,450:25,34);
1085 : (0,450:25,34);
1093 : (0,451:25,35);
1094 : (0,451:25,35);
1095 : (0,451:25,35);
1096 : (0,451:25,35);
1097 : (0,451:25,35);
1098 : (0,451:25,35);
1106 : (0,451:31,35);
1107 : (0,451:31,35);
1108 : (0,451:31,35);
1109 : (0,451:31,35);
1110 : (0,451:31,35);
1111 : (0,451:31,35);
1119 : (0,453:18,38);
1120 : (0,453:18,38);
1121 : (0,453:18,38);
1122 : (0,453:18,38);
1123 : (0,453:18,38);
1124 : (0,453:18,38);
1132 : (0,454:25,39);
1133 : (0,454:25,39);
1134 : (0,454:25,39);
1135 : (0,454:25,39);
1136 : (0,454:25,39);
1137 : (0,454:25,39);
1145 : (0,455:25,40);
1146 : (0,455:25,40);
1147 : (0,455:25,40);
1148 : (0,455:25,40);
1149 : (0,455:25,40);
1150 : (0,455:25,40);
1158 : (0,455:31,40);
1159 : (0,455:31,40);
1160 : (0,455:31,40);
1161 : (0,455:31,40);
1162 : (0,455:31,40);
1163 : (0,455:31,40);
1170 : (0,463:25,0);
1171 : (0,463:25,61);
1172 : (0,463:25,61);
1173 : (0,463:25,61);
1174 : (0,463:25,61);
1175 : (0,463:25,61);
1176 : (0,463:25,61);
1184 : (0,463:33,61);
1185 : (0,463:33,61);
1186 : (0,463:33,61);
1187 : (0,463:33,61);
1188 : (0,463:33,61);
1189 : (0,463:33,61);
1196 : (0,463:13,0);
1197 : (0,463:13,61);
1198 : (0,463:13,61);
1199 : (0,463:13,61);
1200 : (0,463:13,61);
1201 : (0,463:13,61);
1202 : (0,463:13,61);
1208 : (0,464:13,0);
1209 : (0,464:13,62);
1210 : (0,464:13,62);
1211 : (0,464:13,62);
1212 : (0,464:13,62);
1213 : (0,464:13,62);
1221 : (0,465:17,63);
1222 : (0,465:17,63);
1223 : (0,465:17,63);
1224 : (0,465:17,63);
1225 : (0,465:17,63);
1226 : (0,465:17,63);
1234 : (0,465:14,63);
1235 : (0,465:14,63);
1236 : (0,465:14,63);
1237 : (0,465:14,63);
1238 : (0,465:14,63);
1239 : (0,465:14,63);
1247 : (0,466:15,64);
1248 : (0,466:15,64);
1249 : (0,466:15,64);
1250 : (0,466:15,64);
1251 : (0,466:15,64);
1252 : (0,466:15,64);
1260 : (0,468:20,74);
1261 : (0,468:20,74);
1262 : (0,468:20,74);
1263 : (0,468:20,74);
1264 : (0,468:20,74);
1265 : (0,468:20,74);
1273 : (0,477:23,85);
1274 : (0,477:23,85);
1275 : (0,477:23,85);
1276 : (0,477:23,85);
1277 : (0,477:23,85);
1278 : (0,477:23,85);
1286 : (0,478:22,86);
1287 : (0,478:22,86);
1288 : (0,478:22,86);
1289 : (0,478:22,86);
1290 : (0,478:22,86);
1291 : (0,478:22,86);
1299 : (0,479:23,87);
1300 : (0,479:23,87);
1301 : (0,479:23,87);
1302 : (0,479:23,87);
1303 : (0,479:23,87);
1304 : (0,479:23,87);
1312 : (0,479:35,87);
1313 : (0,479:35,87);
1314 : (0,479:35,87);
1315 : (0,479:35,87);
1316 : (0,479:35,87);
1317 : (0,479:35,87);
1325 : (0,479:38,87);
1326 : (0,479:38,87);
1327 : (0,479:38,87);
1328 : (0,479:38,87);
1329 : (0,479:38,87);
1330 : (0,479:38,87);
1338 : (0,479:31,87);
1339 : (0,479:31,87);
1340 : (0,479:31,87);
1341 : (0,479:31,87);
1342 : (0,479:31,87);
1343 : (0,479:31,87);
1351 : (0,480:24,88);
1352 : (0,480:24,88);
1353 : (0,480:24,88);
1354 : (0,480:24,88);
1355 : (0,480:24,88);
1356 : (0,480:24,88);
1364 : (0,485:27,94);
1365 : (0,485:27,94);
1366 : (0,485:27,94);
1367 : (0,485:27,94);
1368 : (0,485:27,94);
1369 : (0,485:27,94);
1377 : (0,486:26,95);
1378 : (0,486:26,95);
1379 : (0,486:26,95);
1380 : (0,486:26,95);
1381 : (0,486:26,95);
1382 : (0,486:26,95);
1390 : (0,487:27,96);
1391 : (0,487:27,96);
1392 : (0,487:27,96);
1393 : (0,487:27,96);
1394 : (0,487:27,96);
1395 : (0,487:27,96);
1403 : (0,487:39,96);
1404 : (0,487:39,96);
1405 : (0,487:39,96);
1406 : (0,487:39,96);
1407 : (0,487:39,96);
1408 : (0,487:39,96);
1416 : (0,487:42,96);
1417 : (0,487:42,96);
1418 : (0,487:42,96);
1419 : (0,487:42,96);
1420 : (0,487:42,96);
1421 : (0,487:42,96);
1429 : (0,487:35,96);
1430 : (0,487:35,96);
1431 : (0,487:35,96);
1432 : (0,487:35,96);
1433 : (0,487:35,96);
1434 : (0,487:35,96);
1442 : (0,488:28,97);
1443 : (0,488:28,97);
1444 : (0,488:28,97);
1445 : (0,488:28,97);
1446 : (0,488:28,97);
1447 : (0,488:28,97);
1455 : (0,492:17,111);
1456 : (0,492:17,111);
1457 : (0,492:17,111);
1458 : (0,492:17,111);
1459 : (0,492:17,111);
1460 : (0,492:17,111);
1468 : (0,492:23,111);
1469 : (0,492:23,111);
1470 : (0,492:23,111);
1471 : (0,492:23,111);
1472 : (0,492:23,111);
1473 : (0,492:23,111);
1481 : (0,510:21,114);
1482 : (0,510:21,114);
1483 : (0,510:21,114);
1484 : (0,510:21,114);
1485 : (0,510:21,114);
1486 : (0,510:21,114);
1494 : (0,510:35,115);
1495 : (0,510:35,115);
1496 : (0,510:35,115);
1497 : (0,510:35,115);
1498 : (0,510:35,115);
1499 : (0,510:35,115);
1579 : (0,483:20,92);
1580 : (0,475:16,83);
1581 : (0,510:9,113);
1619 : (0,438:12,17);
1624 : (0,449:12,33);
1629 : (0,436:8,15);
1634 : (0,467:20,69);
1637 : (0,483:16,92);
1642 : (0,475:12,83);
1647 : (0,467:8,73);
1650 : (0,467:8,73);
1655 : (0,510:4,113);
1660 : (0,435:4,14);
1665 : (0,433:4,7);

