
// File generated by noodle version U-2022.12#33f3808fcb#221128, Thu Jan 25 16:07:22 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -DNDEBUG -D__tct_patch__=0 -itrv32p3_cnn_chess.h +NOrlt +wRelease/chesswork src/string.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!!  char *strpbrk(const char *, const char *)
Fstrpbrk : user_defined, called {
    fnm : "strpbrk" 'char *strpbrk(const char *, const char *)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
    frm : ( );
}
****
***/

[
    0 : strpbrk typ=u08 bnd=e stl=PMb
    3 : __M_DMb typ=w08 bnd=d stl=DMb
   12 : __R_SP typ=w32 bnd=d stl=SP
   17 : __extDMb typ=w08 bnd=b stl=DMb
   18 : __sp typ=w32 bnd=b stl=SP
   19 : __rd___sp typ=w32 bnd=m
   20 : __la typ=w32 bnd=p tref=w32__
   21 : __rt typ=w32 bnd=p tref=__P__cchar__
   22 : s1 typ=w32 bnd=p tref=__P__cchar__
   23 : s2 typ=w32 bnd=p tref=__P__cchar__
   24 : __ct_0S0 typ=w32 val=0S0 bnd=m
   26 : __tmp typ=w32 bnd=m
   27 : c typ=w08 bnd=m tref=__cchar__
   29 : r2 typ=w32 bnd=m lscp=9 tref=__P__cchar__
   30 : d typ=w08 bnd=m lscp=9 tref=__cchar__
   32 : __ct_1 typ=w32 val=1f bnd=m
   37 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   39 : __tmp typ=bool bnd=m
   46 : __tmp typ=bool bnd=m
   50 : __ct_0s0 typ=w32 val=0s0 bnd=m
   52 : __tmp typ=w32 bnd=m
   56 : __tmp typ=bool bnd=m
   64 : __tmp typ=bool bnd=m
   78 : __ct_m1 typ=w32 val=-1f bnd=m
   79 : __shv_r2 typ=w32 bnd=m
   80 : __shv_s1 typ=w32 bnd=m
   89 : __either typ=bool bnd=m
   90 : __trgt typ=t13s_s2 val=0j bnd=m
   91 : __trgt typ=t13s_s2 val=0j bnd=m
   92 : __trgt typ=t13s_s2 val=0j bnd=m
   93 : __trgt typ=t13s_s2 val=0j bnd=m
   94 : __trgt typ=t21s_s2 val=0j bnd=m
]
Fstrpbrk {
    #3 off=0
    (__M_DMb.2 var=3) st_def ()  <4>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__extDMb.16 var=17) source ()  <27>;
    (__sp.17 var=18) source ()  <28>;
    (__la.19 var=20 stl=X off=1) inp ()  <30>;
    (__la.20 var=20) deassign (__la.19)  <31>;
    (s1.23 var=22 stl=X off=11) inp ()  <34>;
    (s1.24 var=22) deassign (s1.23)  <35>;
    (s2.26 var=23 stl=X off=12) inp ()  <37>;
    (s2.27 var=23) deassign (s2.26)  <38>;
    (__rd___sp.29 var=19) rd_res_reg (__R_SP.11 __sp.17)  <40>;
    (__ct_0S0.30 var=24) const ()  <41>;
    (__tmp.32 var=26) __Pvoid__pl___Pvoid___sint (__rd___sp.29 __ct_0S0.30)  <43>;
    (__R_SP.33 var=12 __sp.34 var=18) wr_res_reg (__tmp.32 __sp.17)  <44>;
    (__ct_1.41 var=32) const ()  <52>;
    (s1.43 var=22) __Pvoid__pl___Pvoid___sint (s1.24 __ct_1.41)  <54>;
    (c.44 var=27) load (__M_DMb.2 s1.24 __extDMb.16)  <55>;
    (__ct_0.46 var=37) const ()  <57>;
    (__rd___sp.121 var=19) rd_res_reg (__R_SP.11 __sp.34)  <135>;
    (__ct_0s0.122 var=50) const ()  <136>;
    (__tmp.124 var=52) __Pvoid__pl___Pvoid___sint (__rd___sp.121 __ct_0s0.122)  <138>;
    (__tmp.290 var=39) bool__eq___sint___sint (c.44 __ct_0.46)  <320>;
    (__trgt.299 var=93) const ()  <341>;
    () void_br_bool_t13s_s2 (__tmp.290 __trgt.299)  <342>;
    (__either.300 var=89) undefined ()  <343>;
    if {
        {
            () if_expr (__either.300)  <75>;
            () chess_frequent_else ()  <76>;
            () chess_rear_then ()  <344>;
        } #5
        {
            (__trgt.301 var=94) const ()  <345>;
            () void_j_t21s_s2 (__trgt.301)  <346>;
        } #27 off=9
        {
            #106 off=1
            (__ct_m1.279 var=78) const ()  <292>;
            (__trgt.293 var=90) const ()  <330>;
            (__trgt.295 var=91) const ()  <335>;
            (__trgt.297 var=92) const ()  <338>;
            do {
                {
                    (c.71 var=27) entry (c.214 c.44)  <84>;
                    (s1.73 var=22) entry (s1.218 s1.43)  <86>;
                } #8
                {
                    #59 off=2
                    (s1.280 var=22) __Pvoid__pl___Pvoid___sint (s1.73 __ct_m1.279)  <294>;
                    do {
                        {
                            (r2.91 var=29) entry (r2.182 s2.27)  <104>;
                        } #12
                        {
                            #14 off=3
                            (d.99 var=30) load (__M_DMb.2 r2.91 __extDMb.16)  <112>;
                            (__tmp.102 var=46) bool__eq___sint___sint (c.71 d.99)  <115>;
                            (__shv_r2.283 var=79) __Pvoid__pl___Pvoid___sint (r2.91 __ct_1.41)  <297>;
                            () void_br_bool_t13s_s2 (__tmp.102 __trgt.293)  <331>;
                            (__either.294 var=89) undefined ()  <332>;
                            if {
                                {
                                    () if_expr (__either.294)  <131>;
                                    () chess_frequent_else ()  <333>;
                                    () chess_rear_then ()  <334>;
                                } #16
                                {
                                    (__R_SP.125 var=12 __sp.126 var=18) wr_res_reg (__tmp.124 __sp.34)  <139>;
                                    () void___rts_jr_w32 (__la.20)  <140>;
                                    (__rt.127 var=21 stl=X off=10) assign (s1.280)  <141>;
                                    () out (__rt.127)  <142>;
                                    () sink (__sp.126)  <148>;
                                } #20 off=5 nxt=-2
                                {
                                } #21 off=4
                                {
                                } #22
                            } #15
                            #23 off=6
                            (__tmp.161 var=56) bool__ne___sint___sint (d.99 __ct_0.46)  <182>;
                            () void_br_bool_t13s_s2 (__tmp.161 __trgt.295)  <336>;
                            (__either.296 var=89) undefined ()  <337>;
                        } #13
                        {
                            () while_expr (__either.296)  <183>;
                            (r2.182 var=29 r2.183 var=29) exit (__shv_r2.283)  <194>;
                        } #24
                    } #11
                    #25 off=7
                    (c.195 var=27) load (__M_DMb.2 s1.73 __extDMb.16)  <202>;
                    (__tmp.199 var=64) bool__ne___sint___sint (c.195 __ct_0.46)  <206>;
                    (__shv_s1.284 var=80) __Pvoid__pl___Pvoid___sint (s1.73 __ct_1.41)  <298>;
                    () void_br_bool_t13s_s2 (__tmp.199 __trgt.297)  <339>;
                    (__either.298 var=89) undefined ()  <340>;
                } #9
                {
                    () while_expr (__either.298)  <207>;
                    (c.214 var=27 c.215 var=27) exit (c.195)  <215>;
                    (s1.218 var=22 s1.219 var=22) exit (__shv_s1.284)  <217>;
                } #26
            } #7 rng=[1,2147483647]
        } #6
        {
        } #28
    } #4
    #31 off=10 nxt=-2
    (__R_SP.252 var=12 __sp.253 var=18) wr_res_reg (__tmp.124 __sp.34)  <245>;
    () void___rts_jr_w32 (__la.20)  <246>;
    (__rt.254 var=21 stl=X off=10) assign (__ct_0.46)  <247>;
    () out (__rt.254)  <248>;
    () sink (__sp.253)  <254>;
} #0
0 : 'src/string.c';
----------
0 : (0,176:0,0);
3 : (0,180:4,4);
4 : (0,180:4,4);
6 : (0,180:4,5);
7 : (0,180:4,5);
9 : (0,180:24,5);
11 : (0,187:10,7);
13 : (0,183:11,7);
14 : (0,185:18,10);
15 : (0,185:12,10);
20 : (0,186:16,11);
21 : (0,185:12,14);
23 : (0,187:10,18);
25 : (0,180:4,22);
27 : (0,180:4,24);
31 : (0,189:4,27);
----------
40 : (0,176:6,0);
41 : (0,176:6,0);
43 : (0,176:6,0);
44 : (0,176:6,0);
52 : (0,180:4,0);
54 : (0,180:4,3);
55 : (0,180:4,4);
57 : (0,180:4,0);
75 : (0,180:4,4);
84 : (0,180:4,5);
86 : (0,180:4,5);
104 : (0,187:10,7);
112 : (0,184:16,9);
115 : (0,185:18,10);
131 : (0,185:12,10);
135 : (0,186:16,0);
136 : (0,186:16,0);
138 : (0,186:16,0);
139 : (0,186:16,11);
140 : (0,186:16,11);
141 : (0,186:23,0);
182 : (0,187:10,18);
183 : (0,187:10,18);
194 : (0,187:10,18);
202 : (0,180:16,22);
206 : (0,180:4,22);
207 : (0,180:4,22);
215 : (0,180:4,22);
217 : (0,180:4,22);
245 : (0,189:4,27);
246 : (0,189:4,27);
247 : (0,189:11,0);
297 : (0,184:19,0);
298 : (0,180:19,0);
320 : (0,180:4,4);
331 : (0,185:12,10);
336 : (0,187:10,18);
339 : (0,180:4,22);
342 : (0,180:4,4);

