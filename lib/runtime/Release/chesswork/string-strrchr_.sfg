
// File generated by noodle version U-2022.12#33f3808fcb#221128, Tue Mar 19 15:57:56 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -DNDEBUG -D__tct_patch__=0 -itrv32p3_cnn_chess.h +NOrlt +wRelease/chesswork src/string.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!!  char *strrchr(const char *, int)
Fstrrchr : user_defined, called {
    fnm : "strrchr" 'char *strrchr(const char *, int)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
    frm : ( );
}
****
***/

[
    0 : strrchr typ=u08 bnd=e stl=PMb
    3 : __M_DMb typ=w08 bnd=d stl=DMb
   12 : __R_SP typ=w32 bnd=d stl=SP
   17 : __extDMb typ=w08 bnd=b stl=DMb
   18 : __sp typ=w32 bnd=b stl=SP
   19 : __rd___sp typ=w32 bnd=m
   20 : __la typ=w32 bnd=p tref=w32__
   22 : s typ=w32 bnd=p tref=__P__cchar__
   23 : c typ=w32 bnd=p tref=__sint__
   24 : __ct_0S0 typ=w32 val=0S0 bnd=m
   26 : __tmp typ=w32 bnd=m
   27 : result typ=w32 bnd=m tref=__P__cchar__
   28 : d typ=w08 bnd=m tref=__cchar__
   30 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   33 : __ct_1 typ=w32 val=1f bnd=m
   38 : __tmp typ=w08 bnd=m
   40 : __tmp typ=bool bnd=m
   47 : __tmp typ=bool bnd=m
   48 : __ct_0s0 typ=w32 val=0s0 bnd=m
   50 : __tmp typ=w32 bnd=m
   58 : __shv_s typ=w32 bnd=m
   67 : __either typ=bool bnd=m
   68 : __trgt typ=t13s_s2 val=0j bnd=m
   69 : __trgt typ=t21s_s2 val=0j bnd=m
   70 : __trgt typ=t13s_s2 val=0j bnd=m
]
Fstrrchr {
    #3 off=0
    (__M_DMb.2 var=3) st_def ()  <4>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__extDMb.16 var=17) source ()  <27>;
    (__sp.17 var=18) source ()  <28>;
    (__la.19 var=20 stl=X off=1) inp ()  <30>;
    (__la.20 var=20) deassign (__la.19)  <31>;
    (s.23 var=22 stl=X off=11) inp ()  <34>;
    (s.24 var=22) deassign (s.23)  <35>;
    (c.26 var=23 stl=X off=12) inp ()  <37>;
    (c.27 var=23) deassign (c.26)  <38>;
    (__rd___sp.29 var=19) rd_res_reg (__R_SP.11 __sp.17)  <40>;
    (__ct_0S0.30 var=24) const ()  <41>;
    (__tmp.32 var=26) __Pvoid__pl___Pvoid___sint (__rd___sp.29 __ct_0S0.30)  <43>;
    (__R_SP.33 var=12 __sp.34 var=18) wr_res_reg (__tmp.32 __sp.17)  <44>;
    (__ct_0.39 var=30) const ()  <50>;
    (__ct_1.56 var=33) const ()  <67>;
    (__tmp.61 var=38) __schar___schar___sint (c.27)  <72>;
    (__trgt.150 var=68) const ()  <191>;
    (__trgt.152 var=69) const ()  <194>;
    (__trgt.153 var=70) const ()  <196>;
    do {
        {
            (result.50 var=27) entry (result.99 __ct_0.39)  <61>;
            (s.53 var=22) entry (s.105 s.24)  <64>;
        } #5
        {
            #7 off=1
            (d.59 var=28) load (__M_DMb.2 s.53 __extDMb.16)  <70>;
            (__shv_s.142 var=58) __Pvoid__pl___Pvoid___sint (s.53 __ct_1.56)  <163>;
            (__tmp.147 var=40) bool__ne___sint___sint (d.59 __tmp.61)  <182>;
            () void_br_bool_t13s_s2 (__tmp.147 __trgt.150)  <192>;
            (__either.151 var=67) undefined ()  <193>;
            if {
                {
                    () if_expr (__either.151)  <88>;
                } #9
                {
                } #11 off=3
                {
                    () void_j_t21s_s2 (__trgt.152)  <195>;
                } #10 off=2
                {
                    (result.80 var=27) merge (result.50 s.53)  <92>;
                } #12
            } #8
            #13 off=4
            (__tmp.84 var=47) bool__ne___sint___sint (d.59 __ct_0.39)  <96>;
            () void_br_bool_t13s_s2 (__tmp.84 __trgt.153)  <197>;
            (__either.154 var=67) undefined ()  <198>;
        } #6
        {
            () while_expr (__either.154)  <97>;
            (result.99 var=27 result.100 var=27) exit (result.80)  <105>;
            (s.105 var=22 s.106 var=22) exit (__shv_s.142)  <108>;
        } #14
    } #4
    #16 off=5 nxt=-2
    (__rd___sp.111 var=19) rd_res_reg (__R_SP.11 __sp.34)  <111>;
    (__ct_0s0.112 var=48) const ()  <112>;
    (__tmp.114 var=50) __Pvoid__pl___Pvoid___sint (__rd___sp.111 __ct_0s0.112)  <114>;
    (__R_SP.115 var=12 __sp.116 var=18) wr_res_reg (__tmp.114 __sp.34)  <115>;
    () void___rts_jr_w32 (__la.20)  <116>;
    (result.117 var=27 stl=X off=10) assign (result.100)  <117>;
    () out (result.117)  <118>;
    () sink (__sp.116)  <124>;
} #0
0 : 'src/string.c';
----------
0 : (0,192:0,0);
3 : (0,196:4,3);
4 : (0,201:6,3);
6 : (0,197:7,3);
7 : (0,199:14,6);
8 : (0,199:8,6);
10 : (0,200:19,7);
11 : (0,199:8,9);
13 : (0,201:6,13);
16 : (0,202:4,14);
----------
40 : (0,192:6,0);
41 : (0,192:6,0);
43 : (0,192:6,0);
44 : (0,192:6,0);
50 : (0,195:20,0);
61 : (0,201:6,3);
64 : (0,201:6,3);
67 : (0,198:14,0);
70 : (0,198:12,5);
72 : (0,199:17,6);
88 : (0,199:8,6);
92 : (0,199:8,11);
96 : (0,201:6,13);
97 : (0,201:6,13);
105 : (0,201:6,13);
108 : (0,201:6,13);
111 : (0,202:4,0);
112 : (0,202:4,0);
114 : (0,202:4,0);
115 : (0,202:4,14);
116 : (0,202:4,14);
117 : (0,202:11,0);
163 : (0,198:14,0);
182 : (0,199:14,6);
192 : (0,199:8,6);
197 : (0,201:6,13);

