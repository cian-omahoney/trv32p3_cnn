
// File generated by noodle version U-2022.12#33f3808fcb#221128, Fri Mar 22 17:52:35 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -DNDEBUG -D__tct_patch__=0 -itrv32p3_cnn_chess.h +NOrlt +wRelease/chesswork src/string.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!!  size_t strlen(const char *)
Fstrlen : user_defined, called {
    fnm : "strlen" 'size_t strlen(const char *)';
    arg : ( w32:i w32:r w32:i );
    loc : ( X[1] X[10] X[11] );
    frm : ( );
}
****
***/

[
    0 : strlen typ=u08 bnd=e stl=PMb
    3 : __M_DMb typ=w08 bnd=d stl=DMb
   12 : __R_SP typ=w32 bnd=d stl=SP
   17 : __extDMb typ=w08 bnd=b stl=DMb
   18 : __sp typ=w32 bnd=b stl=SP
   19 : __rd___sp typ=w32 bnd=m
   20 : __la typ=w32 bnd=p tref=w32__
   21 : __rt typ=w32 bnd=p tref=size_t__
   22 : s typ=w32 bnd=p tref=__P__cchar__
   23 : __ct_0S0 typ=w32 val=0S0 bnd=m
   25 : __tmp typ=w32 bnd=m
   26 : r typ=w32 bnd=m tref=__P__cchar__
   28 : __ct_1 typ=w32 val=1f bnd=m
   31 : __fch___extDMb typ=w08 bnd=m
   33 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   35 : __tmp typ=bool bnd=m
   39 : __fch___extDMb typ=w08 bnd=m
   43 : __tmp typ=bool bnd=m
   46 : __tmp typ=w32 bnd=m
   47 : __tmp typ=w32 bnd=m
   49 : __ct_0s0 typ=w32 val=0s0 bnd=m
   51 : __tmp typ=w32 bnd=m
   58 : __ct_m1 typ=w32 val=-1f bnd=m
   59 : __shv_r typ=w32 bnd=m
   69 : __either typ=bool bnd=m
   70 : __trgt typ=t13s_s2 val=0j bnd=m
   71 : __trgt typ=t13s_s2 val=0j bnd=m
   72 : __trgt typ=t21s_s2 val=0j bnd=m
]
Fstrlen {
    #3 off=0
    (__M_DMb.2 var=3) st_def ()  <4>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__extDMb.16 var=17) source ()  <27>;
    (__sp.17 var=18) source ()  <28>;
    (__la.19 var=20 stl=X off=1) inp ()  <30>;
    (__la.20 var=20) deassign (__la.19)  <31>;
    (s.23 var=22 stl=X off=11) inp ()  <34>;
    (s.24 var=22) deassign (s.23)  <35>;
    (__rd___sp.26 var=19) rd_res_reg (__R_SP.11 __sp.17)  <37>;
    (__ct_0S0.27 var=23) const ()  <38>;
    (__tmp.29 var=25) __Pvoid__pl___Pvoid___sint (__rd___sp.26 __ct_0S0.27)  <40>;
    (__R_SP.30 var=12 __sp.31 var=18) wr_res_reg (__tmp.29 __sp.17)  <41>;
    (__ct_1.35 var=28) const ()  <46>;
    (r.37 var=26) __Pvoid__pl___Pvoid___sint (s.24 __ct_1.35)  <48>;
    (__fch___extDMb.38 var=31) load (__M_DMb.2 s.24 __extDMb.16)  <49>;
    (__ct_0.40 var=33) const ()  <51>;
    (__tmp.132 var=35) bool__eq___sint___sint (__fch___extDMb.38 __ct_0.40)  <169>;
    (__trgt.137 var=71) const ()  <182>;
    () void_br_bool_t13s_s2 (__tmp.132 __trgt.137)  <183>;
    (__either.138 var=69) undefined ()  <184>;
    if {
        {
            () if_expr (__either.138)  <65>;
            () chess_frequent_else ()  <66>;
            () chess_rear_then ()  <185>;
        } #5
        {
            (__trgt.139 var=72) const ()  <186>;
            () void_j_t21s_s2 (__trgt.139)  <187>;
        } #11 off=4
        {
            #87 off=1
            (__trgt.135 var=70) const ()  <179>;
            do {
                {
                    (r.61 var=26) entry (r.87 r.37)  <74>;
                } #8
                {
                    (__fch___extDMb.68 var=39) load (__M_DMb.2 r.61 __extDMb.16)  <81>;
                    (__tmp.72 var=43) bool__ne___sint___sint (__fch___extDMb.68 __ct_0.40)  <85>;
                    (__shv_r.126 var=59) __Pvoid__pl___Pvoid___sint (r.61 __ct_1.35)  <149>;
                    () void_br_bool_t13s_s2 (__tmp.72 __trgt.135)  <180>;
                    (__either.136 var=69) undefined ()  <181>;
                } #9 off=2
                {
                    () while_expr (__either.136)  <86>;
                    (r.87 var=26 r.88 var=26) exit (__shv_r.126)  <94>;
                } #10
            } #7 rng=[1,2147483647]
        } #6
        {
            (r.95 var=26) merge (r.37 r.88)  <98>;
        } #12
    } #4
    #15 off=5 nxt=-2
    (__tmp.99 var=46) __Pvoid__pl___Pvoid___sint (r.95 __ct_m1.124)  <102>;
    (__tmp.100 var=47) __sint__mi___Pvoid___Pvoid (__tmp.99 s.24)  <103>;
    (__rd___sp.102 var=19) rd_res_reg (__R_SP.11 __sp.31)  <105>;
    (__ct_0s0.103 var=49) const ()  <106>;
    (__tmp.105 var=51) __Pvoid__pl___Pvoid___sint (__rd___sp.102 __ct_0s0.103)  <108>;
    (__R_SP.106 var=12 __sp.107 var=18) wr_res_reg (__tmp.105 __sp.31)  <109>;
    () void___rts_jr_w32 (__la.20)  <110>;
    (__rt.108 var=21 stl=X off=10) assign (__tmp.100)  <111>;
    () out (__rt.108)  <112>;
    () sink (__sp.107)  <118>;
    (__ct_m1.124 var=58) const ()  <146>;
} #0
0 : 'src/string.c';
----------
0 : (0,335:0,0);
3 : (0,338:4,4);
4 : (0,338:4,4);
6 : (0,338:4,5);
7 : (0,338:4,5);
9 : (0,338:16,5);
11 : (0,338:4,10);
15 : (0,339:4,13);
----------
37 : (0,335:7,0);
38 : (0,335:7,0);
40 : (0,335:7,0);
41 : (0,335:7,0);
46 : (0,338:4,0);
48 : (0,338:4,3);
49 : (0,338:4,4);
51 : (0,338:4,0);
65 : (0,338:4,4);
74 : (0,338:4,5);
81 : (0,338:11,8);
85 : (0,338:4,8);
86 : (0,338:4,8);
94 : (0,338:4,8);
98 : (0,338:4,12);
102 : (0,339:14,13);
103 : (0,339:19,13);
105 : (0,339:4,0);
106 : (0,339:4,0);
108 : (0,339:4,0);
109 : (0,339:4,13);
110 : (0,339:4,13);
111 : (0,339:19,0);
146 : (0,339:14,0);
149 : (0,338:13,0);
169 : (0,338:4,4);
180 : (0,338:4,8);
183 : (0,338:4,4);

