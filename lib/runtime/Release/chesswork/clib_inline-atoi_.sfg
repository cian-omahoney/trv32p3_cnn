
// File generated by noodle version U-2022.12#33f3808fcb#221128, Fri Mar 22 18:45:57 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -DNDEBUG -D__tct_patch__=0 -itrv32p3_cnn_chess.h +NOrlt +wRelease/chesswork src/clib_inline.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!! extern inline int atoi(const char *)
Fatoi : user_defined, called {
    fnm : "atoi" 'int atoi(const char *)';
    arg : ( w32:i w32:r w32:i );
    loc : ( X[1] X[10] X[11] );
    frm : ( );
}
****
!!  long strtol(const char * restrict, char ** restrict, int)
Fstrtol : user_defined, called {
    fnm : "strtol" 'long strtol(const char * restrict, char ** restrict, int)';
    arg : ( w32:i w32:r w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] );
}
***/

[
    0 : atoi typ=u08 bnd=e stl=PMb
   12 : __R_SP typ=w32 bnd=d stl=SP
   13 : __vola typ=u08 bnd=b stl=PMb
   16 : __extPMb typ=u08 bnd=b stl=PMb
   17 : __extDMb typ=w08 bnd=b stl=DMb
   18 : __sp typ=w32 bnd=b stl=SP
   19 : __extPMb_void typ=u08 bnd=b stl=PMb
   20 : __extDMb_void typ=w08 bnd=b stl=DMb
   21 : __rd___sp typ=w32 bnd=m
   22 : __la typ=w32 bnd=p tref=w32__
   23 : __rt typ=w32 bnd=p tref=__sint__
   24 : nptr typ=w32 bnd=p tref=__P__cchar__
   25 : __ct_0S0 typ=w32 val=0S0 bnd=m
   27 : __tmp typ=w32 bnd=m
   28 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   30 : __ct typ=w32 bnd=m
   31 : __ct_10 typ=w32 val=10f bnd=m
   32 : __ct typ=w32 bnd=m
   35 : strtol typ=t21s_s2 val=0r bnd=m
   37 : __tmp typ=w32 bnd=m
   38 : __ct_0s0 typ=w32 val=0s0 bnd=m
   40 : __tmp typ=w32 bnd=m
]
Fatoi {
    #5 off=0
    (__R_SP.11 var=12) st_def ()  <22>;
    (__vola.12 var=13) source ()  <23>;
    (__extPMb.15 var=16) source ()  <26>;
    (__extDMb.16 var=17) source ()  <27>;
    (__sp.17 var=18) source ()  <28>;
    (__extPMb_void.18 var=19) source ()  <29>;
    (__extDMb_void.19 var=20) source ()  <30>;
    (__la.21 var=22 stl=X off=1) inp ()  <32>;
    (__la.22 var=22) deassign (__la.21)  <33>;
    (nptr.25 var=24 stl=X off=11) inp ()  <36>;
    (nptr.26 var=24) deassign (nptr.25)  <37>;
    (__rd___sp.28 var=21) rd_res_reg (__R_SP.11 __sp.17)  <39>;
    (__ct_0S0.29 var=25) const ()  <40>;
    (__tmp.31 var=27) __Pvoid__pl___Pvoid___sint (__rd___sp.28 __ct_0S0.29)  <42>;
    (__R_SP.32 var=12 __sp.33 var=18) wr_res_reg (__tmp.31 __sp.17)  <43>;
    (__ct_0.35 var=28) const ()  <46>;
    (__ct_10.39 var=31) const ()  <50>;
    (strtol.44 var=35) const ()  <55>;
    (__rd___sp.55 var=21) rd_res_reg (__R_SP.11 __sp.33)  <61>;
    (__ct_0s0.56 var=38) const ()  <62>;
    (__tmp.58 var=40) __Pvoid__pl___Pvoid___sint (__rd___sp.55 __ct_0s0.56)  <64>;
    (__R_SP.59 var=12 __sp.60 var=18) wr_res_reg (__tmp.58 __sp.33)  <65>;
    () void_j_t21s_s2 (strtol.44)  <133>;
    call {
        (nptr.34 var=24 stl=X off=11) assign (nptr.26)  <45>;
        (__ct.38 var=30 stl=X off=12) assign (__ct_0.35)  <49>;
        (__ct.41 var=32 stl=X off=13) assign (__ct_10.39)  <52>;
        (__la.46 var=22 stl=X off=1) assign (__la.22)  <57>;
        (__tmp.47 var=37 stl=X off=10 __extDMb.50 var=17 __extDMb_void.51 var=20 __extPMb.52 var=16 __extPMb_void.53 var=19 __vola.54 var=13) Fstrtol (__la.46 nptr.34 __ct.38 __ct.41 __extDMb.16 __extDMb_void.19 __extPMb.15 __extPMb_void.18 __vola.12)  <58>;
        (__tmp.48 var=37) deassign (__tmp.47)  <59>;
    } #4 off=1
    #6 off=2 nxt=-2
    (__rt.61 var=23 stl=X off=10) assign (__tmp.48)  <67>;
    () out (__rt.61)  <68>;
    () sink (__vola.54)  <69>;
    () sink (__extPMb.52)  <72>;
    () sink (__extDMb.50)  <73>;
    () sink (__sp.60)  <74>;
    () sink (__extPMb_void.53)  <75>;
    () sink (__extDMb_void.51)  <76>;
} #0
0 : 'include/stdlib.h';
----------
0 : (0,37:16,0);
4 : (0,39:16,1);
5 : (0,39:4,1);
6 : (0,39:4,1);
----------
39 : (0,37:16,0);
40 : (0,37:16,0);
42 : (0,37:16,0);
43 : (0,37:16,0);
45 : (0,39:23,0);
46 : (0,39:29,0);
49 : (0,39:29,0);
50 : (0,39:41,0);
52 : (0,39:41,0);
57 : (0,39:16,0);
58 : (0,39:16,1);
61 : (0,39:4,0);
62 : (0,39:4,0);
64 : (0,39:4,0);
65 : (0,39:4,1);
67 : (0,39:11,0);
133 : (0,39:16,1);

