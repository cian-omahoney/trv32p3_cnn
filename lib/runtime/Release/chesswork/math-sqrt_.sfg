
// File generated by noodle version U-2022.12#33f3808fcb#221128, Thu Jan 25 16:07:27 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -DNDEBUG -D__tct_patch__=0 -itrv32p3_cnn_chess.h +NOrlt +wRelease/chesswork src/math.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!! extern double sqrt(double)
Fsqrt : user_defined, called {
    fnm : "sqrt" 'double sqrt(double)';
    arg : ( w32:i w32:r w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] );
    frm : ( );
}
****
!!  bool f64_le(float64_t, float64_t)
Ff64_le : user_defined, called {
    fnm : "f64_le" 'bool f64_le(float64_t, float64_t)';
    arg : ( w32:i w32:r w32:i w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] X[14] );
}
!!  bool f64_lt(float64_t, float64_t)
Ff64_lt : user_defined, called {
    fnm : "f64_lt" 'bool f64_lt(float64_t, float64_t)';
    arg : ( w32:i w32:r w32:i w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] X[14] );
}
!!  float64_t f64_mul(float64_t, float64_t)
Ff64_mul : user_defined, called {
    fnm : "f64_mul" 'float64_t f64_mul(float64_t, float64_t)';
    arg : ( w32:i w32:r w32:r w32:i w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] X[14] X[15] );
}
!!  float64_t f64_add(float64_t, float64_t)
Ff64_add : user_defined, called {
    fnm : "f64_add" 'float64_t f64_add(float64_t, float64_t)';
    arg : ( w32:i w32:r w32:r w32:i w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] X[14] X[15] );
}
!!  float64_t f64_sub(float64_t, float64_t)
Ff64_sub : user_defined, called {
    fnm : "f64_sub" 'float64_t f64_sub(float64_t, float64_t)';
    arg : ( w32:i w32:r w32:r w32:i w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] X[14] X[15] );
}
!!  float64_t f64_div(float64_t, float64_t)
Ff64_div : user_defined, called {
    fnm : "f64_div" 'float64_t f64_div(float64_t, float64_t)';
    arg : ( w32:i w32:r w32:r w32:i w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] X[14] X[15] );
}
***/

[
    0 : sqrt typ=u08 bnd=e stl=PMb
   12 : __R_SP typ=w32 bnd=d stl=SP
   18 : __sp typ=w32 bnd=b stl=SP
   19 : __rd___sp typ=w32 bnd=m
   20 : __la typ=w32 bnd=p tref=w32__
   22 : __rt_low typ=w32 bnd=m tref=__uint__
   23 : __rt_high typ=w32 bnd=m tref=__uint__
   25 : x_low typ=w32 bnd=m tref=__uint__
   26 : x_high typ=w32 bnd=m tref=__uint__
   27 : __ct_0S0 typ=w32 val=0S0 bnd=m
   29 : __tmp typ=w32 bnd=m
   30 : ix0 typ=w32 bnd=m tref=int32_t__
   31 : ix1 typ=w32 bnd=m tref=u_int32_t__
   32 : m typ=w32 bnd=m tref=int32_t__
   33 : i typ=w32 bnd=m tref=int32_t__
   35 : q typ=w32 bnd=m tref=int32_t__
   36 : q1 typ=w32 bnd=m tref=u_int32_t__
   37 : s0 typ=w32 bnd=m tref=int32_t__
   38 : s1 typ=w32 bnd=m tref=u_int32_t__
   39 : r typ=w32 bnd=m tref=u_int32_t__
   41 : t1 typ=w32 bnd=m tref=u_int32_t__
   49 : __ct_32 typ=w32 val=32f bnd=m
   56 : __ct_2146435072 typ=t20s_rp12 val=524032f bnd=m
   58 : __tmp typ=w32 bnd=m
   61 : __tmp typ=bool bnd=m
   64 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   66 : __tmp typ=bool bnd=m
   67 : __ct_2147483647 typ=w32 val=2147483647f bnd=m
   69 : __tmp typ=w32 bnd=m
   71 : __tmp typ=w32 bnd=m
   74 : __tmp typ=bool bnd=m
   75 : __ct_0s0 typ=w32 val=0s0 bnd=m
   77 : __tmp typ=w32 bnd=m
   80 : __tmp typ=bool bnd=m
   87 : __ct_20 typ=w32 val=20f bnd=m
   92 : __tmp typ=bool bnd=m
   95 : __tmp typ=bool bnd=m
   96 : __ct_21 typ=w32 val=21f bnd=m
  100 : __ct_11 typ=w32 val=11f bnd=m
  102 : __tmp typ=w32 bnd=m
  103 : __tmp typ=w32 bnd=m
  110 : __tmp typ=bool bnd=m
  113 : __ct_1048576 typ=t20s_rp12 val=256f bnd=m
  115 : __tmp typ=w32 bnd=m
  118 : __tmp typ=bool bnd=m
  119 : __ct_1 typ=w32 val=1f bnd=m
  127 : __tmp typ=w32 bnd=m
  130 : __tmp typ=bool bnd=m
  133 : __tmp typ=w32 bnd=m
  138 : __tmp typ=w32 bnd=m
  139 : __tmp typ=w32 bnd=m
  140 : __tmp typ=w32 bnd=m
  146 : __ct_1048575 typ=w32 val=1048575f bnd=m
  148 : __tmp typ=w32 bnd=m
  154 : __tmp typ=w32 bnd=m
  157 : __tmp typ=bool bnd=m
  160 : __ct_2147483648 typ=t20s_rp12 val=-524288f bnd=m
  162 : __tmp typ=w32 bnd=m
  163 : __ct_31 typ=w32 val=31f bnd=m
  165 : __tmp typ=w32 bnd=m
  177 : __tmp typ=w32 bnd=m
  180 : __tmp typ=w32 bnd=m
  193 : __ct_2097152 typ=t20s_rp12 val=512f bnd=m
  199 : __tmp typ=w32 bnd=m
  201 : __tmp typ=bool bnd=m
  203 : __tmp typ=w32 bnd=m
  207 : __tmp typ=w32 bnd=m
  213 : __tmp typ=w32 bnd=m
  216 : __tmp typ=w32 bnd=m
  226 : __tmp typ=bool bnd=m
  233 : __tmp typ=bool bnd=m
  236 : __tmp typ=bool bnd=m
  237 : __tmp typ=bool bnd=m
  240 : __tmp typ=bool bnd=m
  241 : __tmp typ=bool bnd=m
  245 : __tmp typ=w32 bnd=m
  248 : __tmp typ=bool bnd=m
  251 : __tmp typ=w32 bnd=m
  254 : __tmp typ=bool bnd=m
  257 : __tmp typ=bool bnd=m
  262 : __tmp typ=bool bnd=m
  272 : __tmp typ=w32 bnd=m
  275 : __tmp typ=w32 bnd=m
  285 : __tmp typ=bool bnd=m
  287 : __tmp typ=w32 bnd=m
  290 : __tmp typ=bool bnd=m
  295 : __tmp typ=bool bnd=m
  298 : __ct_4294967295 typ=w32 val=-1f bnd=m
  300 : __tmp typ=bool bnd=m
  308 : __tmp typ=bool bnd=m
  309 : __ct_4294967294 typ=w32 val=-2f bnd=m
  311 : __tmp typ=bool bnd=m
  315 : __ct_2 typ=w32 val=2f bnd=m
  320 : __tmp typ=w32 bnd=m
  324 : __tmp typ=w32 bnd=m
  325 : __ct_1071644672 typ=t20s_rp12 val=261632f bnd=m
  333 : __tmp typ=w32 bnd=m
  336 : __tmp typ=bool bnd=m
  342 : __tmp typ=w32 bnd=m
  357 : ix0 typ=w32 bnd=m
  360 : ix0 typ=w32 bnd=m
  362 : __linex typ=w32 bnd=m
  363 : __linex typ=w32 bnd=m
  365 : __linex typ=w32 bnd=m
  367 : __linex typ=w32 bnd=m
  368 : __linex typ=w32 bnd=m
  370 : __linex typ=w32 bnd=m
  372 : __linex typ=w32 bnd=m
  373 : __linex typ=w32 bnd=m
  375 : __linex typ=w32 bnd=m
  377 : __linex typ=w32 bnd=m
  378 : __linex typ=w32 bnd=m
  380 : __linex typ=w32 bnd=m
  385 : __ct_m21 typ=w32 val=-21f bnd=m
  387 : __ct_m1023 typ=w32 val=-1023f bnd=m
  389 : __shv_q1 typ=w32 bnd=m
  479 : a_low typ=w32 bnd=m tref=__uint__
  480 : a_high typ=w32 bnd=m tref=__uint__
  481 : b_low typ=w32 bnd=m tref=__uint__
  482 : b_high typ=w32 bnd=m tref=__uint__
  483 : f64_le typ=t21s_s2 val=0r bnd=m
  484 : __link typ=w32 bnd=m
  485 : __tmp typ=w32 bnd=m
  491 : a_low typ=w32 bnd=m tref=__uint__
  492 : a_high typ=w32 bnd=m tref=__uint__
  493 : b_low typ=w32 bnd=m tref=__uint__
  494 : b_high typ=w32 bnd=m tref=__uint__
  495 : f64_lt typ=t21s_s2 val=0r bnd=m
  496 : __link typ=w32 bnd=m
  497 : __tmp typ=w32 bnd=m
  502 : __ct_1072693248 typ=t20s_rp12 val=261888f bnd=m
  516 : a_low typ=w32 bnd=m tref=__uint__
  517 : a_high typ=w32 bnd=m tref=__uint__
  518 : b_low typ=w32 bnd=m tref=__uint__
  519 : b_high typ=w32 bnd=m tref=__uint__
  520 : f64_mul typ=t21s_s2 val=0r bnd=m
  521 : __link typ=w32 bnd=m
  523 : __tmp typ=w32 bnd=m
  524 : __tmp typ=w32 bnd=m
  529 : a_low typ=w32 bnd=m tref=__uint__
  530 : a_high typ=w32 bnd=m tref=__uint__
  531 : b_low typ=w32 bnd=m tref=__uint__
  532 : b_high typ=w32 bnd=m tref=__uint__
  533 : f64_add typ=t21s_s2 val=0r bnd=m
  536 : __tmp typ=w32 bnd=m
  537 : __tmp typ=w32 bnd=m
  542 : a_low typ=w32 bnd=m tref=__uint__
  543 : a_high typ=w32 bnd=m tref=__uint__
  544 : b_low typ=w32 bnd=m tref=__uint__
  545 : b_high typ=w32 bnd=m tref=__uint__
  546 : f64_sub typ=t21s_s2 val=0r bnd=m
  547 : __link typ=w32 bnd=m
  549 : __tmp typ=w32 bnd=m
  550 : __tmp typ=w32 bnd=m
  555 : a_low typ=w32 bnd=m tref=__uint__
  556 : a_high typ=w32 bnd=m tref=__uint__
  557 : b_low typ=w32 bnd=m tref=__uint__
  558 : b_high typ=w32 bnd=m tref=__uint__
  559 : f64_div typ=t21s_s2 val=0r bnd=m
  562 : __tmp typ=w32 bnd=m
  563 : __tmp typ=w32 bnd=m
  577 : ix0 typ=w32 bnd=m
  578 : ix0 typ=w32 bnd=m
  579 : ix0 typ=w32 bnd=m
  586 : __true typ=bool val=1f bnd=m
  587 : __false typ=bool val=0f bnd=m
  588 : __either typ=bool bnd=m
  589 : __trgt typ=t13s_s2 val=0j bnd=m
  590 : __trgt typ=t13s_s2 val=0j bnd=m
  591 : __trgt typ=t13s_s2 val=0j bnd=m
  592 : __trgt typ=t21s_s2 val=0j bnd=m
  593 : __trgt typ=t13s_s2 val=0j bnd=m
  594 : __trgt typ=t13s_s2 val=0j bnd=m
  595 : __trgt typ=t21s_s2 val=0j bnd=m
  596 : __trgt typ=t13s_s2 val=0j bnd=m
  597 : __trgt typ=t13s_s2 val=0j bnd=m
  598 : __trgt typ=t21s_s2 val=0j bnd=m
  599 : __trgt typ=t13s_s2 val=0j bnd=m
  600 : __trgt typ=t21s_s2 val=0j bnd=m
  601 : __trgt typ=t13s_s2 val=0j bnd=m
  602 : __trgt typ=t21s_s2 val=0j bnd=m
  603 : __trgt typ=t13s_s2 val=0j bnd=m
  604 : __trgt typ=t21s_s2 val=0j bnd=m
  605 : __trgt typ=t13s_s2 val=0j bnd=m
  606 : __trgt typ=t13s_s2 val=0j bnd=m
  607 : __trgt typ=t13s_s2 val=0j bnd=m
  608 : __trgt typ=t13s_s2 val=0j bnd=m
  609 : __trgt typ=t13s_s2 val=0j bnd=m
  610 : __trgt typ=t21s_s2 val=0j bnd=m
  611 : __trgt typ=t13s_s2 val=0j bnd=m
  612 : __trgt typ=t21s_s2 val=0j bnd=m
  613 : __trgt typ=t13s_s2 val=0j bnd=m
  614 : __trgt typ=t21s_s2 val=0j bnd=m
  615 : __trgt typ=t13s_s2 val=0j bnd=m
  616 : __trgt typ=t13s_s2 val=0j bnd=m
  617 : __trgt typ=t21s_s2 val=0j bnd=m
  618 : __trgt typ=t13s_s2 val=0j bnd=m
  619 : __trgt typ=t21s_s2 val=0j bnd=m
  620 : __trgt typ=t13s_s2 val=0j bnd=m
  621 : __trgt typ=t21s_s2 val=0j bnd=m
  622 : __trgt typ=t13s_s2 val=0j bnd=m
  623 : __trgt typ=t21s_s2 val=0j bnd=m
  624 : __trgt typ=t13s_s2 val=0j bnd=m
  625 : __trgt typ=t21s_s2 val=0j bnd=m
  626 : __trgt typ=t13s_s2 val=0j bnd=m
  627 : __trgt typ=t21s_s2 val=0j bnd=m
  628 : __trgt typ=t13s_s2 val=0j bnd=m
]
Fsqrt {
    #482 off=0
    (__R_SP.11 var=12) st_def ()  <22>;
    (__sp.17 var=18) source ()  <28>;
    (__la.19 var=20 stl=X off=1) inp ()  <30>;
    (__la.20 var=20) deassign (__la.19)  <31>;
    (x_low.28 var=25 stl=X off=12) inp ()  <39>;
    (x_low.29 var=25) deassign (x_low.28)  <40>;
    (x_high.32 var=26 stl=X off=13) inp ()  <43>;
    (x_high.33 var=26) deassign (x_high.32)  <44>;
    (__rd___sp.36 var=19) rd_res_reg (__R_SP.11 __sp.17)  <47>;
    (__ct_0S0.37 var=27) const ()  <48>;
    (__tmp.39 var=29) __Pvoid__pl___Pvoid___sint (__rd___sp.36 __ct_0S0.37)  <50>;
    (__R_SP.40 var=12 __sp.41 var=18) wr_res_reg (__tmp.39 __sp.17)  <51>;
    (__ct_2146435072.80 var=56) const ()  <91>;
    (__tmp.82 var=58) __sint__ad___sint___sint (x_high.33 __ct_2146435072.80)  <93>;
    (__tmp.85 var=61) bool__eq___sint___sint (__tmp.82 __ct_2146435072.80)  <96>;
    (__rd___sp.180 var=19) rd_res_reg (__R_SP.11 __sp.41)  <194>;
    (__ct_0s0.181 var=75) const ()  <195>;
    (__tmp.183 var=77) __Pvoid__pl___Pvoid___sint (__rd___sp.180 __ct_0s0.181)  <197>;
    (__trgt.1972 var=628) const ()  <2360>;
    () void_br_bool_t13s_s2 (__tmp.85 __trgt.1972)  <2361>;
    (__either.1973 var=588) undefined ()  <2362>;
    if {
        {
            () if_expr (__either.1973)  <124>;
            () chess_rear_then ()  <2363>;
        } #5
        {
            #495 off=71
            (f64_mul.1777 var=520) const ()  <1973>;
            (__link.1778 var=521) w32_jal_t21s_s2 (f64_mul.1777)  <1974>;
            call {
                (a_low.1779 var=516 stl=X off=12) assign (x_low.29)  <1975>;
                (a_high.1780 var=517 stl=X off=13) assign (x_high.33)  <1976>;
                (b_low.1781 var=518 stl=X off=14) assign (x_low.29)  <1977>;
                (b_high.1782 var=519 stl=X off=15) assign (x_high.33)  <1978>;
                (__link.1783 var=521 stl=X off=1) assign (__link.1778)  <1979>;
                (__tmp.1784 var=523 stl=X off=10 __tmp.1785 var=524 stl=X off=11) Ff64_mul (__link.1783 a_low.1779 a_high.1780 b_low.1781 b_high.1782)  <1980>;
                (__tmp.1787 var=523) deassign (__tmp.1784)  <1982>;
                (__tmp.1789 var=524) deassign (__tmp.1785)  <1984>;
            } #496 off=72
            #631 off=73
            (f64_add.1798 var=533) const ()  <1996>;
            (__R_SP.1900 var=12 __sp.1901 var=18) wr_res_reg (__tmp.183 __sp.41)  <2241>;
            () void_j_t21s_s2 (f64_add.1798)  <2248>;
            call {
                (a_low.1800 var=529 stl=X off=12) assign (__tmp.1787)  <1998>;
                (a_high.1801 var=530 stl=X off=13) assign (__tmp.1789)  <1999>;
                (b_low.1802 var=531 stl=X off=14) assign (x_low.29)  <2000>;
                (b_high.1803 var=532 stl=X off=15) assign (x_high.33)  <2001>;
                (__la.1804 var=20 stl=X off=1) assign (__la.20)  <2002>;
                (__tmp.1805 var=536 stl=X off=10 __tmp.1806 var=537 stl=X off=11) Ff64_add (__la.1804 a_low.1800 a_high.1801 b_low.1802 b_high.1803)  <2003>;
                (__tmp.1808 var=536) deassign (__tmp.1805)  <2005>;
                (__tmp.1810 var=537) deassign (__tmp.1806)  <2007>;
            } #502 off=74
            #632 off=75 nxt=-2
            (__rt_low.1902 var=22 stl=X off=10) assign (__tmp.1808)  <2243>;
            () out (__rt_low.1902)  <2244>;
            (__rt_high.1903 var=23 stl=X off=11) assign (__tmp.1810)  <2245>;
            () out (__rt_high.1903)  <2246>;
            () sink (__sp.1901)  <2247>;
            (__rt_low.1904 var=22) never ()  <2249>;
            (__rt_high.1905 var=23) never ()  <2250>;
        } #6
        {
            #346 off=1
            (__ct_0.115 var=64) const ()  <127>;
            (__tmp.1883 var=66) bool__lt___sint___sint (__ct_0.115 x_high.33)  <2193>;
            (__trgt.1910 var=591) const ()  <2259>;
            () void_br_bool_t13s_s2 (__tmp.1883 __trgt.1910)  <2260>;
            (__either.1911 var=588) undefined ()  <2261>;
            if {
                {
                    () if_expr (__either.1911)  <157>;
                } #10
                {
                } #29 off=12
                {
                    #12 off=2
                    (__ct_2147483647.145 var=67) const ()  <158>;
                    (__tmp.147 var=69) __sint__ad___sint___sint (x_high.33 __ct_2147483647.145)  <160>;
                    (__tmp.149 var=71) __uint__or___uint___uint (__tmp.147 x_low.29)  <162>;
                    (__tmp.152 var=74) bool__eq___uint___uint (__tmp.149 __ct_0.115)  <165>;
                    (__trgt.1908 var=590) const ()  <2255>;
                    () void_br_bool_t13s_s2 (__tmp.152 __trgt.1908)  <2256>;
                    (__either.1909 var=588) undefined ()  <2257>;
                    if {
                        {
                            () if_expr (__either.1909)  <193>;
                            () chess_rear_then ()  <2258>;
                        } #14
                        {
                            (__R_SP.184 var=12 __sp.185 var=18) wr_res_reg (__tmp.183 __sp.41)  <198>;
                            () void___rts_jr_w32 (__la.20)  <199>;
                            (__rt_low.187 var=22 stl=X off=10) assign (x_low.29)  <201>;
                            () out (__rt_low.187)  <202>;
                            (__rt_high.189 var=23 stl=X off=11) assign (x_high.33)  <204>;
                            () out (__rt_high.189)  <205>;
                            () sink (__sp.185)  <213>;
                        } #17 off=10 nxt=-2
                        {
                            #19 off=3
                            (__tmp.221 var=80) bool__lt___sint___sint (x_high.33 __ct_0.115)  <243>;
                            (__trgt.1906 var=589) const ()  <2251>;
                            () void_br_bool_t13s_s2 (__tmp.221 __trgt.1906)  <2252>;
                            (__either.1907 var=588) undefined ()  <2253>;
                            if {
                                {
                                    () if_expr (__either.1907)  <271>;
                                    () chess_rear_then ()  <2254>;
                                } #21
                                {
                                    #509 off=5
                                    (f64_sub.1819 var=546) const ()  <2019>;
                                    (__link.1820 var=547) w32_jal_t21s_s2 (f64_sub.1819)  <2020>;
                                    call {
                                        (a_low.1821 var=542 stl=X off=12) assign (x_low.29)  <2021>;
                                        (a_high.1822 var=543 stl=X off=13) assign (x_high.33)  <2022>;
                                        (b_low.1823 var=544 stl=X off=14) assign (x_low.29)  <2023>;
                                        (b_high.1824 var=545 stl=X off=15) assign (x_high.33)  <2024>;
                                        (__link.1825 var=547 stl=X off=1) assign (__link.1820)  <2025>;
                                        (__tmp.1826 var=549 stl=X off=10 __tmp.1827 var=550 stl=X off=11) Ff64_sub (__link.1825 a_low.1821 a_high.1822 b_low.1823 b_high.1824)  <2026>;
                                        (__tmp.1829 var=549) deassign (__tmp.1826)  <2028>;
                                        (__tmp.1831 var=550) deassign (__tmp.1827)  <2030>;
                                    } #510 off=6
                                    #24 off=7
                                    (__R_SP.256 var=12 __sp.257 var=18) wr_res_reg (__tmp.183 __sp.41)  <279>;
                                    (f64_div.1840 var=559) const ()  <2042>;
                                    () void_j_t21s_s2 (f64_div.1840)  <2240>;
                                    call {
                                        (a_low.1842 var=555 stl=X off=12) assign (__tmp.1829)  <2044>;
                                        (a_high.1843 var=556 stl=X off=13) assign (__tmp.1831)  <2045>;
                                        (b_low.1844 var=557 stl=X off=14) assign (__tmp.1829)  <2046>;
                                        (b_high.1845 var=558 stl=X off=15) assign (__tmp.1831)  <2047>;
                                        (__la.1846 var=20 stl=X off=1) assign (__la.20)  <2048>;
                                        (__tmp.1847 var=562 stl=X off=10 __tmp.1848 var=563 stl=X off=11) Ff64_div (__la.1846 a_low.1842 a_high.1843 b_low.1844 b_high.1845)  <2049>;
                                        (__tmp.1850 var=562) deassign (__tmp.1847)  <2051>;
                                        (__tmp.1852 var=563) deassign (__tmp.1848)  <2053>;
                                    } #516 off=8
                                    #25 off=9 nxt=-2
                                    (__rt_low.259 var=22 stl=X off=10) assign (__tmp.1850)  <282>;
                                    () out (__rt_low.259)  <283>;
                                    (__rt_high.261 var=23 stl=X off=11) assign (__tmp.1852)  <285>;
                                    () out (__rt_high.261)  <286>;
                                    () sink (__sp.257)  <294>;
                                } #22
                                {
                                } #26 off=4
                                {
                                } #27
                            } #20
                        } #18
                        {
                        } #28
                    } #13
                    #651 off=11
                    (__trgt.1912 var=592) const ()  <2262>;
                    () void_j_t21s_s2 (__trgt.1912)  <2263>;
                } #11
                {
                } #30
            } #9
            #31 off=13
            (__ct_20.372 var=87) const ()  <403>;
            (m.374 var=32) __sint__rs___sint___sint (x_high.33 __ct_20.372)  <405>;
            (__ct_1048576.536 var=113) const ()  <544>;
            (__ct_1.596 var=119) const ()  <606>;
            (__ct_4294967295.1349 var=298) const ()  <1295>;
            (__tmp.1884 var=92) bool__ne___sint___sint (m.374 __ct_0.115)  <2194>;
            (__trgt.1923 var=599) const ()  <2282>;
            () void_br_bool_t13s_s2 (__tmp.1884 __trgt.1923)  <2283>;
            (__either.1924 var=588) undefined ()  <2284>;
            if {
                {
                    () if_expr (__either.1924)  <436>;
                } #33
                {
                } #56 off=25
                {
                    #35 off=14
                    (__tmp.1882 var=95) bool__ne___sint___sint (x_high.33 __ct_0.115)  <2192>;
                    (__trgt.1915 var=594) const ()  <2267>;
                    () void_br_bool_t13s_s2 (__tmp.1882 __trgt.1915)  <2268>;
                    (__either.1916 var=588) undefined ()  <2269>;
                    if {
                        {
                            () if_expr (__either.1916)  <467>;
                            () chess_frequent_else ()  <468>;
                            () chess_rear_then ()  <2270>;
                        } #37
                        {
                            (__trgt.1917 var=595) const ()  <2271>;
                            () void_j_t21s_s2 (__trgt.1917)  <2272>;
                        } #43 off=18
                        {
                            #636 off=15
                            (__ct_21.462 var=96) const ()  <496>;
                            (__ct_11.466 var=100) const ()  <500>;
                            (__ct_m21.1616 var=385) const ()  <1624>;
                            (__trgt.1913 var=593) const ()  <2264>;
                            do {
                                {
                                    (ix0.442 var=578) entry (ix0.491 x_high.33)  <476>;
                                    (ix1.444 var=31) entry (ix1.495 x_low.29)  <478>;
                                    (m.446 var=32) entry (m.499 m.374)  <480>;
                                } #40
                                {
                                    (m.464 var=32) __sint__pl___sint___sint (m.446 __ct_m21.1616)  <498>;
                                    (__tmp.468 var=102) __uint__rs___uint___sint (ix1.444 __ct_11.466)  <502>;
                                    (__tmp.469 var=103) __uint__or___uint___uint (ix0.442 __tmp.468)  <503>;
                                    (ix1.473 var=31) __uint__ls___uint___sint (ix1.444 __ct_21.462)  <507>;
                                    (__tmp.476 var=110) bool__eq___sint___sint (__tmp.469 __ct_0.115)  <510>;
                                    () void_br_bool_t13s_s2 (__tmp.476 __trgt.1913)  <2265>;
                                    (__either.1914 var=588) undefined ()  <2266>;
                                } #41 off=16
                                {
                                    () while_expr (__either.1914)  <511>;
                                    (ix0.491 var=578 ix0.492 var=578) exit (__tmp.469)  <519>;
                                    (ix1.495 var=31 ix1.496 var=31) exit (ix1.473)  <521>;
                                    (m.499 var=32 m.500 var=32) exit (m.464)  <523>;
                                } #42
                            } #39 rng=[1,2147483647]
                        } #38
                        {
                            (ix0.531 var=579) merge (x_high.33 ix0.492)  <539>;
                            (ix1.532 var=31) merge (x_low.29 ix1.496)  <540>;
                            (m.533 var=32) merge (m.374 m.500)  <541>;
                        } #44
                    } #36
                    #45 off=19
                    (__tmp.538 var=115) __sint__ad___sint___sint (ix0.531 __ct_1048576.536)  <546>;
                    (__tmp.1881 var=118) bool__ne___sint___sint (__tmp.538 __ct_0.115)  <2191>;
                    (__trgt.1920 var=597) const ()  <2276>;
                    () void_br_bool_t13s_s2 (__tmp.1881 __trgt.1920)  <2277>;
                    (__either.1921 var=588) undefined ()  <2278>;
                    if {
                        {
                            () if_expr (__either.1921)  <577>;
                            () chess_frequent_else ()  <578>;
                            () chess_rear_then ()  <2279>;
                        } #47
                        {
                            (__trgt.1922 var=598) const ()  <2280>;
                            () void_j_t21s_s2 (__trgt.1922)  <2281>;
                        } #53 off=23
                        {
                            #650 off=20
                            (__trgt.1918 var=596) const ()  <2273>;
                            do {
                                {
                                    (ix0.576 var=30) entry (ix0.622 ix0.531)  <586>;
                                    (i.581 var=33) entry (i.632 __ct_0.115)  <591>;
                                } #50
                                {
                                    (ix0.598 var=30) __sint__ls___sint___sint (ix0.576 __ct_1.596)  <608>;
                                    (i.601 var=33) __sint__pl___sint___sint (i.581 __ct_1.596)  <611>;
                                    (__tmp.604 var=127) __sint__ad___sint___sint (ix0.598 __ct_1048576.536)  <614>;
                                    (__tmp.607 var=130) bool__eq___sint___sint (__tmp.604 __ct_0.115)  <617>;
                                    () void_br_bool_t13s_s2 (__tmp.607 __trgt.1918)  <2274>;
                                    (__either.1919 var=588) undefined ()  <2275>;
                                } #51 off=21
                                {
                                    () while_expr (__either.1919)  <618>;
                                    (ix0.622 var=30 ix0.623 var=30) exit (ix0.598)  <626>;
                                    (i.632 var=33 i.633 var=33) exit (i.601)  <631>;
                                } #52
                            } #49 rng=[1,2147483647]
                        } #48
                        {
                            (ix0.662 var=30) merge (ix0.531 ix0.623)  <646>;
                            (i.663 var=33) merge (__ct_0.115 i.633)  <647>;
                        } #54
                    } #46
                    #55 off=24
                    (__ct_32.73 var=49) const ()  <84>;
                    (__tmp.667 var=133) __sint__pl___sint___sint (i.663 __ct_4294967295.1349)  <651>;
                    (m.668 var=32) __sint__mi___sint___sint (m.533 __tmp.667)  <652>;
                    (__tmp.672 var=138) __sint__mi___sint___sint (__ct_32.73 i.663)  <656>;
                    (__tmp.673 var=139) __uint__rs___uint___sint (ix1.532 __tmp.672)  <657>;
                    (__tmp.674 var=140) __uint__or___uint___uint (ix0.662 __tmp.673)  <658>;
                    (ix1.676 var=31) __uint__ls___uint___sint (ix1.532 i.663)  <660>;
                    (__trgt.1925 var=600) const ()  <2285>;
                    () void_j_t21s_s2 (__trgt.1925)  <2286>;
                } #34
                {
                    (ix0.677 var=577) merge (x_high.33 __tmp.674)  <661>;
                    (ix1.678 var=31) merge (x_low.29 ix1.676)  <662>;
                    (m.679 var=32) merge (m.374 m.668)  <663>;
                } #57
            } #32
            #58 off=26
            (m.684 var=32) __sint__pl___sint___sint (m.679 __ct_m1023.1618)  <668>;
            (__ct_1048575.685 var=146) const ()  <669>;
            (__tmp.687 var=148) __sint__ad___sint___sint (ix0.677 __ct_1048575.685)  <671>;
            (ix0.690 var=30) __sint__or___sint___sint (__tmp.687 __ct_1048576.536)  <674>;
            (__tmp.693 var=154) __sint__ad___sint___sint (m.684 __ct_1.596)  <677>;
            (__ct_2147483648.726 var=160) const ()  <711>;
            (__ct_31.729 var=163) const ()  <714>;
            (__ct_m1023.1618 var=387) const ()  <1628>;
            (__tmp.1885 var=157) bool__eq___sint___sint (__tmp.693 __ct_0.115)  <2195>;
            (__trgt.1926 var=601) const ()  <2287>;
            () void_br_bool_t13s_s2 (__tmp.1885 __trgt.1926)  <2288>;
            (__either.1927 var=588) undefined ()  <2289>;
            if {
                {
                    () if_expr (__either.1927)  <708>;
                } #60
                {
                } #62 off=28
                {
                    (__tmp.728 var=162) __uint__ad___uint___uint (ix1.678 __ct_2147483648.726)  <713>;
                    (__tmp.731 var=165) __uint__rs___uint___sint (__tmp.728 __ct_31.729)  <716>;
                    (__linex.1598 var=362) __uint__ls___uint___sint (ix0.690 __ct_1.596)  <1606>;
                    (__linex.1599 var=363) __uint__pl___uint___uint (__linex.1598 __tmp.731)  <1607>;
                    (__linex.1600 var=365) __uint__ls___uint___sint (ix1.678 __ct_1.596)  <1608>;
                    (__trgt.1928 var=602) const ()  <2290>;
                    () void_j_t21s_s2 (__trgt.1928)  <2291>;
                } #61 off=27
                {
                    (ix0.736 var=30) merge (ix0.690 __linex.1599)  <721>;
                    (ix1.737 var=31) merge (ix1.678 __linex.1600)  <722>;
                } #63
            } #59
            #64 off=29
            (m.740 var=32) __sint__rs___sint___sint (m.684 __ct_1.596)  <725>;
            (__tmp.745 var=177) __uint__ad___uint___uint (ix1.737 __ct_2147483648.726)  <730>;
            (__tmp.748 var=180) __uint__rs___uint___sint (__tmp.745 __ct_31.729)  <733>;
            (__ct_2097152.761 var=193) const ()  <746>;
            (__linex.1601 var=367) __uint__ls___uint___sint (ix0.736 __ct_1.596)  <1609>;
            (__linex.1602 var=368) __uint__pl___uint___uint (__linex.1601 __tmp.748)  <1610>;
            (__linex.1603 var=370) __uint__ls___uint___sint (ix1.737 __ct_1.596)  <1611>;
            (__trgt.1929 var=603) const ()  <2292>;
            (__trgt.1931 var=604) const ()  <2295>;
            (__trgt.1932 var=605) const ()  <2297>;
            do {
                {
                    (ix0.800 var=357) entry (ix0.893 __linex.1602)  <787>;
                    (ix1.802 var=31) entry (ix1.897 __linex.1603)  <789>;
                    (q.807 var=35) entry (q.907 __ct_0.115)  <794>;
                    (s0.809 var=37) entry (s0.911 __ct_0.115)  <796>;
                    (r.811 var=39) entry (r.915 __ct_2097152.761)  <798>;
                } #69
                {
                    #351 off=30
                    (__tmp.821 var=199) __uint__pl___uint___uint (s0.809 r.811)  <808>;
                    (__tmp.1886 var=201) bool__lt___sint___sint (ix0.800 __tmp.821)  <2196>;
                    () void_br_bool_t13s_s2 (__tmp.1886 __trgt.1929)  <2293>;
                    (__either.1930 var=588) undefined ()  <2294>;
                    if {
                        {
                            () if_expr (__either.1930)  <838>;
                        } #73
                        {
                        } #75 off=32
                        {
                            (__tmp.852 var=203) __uint__pl___uint___uint (__tmp.821 r.811)  <840>;
                            (ix0.854 var=30) __sint__mi___sint___sint (ix0.800 __tmp.821)  <842>;
                            (__tmp.856 var=207) __uint__pl___uint___uint (q.807 r.811)  <844>;
                            () void_j_t21s_s2 (__trgt.1931)  <2296>;
                        } #74 off=31
                        {
                            (ix0.858 var=30) merge (ix0.800 ix0.854)  <846>;
                            (q.859 var=35) merge (q.807 __tmp.856)  <847>;
                            (s0.860 var=37) merge (s0.809 __tmp.852)  <848>;
                        } #76
                    } #72
                    #77 off=33
                    (__tmp.865 var=213) __uint__ad___uint___uint (ix1.802 __ct_2147483648.726)  <853>;
                    (__tmp.868 var=216) __uint__rs___uint___sint (__tmp.865 __ct_31.729)  <856>;
                    (r.875 var=39) __uint__rs___uint___sint (r.811 __ct_1.596)  <863>;
                    (__tmp.878 var=226) bool__ne___uint___uint (r.875 __ct_0.115)  <866>;
                    (__linex.1604 var=372) __uint__ls___uint___sint (ix0.858 __ct_1.596)  <1612>;
                    (__linex.1605 var=373) __uint__pl___uint___uint (__linex.1604 __tmp.868)  <1613>;
                    (__linex.1606 var=375) __uint__ls___uint___sint (ix1.802 __ct_1.596)  <1614>;
                    () void_br_bool_t13s_s2 (__tmp.878 __trgt.1932)  <2298>;
                    (__either.1933 var=588) undefined ()  <2299>;
                } #70
                {
                    () while_expr (__either.1933)  <867>;
                    (ix0.893 var=357 ix0.894 var=357) exit (__linex.1605)  <875>;
                    (ix1.897 var=31 ix1.898 var=31) exit (__linex.1606)  <877>;
                    (q.907 var=35 q.908 var=35) exit (q.859)  <882>;
                    (s0.911 var=37 s0.912 var=37) exit (s0.860)  <884>;
                    (r.915 var=39 r.916 var=39) exit (r.875)  <886>;
                } #78
            } #68 rng=[1,2147483647]
            #638 off=34
            (__trgt.1934 var=606) const ()  <2300>;
            (__trgt.1936 var=607) const ()  <2303>;
            (__trgt.1938 var=608) const ()  <2306>;
            (__trgt.1941 var=609) const ()  <2310>;
            (__trgt.1943 var=610) const ()  <2313>;
            (__trgt.1944 var=611) const ()  <2315>;
            (__trgt.1946 var=612) const ()  <2318>;
            (__trgt.1949 var=613) const ()  <2322>;
            (__trgt.1951 var=614) const ()  <2325>;
            (__trgt.1952 var=615) const ()  <2327>;
            do {
                {
                    (ix0.978 var=360) entry (ix0.1235 ix0.894)  <942>;
                    (ix1.980 var=31) entry (ix1.1239 ix1.898)  <944>;
                    (q1.986 var=36) entry (q1.1251 __ct_0.115)  <950>;
                    (s0.987 var=37) entry (s0.1253 s0.912)  <951>;
                    (s1.988 var=38) entry (s1.1255 __ct_0.115)  <952>;
                    (r.989 var=39) entry (r.1257 __ct_2147483648.726)  <953>;
                } #86
                {
                    #88 off=35
                    (t1.998 var=41) __uint__pl___uint___uint (s1.988 r.989)  <962>;
                    (__tmp.999 var=233) bool__lt___sint___sint (s0.987 ix0.978)  <963>;
                    () void_br_bool_t13s_s2 (__tmp.999 __trgt.1936)  <2304>;
                    (__either.1937 var=588) undefined ()  <2305>;
                    if {
                        {
                            () if_expr (__either.1937)  <991>;
                        } #90
                        {
                            (__false.1947 var=587) const ()  <2320>;
                        } #91
                        {
                            #93 off=36
                            (__tmp.1887 var=236) bool__ne___sint___sint (s0.987 ix0.978)  <2197>;
                            () void_br_bool_t13s_s2 (__tmp.1887 __trgt.1934)  <2301>;
                            (__either.1935 var=588) undefined ()  <2302>;
                            if {
                                {
                                    () if_expr (__either.1935)  <1022>;
                                } #95
                                {
                                    (__true.1948 var=586) const ()  <2321>;
                                } #97
                                {
                                    (__tmp.1892 var=237) bool__lt___uint___uint (ix1.980 t1.998)  <2202>;
                                    () void_br_bool_t13s_s2 (__tmp.1892 __trgt.1949)  <2323>;
                                    (__either.1950 var=588) undefined ()  <2324>;
                                } #354 off=37
                                {
                                    (__tmp.1893 var=240) merge (__true.1948 __either.1950)  <2203>;
                                } #98
                            } #94
                        } #92
                        {
                            (__tmp.1894 var=241) merge (__false.1947 __tmp.1893)  <2204>;
                        } #99
                    } #89
                    if {
                        {
                            () if_expr (__tmp.1894)  <1055>;
                        } #102
                        {
                        } #123 off=46
                        {
                            #104 off=38
                            (s1.1089 var=38) __uint__pl___uint___uint (t1.998 r.989)  <1056>;
                            (__tmp.1092 var=245) __uint__ad___uint___uint (t1.998 __ct_2147483648.726)  <1059>;
                            (__tmp.1888 var=248) bool__ne___uint___uint (__tmp.1092 __ct_2147483648.726)  <2198>;
                            () void_br_bool_t13s_s2 (__tmp.1888 __trgt.1938)  <2307>;
                            (__either.1939 var=588) undefined ()  <2308>;
                            if {
                                {
                                    () if_expr (__either.1939)  <1090>;
                                } #106
                                {
                                    (__true.1940 var=586) const ()  <2309>;
                                } #108
                                {
                                    (__tmp.1125 var=251) __uint__ad___uint___uint (s1.1089 __ct_2147483648.726)  <1093>;
                                    (__tmp.1889 var=254) bool__ne___uint___uint (__tmp.1125 __ct_0.115)  <2199>;
                                    () void_br_bool_t13s_s2 (__tmp.1889 __trgt.1941)  <2311>;
                                    (__either.1942 var=588) undefined ()  <2312>;
                                } #107 off=39
                                {
                                    (__tmp.1890 var=257) merge (__true.1940 __either.1942)  <2200>;
                                } #109
                            } #105
                            if {
                                {
                                    () if_expr (__tmp.1890)  <1127>;
                                } #112
                                {
                                } #114 off=41
                                {
                                    (s0.1161 var=37) __sint__pl___sint___sint (s0.987 __ct_1.596)  <1130>;
                                    () void_j_t21s_s2 (__trgt.1943)  <2314>;
                                } #113 off=40
                                {
                                    (s0.1162 var=37) merge (s0.987 s0.1161)  <1131>;
                                } #115
                            } #111
                            #116 off=42
                            (ix0.1163 var=30) __sint__mi___sint___sint (ix0.978 s0.987)  <1132>;
                            (__tmp.1891 var=262) bool__ge___uint___uint (ix1.980 t1.998)  <2201>;
                            () void_br_bool_t13s_s2 (__tmp.1891 __trgt.1944)  <2316>;
                            (__either.1945 var=588) undefined ()  <2317>;
                            if {
                                {
                                    () if_expr (__either.1945)  <1161>;
                                } #118
                                {
                                } #120 off=44
                                {
                                    (ix0.1194 var=30) __sint__pl___sint___sint (ix0.1163 __ct_4294967295.1349)  <1164>;
                                    () void_j_t21s_s2 (__trgt.1946)  <2319>;
                                } #119 off=43
                                {
                                    (ix0.1195 var=30) merge (ix0.1163 ix0.1194)  <1165>;
                                } #121
                            } #117
                            #122 off=45
                            (ix1.1196 var=31) __uint__mi___uint___uint (ix1.980 t1.998)  <1166>;
                            (q1.1197 var=36) __uint__pl___uint___uint (q1.986 r.989)  <1167>;
                            () void_j_t21s_s2 (__trgt.1951)  <2326>;
                        } #103
                        {
                            (ix0.1198 var=30) merge (ix0.978 ix0.1195)  <1168>;
                            (ix1.1199 var=31) merge (ix1.980 ix1.1196)  <1169>;
                            (q1.1200 var=36) merge (q1.986 q1.1197)  <1170>;
                            (s0.1201 var=37) merge (s0.987 s0.1162)  <1171>;
                            (s1.1202 var=38) merge (s1.988 s1.1089)  <1172>;
                        } #124
                    } #101
                    #125 off=47
                    (__tmp.1207 var=272) __uint__ad___uint___uint (ix1.1199 __ct_2147483648.726)  <1177>;
                    (__tmp.1210 var=275) __uint__rs___uint___sint (__tmp.1207 __ct_31.729)  <1180>;
                    (r.1217 var=39) __uint__rs___uint___sint (r.989 __ct_1.596)  <1187>;
                    (__tmp.1220 var=285) bool__ne___uint___uint (r.1217 __ct_0.115)  <1190>;
                    (__linex.1607 var=377) __uint__ls___uint___sint (ix0.1198 __ct_1.596)  <1615>;
                    (__linex.1608 var=378) __uint__pl___uint___uint (__linex.1607 __tmp.1210)  <1616>;
                    (__linex.1609 var=380) __uint__ls___uint___sint (ix1.1199 __ct_1.596)  <1617>;
                    () void_br_bool_t13s_s2 (__tmp.1220 __trgt.1952)  <2328>;
                    (__either.1953 var=588) undefined ()  <2329>;
                } #87
                {
                    () while_expr (__either.1953)  <1191>;
                    (ix0.1235 var=360 ix0.1236 var=360) exit (__linex.1608)  <1199>;
                    (ix1.1239 var=31 ix1.1240 var=31) exit (__linex.1609)  <1201>;
                    (q1.1251 var=36 q1.1252 var=36) exit (q1.1200)  <1207>;
                    (s0.1253 var=37 s0.1254 var=37) exit (s0.1201)  <1208>;
                    (s1.1255 var=38 s1.1256 var=38) exit (s1.1202)  <1209>;
                    (r.1257 var=39 r.1258 var=39) exit (r.1217)  <1210>;
                } #126
            } #85 rng=[1,2147483647]
            #129 off=48
            (__tmp.1284 var=287) __uint__or___uint___uint (ix0.1236 ix1.1240)  <1228>;
            (__tmp.1896 var=290) bool__eq___uint___uint (__tmp.1284 __ct_0.115)  <2206>;
            (__trgt.1966 var=624) const ()  <2350>;
            () void_br_bool_t13s_s2 (__tmp.1896 __trgt.1966)  <2351>;
            (__either.1967 var=588) undefined ()  <2352>;
            if {
                {
                    () if_expr (__either.1967)  <1259>;
                } #131
                {
                } #158 off=66
                {
                    #433 off=49
                    (f64_le.1726 var=483) const ()  <1851>;
                    (__link.1727 var=484) w32_jal_t21s_s2 (f64_le.1726)  <1852>;
                    (__ct_1072693248.1758 var=502) const ()  <1917>;
                    call {
                        (a_low.1729 var=479 stl=X off=11) assign (__ct_0.115)  <1854>;
                        (a_high.1730 var=480 stl=X off=12) assign (__ct_1072693248.1758)  <1855>;
                        (b_low.1731 var=481 stl=X off=13) assign (__ct_0.115)  <1856>;
                        (b_high.1732 var=482 stl=X off=14) assign (__ct_1072693248.1758)  <1857>;
                        (__link.1733 var=484 stl=X off=1) assign (__link.1727)  <1858>;
                        (__tmp.1734 var=485 stl=X off=10) Ff64_le (__link.1733 a_low.1729 a_high.1730 b_low.1731 b_high.1732)  <1859>;
                        (__tmp.1735 var=485) deassign (__tmp.1734)  <1860>;
                    } #434 off=50
                    #435 off=51
                    (__tmp.1895 var=295) bool__eq___sint___sint (__tmp.1735 __ct_0.115)  <2205>;
                    (__trgt.1963 var=622) const ()  <2345>;
                    () void_br_bool_t13s_s2 (__tmp.1895 __trgt.1963)  <2346>;
                    (__either.1964 var=588) undefined ()  <2347>;
                    if {
                        {
                            () if_expr (__either.1964)  <1292>;
                        } #135
                        {
                        } #156 off=64
                        {
                            #137 off=52
                            (__tmp.1351 var=300) bool__eq___uint___uint (q1.1252 __ct_4294967295.1349)  <1297>;
                            (q.1383 var=35) __sint__pl___sint___sint (q.908 __ct_1.596)  <1330>;
                            (__trgt.1960 var=620) const ()  <2340>;
                            () void_br_bool_t13s_s2 (__tmp.1351 __trgt.1960)  <2341>;
                            (__either.1961 var=588) undefined ()  <2342>;
                            if {
                                {
                                    () if_expr (__either.1961)  <1325>;
                                } #139
                                {
                                } #140 off=62
                                {
                                    #439 off=53
                                    (f64_lt.1744 var=495) const ()  <1872>;
                                    (__link.1745 var=496) w32_jal_t21s_s2 (f64_lt.1744)  <1873>;
                                    call {
                                        (a_low.1747 var=491 stl=X off=11) assign (__ct_0.115)  <1875>;
                                        (a_high.1748 var=492 stl=X off=12) assign (__ct_1072693248.1758)  <1876>;
                                        (b_low.1749 var=493 stl=X off=13) assign (__ct_0.115)  <1877>;
                                        (b_high.1750 var=494 stl=X off=14) assign (__ct_1072693248.1758)  <1878>;
                                        (__link.1751 var=496 stl=X off=1) assign (__link.1745)  <1879>;
                                        (__tmp.1752 var=497 stl=X off=10) Ff64_lt (__link.1751 a_low.1747 a_high.1748 b_low.1749 b_high.1750)  <1880>;
                                        (__tmp.1753 var=497) deassign (__tmp.1752)  <1881>;
                                    } #440 off=54
                                    #441 off=55
                                    (__tmp.1754 var=308) bool__ne___sint___sint (__tmp.1753 __ct_0.115)  <1882>;
                                    (__trgt.1957 var=618) const ()  <2335>;
                                    () void_br_bool_t13s_s2 (__tmp.1754 __trgt.1957)  <2336>;
                                    (__either.1958 var=588) undefined ()  <2337>;
                                    if {
                                        {
                                            () if_expr (__either.1958)  <1361>;
                                        } #144
                                        {
                                            #146 off=57
                                            (__ct_4294967294.1414 var=309) const ()  <1362>;
                                            (__tmp.1416 var=311) bool__eq___uint___uint (q1.1252 __ct_4294967294.1414)  <1364>;
                                            (__trgt.1954 var=616) const ()  <2330>;
                                            () void_br_bool_t13s_s2 (__tmp.1416 __trgt.1954)  <2331>;
                                            (__either.1955 var=588) undefined ()  <2332>;
                                            if {
                                                {
                                                    () if_expr (__either.1955)  <1392>;
                                                } #148
                                                {
                                                } #183 off=59
                                                {
                                                    (__trgt.1956 var=617) const ()  <2333>;
                                                    () void_j_t21s_s2 (__trgt.1956)  <2334>;
                                                } #150 off=58
                                                {
                                                    (q.1447 var=35) merge (q.1383 q.908)  <1396>;
                                                } #151
                                            } #147
                                            #152 off=60
                                            (__ct_2.1448 var=315) const ()  <1397>;
                                            (__shv_q1.1619 var=389) __uint__pl___uint___uint (q1.1252 __ct_2.1448)  <1630>;
                                        } #145
                                        {
                                            (__tmp.1453 var=320) __uint__ad___uint___uint (q1.1252 __ct_1.596)  <1402>;
                                            (q1.1454 var=36) __uint__pl___uint___uint (q1.1252 __tmp.1453)  <1403>;
                                            (__trgt.1959 var=619) const ()  <2338>;
                                            () void_j_t21s_s2 (__trgt.1959)  <2339>;
                                        } #153 off=56
                                        {
                                            (q.1455 var=35) merge (q.1447 q.908)  <1404>;
                                            (q1.1456 var=36) merge (__shv_q1.1619 q1.1454)  <1405>;
                                        } #154
                                    } #143
                                    #654 off=61
                                    (__trgt.1962 var=621) const ()  <2343>;
                                    () void_j_t21s_s2 (__trgt.1962)  <2344>;
                                } #141
                                {
                                    (q.1457 var=35) merge (q.1383 q.1455)  <1406>;
                                    (q1.1458 var=36) merge (__ct_0.115 q1.1456)  <1407>;
                                } #155
                            } #138
                            #655 off=63
                            (__trgt.1965 var=623) const ()  <2348>;
                            () void_j_t21s_s2 (__trgt.1965)  <2349>;
                        } #136
                        {
                            (q.1459 var=35) merge (q.908 q.1457)  <1408>;
                            (q1.1460 var=36) merge (q1.1252 q1.1458)  <1409>;
                        } #157
                    } #134
                    #656 off=65
                    (__trgt.1968 var=625) const ()  <2353>;
                    () void_j_t21s_s2 (__trgt.1968)  <2354>;
                } #132
                {
                    (q.1462 var=35) merge (q.908 q.1459)  <1411>;
                    (q1.1463 var=36) merge (q1.1252 q1.1460)  <1412>;
                } #159
            } #130
            #160 off=67
            (__tmp.1467 var=324) __sint__rs___sint___sint (q.1462 __ct_1.596)  <1416>;
            (__ct_1071644672.1468 var=325) const ()  <1417>;
            (ix0.1470 var=30) __sint__pl___sint___sint (__tmp.1467 __ct_1071644672.1468)  <1419>;
            (ix1.1473 var=31) __uint__rs___uint___sint (q1.1463 __ct_1.596)  <1422>;
            (__tmp.1476 var=333) __sint__ad___sint___sint (q.1462 __ct_1.596)  <1425>;
            (__tmp.1897 var=336) bool__ne___sint___sint (__tmp.1476 __ct_1.596)  <2207>;
            (__trgt.1969 var=626) const ()  <2355>;
            () void_br_bool_t13s_s2 (__tmp.1897 __trgt.1969)  <2356>;
            (__either.1970 var=588) undefined ()  <2357>;
            if {
                {
                    () if_expr (__either.1970)  <1456>;
                } #162
                {
                } #164 off=69
                {
                    (ix1.1509 var=31) __uint__or___uint___uint (ix1.1473 __ct_2147483648.726)  <1459>;
                    (__trgt.1971 var=627) const ()  <2358>;
                    () void_j_t21s_s2 (__trgt.1971)  <2359>;
                } #163 off=68
                {
                    (ix1.1510 var=31) merge (ix1.1473 ix1.1509)  <1460>;
                } #165
            } #161
            #526 off=70
            (__tmp.1513 var=342) __sint__ls___sint___sint (m.740 __ct_20.372)  <1463>;
            (ix0.1514 var=30) __sint__pl___sint___sint (ix0.1470 __tmp.1513)  <1464>;
        } #7
        {
            (__rt_low.1612 var=22) merge (__rt_low.1904 ix1.1510)  <1620>;
            (__rt_high.1615 var=23) merge (__rt_high.1905 ix0.1514)  <1623>;
        } #167
    } #4
    #169 off=76 nxt=-2
    (__R_SP.1559 var=12 __sp.1560 var=18) wr_res_reg (__tmp.183 __sp.41)  <1509>;
    () void___rts_jr_w32 (__la.20)  <1510>;
    (__rt_low.1562 var=22 stl=X off=10) assign (__rt_low.1612)  <1512>;
    () out (__rt_low.1562)  <1513>;
    (__rt_high.1564 var=23 stl=X off=11) assign (__rt_high.1615)  <1515>;
    () out (__rt_high.1564)  <1516>;
    () sink (__sp.1560)  <1524>;
} #0
0 : 'src/math.c';
----------
0 : (0,1754:0,0);
4 : (0,1766:4,8);
6 : (0,1766:37,9);
7 : (0,1767:8,12);
9 : (0,1771:4,13);
11 : (0,1771:15,14);
12 : (0,1772:30,14);
13 : (0,1772:8,14);
17 : (0,1772:35,15);
18 : (0,1773:13,18);
19 : (0,1773:19,18);
20 : (0,1773:13,18);
22 : (0,1774:12,19);
24 : (0,1774:12,19);
25 : (0,1774:12,19);
26 : (0,1773:13,22);
29 : (0,1771:4,29);
31 : (0,1778:8,33);
32 : (0,1778:4,33);
34 : (0,1778:13,34);
35 : (0,1779:8,34);
36 : (0,1779:8,34);
38 : (0,1779:8,35);
39 : (0,1779:8,35);
41 : (0,1779:22,35);
43 : (0,1779:8,41);
45 : (0,1783:8,45);
46 : (0,1783:8,45);
48 : (0,1783:8,46);
49 : (0,1783:8,46);
51 : (0,1783:8,46);
53 : (0,1783:8,53);
55 : (0,1778:13,60);
56 : (0,1778:4,61);
58 : (0,1790:4,66);
59 : (0,1790:4,66);
61 : (0,1790:11,67);
62 : (0,1790:4,71);
64 : (0,1802:4,79);
68 : (0,1802:4,80);
70 : (0,1802:16,80);
72 : (0,1804:8,81);
74 : (0,1804:19,82);
75 : (0,1804:8,87);
77 : (0,1802:11,94);
85 : (0,1815:4,101);
87 : (0,1815:16,101);
88 : (0,1818:13,103);
89 : (0,1818:18,103);
91 : (0,1818:18,104);
92 : (0,1818:29,105);
93 : (0,1818:23,105);
94 : (0,1818:29,105);
97 : (0,1818:29,107);
101 : (0,1818:8,111);
103 : (0,1818:43,112);
104 : (0,1820:25,113);
105 : (0,1820:32,113);
107 : (0,1820:43,114);
108 : (0,1820:32,115);
111 : (0,1820:12,117);
113 : (0,1820:51,118);
114 : (0,1820:12,120);
116 : (0,1822:20,124);
117 : (0,1822:12,124);
119 : (0,1822:30,125);
120 : (0,1822:12,127);
122 : (0,1818:43,133);
123 : (0,1818:8,134);
125 : (0,1815:11,141);
129 : (0,1832:16,146);
130 : (0,1832:4,146);
132 : (0,1832:21,147);
134 : (0,1834:8,148);
136 : (0,1834:20,149);
137 : (0,1836:18,150);
138 : (0,1836:12,150);
140 : (0,1836:43,151);
141 : (0,1837:17,155);
143 : (0,1837:17,155);
145 : (0,1837:28,156);
146 : (0,1838:22,156);
147 : (0,1838:16,156);
150 : (0,1838:16,159);
152 : (0,1837:28,164);
153 : (0,1841:19,165);
156 : (0,1834:8,172);
158 : (0,1832:4,177);
160 : (0,1846:13,182);
161 : (0,1846:4,182);
163 : (0,1846:22,183);
164 : (0,1846:4,185);
169 : (0,1849:4,203);
346 : (0,1771:10,13);
351 : (0,1804:12,81);
354 : (0,1818:34,106);
433 : (0,1834:13,148);
434 : (0,1834:13,148);
435 : (0,1834:13,148);
439 : (0,1837:22,155);
440 : (0,1837:22,155);
441 : (0,1837:22,155);
482 : (0,1766:23,8);
495 : (0,1767:16,9);
496 : (0,1767:16,9);
502 : (0,1767:18,9);
509 : (0,1774:21,19);
510 : (0,1774:21,19);
516 : (0,1774:24,19);
526 : (0,1848:15,195);
631 : (0,1849:4,203);
632 : (0,1849:4,203);
----------
47 : (0,1754:7,0);
48 : (0,1754:7,0);
50 : (0,1754:7,0);
51 : (0,1754:7,0);
84 : (0,1763:26,0);
91 : (0,1766:12,0);
93 : (0,1766:11,8);
96 : (0,1766:23,8);
124 : (0,1766:4,8);
127 : (0,1771:12,0);
157 : (0,1771:4,13);
158 : (0,1772:18,0);
160 : (0,1772:16,14);
162 : (0,1772:25,14);
165 : (0,1772:30,14);
193 : (0,1772:8,14);
194 : (0,1772:35,0);
195 : (0,1772:35,0);
197 : (0,1772:35,0);
198 : (0,1772:35,15);
199 : (0,1772:35,15);
201 : (0,1772:42,0);
204 : (0,1772:42,0);
243 : (0,1773:19,18);
271 : (0,1773:13,18);
279 : (0,1774:12,19);
282 : (0,1774:24,0);
285 : (0,1774:24,0);
403 : (0,1777:14,0);
405 : (0,1777:12,32);
436 : (0,1778:4,33);
467 : (0,1779:8,34);
476 : (0,1779:8,35);
478 : (0,1779:8,35);
480 : (0,1779:8,35);
496 : (0,1780:17,0);
498 : (0,1780:14,35);
500 : (0,1781:25,0);
502 : (0,1781:23,36);
503 : (0,1781:16,36);
507 : (0,1781:34,37);
510 : (0,1779:17,39);
511 : (0,1779:8,39);
519 : (0,1779:8,39);
521 : (0,1779:8,39);
523 : (0,1779:8,39);
539 : (0,1779:8,43);
540 : (0,1779:8,43);
541 : (0,1779:8,43);
544 : (0,1783:8,0);
546 : (0,1783:8,45);
577 : (0,1783:8,45);
586 : (0,1783:8,46);
591 : (0,1783:8,46);
606 : (0,1783:47,0);
608 : (0,1783:44,46);
611 : (0,1783:37,0);
614 : (0,1783:20,51);
617 : (0,1783:32,51);
618 : (0,1783:8,51);
626 : (0,1783:8,51);
631 : (0,1783:8,51);
646 : (0,1783:8,55);
647 : (0,1783:8,55);
651 : (0,1784:14,56);
652 : (0,1784:10,56);
656 : (0,1785:24,57);
657 : (0,1785:19,57);
658 : (0,1785:12,57);
660 : (0,1786:12,58);
661 : (0,1778:4,63);
662 : (0,1778:4,63);
663 : (0,1778:4,63);
668 : (0,1788:6,64);
669 : (0,1789:15,0);
671 : (0,1789:14,65);
674 : (0,1789:26,65);
677 : (0,1790:8,66);
708 : (0,1790:4,66);
711 : (0,1791:26,0);
713 : (0,1791:26,67);
714 : (0,1791:34,0);
716 : (0,1791:32,67);
721 : (0,1790:4,73);
722 : (0,1790:4,73);
725 : (0,1794:6,74);
730 : (0,1797:22,75);
733 : (0,1797:28,75);
746 : (0,1800:6,0);
787 : (0,1802:4,80);
789 : (0,1802:4,80);
794 : (0,1802:4,80);
796 : (0,1802:4,80);
798 : (0,1802:4,80);
808 : (0,1803:14,80);
838 : (0,1804:8,81);
840 : (0,1805:20,82);
842 : (0,1806:16,83);
844 : (0,1807:16,84);
846 : (0,1804:8,89);
847 : (0,1804:8,89);
848 : (0,1804:8,89);
853 : (0,1809:26,90);
856 : (0,1809:32,90);
863 : (0,1811:9,92);
866 : (0,1802:11,94);
867 : (0,1802:4,94);
875 : (0,1802:4,94);
877 : (0,1802:4,94);
882 : (0,1802:4,94);
884 : (0,1802:4,94);
886 : (0,1802:4,94);
942 : (0,1815:4,101);
944 : (0,1815:4,101);
950 : (0,1815:4,101);
951 : (0,1815:4,101);
952 : (0,1815:4,101);
953 : (0,1815:4,101);
962 : (0,1816:15,101);
963 : (0,1818:13,103);
991 : (0,1818:18,103);
1022 : (0,1818:29,105);
1055 : (0,1818:8,111);
1056 : (0,1819:20,112);
1059 : (0,1820:19,113);
1090 : (0,1820:32,113);
1093 : (0,1820:37,114);
1127 : (0,1820:12,117);
1130 : (0,1820:51,118);
1131 : (0,1820:12,122);
1132 : (0,1821:16,123);
1161 : (0,1822:12,124);
1164 : (0,1822:30,125);
1165 : (0,1822:12,129);
1166 : (0,1823:16,130);
1167 : (0,1824:16,131);
1168 : (0,1818:8,136);
1169 : (0,1818:8,136);
1170 : (0,1818:8,136);
1171 : (0,1818:8,136);
1172 : (0,1818:8,136);
1177 : (0,1826:26,137);
1180 : (0,1826:32,137);
1187 : (0,1828:9,139);
1190 : (0,1815:11,141);
1191 : (0,1815:4,141);
1199 : (0,1815:4,141);
1201 : (0,1815:4,141);
1207 : (0,1815:4,141);
1208 : (0,1815:4,141);
1209 : (0,1815:4,141);
1210 : (0,1815:4,141);
1228 : (0,1832:11,146);
1259 : (0,1832:4,146);
1292 : (0,1834:8,148);
1295 : (0,1836:20,0);
1297 : (0,1836:18,150);
1325 : (0,1836:12,150);
1330 : (0,1836:53,152);
1361 : (0,1837:17,155);
1362 : (0,1838:24,0);
1364 : (0,1838:22,156);
1392 : (0,1838:16,156);
1396 : (0,1838:16,161);
1397 : (0,1839:18,0);
1402 : (0,1841:25,165);
1403 : (0,1841:19,165);
1404 : (0,1837:17,167);
1405 : (0,1837:17,167);
1406 : (0,1836:12,169);
1407 : (0,1836:12,169);
1408 : (0,1834:8,174);
1409 : (0,1834:8,174);
1411 : (0,1832:4,179);
1412 : (0,1832:4,179);
1416 : (0,1844:12,180);
1417 : (0,1844:17,0);
1419 : (0,1844:16,180);
1422 : (0,1845:13,181);
1425 : (0,1846:10,182);
1456 : (0,1846:4,182);
1459 : (0,1846:22,183);
1460 : (0,1846:4,187);
1463 : (0,1847:14,188);
1464 : (0,1847:8,188);
1509 : (0,1849:4,203);
1510 : (0,1849:4,203);
1512 : (0,1849:4,0);
1515 : (0,1849:4,0);
1606 : (0,1791:12,67);
1607 : (0,1791:12,67);
1608 : (0,1792:12,68);
1609 : (0,1797:8,75);
1610 : (0,1797:8,75);
1611 : (0,1798:8,76);
1612 : (0,1809:12,90);
1613 : (0,1809:12,90);
1614 : (0,1810:12,91);
1615 : (0,1826:12,137);
1616 : (0,1826:12,137);
1617 : (0,1827:12,138);
1624 : (0,1780:14,0);
1628 : (0,1788:6,0);
1630 : (0,1839:18,0);
1851 : (0,1834:13,0);
1852 : (0,1834:13,148);
1854 : (0,1834:13,148);
1855 : (0,1834:13,148);
1856 : (0,1834:13,148);
1857 : (0,1834:13,148);
1858 : (0,1834:13,148);
1859 : (0,1834:13,148);
1860 : (0,1834:13,148);
1872 : (0,1837:22,0);
1873 : (0,1837:22,155);
1875 : (0,1837:22,155);
1876 : (0,1837:22,155);
1877 : (0,1837:22,155);
1878 : (0,1837:22,155);
1879 : (0,1837:22,155);
1880 : (0,1837:22,155);
1881 : (0,1837:22,155);
1882 : (0,1837:22,155);
1917 : (0,1833:15,0);
1973 : (0,1767:16,0);
1974 : (0,1767:16,9);
1975 : (0,1767:16,9);
1976 : (0,1767:16,9);
1977 : (0,1767:16,9);
1978 : (0,1767:16,9);
1979 : (0,1767:16,9);
1980 : (0,1767:16,9);
1982 : (0,1767:16,9);
1984 : (0,1767:16,9);
1996 : (0,1767:18,0);
1998 : (0,1767:18,9);
1999 : (0,1767:18,9);
2000 : (0,1767:18,9);
2001 : (0,1767:18,9);
2002 : (0,1767:18,9);
2003 : (0,1767:18,9);
2005 : (0,1767:18,9);
2007 : (0,1767:18,9);
2019 : (0,1774:21,0);
2020 : (0,1774:21,19);
2021 : (0,1774:21,19);
2022 : (0,1774:21,19);
2023 : (0,1774:21,19);
2024 : (0,1774:21,19);
2025 : (0,1774:21,19);
2026 : (0,1774:21,19);
2028 : (0,1774:21,19);
2030 : (0,1774:21,19);
2042 : (0,1774:24,0);
2044 : (0,1774:24,19);
2045 : (0,1774:24,19);
2046 : (0,1774:24,19);
2047 : (0,1774:24,19);
2048 : (0,1774:24,19);
2049 : (0,1774:24,19);
2051 : (0,1774:24,19);
2053 : (0,1774:24,19);
2191 : (0,1783:8,45);
2192 : (0,1779:8,34);
2193 : (0,1771:10,13);
2194 : (0,1778:8,33);
2195 : (0,1790:4,66);
2196 : (0,1804:12,81);
2197 : (0,1818:23,105);
2198 : (0,1820:25,113);
2199 : (0,1820:43,114);
2200 : (0,1820:32,116);
2201 : (0,1822:20,124);
2202 : (0,1818:34,106);
2203 : (0,1818:29,108);
2204 : (0,1818:18,110);
2205 : (0,1834:13,148);
2206 : (0,1832:16,146);
2207 : (0,1846:13,182);
2240 : (0,1774:24,19);
2241 : (0,1849:4,203);
2243 : (0,1849:4,0);
2245 : (0,1849:4,0);
2248 : (0,1767:18,9);
2252 : (0,1773:13,18);
2256 : (0,1772:8,14);
2260 : (0,1771:4,13);
2265 : (0,1779:8,39);
2268 : (0,1779:8,34);
2274 : (0,1783:8,51);
2277 : (0,1783:8,45);
2283 : (0,1778:4,33);
2288 : (0,1790:4,66);
2293 : (0,1804:8,81);
2298 : (0,1802:4,94);
2301 : (0,1818:29,105);
2304 : (0,1818:18,103);
2307 : (0,1820:32,113);
2311 : (0,1820:12,117);
2316 : (0,1822:12,124);
2323 : (0,1818:8,111);
2328 : (0,1815:4,141);
2331 : (0,1838:16,156);
2336 : (0,1837:17,155);
2341 : (0,1836:12,150);
2346 : (0,1834:8,148);
2351 : (0,1832:4,146);
2356 : (0,1846:4,182);
2361 : (0,1766:4,8);

