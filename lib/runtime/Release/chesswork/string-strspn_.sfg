
// File generated by noodle version U-2022.12#33f3808fcb#221128, Thu Feb 29 17:32:05 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -DNDEBUG -D__tct_patch__=0 -itrv32p3_cnn_chess.h +NOrlt +wRelease/chesswork src/string.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!!  size_t strspn(const char *, const char *)
Fstrspn : user_defined, called {
    fnm : "strspn" 'size_t strspn(const char *, const char *)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
    frm : ( );
}
****
***/

[
    0 : strspn typ=u08 bnd=e stl=PMb
    3 : __M_DMb typ=w08 bnd=d stl=DMb
   12 : __R_SP typ=w32 bnd=d stl=SP
   17 : __extDMb typ=w08 bnd=b stl=DMb
   18 : __sp typ=w32 bnd=b stl=SP
   19 : __rd___sp typ=w32 bnd=m
   20 : __la typ=w32 bnd=p tref=w32__
   21 : __rt typ=w32 bnd=p tref=size_t__
   22 : s1 typ=w32 bnd=p tref=__P__cchar__
   23 : s2 typ=w32 bnd=p tref=__P__cchar__
   24 : __ct_0S0 typ=w32 val=0S0 bnd=m
   26 : __tmp typ=w32 bnd=m
   27 : r1 typ=w32 bnd=m tref=__P__cchar__
   28 : c typ=w08 bnd=m tref=__cchar__
   30 : r2 typ=w32 bnd=m lscp=11 tref=__P__cchar__
   31 : d typ=w08 bnd=m lscp=11 tref=__cchar__
   33 : __ct_1 typ=w32 val=1f bnd=m
   38 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   40 : __tmp typ=bool bnd=m
   47 : __tmp typ=bool bnd=m
   51 : __tmp typ=bool bnd=m
   55 : __tmp typ=bool bnd=m
   64 : __tmp typ=bool bnd=m
   67 : __tmp typ=w32 bnd=m
   68 : __tmp typ=w32 bnd=m
   70 : __ct_0s0 typ=w32 val=0s0 bnd=m
   72 : __tmp typ=w32 bnd=m
   79 : __ct_m1 typ=w32 val=-1f bnd=m
   80 : __shv_r2 typ=w32 bnd=m
   81 : __shv_r1 typ=w32 bnd=m
   90 : __either typ=bool bnd=m
   91 : __trgt typ=t13s_s2 val=0j bnd=m
   92 : __trgt typ=t13s_s2 val=0j bnd=m
   93 : __trgt typ=t13s_s2 val=0j bnd=m
   94 : __trgt typ=t13s_s2 val=0j bnd=m
   95 : __trgt typ=t13s_s2 val=0j bnd=m
   96 : __trgt typ=t21s_s2 val=0j bnd=m
   97 : __trgt typ=t21s_s2 val=0j bnd=m
   98 : __trgt typ=t21s_s2 val=0j bnd=m
]
Fstrspn {
    #5 off=0
    (__M_DMb.2 var=3) st_def ()  <4>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__extDMb.16 var=17) source ()  <27>;
    (__sp.17 var=18) source ()  <28>;
    (__la.19 var=20 stl=X off=1) inp ()  <30>;
    (__la.20 var=20) deassign (__la.19)  <31>;
    (s1.23 var=22 stl=X off=11) inp ()  <34>;
    (s1.24 var=22) deassign (s1.23)  <35>;
    (s2.26 var=23 stl=X off=12) inp ()  <37>;
    (s2.27 var=23) deassign (s2.26)  <38>;
    (__rd___sp.29 var=19) rd_res_reg (__R_SP.11 __sp.17)  <40>;
    (__ct_0S0.30 var=24) const ()  <41>;
    (__tmp.32 var=26) __Pvoid__pl___Pvoid___sint (__rd___sp.29 __ct_0S0.30)  <43>;
    (__R_SP.33 var=12 __sp.34 var=18) wr_res_reg (__tmp.32 __sp.17)  <44>;
    (__ct_1.43 var=33) const ()  <54>;
    (r1.45 var=27) __Pvoid__pl___Pvoid___sint (s1.24 __ct_1.43)  <56>;
    (c.46 var=28) load (__M_DMb.2 s1.24 __extDMb.16)  <57>;
    (__ct_0.48 var=38) const ()  <59>;
    (__tmp.376 var=40) bool__eq___sint___sint (c.46 __ct_0.48)  <439>;
    (__trgt.387 var=95) const ()  <463>;
    () void_br_bool_t13s_s2 (__tmp.376 __trgt.387)  <464>;
    (__either.388 var=90) undefined ()  <465>;
    if {
        {
            () if_expr (__either.388)  <78>;
            () chess_frequent_else ()  <79>;
            () chess_rear_then ()  <466>;
        } #7
        {
            (__trgt.389 var=96) const ()  <467>;
            () void_j_t21s_s2 (__trgt.389)  <468>;
        } #34 off=14
        {
            #183 off=1
            (__trgt.379 var=91) const ()  <449>;
            (__trgt.381 var=92) const ()  <453>;
            (__trgt.383 var=93) const ()  <456>;
            (__trgt.385 var=94) const ()  <460>;
            (__trgt.390 var=97) const ()  <469>;
            (__trgt.391 var=98) const ()  <471>;
            do {
                {
                    (r1.74 var=27) entry (r1.283 r1.45)  <87>;
                    (c.76 var=28) entry (c.287 c.46)  <89>;
                } #10
                {
                    do {
                        {
                            (r2.96 var=30) entry (r2.182 s2.27)  <109>;
                        } #14
                        {
                            #16 off=3
                            (d.104 var=31) load (__M_DMb.2 r2.96 __extDMb.16)  <117>;
                            (__tmp.107 var=47) bool__eq___sint___sint (c.76 d.104)  <120>;
                            (__shv_r2.369 var=80) __Pvoid__pl___Pvoid___sint (r2.96 __ct_1.43)  <418>;
                            () void_br_bool_t13s_s2 (__tmp.107 __trgt.379)  <450>;
                            (__either.380 var=90) undefined ()  <451>;
                            if {
                                {
                                    () if_expr (__either.380)  <137>;
                                    () chess_rear_then ()  <452>;
                                } #18
                                {
                                    () sink (__sp.34)  <143>;
                                    () sync_sink (d.104) sid=14  <157>;
                                    () void_j_t21s_s2 (__trgt.390)  <470>;
                                } #20 off=5 nxt=-3 tgt=1
                                {
                                } #21 off=4
                                {
                                } #22
                            } #17
                            #23 off=6
                            (__tmp.159 var=51) bool__ne___sint___sint (d.104 __ct_0.48)  <195>;
                            () void_br_bool_t13s_s2 (__tmp.159 __trgt.381)  <454>;
                            (__either.382 var=90) undefined ()  <455>;
                        } #15
                        {
                            () while_expr (__either.382)  <196>;
                            (r2.182 var=30 r2.183 var=30) exit (__shv_r2.369)  <208>;
                            (d.186 var=31 d.187 var=31) exit (d.104)  <210>;
                        } #24
                    } #13
                    sync {
                        (d.205 var=31) sync_link (d.187) sid=14  <226>;
                    } #1 off=8
                    #25 off=9
                    (__tmp.365 var=55) bool__eq___sint___sint (d.205 __ct_0.48)  <413>;
                    () void_br_bool_t13s_s2 (__tmp.365 __trgt.383)  <457>;
                    (__either.384 var=90) undefined ()  <458>;
                    if {
                        {
                            () if_expr (__either.384)  <250>;
                            () chess_rear_then ()  <459>;
                        } #27
                        {
                            () sink (__sp.34)  <256>;
                            () sync_sink (r1.74) sid=24  <264>;
                            () void_j_t21s_s2 (__trgt.391)  <472>;
                        } #29 off=11 nxt=-3 tgt=2
                        {
                        } #30 off=10
                        {
                        } #31
                    } #26
                    #32 off=12
                    (c.264 var=28) load (__M_DMb.2 r1.74 __extDMb.16)  <308>;
                    (__tmp.268 var=64) bool__ne___sint___sint (c.264 __ct_0.48)  <312>;
                    (__shv_r1.370 var=81) __Pvoid__pl___Pvoid___sint (r1.74 __ct_1.43)  <419>;
                    () void_br_bool_t13s_s2 (__tmp.268 __trgt.385)  <461>;
                    (__either.386 var=90) undefined ()  <462>;
                } #11
                {
                    () while_expr (__either.386)  <313>;
                    (r1.283 var=27 r1.284 var=27) exit (__shv_r1.370)  <321>;
                    (c.287 var=28 c.288 var=28) exit (c.264)  <323>;
                } #33
            } #9 rng=[1,2147483647]
        } #8
        {
            (r1.308 var=27) merge (r1.45 r1.284)  <337>;
        } #35
    } #6
    sync {
        (r1.324 var=27) sync_link (r1.308) sid=24  <353>;
    } #2 off=16
    #38 off=17 nxt=-2
    (__tmp.335 var=67) __Pvoid__pl___Pvoid___sint (r1.324 __ct_m1.366)  <364>;
    (__tmp.336 var=68) __sint__mi___Pvoid___Pvoid (__tmp.335 s1.24)  <365>;
    (__rd___sp.338 var=19) rd_res_reg (__R_SP.11 __sp.34)  <367>;
    (__ct_0s0.339 var=70) const ()  <368>;
    (__tmp.341 var=72) __Pvoid__pl___Pvoid___sint (__rd___sp.338 __ct_0s0.339)  <370>;
    (__R_SP.342 var=12 __sp.343 var=18) wr_res_reg (__tmp.341 __sp.34)  <371>;
    () void___rts_jr_w32 (__la.20)  <372>;
    (__rt.344 var=21 stl=X off=10) assign (__tmp.336)  <373>;
    () out (__rt.344)  <374>;
    () sink (__sp.343)  <380>;
    (__ct_m1.366 var=79) const ()  <414>;
} #0
0 : 'src/string.c';
----------
0 : (0,205:0,0);
1 : (0,216:10,19);
2 : (0,210:4,34);
5 : (0,210:4,5);
6 : (0,210:4,5);
8 : (0,210:4,6);
9 : (0,210:4,6);
11 : (0,210:24,6);
13 : (0,216:10,8);
15 : (0,213:11,8);
16 : (0,215:18,11);
17 : (0,215:12,11);
20 : (0,215:24,12);
21 : (0,215:12,14);
23 : (0,216:10,18);
25 : (0,217:12,20);
26 : (0,217:8,20);
29 : (0,218:12,21);
30 : (0,217:8,23);
32 : (0,210:4,29);
34 : (0,210:4,31);
38 : (0,220:4,35);
----------
40 : (0,205:7,0);
41 : (0,205:7,0);
43 : (0,205:7,0);
44 : (0,205:7,0);
54 : (0,210:4,0);
56 : (0,210:4,4);
57 : (0,210:4,5);
59 : (0,210:4,0);
78 : (0,210:4,5);
87 : (0,210:4,6);
89 : (0,210:4,6);
109 : (0,216:10,8);
117 : (0,214:16,10);
120 : (0,215:18,11);
137 : (0,215:12,11);
195 : (0,216:10,18);
196 : (0,216:10,18);
208 : (0,216:10,18);
210 : (0,216:10,18);
250 : (0,217:8,20);
308 : (0,210:16,29);
312 : (0,210:4,29);
313 : (0,210:4,29);
321 : (0,210:4,29);
323 : (0,210:4,29);
337 : (0,210:4,33);
364 : (0,220:14,35);
365 : (0,220:18,35);
367 : (0,220:4,0);
368 : (0,220:4,0);
370 : (0,220:4,0);
371 : (0,220:4,35);
372 : (0,220:4,35);
373 : (0,220:18,0);
413 : (0,217:12,20);
414 : (0,220:14,0);
418 : (0,214:19,0);
419 : (0,210:19,0);
439 : (0,210:4,5);
450 : (0,215:12,11);
454 : (0,216:10,18);
457 : (0,217:8,20);
461 : (0,210:4,29);
464 : (0,210:4,5);

