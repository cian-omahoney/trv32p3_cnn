
// File generated by noodle version U-2022.12#33f3808fcb#221128, Tue Mar 19 17:29:52 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -DNDEBUG -D__tct_patch__=0 -itrv32p3_cnn_chess.h +NOrlt +wRelease/chesswork src/clib_inline.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!! extern inline int strcoll(const char *, const char *)
Fstrcoll : user_defined, called {
    fnm : "strcoll" 'int strcoll(const char *, const char *)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
    frm : ( );
}
****
!!  int strcmp(const char *, const char *)
Fstrcmp : user_defined, called {
    fnm : "strcmp" 'int strcmp(const char *, const char *)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
}
***/

[
    0 : strcoll typ=u08 bnd=e stl=PMb
   12 : __R_SP typ=w32 bnd=d stl=SP
   13 : __vola typ=u08 bnd=b stl=PMb
   16 : __extPMb typ=u08 bnd=b stl=PMb
   17 : __extDMb typ=w08 bnd=b stl=DMb
   18 : __sp typ=w32 bnd=b stl=SP
   19 : __extPMb_void typ=u08 bnd=b stl=PMb
   20 : __extDMb_void typ=w08 bnd=b stl=DMb
   21 : __rd___sp typ=w32 bnd=m
   22 : __la typ=w32 bnd=p tref=w32__
   23 : __rt typ=w32 bnd=p tref=__sint__
   24 : s1 typ=w32 bnd=p tref=__P__cchar__
   25 : s2 typ=w32 bnd=p tref=__P__cchar__
   26 : __ct_0S0 typ=w32 val=0S0 bnd=m
   28 : __tmp typ=w32 bnd=m
   31 : strcmp typ=t21s_s2 val=0r bnd=m
   33 : __tmp typ=w32 bnd=m
   34 : __ct_0s0 typ=w32 val=0s0 bnd=m
   36 : __tmp typ=w32 bnd=m
]
Fstrcoll {
    #5 off=0
    (__R_SP.11 var=12) st_def ()  <22>;
    (__vola.12 var=13) source ()  <23>;
    (__extPMb.15 var=16) source ()  <26>;
    (__extDMb.16 var=17) source ()  <27>;
    (__sp.17 var=18) source ()  <28>;
    (__extPMb_void.18 var=19) source ()  <29>;
    (__extDMb_void.19 var=20) source ()  <30>;
    (__la.21 var=22 stl=X off=1) inp ()  <32>;
    (__la.22 var=22) deassign (__la.21)  <33>;
    (s1.25 var=24 stl=X off=11) inp ()  <36>;
    (s1.26 var=24) deassign (s1.25)  <37>;
    (s2.28 var=25 stl=X off=12) inp ()  <39>;
    (s2.29 var=25) deassign (s2.28)  <40>;
    (__rd___sp.31 var=21) rd_res_reg (__R_SP.11 __sp.17)  <42>;
    (__ct_0S0.32 var=26) const ()  <43>;
    (__tmp.34 var=28) __Pvoid__pl___Pvoid___sint (__rd___sp.31 __ct_0S0.32)  <45>;
    (__R_SP.35 var=12 __sp.36 var=18) wr_res_reg (__tmp.34 __sp.17)  <46>;
    (strcmp.41 var=31) const ()  <52>;
    (__rd___sp.52 var=21) rd_res_reg (__R_SP.11 __sp.36)  <58>;
    (__ct_0s0.53 var=34) const ()  <59>;
    (__tmp.55 var=36) __Pvoid__pl___Pvoid___sint (__rd___sp.52 __ct_0s0.53)  <61>;
    (__R_SP.56 var=12 __sp.57 var=18) wr_res_reg (__tmp.55 __sp.36)  <62>;
    () void_j_t21s_s2 (strcmp.41)  <121>;
    call {
        (s1.37 var=24 stl=X off=11) assign (s1.26)  <48>;
        (s2.38 var=25 stl=X off=12) assign (s2.29)  <49>;
        (__la.43 var=22 stl=X off=1) assign (__la.22)  <54>;
        (__tmp.44 var=33 stl=X off=10 __extDMb.47 var=17 __extDMb_void.48 var=20 __extPMb.49 var=16 __extPMb_void.50 var=19 __vola.51 var=13) Fstrcmp (__la.43 s1.37 s2.38 __extDMb.16 __extDMb_void.19 __extPMb.15 __extPMb_void.18 __vola.12)  <55>;
        (__tmp.45 var=33) deassign (__tmp.44)  <56>;
    } #4 off=1
    #6 off=2 nxt=-2
    (__rt.58 var=23 stl=X off=10) assign (__tmp.45)  <64>;
    () out (__rt.58)  <65>;
    () sink (__vola.51)  <66>;
    () sink (__extPMb.49)  <69>;
    () sink (__extDMb.47)  <70>;
    () sink (__sp.57)  <71>;
    () sink (__extPMb_void.50)  <72>;
    () sink (__extDMb_void.48)  <73>;
} #0
0 : 'include/string.h';
----------
0 : (0,39:19,0);
4 : (0,39:60,1);
5 : (0,39:53,1);
6 : (0,39:53,1);
----------
42 : (0,39:19,0);
43 : (0,39:19,0);
45 : (0,39:19,0);
46 : (0,39:19,0);
48 : (0,39:67,0);
49 : (0,39:70,0);
54 : (0,39:60,0);
55 : (0,39:60,1);
58 : (0,39:53,0);
59 : (0,39:53,0);
61 : (0,39:53,0);
62 : (0,39:53,1);
64 : (0,39:66,0);
121 : (0,39:60,1);

