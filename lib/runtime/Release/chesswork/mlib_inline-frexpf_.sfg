
// File generated by noodle version U-2022.12#33f3808fcb#221128, Tue Mar 19 17:12:55 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -DNDEBUG -D__tct_patch__=0 -itrv32p3_cnn_chess.h +NOrlt +wRelease/chesswork src/mlib_inline.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!! extern inline float frexpf(float, int *)
Ffrexpf : user_defined, called {
    fnm : "frexpf" 'float frexpf(float, int *)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
    frm : ( );
}
****
!! extern float ldexpf(float, int)
Fldexpf : user_defined, called {
    fnm : "ldexpf" 'float ldexpf(float, int)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
}
!!  bool f32_eq(float32_t, float32_t)
Ff32_eq : user_defined, called {
    fnm : "f32_eq" 'bool f32_eq(float32_t, float32_t)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
}
***/

[
    0 : frexpf typ=u08 bnd=e stl=PMb
    5 : __M_DMw typ=w32 bnd=d stl=DMw
   12 : __R_SP typ=w32 bnd=d stl=SP
   18 : __sp typ=w32 bnd=b stl=SP
   19 : __extDMb_w32 typ=w08 bnd=b stl=DMb
   20 : __rd___sp typ=w32 bnd=m
   21 : __la typ=w32 bnd=p tref=w32__
   23 : x typ=w32 bnd=p tref=__ffloat__
   24 : e typ=w32 bnd=p tref=__P__sint__
   25 : __ct_0S0 typ=w32 val=0S0 bnd=m
   27 : __tmp typ=w32 bnd=m
   28 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   30 : __tmp typ=bool bnd=m
   34 : __ct_23 typ=w32 val=23f bnd=m
   36 : __tmp typ=w32 bnd=m
   37 : __ct_255 typ=w32 val=255f bnd=m
   39 : __tmp typ=w32 bnd=m
   46 : __tmp typ=w32 bnd=m
   49 : ldexpf typ=t21s_s2 val=0r bnd=m
   51 : __tmp typ=w32 bnd=m
   52 : __ct_0s0 typ=w32 val=0s0 bnd=m
   54 : __tmp typ=w32 bnd=m
   60 : __ct_m126 typ=w32 val=-126f bnd=m
   61 : __shv___tmp typ=w32 bnd=m
   65 : a typ=w32 bnd=m tref=float32_t__
   66 : b typ=w32 bnd=m tref=float32_t__
   67 : f32_eq typ=t21s_s2 val=0r bnd=m
   68 : __link typ=w32 bnd=m
   69 : __tmp typ=w32 bnd=m
   80 : __either typ=bool bnd=m
   81 : __trgt typ=t13s_s2 val=0j bnd=m
]
Ffrexpf {
    #15 off=0
    (__R_SP.11 var=12) st_def ()  <22>;
    (__sp.17 var=18) source ()  <28>;
    (__extDMb_w32.18 var=19) source ()  <29>;
    (__la.20 var=21 stl=X off=1) inp ()  <31>;
    (__la.21 var=21) deassign (__la.20)  <32>;
    (x.24 var=23 stl=X off=11) inp ()  <35>;
    (x.25 var=23) deassign (x.24)  <36>;
    (e.27 var=24 stl=X off=12) inp ()  <38>;
    (e.28 var=24) deassign (e.27)  <39>;
    (__rd___sp.30 var=20) rd_res_reg (__R_SP.11 __sp.17)  <41>;
    (__ct_0S0.31 var=25) const ()  <42>;
    (__tmp.33 var=27) __Pvoid__pl___Pvoid___sint (__rd___sp.30 __ct_0S0.31)  <44>;
    (__R_SP.34 var=12 __sp.35 var=18) wr_res_reg (__tmp.33 __sp.17)  <45>;
    (__ct_0.36 var=28) const ()  <47>;
    (f32_eq.111 var=67) const ()  <161>;
    (__link.112 var=68) w32_jal_t21s_s2 (f32_eq.111)  <162>;
    call {
        (a.114 var=65 stl=X off=11) assign (x.25)  <164>;
        (b.115 var=66 stl=X off=12) assign (__ct_0.36)  <165>;
        (__link.116 var=68 stl=X off=1) assign (__link.112)  <166>;
        (__tmp.117 var=69 stl=X off=10) Ff32_eq (__link.116 a.114 b.115)  <167>;
        (__tmp.118 var=69) deassign (__tmp.117)  <168>;
    } #16 off=1
    #17 off=2
    (__ct_0s0.83 var=52) const ()  <93>;
    (__tmp.119 var=30) bool__ne___sint___sint (__tmp.118 __ct_0.36)  <169>;
    (__trgt.134 var=81) const ()  <222>;
    () void_br_bool_t13s_s2 (__tmp.119 __trgt.134)  <223>;
    (__either.135 var=80) undefined ()  <224>;
    if {
        {
            () if_expr (__either.135)  <61>;
        } #5
        {
            (__M_DMw.52 var=5 __extDMb_w32.53 var=19) store (__ct_0.36 e.28 __extDMb_w32.18)  <64>;
        } #6 off=6
        {
            #21 off=3
            (__ct_23.55 var=34) const ()  <66>;
            (__tmp.57 var=36) __sint__rs___sint___sint (x.25 __ct_23.55)  <68>;
            (__ct_255.58 var=37) const ()  <69>;
            (__tmp.60 var=39) __sint__ad___sint___sint (__tmp.57 __ct_255.58)  <71>;
            (__M_DMw.64 var=5 __extDMb_w32.65 var=19) store (__shv___tmp.105 e.28 __extDMb_w32.18)  <75>;
            (__tmp.70 var=46) __sint__mi___sint___sint (__ct_0.36 __shv___tmp.105)  <80>;
            (ldexpf.74 var=49) const ()  <84>;
            (__ct_m126.104 var=60) const ()  <142>;
            (__shv___tmp.105 var=61) __sint__pl___sint___sint (__tmp.60 __ct_m126.104)  <144>;
            (__rd___sp.127 var=20) rd_res_reg (__R_SP.11 __sp.35)  <211>;
            (__tmp.128 var=54) __Pvoid__pl___Pvoid___sint (__rd___sp.127 __ct_0s0.83)  <212>;
            (__R_SP.129 var=12 __sp.130 var=18) wr_res_reg (__tmp.128 __sp.35)  <213>;
            () void_j_t21s_s2 (ldexpf.74)  <219>;
            call {
                (x.66 var=23 stl=X off=11) assign (x.25)  <76>;
                (__tmp.71 var=46 stl=X off=12) assign (__tmp.70)  <81>;
                (__la.76 var=21 stl=X off=1) assign (__la.21)  <86>;
                (__tmp.77 var=51 stl=X off=10) Fldexpf (__la.76 x.66 __tmp.71)  <87>;
                (__tmp.78 var=51) deassign (__tmp.77)  <88>;
            } #9 off=4
            #22 off=5 nxt=-2
            (x.131 var=23 stl=X off=10) assign (__tmp.78)  <215>;
            () out (x.131)  <216>;
            () sink (__sp.130)  <217>;
            () sink (__extDMb_w32.65)  <218>;
            (__extDMb_w32.132 var=19) never ()  <220>;
        } #7
        {
            (__extDMb_w32.80 var=19) merge (__extDMb_w32.53 __extDMb_w32.132)  <90>;
        } #10
    } #4
    #12 off=7 nxt=-2
    (__rd___sp.82 var=20) rd_res_reg (__R_SP.11 __sp.35)  <92>;
    (__tmp.85 var=54) __Pvoid__pl___Pvoid___sint (__rd___sp.82 __ct_0s0.83)  <95>;
    (__R_SP.86 var=12 __sp.87 var=18) wr_res_reg (__tmp.85 __sp.35)  <96>;
    () void___rts_jr_w32 (__la.21)  <97>;
    (x.88 var=23 stl=X off=10) assign (x.25)  <98>;
    () out (x.88)  <99>;
    () sink (__sp.87)  <105>;
    () sink (__extDMb_w32.80)  <106>;
} #0
0 : 'include/math.h';
----------
0 : (0,88:21,0);
4 : (0,90:4,1);
6 : (0,91:11,2);
7 : (0,92:9,4);
9 : (0,94:12,5);
12 : (0,96:4,9);
15 : (0,90:10,1);
16 : (0,90:10,1);
17 : (0,90:10,1);
21 : (0,96:4,9);
22 : (0,96:4,9);
----------
41 : (0,88:21,0);
42 : (0,88:21,0);
44 : (0,88:21,0);
45 : (0,88:21,0);
47 : (0,90:13,0);
61 : (0,90:4,1);
64 : (0,91:8,2);
66 : (0,93:30,0);
68 : (0,93:27,4);
69 : (0,93:36,0);
71 : (0,93:34,4);
75 : (0,93:8,4);
76 : (0,94:19,0);
80 : (0,94:21,5);
81 : (0,94:21,0);
86 : (0,94:12,0);
87 : (0,94:12,5);
90 : (0,90:4,8);
92 : (0,96:4,0);
93 : (0,96:4,0);
95 : (0,96:4,0);
96 : (0,96:4,9);
97 : (0,96:4,9);
98 : (0,96:11,0);
142 : (0,93:42,0);
144 : (0,93:42,0);
161 : (0,90:10,0);
162 : (0,90:10,1);
164 : (0,90:10,1);
165 : (0,90:10,1);
166 : (0,90:10,1);
167 : (0,90:10,1);
168 : (0,90:10,1);
169 : (0,90:10,1);
211 : (0,96:4,0);
212 : (0,96:4,0);
213 : (0,96:4,9);
215 : (0,96:11,0);
219 : (0,94:12,5);
223 : (0,90:4,1);

