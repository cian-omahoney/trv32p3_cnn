
// File generated by noodle version U-2022.12#33f3808fcb#221128, Wed Feb  7 12:34:17 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -DNDEBUG -D__tct_patch__=0 -itrv32p3_cnn_chess.h +NOrlt +wRelease/chesswork src/qsort.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!! static char *med3(char *, char *, char *, int (*)(const void *, const void *))
Fmed3 : user_defined, called {
    fnm : "med3" 'char *med3(char *, char *, char *, int (*)(const void *, const void *))';
    arg : ( w32:i w32:r w32:i w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] X[14] );
    frm : ( );
}
****
!!  int __Pfn0(const void *, const void *)
F_Z6__Pfn0PKvS0_ : user_defined, called {
    fnm : "__Pfn0" 'int __Pfn0(const void *, const void *)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
}
!!  int __Pfn1(const void *, const void *)
F_Z6__Pfn1PKvS0_ : user_defined, called {
    fnm : "__Pfn1" 'int __Pfn1(const void *, const void *)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
}
!!  int __Pfn2(const void *, const void *)
F_Z6__Pfn2PKvS0_ : user_defined, called {
    fnm : "__Pfn2" 'int __Pfn2(const void *, const void *)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
}
!!  int __Pfn3(const void *, const void *)
F_Z6__Pfn3PKvS0_ : user_defined, called {
    fnm : "__Pfn3" 'int __Pfn3(const void *, const void *)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
}
!!  int __Pfn4(const void *, const void *)
F_Z6__Pfn4PKvS0_ : user_defined, called {
    fnm : "__Pfn4" 'int __Pfn4(const void *, const void *)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
}
***/

[
    0 : med3 typ=u08 bnd=i stl=PMb
   12 : __R_SP typ=w32 bnd=d stl=SP
   13 : __vola typ=u08 bnd=b stl=PMb
   16 : __extPMb typ=u08 bnd=b stl=PMb
   17 : __extDMb typ=w08 bnd=b stl=DMb
   18 : __sp typ=w32 bnd=b stl=SP
   19 : __extPMb___sint_____Pvoid___Pvoid typ=u08 bnd=b stl=PMb
   20 : __extPMb_void typ=u08 bnd=b stl=PMb
   21 : __extDMb_void typ=w08 bnd=b stl=DMb
   22 : __rd___sp typ=w32 bnd=m
   23 : __la typ=w32 bnd=p tref=w32__
   25 : a typ=w32 bnd=p tref=__P__cchar__
   26 : b typ=w32 bnd=p tref=__P__cchar__
   27 : c typ=w32 bnd=p tref=__P__cchar__
   28 : cmp typ=w32 bnd=p tref=__P__sint_____Pvoid___Pvoid__
   29 : __ct_0S0 typ=w32 val=0S0 bnd=m
   31 : __tmp typ=w32 bnd=m
   32 : __link typ=w32 bnd=m
   33 : __tmp typ=w32 bnd=m
   34 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   36 : __tmp typ=bool bnd=m
   37 : __link typ=w32 bnd=m
   38 : __tmp typ=w32 bnd=m
   41 : __tmp typ=bool bnd=m
   42 : __link typ=w32 bnd=m
   43 : __tmp typ=w32 bnd=m
   46 : __tmp typ=bool bnd=m
   47 : __tmp typ=w32 bnd=m
   48 : __tmp typ=w32 bnd=m
   49 : __link typ=w32 bnd=m
   50 : __tmp typ=w32 bnd=m
   53 : __tmp typ=bool bnd=m
   54 : __link typ=w32 bnd=m
   55 : __tmp typ=w32 bnd=m
   58 : __tmp typ=bool bnd=m
   59 : __tmp typ=w32 bnd=m
   60 : __tmp typ=w32 bnd=m
   61 : __tmp typ=w32 bnd=m
   62 : __ct_0s0 typ=w32 val=0s0 bnd=m
   64 : __tmp typ=w32 bnd=m
   83 : __either typ=bool bnd=m
   84 : __trgt typ=t13s_s2 val=0j bnd=m
   85 : __trgt typ=t21s_s2 val=0j bnd=m
   86 : __trgt typ=t13s_s2 val=0j bnd=m
   87 : __trgt typ=t21s_s2 val=0j bnd=m
   88 : __trgt typ=t13s_s2 val=0j bnd=m
   89 : __trgt typ=t21s_s2 val=0j bnd=m
   90 : __trgt typ=t13s_s2 val=0j bnd=m
   91 : __trgt typ=t21s_s2 val=0j bnd=m
   92 : __trgt typ=t13s_s2 val=0j bnd=m
   93 : __trgt typ=t21s_s2 val=0j bnd=m
]
Fmed3 {
    #3 off=0
    (__R_SP.11 var=12) st_def ()  <22>;
    (__vola.12 var=13) source ()  <23>;
    (__extPMb.15 var=16) source ()  <26>;
    (__extDMb.16 var=17) source ()  <27>;
    (__sp.17 var=18) source ()  <28>;
    (__extPMb___sint_____Pvoid___Pvoid.18 var=19) source ()  <29>;
    (__extPMb_void.19 var=20) source ()  <30>;
    (__extDMb_void.20 var=21) source ()  <31>;
    (__la.22 var=23 stl=X off=1) inp ()  <33>;
    (__la.23 var=23) deassign (__la.22)  <34>;
    (a.26 var=25 stl=X off=11) inp ()  <37>;
    (a.27 var=25) deassign (a.26)  <38>;
    (b.29 var=26 stl=X off=12) inp ()  <40>;
    (b.30 var=26) deassign (b.29)  <41>;
    (c.32 var=27 stl=X off=13) inp ()  <43>;
    (c.33 var=27) deassign (c.32)  <44>;
    (cmp.35 var=28 stl=X off=14) inp ()  <46>;
    (cmp.36 var=28) deassign (cmp.35)  <47>;
    (__rd___sp.38 var=22) rd_res_reg (__R_SP.11 __sp.17)  <49>;
    (__ct_0S0.39 var=29) const ()  <50>;
    (__tmp.41 var=31) __Pvoid__pl___Pvoid___sint (__rd___sp.38 __ct_0S0.39)  <52>;
    (__R_SP.42 var=12 __sp.43 var=18) wr_res_reg (__tmp.41 __sp.17)  <53>;
    (__link.46 var=32) w32_jalr_w32 (cmp.36)  <57>;
    call {
        (a.44 var=25 stl=X off=11) assign (a.27)  <55>;
        (b.45 var=26 stl=X off=12) assign (b.30)  <56>;
        (__link.47 var=32 stl=X off=1) assign (__link.46)  <58>;
        (__tmp.48 var=33 stl=X off=10 __extDMb.51 var=17 __extDMb_void.52 var=21 __extPMb.53 var=16 __extPMb___sint_____Pvoid___Pvoid.54 var=19 __extPMb_void.55 var=20 __vola.56 var=13) F_Z6__Pfn0PKvS0_ (__link.47 a.44 b.45 __extDMb.16 __extDMb_void.20 __extPMb.15 __extPMb___sint_____Pvoid___Pvoid.18 __extPMb_void.19 __vola.12)  <59>;
        (__tmp.49 var=33) deassign (__tmp.48)  <60>;
    } #4 off=1
    #5 off=2
    (__ct_0.57 var=34) const ()  <62>;
    (__tmp.59 var=36) bool__lt___sint___sint (__tmp.49 __ct_0.57)  <64>;
    (__trgt.272 var=92) const ()  <309>;
    () void_br_bool_t13s_s2 (__tmp.59 __trgt.272)  <310>;
    (__either.273 var=83) undefined ()  <311>;
    if {
        {
            () if_expr (__either.273)  <80>;
        } #7
        {
            #9 off=14
            (__link.77 var=37) w32_jalr_w32 (cmp.36)  <83>;
            call {
                (b.75 var=26 stl=X off=11) assign (b.30)  <81>;
                (c.76 var=27 stl=X off=12) assign (c.33)  <82>;
                (__link.78 var=37 stl=X off=1) assign (__link.77)  <84>;
                (__tmp.79 var=38 stl=X off=10 __extDMb.82 var=17 __extDMb_void.83 var=21 __extPMb.84 var=16 __extPMb___sint_____Pvoid___Pvoid.85 var=19 __extPMb_void.86 var=20 __vola.87 var=13) F_Z6__Pfn1PKvS0_ (__link.78 b.75 c.76 __extDMb.51 __extDMb_void.52 __extPMb.53 __extPMb___sint_____Pvoid___Pvoid.54 __extPMb_void.55 __vola.56)  <85>;
                (__tmp.80 var=38) deassign (__tmp.79)  <86>;
            } #10 off=15
            #11 off=16
            (__tmp.90 var=41) bool__lt___sint___sint (__tmp.80 __ct_0.57)  <90>;
            (__trgt.263 var=86) const ()  <294>;
            () void_br_bool_t13s_s2 (__tmp.90 __trgt.263)  <295>;
            (__either.264 var=83) undefined ()  <296>;
            if {
                {
                    () if_expr (__either.264)  <106>;
                } #13
                {
                } #14 off=23
                {
                    #16 off=17
                    (__link.108 var=42) w32_jalr_w32 (cmp.36)  <109>;
                    call {
                        (a.106 var=25 stl=X off=11) assign (a.27)  <107>;
                        (c.107 var=27 stl=X off=12) assign (c.33)  <108>;
                        (__link.109 var=42 stl=X off=1) assign (__link.108)  <110>;
                        (__tmp.110 var=43 stl=X off=10 __extDMb.113 var=17 __extDMb_void.114 var=21 __extPMb.115 var=16 __extPMb___sint_____Pvoid___Pvoid.116 var=19 __extPMb_void.117 var=20 __vola.118 var=13) F_Z6__Pfn2PKvS0_ (__link.109 a.106 c.107 __extDMb.82 __extDMb_void.83 __extPMb.84 __extPMb___sint_____Pvoid___Pvoid.85 __extPMb_void.86 __vola.87)  <111>;
                        (__tmp.111 var=43) deassign (__tmp.110)  <112>;
                    } #17 off=18
                    #18 off=19
                    (__tmp.121 var=46) bool__lt___sint___sint (__tmp.111 __ct_0.57)  <116>;
                    (__trgt.260 var=84) const ()  <289>;
                    () void_br_bool_t13s_s2 (__tmp.121 __trgt.260)  <290>;
                    (__either.261 var=83) undefined ()  <291>;
                    if {
                        {
                            () if_expr (__either.261)  <132>;
                        } #20
                        {
                        } #21 off=21
                        {
                            (__trgt.262 var=85) const ()  <292>;
                            () void_j_t21s_s2 (__trgt.262)  <293>;
                        } #22 off=20
                        {
                            (__tmp.137 var=47) merge (c.33 a.27)  <133>;
                        } #23
                    } #19
                    #49 off=22
                    (__trgt.265 var=87) const ()  <297>;
                    () void_j_t21s_s2 (__trgt.265)  <298>;
                } #15
                {
                    (__tmp.138 var=48) merge (b.30 __tmp.137)  <134>;
                    (__vola.139 var=13) merge (__vola.87 __vola.118)  <135>;
                    (__extPMb.140 var=16) merge (__extPMb.84 __extPMb.115)  <136>;
                    (__extDMb.141 var=17) merge (__extDMb.82 __extDMb.113)  <137>;
                    (__extPMb___sint_____Pvoid___Pvoid.142 var=19) merge (__extPMb___sint_____Pvoid___Pvoid.85 __extPMb___sint_____Pvoid___Pvoid.116)  <138>;
                    (__extPMb_void.143 var=20) merge (__extPMb_void.86 __extPMb_void.117)  <139>;
                    (__extDMb_void.144 var=21) merge (__extDMb_void.83 __extDMb_void.114)  <140>;
                } #24
            } #12
        } #8
        {
            #26 off=3
            (__link.147 var=49) w32_jalr_w32 (cmp.36)  <143>;
            call {
                (b.145 var=26 stl=X off=11) assign (b.30)  <141>;
                (c.146 var=27 stl=X off=12) assign (c.33)  <142>;
                (__link.148 var=49 stl=X off=1) assign (__link.147)  <144>;
                (__tmp.149 var=50 stl=X off=10 __extDMb.152 var=17 __extDMb_void.153 var=21 __extPMb.154 var=16 __extPMb___sint_____Pvoid___Pvoid.155 var=19 __extPMb_void.156 var=20 __vola.157 var=13) F_Z6__Pfn3PKvS0_ (__link.148 b.145 c.146 __extDMb.51 __extDMb_void.52 __extPMb.53 __extPMb___sint_____Pvoid___Pvoid.54 __extPMb_void.55 __vola.56)  <145>;
                (__tmp.150 var=50) deassign (__tmp.149)  <146>;
            } #27 off=4
            #46 off=5
            (__tmp.252 var=53) bool__lt___sint___sint (__ct_0.57 __tmp.150)  <264>;
            (__trgt.269 var=90) const ()  <304>;
            () void_br_bool_t13s_s2 (__tmp.252 __trgt.269)  <305>;
            (__either.270 var=83) undefined ()  <306>;
            if {
                {
                    () if_expr (__either.270)  <166>;
                } #30
                {
                } #31 off=12
                {
                    #33 off=6
                    (__link.178 var=54) w32_jalr_w32 (cmp.36)  <169>;
                    call {
                        (a.176 var=25 stl=X off=11) assign (a.27)  <167>;
                        (c.177 var=27 stl=X off=12) assign (c.33)  <168>;
                        (__link.179 var=54 stl=X off=1) assign (__link.178)  <170>;
                        (__tmp.180 var=55 stl=X off=10 __extDMb.183 var=17 __extDMb_void.184 var=21 __extPMb.185 var=16 __extPMb___sint_____Pvoid___Pvoid.186 var=19 __extPMb_void.187 var=20 __vola.188 var=13) F_Z6__Pfn4PKvS0_ (__link.179 a.176 c.177 __extDMb.152 __extDMb_void.153 __extPMb.154 __extPMb___sint_____Pvoid___Pvoid.155 __extPMb_void.156 __vola.157)  <171>;
                        (__tmp.181 var=55) deassign (__tmp.180)  <172>;
                    } #34 off=7
                    #35 off=8
                    (__tmp.191 var=58) bool__lt___sint___sint (__tmp.181 __ct_0.57)  <176>;
                    (__trgt.266 var=88) const ()  <299>;
                    () void_br_bool_t13s_s2 (__tmp.191 __trgt.266)  <300>;
                    (__either.267 var=83) undefined ()  <301>;
                    if {
                        {
                            () if_expr (__either.267)  <192>;
                        } #37
                        {
                        } #38 off=10
                        {
                            (__trgt.268 var=89) const ()  <302>;
                            () void_j_t21s_s2 (__trgt.268)  <303>;
                        } #39 off=9
                        {
                            (__tmp.207 var=59) merge (a.27 c.33)  <193>;
                        } #40
                    } #36
                    #51 off=11
                    (__trgt.271 var=91) const ()  <307>;
                    () void_j_t21s_s2 (__trgt.271)  <308>;
                } #32
                {
                    (__tmp.208 var=60) merge (b.30 __tmp.207)  <194>;
                    (__vola.209 var=13) merge (__vola.157 __vola.188)  <195>;
                    (__extPMb.210 var=16) merge (__extPMb.154 __extPMb.185)  <196>;
                    (__extDMb.211 var=17) merge (__extDMb.152 __extDMb.183)  <197>;
                    (__extPMb___sint_____Pvoid___Pvoid.212 var=19) merge (__extPMb___sint_____Pvoid___Pvoid.155 __extPMb___sint_____Pvoid___Pvoid.186)  <198>;
                    (__extPMb_void.213 var=20) merge (__extPMb_void.156 __extPMb_void.187)  <199>;
                    (__extDMb_void.214 var=21) merge (__extDMb_void.153 __extDMb_void.184)  <200>;
                } #41
            } #29
            #52 off=13
            (__trgt.274 var=93) const ()  <312>;
            () void_j_t21s_s2 (__trgt.274)  <313>;
        } #25
        {
            (__tmp.215 var=61) merge (__tmp.138 __tmp.208)  <201>;
            (__vola.216 var=13) merge (__vola.139 __vola.209)  <202>;
            (__extPMb.217 var=16) merge (__extPMb.140 __extPMb.210)  <203>;
            (__extDMb.218 var=17) merge (__extDMb.141 __extDMb.211)  <204>;
            (__extPMb___sint_____Pvoid___Pvoid.219 var=19) merge (__extPMb___sint_____Pvoid___Pvoid.142 __extPMb___sint_____Pvoid___Pvoid.212)  <205>;
            (__extPMb_void.220 var=20) merge (__extPMb_void.143 __extPMb_void.213)  <206>;
            (__extDMb_void.221 var=21) merge (__extDMb_void.144 __extDMb_void.214)  <207>;
        } #42
    } #6
    #44 off=25 nxt=-2
    (__rd___sp.222 var=22) rd_res_reg (__R_SP.11 __sp.43)  <208>;
    (__ct_0s0.223 var=62) const ()  <209>;
    (__tmp.225 var=64) __Pvoid__pl___Pvoid___sint (__rd___sp.222 __ct_0s0.223)  <211>;
    (__R_SP.226 var=12 __sp.227 var=18) wr_res_reg (__tmp.225 __sp.43)  <212>;
    () void___rts_jr_w32 (__la.23)  <213>;
    (__tmp.228 var=61 stl=X off=10) assign (__tmp.215)  <214>;
    () out (__tmp.228)  <215>;
    () sink (__vola.216)  <216>;
    () sink (__extPMb.217)  <219>;
    () sink (__extDMb.218)  <220>;
    () sink (__sp.227)  <221>;
    () sink (__extPMb___sint_____Pvoid___Pvoid.219)  <222>;
    () sink (__extPMb_void.220)  <223>;
    () sink (__extDMb_void.221)  <224>;
} #0
0 : 'src/qsort.c';
----------
0 : (0,92:0,0);
3 : (0,95:20,1);
4 : (0,95:18,1);
5 : (0,95:25,1);
6 : (0,95:29,1);
8 : (0,96:30,2);
9 : (0,96:21,2);
10 : (0,96:19,2);
11 : (0,96:26,2);
12 : (0,96:30,2);
14 : (0,96:32,3);
15 : (0,96:51,4);
16 : (0,96:42,4);
17 : (0,96:40,4);
18 : (0,96:47,4);
19 : (0,96:51,4);
21 : (0,96:53,5);
22 : (0,96:57,6);
25 : (0,97:30,11);
26 : (0,97:21,11);
27 : (0,97:19,11);
29 : (0,97:30,11);
31 : (0,97:32,12);
32 : (0,97:51,13);
33 : (0,97:42,13);
34 : (0,97:40,13);
35 : (0,97:47,13);
36 : (0,97:51,13);
38 : (0,97:53,14);
39 : (0,97:57,15);
44 : (0,95:8,21);
46 : (0,97:26,11);
----------
49 : (0,92:13,0);
50 : (0,92:13,0);
52 : (0,92:13,0);
53 : (0,92:13,0);
55 : (0,95:20,0);
56 : (0,95:20,0);
57 : (0,95:18,1);
58 : (0,95:18,0);
59 : (0,95:18,1);
62 : (0,95:27,0);
64 : (0,95:25,1);
80 : (0,95:29,1);
81 : (0,96:21,0);
82 : (0,96:21,0);
83 : (0,96:19,2);
84 : (0,96:19,0);
85 : (0,96:19,2);
90 : (0,96:26,2);
106 : (0,96:30,2);
107 : (0,96:42,0);
108 : (0,96:42,0);
109 : (0,96:40,4);
110 : (0,96:40,0);
111 : (0,96:40,4);
116 : (0,96:47,4);
132 : (0,96:51,4);
133 : (0,96:51,7);
134 : (0,96:30,9);
135 : (0,96:30,9);
136 : (0,96:30,9);
137 : (0,96:30,9);
138 : (0,96:30,9);
139 : (0,96:30,9);
140 : (0,96:30,9);
141 : (0,97:21,0);
142 : (0,97:21,0);
143 : (0,97:19,11);
144 : (0,97:19,0);
145 : (0,97:19,11);
166 : (0,97:30,11);
167 : (0,97:42,0);
168 : (0,97:42,0);
169 : (0,97:40,13);
170 : (0,97:40,0);
171 : (0,97:40,13);
176 : (0,97:47,13);
192 : (0,97:51,13);
193 : (0,97:51,16);
194 : (0,97:30,18);
195 : (0,97:30,18);
196 : (0,97:30,18);
197 : (0,97:30,18);
198 : (0,97:30,18);
199 : (0,97:30,18);
200 : (0,97:30,18);
201 : (0,95:29,20);
202 : (0,95:29,20);
203 : (0,95:29,20);
204 : (0,95:29,20);
205 : (0,95:29,20);
206 : (0,95:29,20);
207 : (0,95:29,20);
208 : (0,95:8,0);
209 : (0,95:8,0);
211 : (0,95:8,0);
212 : (0,95:8,21);
213 : (0,95:8,21);
214 : (0,95:29,0);
264 : (0,97:26,11);
290 : (0,96:51,4);
295 : (0,96:30,2);
300 : (0,97:51,13);
305 : (0,97:30,11);
310 : (0,95:29,1);

