
// File generated by noodle version U-2022.12#33f3808fcb#221128, Fri Mar 22 18:32:52 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -DNDEBUG -D__tct_patch__=0 -itrv32p3_cnn_chess.h +NOrlt +wRelease/chesswork src/string.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!!  size_t strxfrm(char * restrict, const char * restrict, size_t)
Fstrxfrm : user_defined, called {
    fnm : "strxfrm" 'size_t strxfrm(char * restrict, const char * restrict, size_t)';
    arg : ( w32:i w32:r w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] );
    frm : ( );
}
****
!!  size_t strlen(const char *)
Fstrlen : user_defined, called {
    fnm : "strlen" 'size_t strlen(const char *)';
    arg : ( w32:i w32:r w32:i );
    loc : ( X[1] X[10] X[11] );
}
***/

[
    0 : strxfrm typ=u08 bnd=e stl=PMb
    3 : __M_DMb typ=w08 bnd=d stl=DMb
   12 : __R_SP typ=w32 bnd=d stl=SP
   13 : __vola typ=u08 bnd=b stl=PMb
   16 : __extPMb typ=u08 bnd=b stl=PMb
   17 : __extDMb typ=w08 bnd=b stl=DMb
   18 : __sp typ=w32 bnd=b stl=SP
   19 : s2__rstr typ=w08 bnd=b stl=DMb
   20 : s1__rstr typ=w08 bnd=b stl=DMb
   21 : __extPMb_void typ=u08 bnd=b stl=PMb
   22 : __extDMb_void typ=w08 bnd=b stl=DMb
   23 : __rd___sp typ=w32 bnd=m
   24 : __la typ=w32 bnd=p tref=w32__
   25 : __rt typ=w32 bnd=p tref=size_t__
   26 : s1 typ=w32 bnd=p tref=__P__cchar__
   27 : s2 typ=w32 bnd=p tref=__P__cchar__
   28 : n typ=w32 bnd=p tref=size_t__
   29 : __ct_0S0 typ=w32 val=0S0 bnd=m
   31 : __tmp typ=w32 bnd=m
   33 : i typ=w32 bnd=m lscp=8 tref=size_t__
   37 : strlen typ=t21s_s2 val=0r bnd=m
   38 : __link typ=w32 bnd=m
   39 : __tmp typ=w32 bnd=m
   40 : __tmp typ=bool bnd=m
   41 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   45 : __fch_s2__rstr typ=w08 bnd=m
   48 : __ct_1 typ=w32 val=1f bnd=m
   51 : __tmp typ=bool bnd=m
   52 : __ct_0s0 typ=w32 val=0s0 bnd=m
   54 : __tmp typ=w32 bnd=m
   60 : __iv0_i typ=w32 bnd=m
   61 : __iv1_i typ=w32 bnd=m
   65 : __shv___iv0_i typ=w32 bnd=m
   66 : __shv___iv1_i typ=w32 bnd=m
   81 : __either typ=bool bnd=m
   82 : __trgt typ=t13s_s2 val=0j bnd=m
   83 : __trgt typ=t13s_s2 val=0j bnd=m
   84 : __trgt typ=t21s_s2 val=0j bnd=m
]
Fstrxfrm {
    #3 off=0
    (__M_DMb.2 var=3) st_def ()  <4>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__vola.12 var=13) source ()  <23>;
    (__extPMb.15 var=16) source ()  <26>;
    (__extDMb.16 var=17) source ()  <27>;
    (__sp.17 var=18) source ()  <28>;
    (s2__rstr.18 var=19) source ()  <29>;
    (s1__rstr.19 var=20) source ()  <30>;
    (__extPMb_void.20 var=21) source ()  <31>;
    (__extDMb_void.21 var=22) source ()  <32>;
    (__la.23 var=24 stl=X off=1) inp ()  <34>;
    (__la.24 var=24) deassign (__la.23)  <35>;
    (s1.27 var=26 stl=X off=11) inp ()  <38>;
    (s1.28 var=26) deassign (s1.27)  <39>;
    (s2.30 var=27 stl=X off=12) inp ()  <41>;
    (s2.31 var=27) deassign (s2.30)  <42>;
    (n.33 var=28 stl=X off=13) inp ()  <44>;
    (n.34 var=28) deassign (n.33)  <45>;
    (__rd___sp.36 var=23) rd_res_reg (__R_SP.11 __sp.17)  <47>;
    (__ct_0S0.37 var=29) const ()  <48>;
    (__tmp.39 var=31) __Pvoid__pl___Pvoid___sint (__rd___sp.36 __ct_0S0.37)  <50>;
    (__R_SP.40 var=12 __sp.41 var=18) wr_res_reg (__tmp.39 __sp.17)  <51>;
    (strlen.49 var=37) const ()  <60>;
    (__link.50 var=38) w32_jal_t21s_s2 (strlen.49)  <61>;
    call {
        (s2.46 var=27 stl=X off=11) assign (s2.31)  <57>;
        (__link.51 var=38 stl=X off=1) assign (__link.50)  <62>;
        (__tmp.52 var=39 stl=X off=10 __extDMb.55 var=17 __extDMb_void.56 var=22 __extPMb.57 var=16 __extPMb_void.58 var=21 s2__rstr.59 var=19 __vola.60 var=13) Fstrlen (__link.51 s2.46 __extDMb.16 __extDMb_void.21 __extPMb.15 __extPMb_void.20 s2__rstr.18 __vola.12)  <63>;
        (__tmp.53 var=39) deassign (__tmp.52)  <64>;
    } #4 off=1
    #5 off=2
    (__tmp.207 var=40) bool__ge___uint___uint (__tmp.53 n.34)  <246>;
    (__trgt.212 var=83) const ()  <259>;
    () void_br_bool_t13s_s2 (__tmp.207 __trgt.212)  <260>;
    (__either.213 var=81) undefined ()  <261>;
    if {
        {
            () if_expr (__either.213)  <85>;
        } #7
        {
        } #14 off=6
        {
            #98 off=3
            (__ct_0.81 var=41) const ()  <87>;
            (__ct_1.108 var=48) const ()  <113>;
            (__trgt.210 var=82) const ()  <256>;
            do {
                {
                    (s1__rstr.90 var=20) entry (s1__rstr.126 s1__rstr.19)  <96>;
                    (i.97 var=33) entry (i.140 __ct_0.81)  <103>;
                    (__iv0_i.180 var=60) entry (__iv0_i.181 s2.31)  <193>;
                    (__iv1_i.185 var=61) entry (__iv1_i.186 s1.28)  <197>;
                } #11
                {
                    (__fch_s2__rstr.103 var=45) load (__M_DMb.2 __iv0_i.180 s2__rstr.59)  <109>;
                    (__M_DMb.106 var=3 s1__rstr.107 var=20) store (__fch_s2__rstr.103 __iv1_i.185 s1__rstr.90)  <112>;
                    (i.110 var=33) __uint__pl___uint___uint (i.97 __ct_1.108)  <115>;
                    (__shv___iv0_i.195 var=65) __Pvoid__pl___Pvoid___sint (__iv0_i.180 __ct_1.108)  <207>;
                    (__shv___iv1_i.196 var=66) __Pvoid__pl___Pvoid___sint (__iv1_i.185 __ct_1.108)  <208>;
                    (__tmp.201 var=51) bool__ge___uint___uint (__tmp.53 i.110)  <222>;
                    () void_br_bool_t13s_s2 (__tmp.201 __trgt.210)  <257>;
                    (__either.211 var=81) undefined ()  <258>;
                } #70 off=4
                {
                    () while_expr (__either.211)  <117>;
                    (s1__rstr.126 var=20 s1__rstr.127 var=20) exit (s1__rstr.107)  <125>;
                    (i.140 var=33 i.141 var=33) exit (i.110)  <132>;
                    (__iv0_i.181 var=60 __iv0_i.182 var=60) exit (__shv___iv0_i.195)  <194>;
                    (__iv1_i.186 var=61 __iv1_i.187 var=61) exit (__shv___iv1_i.196)  <198>;
                } #13
            } #10 rng=[1,2147483647]
            #100 off=5
            (__trgt.214 var=84) const ()  <262>;
            () void_j_t21s_s2 (__trgt.214)  <263>;
        } #8
        {
            (s1__rstr.148 var=20) merge (s1__rstr.19 s1__rstr.127)  <136>;
        } #15
    } #6
    #17 off=7 nxt=-2
    (__rd___sp.151 var=23) rd_res_reg (__R_SP.11 __sp.41)  <139>;
    (__ct_0s0.152 var=52) const ()  <140>;
    (__tmp.154 var=54) __Pvoid__pl___Pvoid___sint (__rd___sp.151 __ct_0s0.152)  <142>;
    (__R_SP.155 var=12 __sp.156 var=18) wr_res_reg (__tmp.154 __sp.41)  <143>;
    () void___rts_jr_w32 (__la.24)  <144>;
    (__rt.157 var=25 stl=X off=10) assign (__tmp.53)  <145>;
    () out (__rt.157)  <146>;
    () sink (__vola.60)  <147>;
    () sink (__extPMb.57)  <150>;
    () sink (__extDMb.55)  <151>;
    () sink (__sp.156)  <152>;
    () sink (s2__rstr.59)  <153>;
    () sink (s1__rstr.148)  <154>;
    () sink (__extPMb_void.58)  <155>;
    () sink (__extDMb_void.56)  <156>;
} #0
0 : 'src/string.c';
----------
0 : (0,124:0,0);
3 : (0,127:27,1);
4 : (0,127:20,1);
5 : (0,128:15,2);
6 : (0,128:4,2);
8 : (0,129:8,3);
10 : (0,129:8,4);
14 : (0,128:4,12);
17 : (0,131:4,15);
70 : (0,129:29,9);
----------
47 : (0,124:7,0);
48 : (0,124:7,0);
50 : (0,124:7,0);
51 : (0,124:7,0);
57 : (0,127:27,0);
61 : (0,127:20,1);
62 : (0,127:20,0);
63 : (0,127:20,1);
85 : (0,128:4,2);
87 : (0,129:25,0);
96 : (0,129:8,4);
103 : (0,129:8,4);
109 : (0,130:22,4);
112 : (0,130:14,4);
113 : (0,129:41,0);
115 : (0,129:41,0);
117 : (0,129:8,9);
125 : (0,129:8,9);
132 : (0,129:8,9);
136 : (0,128:4,14);
139 : (0,131:4,0);
140 : (0,131:4,0);
142 : (0,131:4,0);
143 : (0,131:4,15);
144 : (0,131:4,15);
145 : (0,131:11,0);
222 : (0,129:29,9);
246 : (0,128:15,2);
257 : (0,129:8,9);
260 : (0,128:4,2);

