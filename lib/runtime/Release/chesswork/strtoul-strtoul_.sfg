
// File generated by noodle version U-2022.12#33f3808fcb#221128, Sat Mar 16 14:39:49 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -DNDEBUG -D__tct_patch__=0 -itrv32p3_cnn_chess.h +NOrlt +wRelease/chesswork src/strtoul.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!!  unsigned long strtoul(const char * restrict, char ** restrict, int)
Fstrtoul : user_defined, called {
    fnm : "strtoul" 'unsigned long strtoul(const char * restrict, char ** restrict, int)';
    arg : ( w32:i w32:r w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] );
    frm : ( );
}
****
***/

[
    0 : strtoul typ=u08 bnd=e stl=PMb
    3 : __M_DMb typ=w08 bnd=d stl=DMb
    5 : __M_DMw typ=w32 bnd=d stl=DMw
    8 : __M_DMw_stat typ=w32 bnd=d stl=DMw_stat
   12 : __R_SP typ=w32 bnd=d stl=SP
   18 : __sp typ=w32 bnd=b stl=SP
   19 : nptr__rstr typ=w08 bnd=b stl=DMb
   20 : _ct_code typ=w08 bnd=e algn=1 stl=DMb
   22 : errno typ=w08 bnd=e sz=4 algn=4 stl=DMb_stat tref=__sint_DMb_stat
   24 : endptr__rstr typ=w08 bnd=b stl=DMb
   25 : __rd___sp typ=w32 bnd=m
   27 : __ptr__ct_code typ=w32 val=0a bnd=m adro=20
   29 : __ptr_errno typ=w32 val=0a bnd=m adro=22
   30 : __la typ=w32 bnd=p tref=w32__
   32 : nptr typ=w32 bnd=p tref=__P__cchar__
   33 : endptr typ=w32 bnd=p tref=__P__P__cchar__
   34 : base typ=w32 bnd=p tref=__sint__
   35 : __ct_0S0 typ=w32 val=0S0 bnd=m
   37 : __tmp typ=w32 bnd=m
   38 : s typ=w32 bnd=m tref=__P__cchar__
   39 : c typ=w32 bnd=m tref=__sint__
   47 : neg typ=w32 bnd=m tref=__sint__
   50 : cutoff typ=w32 bnd=m tref=__ulong__
   52 : acc typ=w32 bnd=m tref=__ulong__
   53 : any typ=w32 bnd=m tref=__sint__
   58 : __tmpb1___sint_isdigit___sint typ=__uchar bnd=m lscp=76 tref=__uchar__
   72 : __tmpb6_Fstrtoul typ=bool bnd=m lscp=97 tref=bool__
   74 : __ct_1 typ=w32 val=1f bnd=m
   78 : __tmp typ=__uchar bnd=m
   84 : __tmp typ=w32 bnd=m
   85 : __fch__ct_code typ=__uchar bnd=m
   87 : __ct_64 typ=w32 val=64f bnd=m
   89 : __tmp typ=w32 bnd=m
   91 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   93 : __tmp typ=bool bnd=m
   94 : __ct_45 typ=w32 val=45f bnd=m
   96 : __tmp typ=bool bnd=m
  102 : __fch_nptr__rstr typ=w08 bnd=m
  106 : __ct_43 typ=w32 val=43f bnd=m
  108 : __tmp typ=bool bnd=m
  116 : __tmp typ=bool bnd=m
  119 : __ct_16 typ=w32 val=16f bnd=m
  121 : __tmp typ=bool bnd=m
  122 : __tmp typ=bool bnd=m
  123 : __ct_48 typ=w32 val=48f bnd=m
  125 : __tmp typ=bool bnd=m
  128 : __tmp typ=bool bnd=m
  129 : __fch_nptr__rstr typ=w08 bnd=m
  131 : __ct_120 typ=w32 val=120f bnd=m
  133 : __tmp typ=bool bnd=m
  138 : __ct_88 typ=w32 val=88f bnd=m
  140 : __tmp typ=bool bnd=m
  141 : __tmp typ=bool bnd=m
  144 : __tmp typ=bool bnd=m
  148 : __fch_nptr__rstr typ=w08 bnd=m
  150 : __ct_2 typ=w32 val=2f bnd=m
  157 : __tmp typ=bool bnd=m
  160 : __tmp typ=bool bnd=m
  161 : __ct_8 typ=w32 val=8f bnd=m
  163 : __ct_10 typ=w32 val=10f bnd=m
  165 : __tmp typ=w32 bnd=m
  166 : __ct_4294967295 typ=w32 val=-1f bnd=m
  173 : __tmp typ=w32 bnd=m
  185 : __tmp typ=w32 bnd=m
  186 : __fch__ct_code typ=__uchar bnd=m
  188 : __ct_4 typ=w32 val=4f bnd=m
  190 : __tmp typ=w32 bnd=m
  194 : __tmp typ=bool bnd=m
  205 : __ct_3 typ=w32 val=3f bnd=m
  207 : __tmp typ=w32 bnd=m
  211 : __tmp typ=bool bnd=m
  221 : __tmp typ=w32 bnd=m
  226 : __ct_55 typ=w32 val=55f bnd=m
  228 : __ct_87 typ=w32 val=87f bnd=m
  230 : __tmp typ=w32 bnd=m
  232 : __tmp typ=bool bnd=m
  235 : __tmp typ=bool bnd=m
  236 : __tmp typ=bool bnd=m
  239 : __tmp typ=bool bnd=m
  240 : __tmp typ=bool bnd=m
  243 : __tmp typ=bool bnd=m
  244 : __tmp typ=bool bnd=m
  249 : __ct_34 typ=w32 val=34f bnd=m
  261 : __tmp typ=__uchar bnd=m
  267 : __tmp typ=bool bnd=m
  270 : __tmp typ=bool bnd=m
  273 : __tmp typ=bool bnd=m
  280 : __tmp typ=bool bnd=m
  283 : __tmp typ=bool bnd=m
  286 : __tmp typ=w32 bnd=m
  287 : __tmp typ=w32 bnd=m
  288 : __ct_0s0 typ=w32 val=0s0 bnd=m
  290 : __tmp typ=w32 bnd=m
  293 : c typ=__uchar bnd=m
  299 : __ct_m48 typ=w32 val=-48f bnd=m
  300 : __shv_s typ=w32 bnd=m
  301 : __shv_s typ=w32 bnd=m
  302 : __shv_s typ=w32 bnd=m
  333 : __true typ=bool val=1f bnd=m
  334 : __false typ=bool val=0f bnd=m
  335 : __either typ=bool bnd=m
  336 : __trgt typ=t13s_s2 val=0j bnd=m
  337 : __trgt typ=t13s_s2 val=0j bnd=m
  338 : __trgt typ=t21s_s2 val=0j bnd=m
  339 : __trgt typ=t13s_s2 val=0j bnd=m
  340 : __trgt typ=t21s_s2 val=0j bnd=m
  341 : __trgt typ=t13s_s2 val=0j bnd=m
  342 : __trgt typ=t13s_s2 val=0j bnd=m
  343 : __trgt typ=t13s_s2 val=0j bnd=m
  344 : __trgt typ=t13s_s2 val=0j bnd=m
  345 : __trgt typ=t13s_s2 val=0j bnd=m
  346 : __trgt typ=t21s_s2 val=0j bnd=m
  347 : __trgt typ=t13s_s2 val=0j bnd=m
  348 : __trgt typ=t21s_s2 val=0j bnd=m
  349 : __trgt typ=t13s_s2 val=0j bnd=m
  350 : __trgt typ=t21s_s2 val=0j bnd=m
  351 : __trgt typ=t13s_s2 val=0j bnd=m
  352 : __trgt typ=t21s_s2 val=0j bnd=m
  353 : __trgt typ=t13s_s2 val=0j bnd=m
  354 : __trgt typ=t13s_s2 val=0j bnd=m
  355 : __trgt typ=t21s_s2 val=0j bnd=m
  356 : __trgt typ=t13s_s2 val=0j bnd=m
  357 : __trgt typ=t13s_s2 val=0j bnd=m
  358 : __trgt typ=t13s_s2 val=0j bnd=m
  359 : __trgt typ=t13s_s2 val=0j bnd=m
  360 : __trgt typ=t21s_s2 val=0j bnd=m
  361 : __trgt typ=t13s_s2 val=0j bnd=m
  362 : __trgt typ=t21s_s2 val=0j bnd=m
  363 : __trgt typ=t21s_s2 val=0j bnd=m
  364 : __trgt typ=t13s_s2 val=0j bnd=m
  365 : __trgt typ=t13s_s2 val=0j bnd=m
  366 : __trgt typ=t21s_s2 val=0j bnd=m
  367 : __trgt typ=t13s_s2 val=0j bnd=m
  368 : __trgt typ=t21s_s2 val=0j bnd=m
  369 : __trgt typ=t13s_s2 val=0j bnd=m
  370 : __trgt typ=t21s_s2 val=0j bnd=m
  371 : __trgt typ=t21s_s2 val=0j bnd=m
  372 : __trgt typ=t21s_s2 val=0j bnd=m
]
Fstrtoul {
    #306 off=0
    (__M_DMb.2 var=3) st_def ()  <4>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__sp.17 var=18) source ()  <28>;
    (nptr__rstr.18 var=19) source ()  <29>;
    (_ct_code.19 var=20) source ()  <30>;
    (errno.21 var=22) source ()  <32>;
    (endptr__rstr.23 var=24) source ()  <34>;
    (__ptr__ct_code.25 var=27) const ()  <36>;
    (__la.29 var=30 stl=X off=1) inp ()  <40>;
    (__la.30 var=30) deassign (__la.29)  <41>;
    (nptr.33 var=32 stl=X off=11) inp ()  <44>;
    (nptr.34 var=32) deassign (nptr.33)  <45>;
    (endptr.36 var=33 stl=X off=12) inp ()  <47>;
    (endptr.37 var=33) deassign (endptr.36)  <48>;
    (base.39 var=34 stl=X off=13) inp ()  <50>;
    (base.40 var=34) deassign (base.39)  <51>;
    (__rd___sp.42 var=25) rd_res_reg (__R_SP.11 __sp.17)  <53>;
    (__ct_0S0.43 var=35) const ()  <54>;
    (__tmp.45 var=37) __Pvoid__pl___Pvoid___sint (__rd___sp.42 __ct_0S0.43)  <56>;
    (__R_SP.46 var=12 __sp.47 var=18) wr_res_reg (__tmp.45 __sp.17)  <57>;
    (__ct_1.146 var=74) const ()  <157>;
    (__ct_64.220 var=87) const ()  <232>;
    (__ct_0.225 var=91) const ()  <237>;
    (__trgt.2642 var=336) const ()  <2918>;
    do {
        {
            (s.104 var=38) entry (s.254 nptr.34)  <115>;
        } #6
        {
            (__tmp.149 var=78) load (__M_DMb.2 s.104 nptr__rstr.18)  <160>;
            (__tmp.217 var=84) __Pvoid__pl___Pvoid___sint (__ptr__ct_code.25 __tmp.149)  <229>;
            (__fch__ct_code.218 var=85) load (__M_DMb.2 __tmp.217 _ct_code.19)  <230>;
            (__tmp.222 var=89) __uint__ad___uint___uint (__fch__ct_code.218 __ct_64.220)  <234>;
            (__tmp.227 var=93) bool__ne___sint___sint (__tmp.222 __ct_0.225)  <239>;
            (__shv_s.2577 var=300) __Pvoid__pl___Pvoid___sint (s.104 __ct_1.146)  <2712>;
            () void_br_bool_t13s_s2 (__tmp.227 __trgt.2642)  <2919>;
            (__either.2643 var=335) undefined ()  <2920>;
        } #14 off=1
        {
            () while_expr (__either.2643)  <240>;
            (s.254 var=38 s.255 var=38) exit (__shv_s.2577)  <254>;
            (c.258 var=293 c.259 var=293) exit (__tmp.149)  <256>;
        } #15
    } #5
    #16 off=2
    (__ct_45.338 var=94) const ()  <296>;
    (__tmp.340 var=96) bool__eq___sint___sint (c.259 __ct_45.338)  <298>;
    (s.400 var=38) __Pvoid__pl___Pvoid___sint (s.255 __ct_1.146)  <359>;
    (__fch_nptr__rstr.401 var=102) load (__M_DMb.2 s.255 nptr__rstr.18)  <360>;
    (__trgt.2647 var=339) const ()  <2926>;
    () void_br_bool_t13s_s2 (__tmp.340 __trgt.2647)  <2927>;
    (__either.2648 var=335) undefined ()  <2928>;
    if {
        {
            () if_expr (__either.2648)  <354>;
        } #18
        {
        } #19 off=7
        {
            #21 off=3
            (__ct_43.405 var=106) const ()  <364>;
            (__tmp.407 var=108) bool__eq___sint___sint (c.259 __ct_43.405)  <366>;
            (__trgt.2644 var=337) const ()  <2921>;
            () void_br_bool_t13s_s2 (__tmp.407 __trgt.2644)  <2922>;
            (__either.2645 var=335) undefined ()  <2923>;
            if {
                {
                    () if_expr (__either.2645)  <422>;
                } #23
                {
                } #183 off=5
                {
                    (__trgt.2646 var=338) const ()  <2924>;
                    () void_j_t21s_s2 (__trgt.2646)  <2925>;
                } #25 off=4
                {
                    (s.468 var=38) merge (s.400 s.255)  <428>;
                    (c.469 var=39) merge (__fch_nptr__rstr.401 c.259)  <429>;
                } #26
            } #22
            #314 off=6
            (__trgt.2649 var=340) const ()  <2929>;
            () void_j_t21s_s2 (__trgt.2649)  <2930>;
        } #20
        {
            (s.471 var=38) merge (s.400 s.468)  <431>;
            (c.472 var=39) merge (__fch_nptr__rstr.401 c.469)  <432>;
            (neg.473 var=47) merge (__ct_1.146 __ct_0.225)  <433>;
        } #27
    } #17
    #28 off=8
    (__tmp.478 var=116) bool__eq___sint___sint (base.40 __ct_0.225)  <438>;
    (__ct_16.536 var=119) const ()  <497>;
    (__ct_48.595 var=123) const ()  <557>;
    (__ct_2.787 var=150) const ()  <752>;
    (__trgt.2650 var=341) const ()  <2931>;
    () void_br_bool_t13s_s2 (__tmp.478 __trgt.2650)  <2932>;
    (__either.2651 var=335) undefined ()  <2933>;
    if {
        {
            () if_expr (__either.2651)  <494>;
        } #30
        {
            (__false.2652 var=334) const ()  <2934>;
        } #31
        {
            (__tmp.2621 var=121) bool__ne___sint___sint (base.40 __ct_16.536)  <2868>;
            (__trgt.2653 var=342) const ()  <2935>;
            () void_br_bool_t13s_s2 (__tmp.2621 __trgt.2653)  <2936>;
            (__either.2654 var=335) undefined ()  <2937>;
        } #32 off=9
        {
            (__tmp.2622 var=122) merge (__false.2652 __either.2654)  <2869>;
        } #33
    } #29
    if {
        {
            () if_expr (__tmp.2622)  <556>;
        } #36
        {
            (__true.2657 var=333) const ()  <2941>;
        } #38
        {
            (__tmp.2623 var=125) bool__ne___sint___sint (c.472 __ct_48.595)  <2870>;
            (__trgt.2658 var=344) const ()  <2942>;
            () void_br_bool_t13s_s2 (__tmp.2623 __trgt.2658)  <2943>;
            (__either.2659 var=335) undefined ()  <2944>;
        } #37 off=10
        {
            (__tmp.2624 var=128) merge (__true.2657 __either.2659)  <2871>;
        } #39
    } #35
    if {
        {
            () if_expr (__tmp.2624)  <618>;
        } #42
        {
            (__true.2660 var=333) const ()  <2945>;
        } #50
        {
            #44 off=11
            (__fch_nptr__rstr.656 var=129) load (__M_DMb.2 s.471 nptr__rstr.18)  <619>;
            (__ct_120.658 var=131) const ()  <621>;
            (__tmp.660 var=133) bool__eq___sint___sint (__fch_nptr__rstr.656 __ct_120.658)  <623>;
            (__trgt.2655 var=343) const ()  <2938>;
            () void_br_bool_t13s_s2 (__tmp.660 __trgt.2655)  <2939>;
            (__either.2656 var=335) undefined ()  <2940>;
            if {
                {
                    () if_expr (__either.2656)  <679>;
                } #46
                {
                    (__false.2661 var=334) const ()  <2946>;
                } #47
                {
                    (__ct_88.720 var=138) const ()  <684>;
                    (__tmp.2625 var=140) bool__ne___sint___sint (__fch_nptr__rstr.656 __ct_88.720)  <2872>;
                    (__trgt.2662 var=345) const ()  <2947>;
                    () void_br_bool_t13s_s2 (__tmp.2625 __trgt.2662)  <2948>;
                    (__either.2663 var=335) undefined ()  <2949>;
                } #48 off=12
                {
                    (__tmp.2626 var=141) merge (__false.2661 __either.2663)  <2873>;
                } #49
            } #45
        } #43
        {
            (__tmp.2627 var=144) merge (__true.2660 __tmp.2626)  <2874>;
        } #51
    } #41
    if {
        {
            () if_expr (__tmp.2627)  <746>;
        } #54
        {
        } #56 off=14
        {
            (__fch_nptr__rstr.785 var=148) load (__M_DMb.2 __shv_s.2578 nptr__rstr.18)  <750>;
            (__shv_s.2578 var=301) __Pvoid__pl___Pvoid___sint (s.471 __ct_1.146)  <2713>;
            (__shv_s.2579 var=301) __Pvoid__pl___Pvoid___sint (s.471 __ct_2.787)  <2714>;
            (__trgt.2664 var=346) const ()  <2950>;
            () void_j_t21s_s2 (__trgt.2664)  <2951>;
        } #55 off=13
        {
            (s.792 var=38) merge (s.471 __shv_s.2579)  <757>;
            (c.793 var=39) merge (c.472 __fch_nptr__rstr.785)  <758>;
            (base.794 var=34) merge (base.40 __ct_16.536)  <759>;
        } #57
    } #53
    #58 off=15
    (__tmp.2628 var=157) bool__ne___sint___sint (base.794 __ct_0.225)  <2875>;
    (__trgt.2668 var=349) const ()  <2957>;
    () void_br_bool_t13s_s2 (__tmp.2628 __trgt.2668)  <2958>;
    (__either.2669 var=335) undefined ()  <2959>;
    if {
        {
            () if_expr (__either.2669)  <818>;
        } #60
        {
        } #68 off=20
        {
            #62 off=16
            (__tmp.855 var=160) bool__eq___sint___sint (c.793 __ct_48.595)  <821>;
            (__ct_8.911 var=161) const ()  <878>;
            (__trgt.2665 var=347) const ()  <2952>;
            () void_br_bool_t13s_s2 (__tmp.855 __trgt.2665)  <2953>;
            (__either.2666 var=335) undefined ()  <2954>;
            if {
                {
                    () if_expr (__either.2666)  <877>;
                } #64
                {
                } #65 off=18
                {
                    (__ct_10.913 var=163) const ()  <880>;
                    (__trgt.2667 var=348) const ()  <2955>;
                    () void_j_t21s_s2 (__trgt.2667)  <2956>;
                } #66 off=17
                {
                    (__tmp.915 var=165) merge (__ct_8.911 __ct_10.913)  <882>;
                } #67
            } #63
            #315 off=19
            (__trgt.2670 var=350) const ()  <2960>;
            () void_j_t21s_s2 (__trgt.2670)  <2961>;
        } #61
        {
            (base.916 var=34) merge (base.794 __tmp.915)  <883>;
        } #69
    } #59
    #287 off=21
    (__ptr_errno.27 var=29) const ()  <38>;
    (__ct_4294967295.917 var=166) const ()  <884>;
    (cutoff.920 var=50) __uint__dv___uint___uint (__ct_4294967295.917 base.916)  <887>;
    (__tmp.924 var=173) __uint__md___uint___uint (__ct_4294967295.917 base.916)  <891>;
    (__ct_4.1110 var=188) const ()  <1080>;
    (__ct_3.1244 var=205) const ()  <1216>;
    (__ct_55.1439 var=226) const ()  <1414>;
    (__ct_87.1441 var=228) const ()  <1416>;
    (__ct_34.2012 var=249) const ()  <2126>;
    (__ct_m48.2574 var=299) const ()  <2708>;
    (__trgt.2671 var=351) const ()  <2962>;
    (__trgt.2673 var=352) const ()  <2965>;
    (__trgt.2674 var=353) const ()  <2967>;
    (__trgt.2676 var=354) const ()  <2971>;
    (__trgt.2678 var=355) const ()  <2974>;
    (__trgt.2679 var=356) const ()  <2976>;
    (__trgt.2681 var=357) const ()  <2980>;
    (__trgt.2683 var=358) const ()  <2983>;
    (__trgt.2687 var=359) const ()  <2988>;
    (__trgt.2689 var=360) const ()  <2991>;
    (__trgt.2690 var=361) const ()  <2993>;
    (__trgt.2692 var=362) const ()  <2996>;
    (__trgt.2693 var=363) const ()  <2998>;
    (__trgt.2707 var=371) const ()  <3020>;
    (__trgt.2708 var=372) const ()  <3022>;
    do {
        {
            (errno.996 var=22) entry (errno.2054 errno.21)  <965>;
            (s.1000 var=38) entry (s.2062 s.792)  <969>;
            (c.1002 var=39) entry (c.2066 c.793)  <971>;
            (acc.1017 var=52) entry (acc.2096 __ct_0.225)  <986>;
            (any.1018 var=53) entry (any.2098 __ct_0.225)  <987>;
        } #75
        {
            #83 off=22
            (__tmpb1___sint_isdigit___sint.1047 var=58) __uchar___uchar___sint (c.1002)  <1016>;
            (__tmp.1107 var=185) __Pvoid__pl___Pvoid___sint (__ptr__ct_code.25 __tmpb1___sint_isdigit___sint.1047)  <1077>;
            (__fch__ct_code.1108 var=186) load (__M_DMb.2 __tmp.1107 _ct_code.19)  <1078>;
            (__tmp.1112 var=190) __uint__ad___uint___uint (__fch__ct_code.1108 __ct_4.1110)  <1082>;
            (__tmp.1117 var=194) bool__ne___sint___sint (__tmp.1112 __ct_0.225)  <1087>;
            () void_br_bool_t13s_s2 (__tmp.1117 __trgt.2676)  <2972>;
            (__either.2677 var=335) undefined ()  <2973>;
            if {
                {
                    () if_expr (__either.2677)  <1143>;
                } #85
                {
                    (c.1175 var=39) __sint__pl___sint___sint (c.1002 __ct_m48.2574)  <1146>;
                } #86 off=30
                {
                    #94 off=23
                    (__tmp.1246 var=207) __uint__ad___uint___uint (__fch__ct_code.1108 __ct_3.1244)  <1218>;
                    (__tmp.2620 var=211) bool__eq___sint___sint (__tmp.1246 __ct_0.225)  <2867>;
                    () void_br_bool_t13s_s2 (__tmp.2620 __trgt.2674)  <2968>;
                    (__either.2675 var=335) undefined ()  <2969>;
                    if {
                        {
                            () if_expr (__either.2675)  <1279>;
                            () chess_rear_then ()  <2970>;
                        } #96
                        {
                            () sink (__sp.47)  <1425>;
                            () sink (errno.996)  <1429>;
                            () sync_sink (errno.996) sid=10  <1441>;
                            () sync_sink (s.1000) sid=14  <1445>;
                            () sync_sink (acc.1017) sid=31  <1462>;
                            () sync_sink (any.1018) sid=32  <1463>;
                            (c.1460 var=39) never ()  <1502>;
                            () void_j_t21s_s2 (__trgt.2707)  <3021>;
                        } #112 off=28 nxt=-3 tgt=1
                        {
                            #104 off=24
                            (__tmp.1377 var=221) __uint__ad___uint___uint (__fch__ct_code.1108 __ct_2.787)  <1351>;
                            (__tmpb6_Fstrtoul.1383 var=72) bool__ne___sint___sint (__tmp.1377 __ct_0.225)  <1357>;
                            () void_br_bool_t13s_s2 (__tmpb6_Fstrtoul.1383 __trgt.2671)  <2963>;
                            (__either.2672 var=335) undefined ()  <2964>;
                            if {
                                {
                                    () if_expr (__either.2672)  <1413>;
                                } #106
                                {
                                } #107 off=26
                                {
                                    () void_j_t21s_s2 (__trgt.2673)  <2966>;
                                } #108 off=25
                                {
                                    (__tmp.1443 var=230) merge (__ct_55.1439 __ct_87.1441)  <1418>;
                                } #109
                            } #105
                            #110 off=27
                            (c.1444 var=39) __sint__mi___sint___sint (c.1002 __tmp.1443)  <1419>;
                        } #97
                        {
                            (c.1515 var=39) merge (c.1460 c.1444)  <1557>;
                        } #113
                    } #95
                    #316 off=29
                    () void_j_t21s_s2 (__trgt.2678)  <2975>;
                } #87
                {
                    (c.1570 var=39) merge (c.1175 c.1515)  <1612>;
                } #114
            } #84
            #115 off=31
            (__tmp.1610 var=232) bool__ge___sint___sint (c.1570 base.916)  <1652>;
            () void_br_bool_t13s_s2 (__tmp.1610 __trgt.2679)  <2977>;
            (__either.2680 var=335) undefined ()  <2978>;
            if {
                {
                    () if_expr (__either.2680)  <1708>;
                    () chess_rear_then ()  <2979>;
                } #117
                {
                    () sink (__sp.47)  <1714>;
                    () sink (errno.996)  <1718>;
                    () sync_sink (errno.996) sid=10  <1730>;
                    () sync_sink (s.1000) sid=14  <1734>;
                    () sync_sink (acc.1017) sid=31  <1751>;
                    () sync_sink (any.1018) sid=32  <1752>;
                    () void_j_t21s_s2 (__trgt.2708)  <3023>;
                } #119 off=33 nxt=-3 tgt=1
                {
                } #120 off=32
                {
                } #121
            } #116
            #122 off=34
            (__tmp.1778 var=235) bool__lt___sint___sint (any.1018 __ct_0.225)  <1888>;
            () void_br_bool_t13s_s2 (__tmp.1778 __trgt.2690)  <2994>;
            (__either.2691 var=335) undefined ()  <2995>;
            if {
                {
                    () if_expr (__either.2691)  <1944>;
                } #124
                {
                } #125 off=41
                {
                    #248 off=35
                    (__tmp.2595 var=236) bool__lt___uint___uint (cutoff.920 acc.1017)  <2768>;
                    () void_br_bool_t13s_s2 (__tmp.2595 __trgt.2683)  <2984>;
                    (__either.2684 var=335) undefined ()  <2985>;
                    if {
                        {
                            () if_expr (__either.2684)  <2001>;
                        } #129
                        {
                            (__true.2685 var=333) const ()  <2986>;
                        } #130
                        {
                            #132 off=36
                            (__tmp.2629 var=239) bool__ne___uint___uint (acc.1017 cutoff.920)  <2876>;
                            () void_br_bool_t13s_s2 (__tmp.2629 __trgt.2681)  <2981>;
                            (__either.2682 var=335) undefined ()  <2982>;
                            if {
                                {
                                    () if_expr (__either.2682)  <2060>;
                                } #134
                                {
                                    (__false.2686 var=334) const ()  <2987>;
                                } #136
                                {
                                    (__tmp.2599 var=240) bool__lt___sint___sint (__tmp.924 c.1570)  <2775>;
                                    () void_br_bool_t13s_s2 (__tmp.2599 __trgt.2687)  <2989>;
                                    (__either.2688 var=335) undefined ()  <2990>;
                                } #251 off=37
                                {
                                    (__tmp.1951 var=243) merge (__false.2686 __either.2688)  <2064>;
                                } #137
                            } #133
                        } #131
                        {
                            (__tmp.1952 var=244) merge (__true.2685 __tmp.1951)  <2065>;
                        } #138
                    } #128
                    if {
                        {
                            () if_expr (__tmp.1952)  <2121>;
                        } #141
                        {
                            (__M_DMw_stat.2014 var=8 errno.2015 var=22) store (__ct_34.2012 __ptr_errno.27 errno.996)  <2128>;
                        } #142 off=39
                        {
                            (acc.2019 var=52) __uint__ml___uint___uint (acc.1017 base.916)  <2132>;
                            (acc.2021 var=52) __uint__pl___uint___uint (acc.2019 c.1570)  <2134>;
                            () void_j_t21s_s2 (__trgt.2689)  <2992>;
                        } #143 off=38
                        {
                            (errno.2022 var=22) merge (errno.2015 errno.996)  <2135>;
                            (acc.2023 var=52) merge (__ct_4294967295.917 acc.2021)  <2136>;
                            (any.2024 var=53) merge (__ct_4294967295.917 __ct_1.146)  <2137>;
                        } #144
                    } #140
                    #317 off=40
                    () void_j_t21s_s2 (__trgt.2692)  <2997>;
                } #126
                {
                    (errno.2025 var=22) merge (errno.996 errno.2022)  <2138>;
                    (acc.2026 var=52) merge (acc.1017 acc.2023)  <2139>;
                    (any.2027 var=53) merge (any.1018 any.2024)  <2140>;
                } #145
            } #123
            #146 off=42
            (__tmp.2031 var=261) load (__M_DMb.2 s.1000 nptr__rstr.18)  <2144>;
            (__shv_s.2580 var=302) __Pvoid__pl___Pvoid___sint (s.1000 __ct_1.146)  <2715>;
            () void_j_t21s_s2 (__trgt.2693)  <2999>;
            (__true.2694 var=333) const ()  <3000>;
        } #76
        {
            () while_expr (__true.2694)  <2149>;
            (errno.2054 var=22 errno.2055 var=22) exit (errno.2025)  <2159>;
            (s.2062 var=38 s.2063 var=38) exit (__shv_s.2580)  <2163>;
            (c.2066 var=39 c.2067 var=39) exit (__tmp.2031)  <2165>;
            (acc.2096 var=52 acc.2097 var=52) exit (acc.2026)  <2180>;
            (any.2098 var=53 any.2099 var=53) exit (any.2027)  <2181>;
        } #147
    } #74 rng=[1,2147483647]
    #180 off=43 nxt=-4
    (errno.2569 var=22) never ()  <2700>;
    (s.2570 var=38) never ()  <2701>;
    (acc.2572 var=52) never ()  <2703>;
    (any.2573 var=53) never ()  <2704>;
    () sink (__sp.47)  <2705>;
    () sink (errno.2055)  <2706>;
    sync {
        (errno.2210 var=22) sync_link (errno.2569) sid=10  <2269>;
        (s.2214 var=38) sync_link (s.2570) sid=14  <2273>;
        (acc.2231 var=52) sync_link (acc.2572) sid=31  <2290>;
        (any.2232 var=53) sync_link (any.2573) sid=32  <2291>;
    } #1 off=44
    #150 off=45
    (__tmp.2630 var=267) bool__eq___sint___sint (neg.473 __ct_0.225)  <2877>;
    (__trgt.2695 var=364) const ()  <3001>;
    () void_br_bool_t13s_s2 (__tmp.2630 __trgt.2695)  <3002>;
    (__either.2696 var=335) undefined ()  <3003>;
    if {
        {
            () if_expr (__either.2696)  <2373>;
        } #152
        {
            (__true.2697 var=333) const ()  <3004>;
        } #154
        {
            (__tmp.2631 var=270) bool__ge___sint___sint (__ct_0.225 any.2232)  <2878>;
            (__trgt.2698 var=365) const ()  <3005>;
            () void_br_bool_t13s_s2 (__tmp.2631 __trgt.2698)  <3006>;
            (__either.2699 var=335) undefined ()  <3007>;
        } #254 off=46
        {
            (__tmp.2632 var=273) merge (__true.2697 __either.2699)  <2879>;
        } #155
    } #151
    if {
        {
            () if_expr (__tmp.2632)  <2435>;
        } #158
        {
        } #160 off=48
        {
            (acc.2377 var=52) __uint__mi___uint___uint (__ct_0.225 acc.2231)  <2438>;
            (__trgt.2700 var=366) const ()  <3008>;
            () void_j_t21s_s2 (__trgt.2700)  <3009>;
        } #159 off=47
        {
            (acc.2378 var=52) merge (acc.2231 acc.2377)  <2439>;
        } #161
    } #157
    #162 off=49
    (__tmp.2634 var=280) bool__eq___Pvoid___Pvoid (endptr.37 __ct_0.225)  <2881>;
    (__trgt.2704 var=369) const ()  <3015>;
    () void_br_bool_t13s_s2 (__tmp.2634 __trgt.2704)  <3016>;
    (__either.2705 var=335) undefined ()  <3017>;
    if {
        {
            () if_expr (__either.2705)  <2499>;
        } #164
        {
        } #173 off=54
        {
            #166 off=50
            (__tmp.2633 var=283) bool__eq___sint___sint (any.2232 __ct_0.225)  <2880>;
            (__trgt.2701 var=367) const ()  <3010>;
            () void_br_bool_t13s_s2 (__tmp.2633 __trgt.2701)  <3011>;
            (__either.2702 var=335) undefined ()  <3012>;
            if {
                {
                    () if_expr (__either.2702)  <2558>;
                } #168
                {
                } #170 off=52
                {
                    (__tmp.2498 var=286) __Pvoid__pl___Pvoid___sint (s.2214 __ct_4294967295.917)  <2561>;
                    (__trgt.2703 var=368) const ()  <3013>;
                    () void_j_t21s_s2 (__trgt.2703)  <3014>;
                } #169 off=51
                {
                    (__tmp.2499 var=287) merge (nptr.34 __tmp.2498)  <2562>;
                } #171
            } #167
            #172 off=53
            (__M_DMw.2500 var=5 endptr__rstr.2501 var=24) store (__tmp.2499 endptr.37 endptr__rstr.23)  <2563>;
            (__trgt.2706 var=370) const ()  <3018>;
            () void_j_t21s_s2 (__trgt.2706)  <3019>;
        } #165
        {
            (endptr__rstr.2502 var=24) merge (endptr__rstr.23 endptr__rstr.2501)  <2564>;
        } #174
    } #163
    #176 off=55 nxt=-2
    (__rd___sp.2503 var=25) rd_res_reg (__R_SP.11 __sp.47)  <2565>;
    (__ct_0s0.2504 var=288) const ()  <2566>;
    (__tmp.2506 var=290) __Pvoid__pl___Pvoid___sint (__rd___sp.2503 __ct_0s0.2504)  <2568>;
    (__R_SP.2507 var=12 __sp.2508 var=18) wr_res_reg (__tmp.2506 __sp.47)  <2569>;
    () void___rts_jr_w32 (__la.30)  <2570>;
    (acc.2509 var=52 stl=X off=10) assign (acc.2378)  <2571>;
    () out (acc.2509)  <2572>;
    () sink (__sp.2508)  <2578>;
    () sink (errno.2210)  <2582>;
    () sink (endptr__rstr.2502)  <2584>;
} #0
0 : 'src/strtoul.c';
----------
0 : (0,55:0,0);
1 : (0,93:8,232);
5 : (0,73:10,6);
14 : (0,73:10,36);
16 : (0,74:14,37);
17 : (0,74:8,37);
19 : (0,74:22,38);
20 : (0,77:15,44);
21 : (0,79:22,45);
22 : (0,79:16,45);
25 : (0,79:16,50);
28 : (0,82:18,56);
29 : (0,82:23,56);
31 : (0,82:23,57);
32 : (0,82:31,58);
35 : (0,82:38,60);
37 : (0,83:14,61);
38 : (0,82:38,62);
41 : (0,83:21,64);
43 : (0,83:35,65);
44 : (0,83:28,65);
45 : (0,83:35,65);
47 : (0,83:35,66);
48 : (0,83:41,67);
50 : (0,83:21,70);
53 : (0,82:8,72);
55 : (0,83:50,73);
56 : (0,82:8,78);
58 : (0,88:17,81);
59 : (0,88:8,81);
61 : (0,89:21,82);
62 : (0,89:25,82);
63 : (0,89:32,82);
65 : (0,89:34,83);
66 : (0,89:38,84);
68 : (0,88:8,88);
74 : (0,93:8,96);
76 : (0,93:58,96);
83 : (0,94:16,121);
84 : (0,94:16,121);
86 : (0,95:26,122);
87 : (0,96:25,124);
94 : (0,96:21,149);
95 : (0,96:21,149);
97 : (0,96:25,150);
104 : (0,97:40,176);
105 : (0,97:40,176);
107 : (0,97:46,177);
108 : (0,97:57,178);
110 : (0,96:25,182);
112 : (0,99:24,183);
115 : (0,100:22,189);
116 : (0,100:16,189);
119 : (0,101:24,190);
120 : (0,100:16,192);
122 : (0,102:24,195);
123 : (0,102:16,195);
125 : (0,93:8,196);
126 : (0,93:8,198);
128 : (0,104:33,199);
130 : (0,104:33,200);
131 : (0,104:51,201);
132 : (0,104:41,201);
133 : (0,104:51,201);
136 : (0,104:51,203);
140 : (0,104:16,207);
142 : (0,104:67,208);
143 : (0,108:23,213);
146 : (0,93:8,227);
150 : (0,114:16,233);
151 : (0,114:16,233);
154 : (0,114:16,235);
157 : (0,114:8,237);
159 : (0,115:20,238);
160 : (0,114:8,240);
162 : (0,116:19,243);
163 : (0,116:8,243);
165 : (0,117:24,244);
166 : (0,117:40,244);
167 : (0,117:40,244);
169 : (0,117:44,245);
170 : (0,117:50,246);
172 : (0,117:24,249);
173 : (0,116:8,250);
176 : (0,118:8,253);
248 : (0,104:24,199);
251 : (0,104:56,202);
254 : (0,114:23,234);
287 : (0,92:29,92);
----------
53 : (0,55:18,0);
54 : (0,55:18,0);
56 : (0,55:18,0);
57 : (0,55:18,0);
115 : (0,73:10,6);
157 : (0,72:38,0);
160 : (0,72:36,8);
229 : (0,73:17,20);
230 : (0,73:17,20);
232 : (0,73:17,0);
234 : (0,73:17,20);
237 : (0,73:10,0);
239 : (0,73:10,36);
240 : (0,73:10,36);
254 : (0,73:10,36);
256 : (0,73:10,36);
296 : (0,74:14,0);
298 : (0,74:14,37);
354 : (0,74:8,37);
359 : (0,76:22,40);
360 : (0,76:20,41);
364 : (0,79:22,0);
366 : (0,79:22,45);
422 : (0,79:16,45);
428 : (0,79:16,52);
429 : (0,79:16,52);
431 : (0,74:8,55);
432 : (0,74:8,55);
433 : (0,74:8,55);
438 : (0,82:18,56);
494 : (0,82:23,56);
497 : (0,82:34,0);
556 : (0,82:38,60);
557 : (0,83:14,0);
618 : (0,83:21,64);
619 : (0,83:25,65);
621 : (0,83:28,0);
623 : (0,83:28,65);
679 : (0,83:35,65);
684 : (0,83:41,0);
746 : (0,82:8,72);
750 : (0,84:21,73);
752 : (0,85:21,0);
757 : (0,82:8,80);
758 : (0,82:8,80);
759 : (0,82:8,80);
818 : (0,88:8,81);
821 : (0,89:25,82);
877 : (0,89:32,82);
878 : (0,89:34,0);
880 : (0,89:38,0);
882 : (0,89:32,85);
883 : (0,88:8,90);
884 : (0,91:29,0);
887 : (0,91:29,91);
891 : (0,92:29,92);
965 : (0,93:8,96);
969 : (0,93:8,96);
971 : (0,93:8,96);
986 : (0,93:8,96);
987 : (0,93:8,96);
1016 : (0,94:20,102);
1077 : (0,94:20,107);
1078 : (0,94:20,107);
1080 : (0,94:20,0);
1082 : (0,94:20,107);
1087 : (0,94:16,121);
1143 : (0,94:16,121);
1146 : (0,95:26,122);
1216 : (0,96:25,0);
1218 : (0,96:25,135);
1279 : (0,96:21,149);
1351 : (0,97:29,161);
1357 : (0,97:40,175);
1413 : (0,97:40,176);
1414 : (0,97:46,0);
1416 : (0,97:57,0);
1418 : (0,97:40,179);
1419 : (0,97:26,180);
1557 : (0,96:21,185);
1612 : (0,94:16,188);
1652 : (0,100:22,189);
1708 : (0,100:16,189);
1888 : (0,102:24,195);
1944 : (0,102:16,195);
2001 : (0,104:33,199);
2060 : (0,104:51,201);
2064 : (0,104:51,204);
2065 : (0,104:33,206);
2121 : (0,104:16,207);
2126 : (0,107:32,0);
2128 : (0,107:24,210);
2132 : (0,110:28,214);
2134 : (0,111:28,215);
2135 : (0,104:16,218);
2136 : (0,104:16,218);
2137 : (0,104:16,218);
2138 : (0,102:16,221);
2139 : (0,102:16,221);
2140 : (0,102:16,221);
2144 : (0,93:52,225);
2149 : (0,93:8,227);
2159 : (0,93:8,227);
2163 : (0,93:8,227);
2165 : (0,93:8,227);
2180 : (0,93:8,227);
2181 : (0,93:8,227);
2373 : (0,114:16,233);
2435 : (0,114:8,237);
2438 : (0,115:22,238);
2439 : (0,114:8,242);
2499 : (0,116:8,243);
2558 : (0,117:40,244);
2561 : (0,117:44,245);
2562 : (0,117:40,247);
2563 : (0,117:16,248);
2564 : (0,116:8,252);
2565 : (0,118:8,0);
2566 : (0,118:8,0);
2568 : (0,118:8,0);
2569 : (0,118:8,253);
2570 : (0,118:8,253);
2571 : (0,118:16,0);
2708 : (0,95:26,0);
2712 : (0,72:38,0);
2713 : (0,84:21,0);
2714 : (0,85:18,0);
2715 : (0,93:54,0);
2768 : (0,104:24,199);
2775 : (0,104:56,202);
2867 : (0,96:21,149);
2868 : (0,82:31,58);
2869 : (0,82:23,59);
2870 : (0,83:14,61);
2871 : (0,82:38,63);
2872 : (0,83:41,67);
2873 : (0,83:35,68);
2874 : (0,83:21,71);
2875 : (0,88:17,81);
2876 : (0,104:41,201);
2877 : (0,114:16,233);
2878 : (0,114:23,234);
2879 : (0,114:16,236);
2880 : (0,117:40,244);
2881 : (0,116:19,243);
2919 : (0,73:10,36);
2922 : (0,79:16,45);
2927 : (0,74:8,37);
2932 : (0,82:23,56);
2936 : (0,82:38,60);
2939 : (0,83:35,65);
2943 : (0,83:21,64);
2948 : (0,82:8,72);
2953 : (0,89:32,82);
2958 : (0,88:8,81);
2963 : (0,97:40,176);
2968 : (0,96:21,149);
2972 : (0,94:16,121);
2977 : (0,100:16,189);
2981 : (0,104:51,201);
2984 : (0,104:33,199);
2989 : (0,104:16,207);
2994 : (0,102:16,195);
2999 : (0,93:8,227);
3002 : (0,114:16,233);
3006 : (0,114:8,237);
3011 : (0,117:40,244);
3016 : (0,116:8,243);

