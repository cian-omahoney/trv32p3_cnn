
// File generated by noodle version U-2022.12#33f3808fcb#221128, Fri Mar 22 17:52:38 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -DNDEBUG -D__tct_patch__=0 -itrv32p3_cnn_chess.h +NOrlt +wRelease/chesswork src/clib_inline.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!! extern inline int puts(const char *)
Fputs : user_defined, called {
    fnm : "puts" 'int puts(const char *)';
    arg : ( w32:i w32:r w32:i );
    loc : ( X[1] X[10] X[11] );
    frm : ( );
}
****
!! extern int fputs(const char *, FILE *)
Ffputs : user_defined, called {
    fnm : "fputs" 'int fputs(const char *, FILE *)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
    llv : 0 0 0 0 0 ;
}
!! extern int fputc(int, FILE *)
Ffputc : user_defined, called {
    fnm : "fputc" 'int fputc(int, FILE *)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
    llv : 0 0 0 0 0 ;
}
***/

[
    0 : puts typ=u08 bnd=e stl=PMb
    8 : __M_DMw_stat typ=w32 bnd=d stl=DMw_stat
   12 : __R_SP typ=w32 bnd=d stl=SP
   13 : __vola typ=u08 bnd=b stl=PMb
   16 : __extPMb typ=u08 bnd=b stl=PMb
   17 : __extDMb typ=w08 bnd=b stl=DMb
   18 : __sp typ=w32 bnd=b stl=SP
   19 : stdout typ=w08 bnd=e sz=4 algn=4 stl=DMb_stat tref=__PFILE_DMb_stat
   20 : __extDMb___PFILE typ=w08 bnd=b stl=DMb
   21 : __extPMb_FILE typ=u08 bnd=b stl=PMb
   22 : __extPMb_void typ=u08 bnd=b stl=PMb
   23 : __extDMb_void typ=w08 bnd=b stl=DMb
   24 : __rd___sp typ=w32 bnd=m
   26 : __ptr_stdout typ=w32 val=0a bnd=m adro=19
   27 : __la typ=w32 bnd=p tref=w32__
   28 : __rt typ=w32 bnd=p tref=__sint__
   29 : s typ=w32 bnd=p tref=__P__cchar__
   30 : __ct_0S0 typ=w32 val=0S0 bnd=m
   32 : __tmp typ=w32 bnd=m
   34 : __fch_stdout typ=w32 bnd=m
   37 : fputs typ=t21s_s2 val=0r bnd=m
   38 : __link typ=w32 bnd=m
   39 : __tmp typ=w32 bnd=m
   40 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   42 : __tmp typ=bool bnd=m
   43 : __ct_10 typ=w32 val=10f bnd=m
   44 : __ct typ=w32 bnd=m
   45 : __fch_stdout typ=w32 bnd=m
   48 : fputc typ=t21s_s2 val=0r bnd=m
   50 : __tmp typ=w32 bnd=m
   51 : __ct_0s0 typ=w32 val=0s0 bnd=m
   53 : __tmp typ=w32 bnd=m
   66 : __either typ=bool bnd=m
   67 : __trgt typ=t13s_s2 val=0j bnd=m
]
Fputs {
    #3 off=0
    (__M_DMw_stat.7 var=8) st_def ()  <14>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__vola.12 var=13) source ()  <23>;
    (__extPMb.15 var=16) source ()  <26>;
    (__extDMb.16 var=17) source ()  <27>;
    (__sp.17 var=18) source ()  <28>;
    (stdout.18 var=19) source ()  <29>;
    (__extDMb___PFILE.19 var=20) source ()  <30>;
    (__extPMb_FILE.20 var=21) source ()  <31>;
    (__extPMb_void.21 var=22) source ()  <32>;
    (__extDMb_void.22 var=23) source ()  <33>;
    (__ptr_stdout.24 var=26) const ()  <35>;
    (__la.26 var=27 stl=X off=1) inp ()  <37>;
    (__la.27 var=27) deassign (__la.26)  <38>;
    (s.30 var=29 stl=X off=11) inp ()  <41>;
    (s.31 var=29) deassign (s.30)  <42>;
    (__rd___sp.33 var=24) rd_res_reg (__R_SP.11 __sp.17)  <44>;
    (__ct_0S0.34 var=30) const ()  <45>;
    (__tmp.36 var=32) __Pvoid__pl___Pvoid___sint (__rd___sp.33 __ct_0S0.34)  <47>;
    (__R_SP.37 var=12 __sp.38 var=18) wr_res_reg (__tmp.36 __sp.17)  <48>;
    (__fch_stdout.42 var=34) load (__M_DMw_stat.7 __ptr_stdout.24 stdout.18)  <53>;
    (fputs.46 var=37) const ()  <57>;
    (__link.47 var=38) w32_jal_t21s_s2 (fputs.46)  <58>;
    call {
        (s.41 var=29 stl=X off=11) assign (s.31)  <52>;
        (__fch_stdout.43 var=34 stl=X off=12) assign (__fch_stdout.42)  <54>;
        (__link.48 var=38 stl=X off=1) assign (__link.47)  <59>;
        (__tmp.49 var=39 stl=X off=10 __extDMb.52 var=17 __extDMb___PFILE.53 var=20 __extDMb_void.54 var=23 __extPMb.55 var=16 __extPMb_FILE.56 var=21 __extPMb_void.57 var=22 stdout.58 var=19 __vola.59 var=13) Ffputs (__link.48 s.41 __fch_stdout.43 __extDMb.16 __extDMb___PFILE.19 __extDMb_void.22 __extPMb.15 __extPMb_FILE.20 __extPMb_void.21 stdout.18 __vola.12)  <60>;
        (__tmp.50 var=39) deassign (__tmp.49)  <61>;
    } #4 off=1
    #5 off=2
    (__ct_0.60 var=40) const ()  <63>;
    (__tmp.62 var=42) bool__lt___sint___sint (__tmp.50 __ct_0.60)  <65>;
    (__ct_0s0.110 var=51) const ()  <106>;
    (__trgt.156 var=67) const ()  <220>;
    () void_br_bool_t13s_s2 (__tmp.62 __trgt.156)  <221>;
    (__either.157 var=66) undefined ()  <222>;
    if {
        {
            () if_expr (__either.157)  <82>;
        } #7
        {
        } #8 off=6
        {
            #17 off=3
            (__ct_10.79 var=43) const ()  <83>;
            (__fch_stdout.82 var=45) load (__M_DMw_stat.7 __ptr_stdout.24 stdout.58)  <86>;
            (fputc.86 var=48) const ()  <90>;
            (__rd___sp.142 var=24) rd_res_reg (__R_SP.11 __sp.38)  <195>;
            (__tmp.143 var=53) __Pvoid__pl___Pvoid___sint (__rd___sp.142 __ct_0s0.110)  <196>;
            (__R_SP.144 var=12 __sp.145 var=18) wr_res_reg (__tmp.143 __sp.38)  <197>;
            () void_j_t21s_s2 (fputc.86)  <210>;
            call {
                (__ct.81 var=44 stl=X off=11) assign (__ct_10.79)  <85>;
                (__fch_stdout.83 var=45 stl=X off=12) assign (__fch_stdout.82)  <87>;
                (__la.88 var=27 stl=X off=1) assign (__la.27)  <92>;
                (__tmp.89 var=50 stl=X off=10 __extDMb.92 var=17 __extDMb___PFILE.93 var=20 __extDMb_void.94 var=23 __extPMb.95 var=16 __extPMb_FILE.96 var=21 __extPMb_void.97 var=22 stdout.98 var=19 __vola.99 var=13) Ffputc (__la.88 __ct.81 __fch_stdout.83 __extDMb.52 __extDMb___PFILE.53 __extDMb_void.54 __extPMb.55 __extPMb_FILE.56 __extPMb_void.57 stdout.58 __vola.59)  <93>;
                (__tmp.90 var=50) deassign (__tmp.89)  <94>;
            } #11 off=4
            #18 off=5 nxt=-2
            (__rt.146 var=28 stl=X off=10) assign (__tmp.90)  <199>;
            () out (__rt.146)  <200>;
            () sink (__vola.99)  <201>;
            () sink (__extPMb.95)  <202>;
            () sink (__extDMb.92)  <203>;
            () sink (__sp.145)  <204>;
            () sink (stdout.98)  <205>;
            () sink (__extDMb___PFILE.93)  <206>;
            () sink (__extPMb_FILE.96)  <207>;
            () sink (__extPMb_void.97)  <208>;
            () sink (__extDMb_void.94)  <209>;
        } #9
        {
        } #12
    } #6
    #14 off=7 nxt=-2
    (__rd___sp.109 var=24) rd_res_reg (__R_SP.11 __sp.38)  <105>;
    (__tmp.112 var=53) __Pvoid__pl___Pvoid___sint (__rd___sp.109 __ct_0s0.110)  <108>;
    (__R_SP.113 var=12 __sp.114 var=18) wr_res_reg (__tmp.112 __sp.38)  <109>;
    () void___rts_jr_w32 (__la.27)  <110>;
    (__rt.115 var=28 stl=X off=10) assign (__tmp.50)  <111>;
    () out (__rt.115)  <112>;
    () sink (__vola.59)  <113>;
    () sink (__extPMb.55)  <116>;
    () sink (__extDMb.52)  <117>;
    () sink (__sp.114)  <118>;
    () sink (stdout.58)  <119>;
    () sink (__extDMb___PFILE.53)  <120>;
    () sink (__extPMb_FILE.56)  <121>;
    () sink (__extPMb_void.57)  <122>;
    () sink (__extDMb_void.54)  <123>;
} #0
0 : 'include/stdio.h';
----------
0 : (0,203:16,0);
3 : (0,205:22,1);
4 : (0,205:13,1);
5 : (0,206:11,2);
6 : (0,206:4,2);
8 : (0,207:8,3);
9 : (0,207:8,5);
11 : (0,208:11,6);
14 : (0,208:4,10);
17 : (0,208:4,10);
18 : (0,208:4,10);
----------
44 : (0,203:16,0);
45 : (0,203:16,0);
47 : (0,203:16,0);
48 : (0,203:16,0);
52 : (0,205:19,0);
53 : (0,205:22,1);
54 : (0,205:22,0);
58 : (0,205:13,1);
59 : (0,205:13,0);
60 : (0,205:13,1);
63 : (0,206:13,0);
65 : (0,206:11,2);
82 : (0,206:4,2);
83 : (0,208:21,0);
85 : (0,208:21,0);
86 : (0,208:23,6);
87 : (0,208:23,0);
92 : (0,208:11,0);
93 : (0,208:11,6);
105 : (0,208:4,0);
106 : (0,208:4,0);
108 : (0,208:4,0);
109 : (0,208:4,10);
110 : (0,208:4,10);
111 : (0,208:4,0);
195 : (0,208:4,0);
196 : (0,208:4,0);
197 : (0,208:4,10);
199 : (0,208:4,0);
210 : (0,208:11,6);
221 : (0,206:4,2);

