
// File generated by noodle version U-2022.12#33f3808fcb#221128, Thu Feb 29 15:22:31 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -DNDEBUG -D__tct_patch__=0 -itrv32p3_cnn_chess.h +NOrlt +wRelease/chesswork src/clib_inline.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!! extern inline int isprint(int)
Fisprint : user_defined, called {
    fnm : "isprint" 'int isprint(int)';
    arg : ( w32:i w32:r w32:i );
    loc : ( X[1] X[10] X[11] );
    frm : ( );
}
****
***/

[
    0 : isprint typ=u08 bnd=e stl=PMb
    3 : __M_DMb typ=w08 bnd=d stl=DMb
   12 : __R_SP typ=w32 bnd=d stl=SP
   18 : __sp typ=w32 bnd=b stl=SP
   19 : _ct_code typ=w08 bnd=e algn=1 stl=DMb
   21 : __rd___sp typ=w32 bnd=m
   23 : __ptr__ct_code typ=w32 val=0a bnd=m adro=19
   24 : __la typ=w32 bnd=p tref=w32__
   25 : __rt typ=w32 bnd=p tref=__sint__
   26 : c typ=w32 bnd=p tref=__sint__
   27 : __ct_0S0 typ=w32 val=0S0 bnd=m
   29 : __tmp typ=w32 bnd=m
   31 : __tmpb2_Fisprint typ=__uchar bnd=m tref=__uchar__
   33 : __tmpb0_Fisprint typ=bool bnd=m tref=bool__
   38 : __tmp typ=w32 bnd=m
   39 : __fch__ct_code typ=__uchar bnd=m
   41 : __ct_151 typ=w32 val=151f bnd=m
   43 : __tmp typ=w32 bnd=m
   45 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   48 : __ct_9 typ=w32 val=9f bnd=m
   50 : __tmp typ=bool bnd=m
   53 : __tmp typ=bool bnd=m
   55 : __ct_0s0 typ=w32 val=0s0 bnd=m
   57 : __tmp typ=w32 bnd=m
   65 : __ct_1 typ=w32 val=1f bnd=m
   76 : __false typ=bool val=0f bnd=m
   77 : __either typ=bool bnd=m
   78 : __trgt typ=t13s_s2 val=0j bnd=m
   79 : __trgt typ=t13s_s2 val=0j bnd=m
   80 : __trgt typ=t21s_s2 val=0j bnd=m
]
Fisprint {
    #9 off=0
    (__M_DMb.2 var=3) st_def ()  <4>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__sp.17 var=18) source ()  <28>;
    (_ct_code.18 var=19) source ()  <29>;
    (__ptr__ct_code.21 var=23) const ()  <32>;
    (__la.23 var=24 stl=X off=1) inp ()  <34>;
    (__la.24 var=24) deassign (__la.23)  <35>;
    (c.27 var=26 stl=X off=11) inp ()  <38>;
    (c.28 var=26) deassign (c.27)  <39>;
    (__rd___sp.30 var=21) rd_res_reg (__R_SP.11 __sp.17)  <41>;
    (__ct_0S0.31 var=27) const ()  <42>;
    (__tmp.33 var=29) __Pvoid__pl___Pvoid___sint (__rd___sp.30 __ct_0S0.31)  <44>;
    (__R_SP.34 var=12 __sp.35 var=18) wr_res_reg (__tmp.33 __sp.17)  <45>;
    (__tmpb2_Fisprint.42 var=31) __uchar___uchar___sint (c.28)  <53>;
    (__tmp.63 var=38) __Pvoid__pl___Pvoid___sint (__ptr__ct_code.21 __tmpb2_Fisprint.42)  <75>;
    (__fch__ct_code.64 var=39) load (__M_DMb.2 __tmp.63 _ct_code.18)  <76>;
    (__ct_151.66 var=41) const ()  <78>;
    (__tmp.68 var=43) __uint__ad___uint___uint (__fch__ct_code.64 __ct_151.66)  <80>;
    (__ct_0.72 var=45) const ()  <84>;
    (__ct_1.128 var=65) const ()  <175>;
    (__tmpb0_Fisprint.136 var=33) bool__eq___sint___sint (__tmp.68 __ct_0.72)  <204>;
    (__trgt.139 var=78) const ()  <216>;
    () void_br_bool_t13s_s2 (__tmpb0_Fisprint.136 __trgt.139)  <217>;
    (__either.140 var=77) undefined ()  <218>;
    if {
        {
            () if_expr (__either.140)  <103>;
        } #11
        {
            (__false.141 var=76) const ()  <219>;
        } #13
        {
            (__ct_9.91 var=48) const ()  <104>;
            (__tmp.93 var=50) bool__ne___sint___sint (c.28 __ct_9.91)  <106>;
            (__trgt.142 var=79) const ()  <220>;
            () void_br_bool_t13s_s2 (__tmp.93 __trgt.142)  <221>;
            (__either.143 var=77) undefined ()  <222>;
        } #12 off=1
        {
            (__tmp.96 var=53) merge (__false.141 __either.143)  <109>;
        } #14
    } #10
    if {
        {
            () if_expr (__tmp.96)  <177>;
        } #22
        {
        } #23 off=3
        {
            (__trgt.144 var=80) const ()  <223>;
            () void_j_t21s_s2 (__trgt.144)  <224>;
        } #24 off=2
        {
            (__rt.130 var=25) merge (__ct_1.128 __ct_0.72)  <178>;
        } #25
    } #21
    #17 off=4 nxt=-2
    (__rd___sp.98 var=21) rd_res_reg (__R_SP.11 __sp.35)  <111>;
    (__ct_0s0.99 var=55) const ()  <112>;
    (__tmp.101 var=57) __Pvoid__pl___Pvoid___sint (__rd___sp.98 __ct_0s0.99)  <114>;
    (__R_SP.102 var=12 __sp.103 var=18) wr_res_reg (__tmp.101 __sp.35)  <115>;
    () void___rts_jr_w32 (__la.24)  <116>;
    (__rt.104 var=25 stl=X off=10) assign (__rt.130)  <117>;
    () out (__rt.104)  <118>;
    () sink (__sp.103)  <124>;
} #0
0 : 'include/ctype.h';
----------
0 : (0,60:19,0);
9 : (0,60:77,20);
10 : (0,60:77,20);
12 : (0,60:82,21);
13 : (0,60:77,22);
17 : (0,60:28,24);
21 : (0,60:77,24);
22 : (0,60:77,24);
23 : (0,60:77,24);
24 : (0,60:77,24);
25 : (0,60:77,24);
----------
41 : (0,60:19,0);
42 : (0,60:19,0);
44 : (0,60:19,0);
45 : (0,60:19,0);
53 : (0,60:45,3);
75 : (0,60:35,8);
76 : (0,60:35,8);
78 : (0,60:35,0);
80 : (0,60:35,8);
84 : (0,60:77,0);
103 : (0,60:77,20);
104 : (0,60:82,0);
106 : (0,60:82,21);
109 : (0,60:77,23);
111 : (0,60:28,0);
112 : (0,60:28,0);
114 : (0,60:28,0);
115 : (0,60:28,24);
116 : (0,60:28,24);
117 : (0,60:77,0);
175 : (0,60:77,0);
177 : (0,60:77,24);
178 : (0,60:77,24);
204 : (0,60:77,19);
217 : (0,60:77,20);
221 : (0,60:77,24);

