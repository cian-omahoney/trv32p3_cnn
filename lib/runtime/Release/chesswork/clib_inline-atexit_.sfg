
// File generated by noodle version U-2022.12#33f3808fcb#221128, Thu Feb 29 17:32:08 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -DNDEBUG -D__tct_patch__=0 -itrv32p3_cnn_chess.h +NOrlt +wRelease/chesswork src/clib_inline.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!! extern inline int atexit(void (*)())
Fatexit : user_defined, called {
    fnm : "atexit" 'int atexit(void (*)())';
    arg : ( w32:i w32:r w32:i );
    loc : ( X[1] X[10] X[11] );
    frm : ( );
}
****
!!  int __cxa_atexit(void (*)(void *), void *, void *)
F__cxa_atexit : user_defined, called {
    fnm : "__cxa_atexit" 'int __cxa_atexit(void (*)(void *), void *, void *)';
    arg : ( w32:i w32:r w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] );
    llv : 0 0 0 0 0 ;
}
***/

[
    0 : atexit typ=u08 bnd=e stl=PMb
   12 : __R_SP typ=w32 bnd=d stl=SP
   13 : __vola typ=u08 bnd=b stl=PMb
   16 : __extPMb typ=u08 bnd=b stl=PMb
   17 : __extDMb typ=w08 bnd=b stl=DMb
   18 : __sp typ=w32 bnd=b stl=SP
   19 : __extPMb_void__ typ=u08 bnd=b stl=PMb
   20 : __extPMb_void typ=u08 bnd=b stl=PMb
   21 : __extDMb_void typ=w08 bnd=b stl=DMb
   22 : __rd___sp typ=w32 bnd=m
   23 : __la typ=w32 bnd=p tref=w32__
   24 : __rt typ=w32 bnd=p tref=__sint__
   25 : func typ=w32 bnd=p tref=__Pvoid____
   26 : __ct_0S0 typ=w32 val=0S0 bnd=m
   28 : __tmp typ=w32 bnd=m
   29 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   31 : __ct typ=w32 bnd=m
   34 : __ct typ=w32 bnd=m
   37 : __cxa_atexit typ=t21s_s2 val=0r bnd=m
   39 : __tmp typ=w32 bnd=m
   40 : __ct_0s0 typ=w32 val=0s0 bnd=m
   42 : __tmp typ=w32 bnd=m
]
Fatexit {
    #5 off=0
    (__R_SP.11 var=12) st_def ()  <22>;
    (__vola.12 var=13) source ()  <23>;
    (__extPMb.15 var=16) source ()  <26>;
    (__extDMb.16 var=17) source ()  <27>;
    (__sp.17 var=18) source ()  <28>;
    (__extPMb_void__.18 var=19) source ()  <29>;
    (__extPMb_void.19 var=20) source ()  <30>;
    (__extDMb_void.20 var=21) source ()  <31>;
    (__la.22 var=23 stl=X off=1) inp ()  <33>;
    (__la.23 var=23) deassign (__la.22)  <34>;
    (func.26 var=25 stl=X off=11) inp ()  <37>;
    (func.27 var=25) deassign (func.26)  <38>;
    (__rd___sp.29 var=22) rd_res_reg (__R_SP.11 __sp.17)  <40>;
    (__ct_0S0.30 var=26) const ()  <41>;
    (__tmp.32 var=28) __Pvoid__pl___Pvoid___sint (__rd___sp.29 __ct_0S0.30)  <43>;
    (__R_SP.33 var=12 __sp.34 var=18) wr_res_reg (__tmp.32 __sp.17)  <44>;
    (__ct_0.36 var=29) const ()  <47>;
    (__cxa_atexit.46 var=37) const ()  <57>;
    (__rd___sp.58 var=22) rd_res_reg (__R_SP.11 __sp.34)  <63>;
    (__ct_0s0.59 var=40) const ()  <64>;
    (__tmp.61 var=42) __Pvoid__pl___Pvoid___sint (__rd___sp.58 __ct_0s0.59)  <66>;
    (__R_SP.62 var=12 __sp.63 var=18) wr_res_reg (__tmp.61 __sp.34)  <67>;
    () void_j_t21s_s2 (__cxa_atexit.46)  <132>;
    call {
        (func.35 var=25 stl=X off=11) assign (func.27)  <46>;
        (__ct.39 var=31 stl=X off=12) assign (__ct_0.36)  <50>;
        (__ct.43 var=34 stl=X off=13) assign (__ct_0.36)  <54>;
        (__la.48 var=23 stl=X off=1) assign (__la.23)  <59>;
        (__tmp.49 var=39 stl=X off=10 __extDMb.52 var=17 __extDMb_void.53 var=21 __extPMb.54 var=16 __extPMb_void.55 var=20 __extPMb_void__.56 var=19 __vola.57 var=13) F__cxa_atexit (__la.48 func.35 __ct.39 __ct.43 __extDMb.16 __extDMb_void.20 __extPMb.15 __extPMb_void.19 __extPMb_void__.18 __vola.12)  <60>;
        (__tmp.50 var=39) deassign (__tmp.49)  <61>;
    } #4 off=1
    #6 off=2 nxt=-2
    (__rt.64 var=24 stl=X off=10) assign (__tmp.50)  <69>;
    () out (__rt.64)  <70>;
    () sink (__vola.57)  <71>;
    () sink (__extPMb.54)  <74>;
    () sink (__extDMb.52)  <75>;
    () sink (__sp.63)  <76>;
    () sink (__extPMb_void__.56)  <77>;
    () sink (__extPMb_void.55)  <78>;
    () sink (__extDMb_void.53)  <79>;
} #0
0 : 'include/stdlib.h';
----------
0 : (0,79:19,0);
4 : (0,80:11,1);
5 : (0,80:4,1);
6 : (0,80:4,1);
----------
40 : (0,79:19,0);
41 : (0,79:19,0);
43 : (0,79:19,0);
44 : (0,79:19,0);
46 : (0,80:24,0);
47 : (0,80:24,0);
50 : (0,80:24,0);
54 : (0,80:24,0);
59 : (0,80:11,0);
60 : (0,80:11,1);
63 : (0,80:4,0);
64 : (0,80:4,0);
66 : (0,80:4,0);
67 : (0,80:4,1);
69 : (0,80:23,0);
132 : (0,80:11,1);

