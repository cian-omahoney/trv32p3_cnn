
// File generated by noodle version U-2022.12#33f3808fcb#221128, Thu Feb 29 15:23:30 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -D__tct_patch__=0 -itrv32p3_cnn_chess.h +Sal +Sca +Osps -Wflla +NOtcr +NOcse +NOlsw +NOifv +NOrle +NOrlt +wDebug/chesswork src/math.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!! static double kernel_cos(double, double)
Fkernel_cos : user_defined, called {
    fnm : "kernel_cos" 'double kernel_cos(double, double)';
    arg : ( w32:i w32:r w32:r w32:i w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] X[14] X[15] );
    frm : ( l=60 );
}
****
!!  long f64_to_i32_r_minMag(float64_t, bool)
Ff64_to_i32_r_minMag : user_defined, called {
    fnm : "f64_to_i32_r_minMag" 'long f64_to_i32_r_minMag(float64_t, bool)';
    arg : ( w32:i w32:r w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] );
}
!!  float64_t f64_mul(float64_t, float64_t)
Ff64_mul : user_defined, called {
    fnm : "f64_mul" 'float64_t f64_mul(float64_t, float64_t)';
    arg : ( w32:i w32:r w32:r w32:i w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] X[14] X[15] );
}
!!  float64_t f64_add(float64_t, float64_t)
Ff64_add : user_defined, called {
    fnm : "f64_add" 'float64_t f64_add(float64_t, float64_t)';
    arg : ( w32:i w32:r w32:r w32:i w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] X[14] X[15] );
}
!!  float64_t f64_sub(float64_t, float64_t)
Ff64_sub : user_defined, called {
    fnm : "f64_sub" 'float64_t f64_sub(float64_t, float64_t)';
    arg : ( w32:i w32:r w32:r w32:i w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] X[14] X[15] );
}
***/

[
    0 : kernel_cos typ=u08 bnd=i stl=PMb
    5 : __M_DMw typ=w32 bnd=d stl=DMw
   12 : __R_SP typ=w32 bnd=d stl=SP
   18 : __sp typ=w32 bnd=b stl=SP
   19 : y typ=w08 val=0t0 bnd=a sz=8 algn=4 stl=DMb tref=__fdouble_DMb
   20 : x typ=w08 val=8t0 bnd=a sz=8 algn=4 stl=DMb tref=__fdouble_DMb
   21 : ix typ=w08 val=56t0 bnd=a sz=4 algn=4 stl=DMb tref=int32_t_DMb
   22 : z typ=w08 val=32t0 bnd=a sz=8 algn=4 stl=DMb tref=__fdouble_DMb
   23 : r typ=w08 val=40t0 bnd=a sz=8 algn=4 stl=DMb tref=__fdouble_DMb
   24 : qx typ=w08 val=48t0 bnd=a sz=8 algn=4 stl=DMb tref=__fdouble_DMb
   25 : hz typ=w08 val=24t0 bnd=a sz=8 algn=4 stl=DMb tref=__fdouble_DMb
   26 : a typ=w08 val=16t0 bnd=a sz=8 algn=4 stl=DMb tref=__fdouble_DMb
   27 : y_low typ=w08 bnd=B stl=DMb
   28 : y_high typ=w08 bnd=B stl=DMb
   29 : x_low typ=w08 bnd=B stl=DMb
   30 : x_high typ=w08 bnd=B stl=DMb
   31 : z_low typ=w08 bnd=B stl=DMb
   32 : z_high typ=w08 bnd=B stl=DMb
   33 : r_low typ=w08 bnd=B stl=DMb
   34 : r_high typ=w08 bnd=B stl=DMb
   35 : qx_low typ=w08 bnd=B stl=DMb
   36 : qx_high typ=w08 bnd=B stl=DMb
   37 : hz_low typ=w08 bnd=B stl=DMb
   38 : hz_high typ=w08 bnd=B stl=DMb
   39 : a_low typ=w08 bnd=B stl=DMb
   40 : a_high typ=w08 bnd=B stl=DMb
   41 : __rd___sp typ=w32 bnd=m
   42 : __la typ=w32 bnd=p tref=w32__
   44 : __rt_low typ=w32 bnd=m tref=__uint__
   45 : __rt_high typ=w32 bnd=m tref=__uint__
   47 : __arg_x_low typ=w32 bnd=m tref=__uint__
   48 : __arg_x_high typ=w32 bnd=m tref=__uint__
   50 : __arg_y_low typ=w32 bnd=m tref=__uint__
   51 : __arg_y_high typ=w32 bnd=m tref=__uint__
   52 : __ct_m60S0 typ=w32 val=-60S0 bnd=m
   54 : __tmp typ=w32 bnd=m
   56 : __ct_0t0 typ=w32 val=0t0 bnd=m
   58 : __adr_y typ=w32 bnd=m adro=19
   60 : __ct_8t0 typ=w32 val=8t0 bnd=m
   62 : __adr_x typ=w32 bnd=m adro=20
   64 : __ct_56t0 typ=w32 val=56t0 bnd=m
   66 : __adr_ix typ=w32 bnd=m adro=21
   68 : __ct_32t0 typ=w32 val=32t0 bnd=m
   70 : __adr_z typ=w32 bnd=m adro=22
   72 : __ct_40t0 typ=w32 val=40t0 bnd=m
   74 : __adr_r typ=w32 bnd=m adro=23
   76 : __ct_48t0 typ=w32 val=48t0 bnd=m
   78 : __adr_qx typ=w32 bnd=m adro=24
   80 : __ct_24t0 typ=w32 val=24t0 bnd=m
   82 : __adr_hz typ=w32 bnd=m adro=25
   84 : __ct_16t0 typ=w32 val=16t0 bnd=m
   86 : __adr_a typ=w32 bnd=m adro=26
   98 : __fch_x_high typ=w32 bnd=m
  104 : __fch_ix typ=w32 bnd=m
  105 : __ct_2147483647 typ=w32 val=2147483647f bnd=m
  107 : __tmp typ=w32 bnd=m
  108 : __fch_ix typ=w32 bnd=m
  109 : __ct_1044381696 typ=t20s_rp12 val=254976f bnd=m
  111 : __tmp typ=bool bnd=m
  113 : __fch_x_low typ=w32 bnd=m
  116 : __fch_x_high typ=w32 bnd=m
  117 : __tmp typ=w32 bnd=m
  118 : __ct_0 typ=t20s_rp12 val=0f bnd=m
  120 : __tmp typ=bool bnd=m
  123 : __ct_60s0 typ=w32 val=60s0 bnd=m
  125 : __tmp typ=w32 bnd=m
  127 : __fch_x_low typ=w32 bnd=m
  130 : __fch_x_high typ=w32 bnd=m
  132 : __fch_x_low typ=w32 bnd=m
  135 : __fch_x_high typ=w32 bnd=m
  142 : __fch_z_low typ=w32 bnd=m
  145 : __fch_z_high typ=w32 bnd=m
  149 : __fch_z_low typ=w32 bnd=m
  152 : __fch_z_high typ=w32 bnd=m
  156 : __fch_z_low typ=w32 bnd=m
  159 : __fch_z_high typ=w32 bnd=m
  163 : __fch_z_low typ=w32 bnd=m
  166 : __fch_z_high typ=w32 bnd=m
  170 : __fch_z_low typ=w32 bnd=m
  173 : __fch_z_high typ=w32 bnd=m
  177 : __fch_z_low typ=w32 bnd=m
  180 : __fch_z_high typ=w32 bnd=m
  198 : __fch_ix typ=w32 bnd=m
  199 : __ct_1070805811 typ=w32 val=1070805811f bnd=m
  201 : __tmp typ=bool bnd=m
  207 : __fch_z_low typ=w32 bnd=m
  210 : __fch_z_high typ=w32 bnd=m
  213 : __fch_z_low typ=w32 bnd=m
  216 : __fch_z_high typ=w32 bnd=m
  218 : __fch_r_low typ=w32 bnd=m
  221 : __fch_r_high typ=w32 bnd=m
  224 : __fch_x_low typ=w32 bnd=m
  227 : __fch_x_high typ=w32 bnd=m
  229 : __fch_y_low typ=w32 bnd=m
  232 : __fch_y_high typ=w32 bnd=m
  237 : __fch_ix typ=w32 bnd=m
  238 : __ct_1072234496 typ=t20s_rp12 val=261776f bnd=m
  240 : __tmp typ=bool bnd=m
  247 : __fch_ix typ=w32 bnd=m
  250 : __tmp typ=w32 bnd=m
  267 : __fch_z_low typ=w32 bnd=m
  270 : __fch_z_high typ=w32 bnd=m
  273 : __fch_qx_low typ=w32 bnd=m
  276 : __fch_qx_high typ=w32 bnd=m
  285 : __fch_qx_low typ=w32 bnd=m
  288 : __fch_qx_high typ=w32 bnd=m
  295 : __fch_a_low typ=w32 bnd=m
  298 : __fch_a_high typ=w32 bnd=m
  300 : __fch_hz_low typ=w32 bnd=m
  303 : __fch_hz_high typ=w32 bnd=m
  305 : __fch_z_low typ=w32 bnd=m
  308 : __fch_z_high typ=w32 bnd=m
  310 : __fch_r_low typ=w32 bnd=m
  313 : __fch_r_high typ=w32 bnd=m
  316 : __fch_x_low typ=w32 bnd=m
  319 : __fch_x_high typ=w32 bnd=m
  321 : __fch_y_low typ=w32 bnd=m
  324 : __fch_y_high typ=w32 bnd=m
  331 : __tmp typ=w32 bnd=m
  339 : __ct_1072693248 typ=t20s_rp12 val=261888f bnd=m
  340 : __ct_1070727168 typ=t20s_rp12 val=261408f bnd=m
  359 : __ct_m2097152 typ=t20s_rp12 val=-512f bnd=m
  378 : __ct_12t0 typ=w32 val=12t0 bnd=m
  379 : __adr_x typ=w32 bnd=m adro=20
  380 : __ct_4t0 typ=w32 val=4t0 bnd=m
  381 : __adr_y typ=w32 bnd=m adro=19
  382 : __adr_x typ=w32 bnd=m adro=20
  383 : __ct_36t0 typ=w32 val=36t0 bnd=m
  384 : __adr_z typ=w32 bnd=m adro=22
  385 : __adr_z typ=w32 bnd=m adro=22
  386 : __ct_44t0 typ=w32 val=44t0 bnd=m
  387 : __adr_r typ=w32 bnd=m adro=23
  388 : __ct_52t0 typ=w32 val=52t0 bnd=m
  389 : __adr_qx typ=w32 bnd=m adro=24
  390 : __adr_qx typ=w32 bnd=m adro=24
  391 : __adr_y typ=w32 bnd=m adro=19
  392 : __adr_x typ=w32 bnd=m adro=20
  393 : __adr_z typ=w32 bnd=m adro=22
  394 : __adr_z typ=w32 bnd=m adro=22
  395 : __adr_r typ=w32 bnd=m adro=23
  396 : __adr_qx typ=w32 bnd=m adro=24
  397 : __adr_qx typ=w32 bnd=m adro=24
  398 : __ct_28t0 typ=w32 val=28t0 bnd=m
  399 : __adr_hz typ=w32 bnd=m adro=25
  400 : __adr_hz typ=w32 bnd=m adro=25
  401 : __ct_20t0 typ=w32 val=20t0 bnd=m
  402 : __adr_a typ=w32 bnd=m adro=26
  403 : __adr_a typ=w32 bnd=m adro=26
  404 : __adr_y typ=w32 bnd=m adro=19
  405 : __adr_x typ=w32 bnd=m adro=20
  406 : __adr_x typ=w32 bnd=m adro=20
  407 : __adr_x typ=w32 bnd=m adro=20
  408 : __adr_x typ=w32 bnd=m adro=20
  409 : __adr_z typ=w32 bnd=m adro=22
  410 : __adr_z typ=w32 bnd=m adro=22
  411 : __adr_z typ=w32 bnd=m adro=22
  412 : __adr_z typ=w32 bnd=m adro=22
  413 : __adr_z typ=w32 bnd=m adro=22
  414 : __adr_z typ=w32 bnd=m adro=22
  415 : __adr_z typ=w32 bnd=m adro=22
  416 : __adr_r typ=w32 bnd=m adro=23
  480 : a_low typ=w32 bnd=m tref=__uint__
  481 : a_high typ=w32 bnd=m tref=__uint__
  482 : __tmp typ=w32 bnd=m
  483 : f64_to_i32_r_minMag typ=t21s_s2 val=0r bnd=m
  484 : __link typ=w32 bnd=m
  486 : __ct_1 typ=w32 val=1f bnd=m
  491 : a_low typ=w32 bnd=m tref=__uint__
  492 : a_high typ=w32 bnd=m tref=__uint__
  493 : b_low typ=w32 bnd=m tref=__uint__
  494 : b_high typ=w32 bnd=m tref=__uint__
  495 : f64_mul typ=t21s_s2 val=0r bnd=m
  496 : __link typ=w32 bnd=m
  498 : __tmp typ=w32 bnd=m
  499 : __tmp typ=w32 bnd=m
  505 : a_low typ=w32 bnd=m tref=__uint__
  506 : a_high typ=w32 bnd=m tref=__uint__
  507 : b_low typ=w32 bnd=m tref=__uint__
  508 : b_high typ=w32 bnd=m tref=__uint__
  509 : f64_add typ=t21s_s2 val=0r bnd=m
  510 : __link typ=w32 bnd=m
  512 : __tmp typ=w32 bnd=m
  513 : __tmp typ=w32 bnd=m
  530 : a_low typ=w32 bnd=m tref=__uint__
  531 : a_high typ=w32 bnd=m tref=__uint__
  532 : b_low typ=w32 bnd=m tref=__uint__
  533 : b_high typ=w32 bnd=m tref=__uint__
  534 : f64_sub typ=t21s_s2 val=0r bnd=m
  535 : __link typ=w32 bnd=m
  537 : __tmp typ=w32 bnd=m
  538 : __tmp typ=w32 bnd=m
  558 : __ct_3196598484 typ=w32 val=-1098368812f bnd=m
  559 : __ct_3181968105 typ=w32 val=-1112999191f bnd=m
  560 : __ct_3182735812 typ=w32 val=-1112231484f bnd=m
  561 : __ct_1042411166 typ=w32 val=1042411166f bnd=m
  562 : __ct_2157728429 typ=w32 val=-2137238867f bnd=m
  563 : __ct_3197271631 typ=w32 val=-1097695665f bnd=m
  564 : __ct_432739728 typ=w32 val=432739728f bnd=m
  565 : __ct_1056571808 typ=w32 val=1056571808f bnd=m
  566 : __ct_381768055 typ=w32 val=381768055f bnd=m
  567 : __ct_3210133868 typ=w32 val=-1084833428f bnd=m
  568 : __ct_1431655756 typ=w32 val=1431655756f bnd=m
  569 : __ct_1067799893 typ=w32 val=1067799893f bnd=m
  570 : __ct_1071644672 typ=t20s_rp12 val=261632f bnd=m
  579 : __either typ=bool bnd=m
  580 : __trgt typ=t13s_s2 val=0j bnd=m
  581 : __trgt typ=t13s_s2 val=0j bnd=m
  582 : __trgt typ=t21s_s2 val=0j bnd=m
  583 : __trgt typ=t13s_s2 val=0j bnd=m
  584 : __trgt typ=t21s_s2 val=0j bnd=m
  585 : __trgt typ=t13s_s2 val=0j bnd=m
  586 : __trgt typ=t21s_s2 val=0j bnd=m
]
Fkernel_cos {
    #3 off=0
    (__M_DMw.4 var=5) st_def ()  <8>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__sp.17 var=18) source ()  <28>;
    (ix.20 var=21) source ()  <31>;
    (y_low.26 var=27) source ()  <37>;
    (y_high.27 var=28) source ()  <38>;
    (x_low.28 var=29) source ()  <39>;
    (x_high.29 var=30) source ()  <40>;
    (z_low.30 var=31) source ()  <41>;
    (z_high.31 var=32) source ()  <42>;
    (r_low.32 var=33) source ()  <43>;
    (r_high.33 var=34) source ()  <44>;
    (qx_low.34 var=35) source ()  <45>;
    (qx_high.35 var=36) source ()  <46>;
    (hz_low.36 var=37) source ()  <47>;
    (hz_high.37 var=38) source ()  <48>;
    (a_low.38 var=39) source ()  <49>;
    (a_high.39 var=40) source ()  <50>;
    (__la.41 var=42 stl=X off=1) inp ()  <52>;
    (__la.42 var=42) deassign (__la.41)  <53>;
    (__arg_x_low.50 var=47 stl=X off=12) inp ()  <61>;
    (__arg_x_low.51 var=47) deassign (__arg_x_low.50)  <62>;
    (__arg_x_high.54 var=48 stl=X off=13) inp ()  <65>;
    (__arg_x_high.55 var=48) deassign (__arg_x_high.54)  <66>;
    (__arg_y_low.59 var=50 stl=X off=14) inp ()  <70>;
    (__arg_y_low.60 var=50) deassign (__arg_y_low.59)  <71>;
    (__arg_y_high.63 var=51 stl=X off=15) inp ()  <74>;
    (__arg_y_high.64 var=51) deassign (__arg_y_high.63)  <75>;
    (__rd___sp.67 var=41) rd_res_reg (__R_SP.11 __sp.17)  <78>;
    (__ct_m60S0.68 var=52) const ()  <79>;
    (__tmp.70 var=54) __Pvoid__pl___Pvoid___sint (__rd___sp.67 __ct_m60S0.68)  <81>;
    (__R_SP.71 var=12 __sp.72 var=18) wr_res_reg (__tmp.70 __sp.17)  <82>;
    (__rd___sp.73 var=41) rd_res_reg (__R_SP.11 __sp.72)  <84>;
    (__ct_0t0.74 var=56) const ()  <85>;
    (__adr_y.76 var=58) __Pvoid__pl___Pvoid___sint (__rd___sp.73 __ct_0t0.74)  <87>;
    (__rd___sp.78 var=41) rd_res_reg (__R_SP.11 __sp.72)  <89>;
    (__rd___sp.83 var=41) rd_res_reg (__R_SP.11 __sp.72)  <94>;
    (__rd___sp.88 var=41) rd_res_reg (__R_SP.11 __sp.72)  <99>;
    (__rd___sp.93 var=41) rd_res_reg (__R_SP.11 __sp.72)  <104>;
    (__rd___sp.98 var=41) rd_res_reg (__R_SP.11 __sp.72)  <109>;
    (__rd___sp.103 var=41) rd_res_reg (__R_SP.11 __sp.72)  <114>;
    (__rd___sp.108 var=41) rd_res_reg (__R_SP.11 __sp.72)  <119>;
    (__M_DMw.117 var=5 y_low.118 var=27) store (__arg_y_low.60 __adr_y.76 y_low.26)  <128>;
    (__M_DMw.123 var=5 y_high.124 var=28) store (__arg_y_high.64 __adr_y.936 y_high.27)  <133>;
    (__ct_4t0.912 var=380) const ()  <1054>;
    (__adr_y.936 var=404) __Pvoid__pl___Pvoid___sint (__rd___sp.73 __ct_4t0.912)  <1084>;
    call {
        () chess_separator_scheduler ()  <134>;
    } #4 off=1
    #5 off=2
    (__ct_8t0.79 var=60) const ()  <90>;
    (__adr_x.81 var=62) __Pvoid__pl___Pvoid___sint (__rd___sp.78 __ct_8t0.79)  <92>;
    (__M_DMw.126 var=5 x_low.127 var=29) store (__arg_x_low.51 __adr_x.81 x_low.28)  <136>;
    (__M_DMw.132 var=5 x_high.133 var=30) store (__arg_x_high.55 __adr_x.937 x_high.29)  <141>;
    (__ct_12t0.910 var=378) const ()  <1051>;
    (__adr_x.937 var=405) __Pvoid__pl___Pvoid___sint (__rd___sp.78 __ct_12t0.910)  <1085>;
    call {
        () chess_separator_scheduler ()  <142>;
    } #6 off=3
    #123 off=4
    (__ct_56t0.84 var=64) const ()  <95>;
    (__adr_ix.86 var=66) __Pvoid__pl___Pvoid___sint (__rd___sp.83 __ct_56t0.84)  <97>;
    (__fch_x_high.140 var=98) load (__M_DMw.4 __adr_x.938 x_high.133)  <149>;
    (__M_DMw.147 var=5 ix.148 var=21) store (__fch_x_high.140 __adr_ix.86 ix.20)  <156>;
    (__adr_x.938 var=406) __Pvoid__pl___Pvoid___sint (__rd___sp.78 __ct_12t0.910)  <1086>;
    call {
        () chess_separator_scheduler ()  <157>;
    } #8 off=5
    #9 off=6
    (__fch_ix.149 var=104) load (__M_DMw.4 __adr_ix.86 ix.148)  <158>;
    (__ct_2147483647.150 var=105) const ()  <159>;
    (__tmp.152 var=107) __sint__ad___sint___sint (__fch_ix.149 __ct_2147483647.150)  <161>;
    (__M_DMw.153 var=5 ix.154 var=21) store (__tmp.152 __adr_ix.86 ix.148)  <162>;
    call {
        () chess_separator_scheduler ()  <163>;
    } #10 off=7
    #11 off=8
    (__fch_ix.155 var=108) load (__M_DMw.4 __adr_ix.86 ix.154)  <164>;
    (__ct_1044381696.156 var=109) const ()  <165>;
    (__ct_0.211 var=118) const ()  <221>;
    (__ct_60s0.260 var=123) const ()  <271>;
    (__ct_1072693248.869 var=339) const ()  <1007>;
    (__tmp.1608 var=111) bool__ge___sint___sint (__fch_ix.155 __ct_1044381696.156)  <2093>;
    (__trgt.1613 var=581) const ()  <2145>;
    () void_br_bool_t13s_s2 (__tmp.1608 __trgt.1613)  <2146>;
    (__either.1614 var=579) undefined ()  <2147>;
    if {
        {
            () if_expr (__either.1614)  <211>;
        } #13
        {
        } #24 off=15
        {
            #137 off=9
            (__fch_x_low.203 var=113) load (__M_DMw.4 __adr_x.81 x_low.127)  <213>;
            (__fch_x_high.208 var=116) load (__M_DMw.4 __adr_x.911 x_high.133)  <218>;
            (__adr_x.911 var=379) __Pvoid__pl___Pvoid___sint (__rd___sp.78 __ct_12t0.910)  <1053>;
            (__ct_1.1024 var=486) const ()  <1304>;
            (f64_to_i32_r_minMag.1025 var=483) const ()  <1305>;
            (__link.1026 var=484) w32_jal_t21s_s2 (f64_to_i32_r_minMag.1025)  <1306>;
            call {
                (a_low.1027 var=480 stl=X off=11) assign (__fch_x_low.203)  <1307>;
                (a_high.1028 var=481 stl=X off=12) assign (__fch_x_high.208)  <1308>;
                (__tmp.1029 var=482 stl=X off=13) assign (__ct_1.1024)  <1309>;
                (__link.1030 var=484 stl=X off=1) assign (__link.1026)  <1310>;
                (__tmp.1031 var=117 stl=X off=10) Ff64_to_i32_r_minMag (__link.1030 a_low.1027 a_high.1028 __tmp.1029)  <1311>;
                (__tmp.1032 var=117) deassign (__tmp.1031)  <1312>;
            } #138 off=10
            #134 off=11
            (__tmp.213 var=120) bool__eq___sint___sint (__tmp.1032 __ct_0.211)  <223>;
            (__trgt.1611 var=580) const ()  <2141>;
            () void_br_bool_t13s_s2 (__tmp.213 __trgt.1611)  <2142>;
            (__either.1612 var=579) undefined ()  <2143>;
            if {
                {
                    () if_expr (__either.1612)  <267>;
                    () chess_rear_then ()  <2144>;
                } #17
                {
                    (__rd___sp.259 var=41) rd_res_reg (__R_SP.11 __sp.72)  <270>;
                    (__tmp.262 var=125) __Pvoid__pl___Pvoid___sint (__rd___sp.259 __ct_60s0.260)  <273>;
                    (__R_SP.263 var=12 __sp.264 var=18) wr_res_reg (__tmp.262 __sp.72)  <274>;
                    () void___rts_jr_w32 (__la.42)  <275>;
                    (__rt_low.266 var=44 stl=X off=10) assign (__ct_0.211)  <277>;
                    () out (__rt_low.266)  <278>;
                    (__rt_high.268 var=45 stl=X off=11) assign (__ct_1072693248.869)  <280>;
                    () out (__rt_high.268)  <281>;
                    () sink (__sp.264)  <291>;
                    () sink (ix.154)  <294>;
                    () sink (y_low.118)  <300>;
                    () sink (y_high.124)  <301>;
                    () sink (x_low.127)  <302>;
                    () sink (x_high.133)  <303>;
                } #21 off=13 nxt=-2
                {
                } #22 off=12
                {
                } #23
            } #16
            #482 off=14
            (__trgt.1615 var=582) const ()  <2148>;
            () void_j_t21s_s2 (__trgt.1615)  <2149>;
        } #14
        {
        } #25
    } #12
    #161 off=16
    (__fch_x_low.403 var=127) load (__M_DMw.4 __adr_x.81 x_low.127)  <444>;
    (__fch_x_high.408 var=130) load (__M_DMw.4 __adr_x.939 x_high.133)  <449>;
    (__fch_x_low.411 var=132) load (__M_DMw.4 __adr_x.81 x_low.127)  <452>;
    (__fch_x_high.416 var=135) load (__M_DMw.4 __adr_x.940 x_high.133)  <457>;
    (__adr_x.939 var=407) __Pvoid__pl___Pvoid___sint (__rd___sp.78 __ct_12t0.910)  <1087>;
    (__adr_x.940 var=408) __Pvoid__pl___Pvoid___sint (__rd___sp.78 __ct_12t0.910)  <1088>;
    (f64_mul.1040 var=495) const ()  <1323>;
    (__link.1041 var=496) w32_jal_t21s_s2 (f64_mul.1040)  <1324>;
    call {
        (a_low.1042 var=491 stl=X off=12) assign (__fch_x_low.403)  <1325>;
        (a_high.1043 var=492 stl=X off=13) assign (__fch_x_high.408)  <1326>;
        (b_low.1044 var=493 stl=X off=14) assign (__fch_x_low.411)  <1327>;
        (b_high.1045 var=494 stl=X off=15) assign (__fch_x_high.416)  <1328>;
        (__link.1046 var=496 stl=X off=1) assign (__link.1041)  <1329>;
        (__tmp.1047 var=498 stl=X off=10 __tmp.1048 var=499 stl=X off=11) Ff64_mul (__link.1046 a_low.1042 a_high.1043 b_low.1044 b_high.1045)  <1330>;
        (__tmp.1050 var=498) deassign (__tmp.1047)  <1332>;
        (__tmp.1052 var=499) deassign (__tmp.1048)  <1334>;
    } #162 off=17
    #158 off=18
    (__ct_32t0.89 var=68) const ()  <100>;
    (__adr_z.91 var=70) __Pvoid__pl___Pvoid___sint (__rd___sp.88 __ct_32t0.89)  <102>;
    (__M_DMw.420 var=5 z_low.421 var=31) store (__tmp.1050 __adr_z.91 z_low.30)  <461>;
    (__M_DMw.426 var=5 z_high.427 var=32) store (__tmp.1052 __adr_z.941 z_high.31)  <466>;
    (__ct_36t0.915 var=383) const ()  <1058>;
    (__adr_z.941 var=409) __Pvoid__pl___Pvoid___sint (__rd___sp.88 __ct_36t0.915)  <1089>;
    call {
        () chess_separator_scheduler ()  <467>;
    } #27 off=19
    #219 off=20
    (__fch_z_low.429 var=142) load (__M_DMw.4 __adr_z.91 z_low.421)  <469>;
    (__fch_z_high.434 var=145) load (__M_DMw.4 __adr_z.942 z_high.427)  <474>;
    (__fch_z_low.439 var=149) load (__M_DMw.4 __adr_z.91 z_low.421)  <479>;
    (__fch_z_high.444 var=152) load (__M_DMw.4 __adr_z.943 z_high.427)  <484>;
    (__fch_z_low.449 var=156) load (__M_DMw.4 __adr_z.91 z_low.421)  <489>;
    (__fch_z_high.454 var=159) load (__M_DMw.4 __adr_z.944 z_high.427)  <494>;
    (__fch_z_low.459 var=163) load (__M_DMw.4 __adr_z.91 z_low.421)  <499>;
    (__fch_z_high.464 var=166) load (__M_DMw.4 __adr_z.945 z_high.427)  <504>;
    (__fch_z_low.469 var=170) load (__M_DMw.4 __adr_z.91 z_low.421)  <509>;
    (__fch_z_high.474 var=173) load (__M_DMw.4 __adr_z.946 z_high.427)  <514>;
    (__fch_z_low.479 var=177) load (__M_DMw.4 __adr_z.91 z_low.421)  <519>;
    (__fch_z_high.484 var=180) load (__M_DMw.4 __adr_z.947 z_high.427)  <524>;
    (__adr_z.942 var=410) __Pvoid__pl___Pvoid___sint (__rd___sp.88 __ct_36t0.915)  <1090>;
    (__adr_z.943 var=411) __Pvoid__pl___Pvoid___sint (__rd___sp.88 __ct_36t0.915)  <1091>;
    (__adr_z.944 var=412) __Pvoid__pl___Pvoid___sint (__rd___sp.88 __ct_36t0.915)  <1092>;
    (__adr_z.945 var=413) __Pvoid__pl___Pvoid___sint (__rd___sp.88 __ct_36t0.915)  <1093>;
    (__adr_z.946 var=414) __Pvoid__pl___Pvoid___sint (__rd___sp.88 __ct_36t0.915)  <1094>;
    (__adr_z.947 var=415) __Pvoid__pl___Pvoid___sint (__rd___sp.88 __ct_36t0.915)  <1095>;
    (__link.1062 var=496) w32_jal_t21s_s2 (f64_mul.1040)  <1347>;
    (__ct_3196598484.1591 var=558) const ()  <1971>;
    (__ct_3181968105.1592 var=559) const ()  <1973>;
    call {
        (a_low.1063 var=491 stl=X off=12) assign (__fch_z_low.479)  <1348>;
        (a_high.1064 var=492 stl=X off=13) assign (__fch_z_high.484)  <1349>;
        (b_low.1065 var=493 stl=X off=14) assign (__ct_3196598484.1591)  <1350>;
        (b_high.1066 var=494 stl=X off=15) assign (__ct_3181968105.1592)  <1351>;
        (__link.1067 var=496 stl=X off=1) assign (__link.1062)  <1352>;
        (__tmp.1068 var=498 stl=X off=10 __tmp.1069 var=499 stl=X off=11) Ff64_mul (__link.1067 a_low.1063 a_high.1064 b_low.1065 b_high.1066)  <1353>;
        (__tmp.1071 var=498) deassign (__tmp.1068)  <1355>;
        (__tmp.1073 var=499) deassign (__tmp.1069)  <1357>;
    } #220 off=21
    #225 off=22
    (f64_add.1082 var=509) const ()  <1369>;
    (__link.1083 var=510) w32_jal_t21s_s2 (f64_add.1082)  <1370>;
    (__ct_3182735812.1593 var=560) const ()  <1975>;
    (__ct_1042411166.1594 var=561) const ()  <1977>;
    call {
        (a_low.1084 var=505 stl=X off=12) assign (__ct_3182735812.1593)  <1371>;
        (a_high.1085 var=506 stl=X off=13) assign (__ct_1042411166.1594)  <1372>;
        (b_low.1086 var=507 stl=X off=14) assign (__tmp.1071)  <1373>;
        (b_high.1087 var=508 stl=X off=15) assign (__tmp.1073)  <1374>;
        (__link.1088 var=510 stl=X off=1) assign (__link.1083)  <1375>;
        (__tmp.1089 var=512 stl=X off=10 __tmp.1090 var=513 stl=X off=11) Ff64_add (__link.1088 a_low.1084 a_high.1085 b_low.1086 b_high.1087)  <1376>;
        (__tmp.1092 var=512) deassign (__tmp.1089)  <1378>;
        (__tmp.1094 var=513) deassign (__tmp.1090)  <1380>;
    } #226 off=23
    #231 off=24
    (__link.1104 var=496) w32_jal_t21s_s2 (f64_mul.1040)  <1393>;
    call {
        (a_low.1105 var=491 stl=X off=12) assign (__fch_z_low.469)  <1394>;
        (a_high.1106 var=492 stl=X off=13) assign (__fch_z_high.474)  <1395>;
        (b_low.1107 var=493 stl=X off=14) assign (__tmp.1092)  <1396>;
        (b_high.1108 var=494 stl=X off=15) assign (__tmp.1094)  <1397>;
        (__link.1109 var=496 stl=X off=1) assign (__link.1104)  <1398>;
        (__tmp.1110 var=498 stl=X off=10 __tmp.1111 var=499 stl=X off=11) Ff64_mul (__link.1109 a_low.1105 a_high.1106 b_low.1107 b_high.1108)  <1399>;
        (__tmp.1113 var=498) deassign (__tmp.1110)  <1401>;
        (__tmp.1115 var=499) deassign (__tmp.1111)  <1403>;
    } #232 off=25
    #237 off=26
    (__link.1125 var=510) w32_jal_t21s_s2 (f64_add.1082)  <1416>;
    (__ct_2157728429.1595 var=562) const ()  <1979>;
    (__ct_3197271631.1596 var=563) const ()  <1981>;
    call {
        (a_low.1126 var=505 stl=X off=12) assign (__ct_2157728429.1595)  <1417>;
        (a_high.1127 var=506 stl=X off=13) assign (__ct_3197271631.1596)  <1418>;
        (b_low.1128 var=507 stl=X off=14) assign (__tmp.1113)  <1419>;
        (b_high.1129 var=508 stl=X off=15) assign (__tmp.1115)  <1420>;
        (__link.1130 var=510 stl=X off=1) assign (__link.1125)  <1421>;
        (__tmp.1131 var=512 stl=X off=10 __tmp.1132 var=513 stl=X off=11) Ff64_add (__link.1130 a_low.1126 a_high.1127 b_low.1128 b_high.1129)  <1422>;
        (__tmp.1134 var=512) deassign (__tmp.1131)  <1424>;
        (__tmp.1136 var=513) deassign (__tmp.1132)  <1426>;
    } #238 off=27
    #243 off=28
    (__link.1146 var=496) w32_jal_t21s_s2 (f64_mul.1040)  <1439>;
    call {
        (a_low.1147 var=491 stl=X off=12) assign (__fch_z_low.459)  <1440>;
        (a_high.1148 var=492 stl=X off=13) assign (__fch_z_high.464)  <1441>;
        (b_low.1149 var=493 stl=X off=14) assign (__tmp.1134)  <1442>;
        (b_high.1150 var=494 stl=X off=15) assign (__tmp.1136)  <1443>;
        (__link.1151 var=496 stl=X off=1) assign (__link.1146)  <1444>;
        (__tmp.1152 var=498 stl=X off=10 __tmp.1153 var=499 stl=X off=11) Ff64_mul (__link.1151 a_low.1147 a_high.1148 b_low.1149 b_high.1150)  <1445>;
        (__tmp.1155 var=498) deassign (__tmp.1152)  <1447>;
        (__tmp.1157 var=499) deassign (__tmp.1153)  <1449>;
    } #244 off=29
    #249 off=30
    (__link.1167 var=510) w32_jal_t21s_s2 (f64_add.1082)  <1462>;
    (__ct_432739728.1597 var=564) const ()  <1983>;
    (__ct_1056571808.1598 var=565) const ()  <1985>;
    call {
        (a_low.1168 var=505 stl=X off=12) assign (__ct_432739728.1597)  <1463>;
        (a_high.1169 var=506 stl=X off=13) assign (__ct_1056571808.1598)  <1464>;
        (b_low.1170 var=507 stl=X off=14) assign (__tmp.1155)  <1465>;
        (b_high.1171 var=508 stl=X off=15) assign (__tmp.1157)  <1466>;
        (__link.1172 var=510 stl=X off=1) assign (__link.1167)  <1467>;
        (__tmp.1173 var=512 stl=X off=10 __tmp.1174 var=513 stl=X off=11) Ff64_add (__link.1172 a_low.1168 a_high.1169 b_low.1170 b_high.1171)  <1468>;
        (__tmp.1176 var=512) deassign (__tmp.1173)  <1470>;
        (__tmp.1178 var=513) deassign (__tmp.1174)  <1472>;
    } #250 off=31
    #255 off=32
    (__link.1188 var=496) w32_jal_t21s_s2 (f64_mul.1040)  <1485>;
    call {
        (a_low.1189 var=491 stl=X off=12) assign (__fch_z_low.449)  <1486>;
        (a_high.1190 var=492 stl=X off=13) assign (__fch_z_high.454)  <1487>;
        (b_low.1191 var=493 stl=X off=14) assign (__tmp.1176)  <1488>;
        (b_high.1192 var=494 stl=X off=15) assign (__tmp.1178)  <1489>;
        (__link.1193 var=496 stl=X off=1) assign (__link.1188)  <1490>;
        (__tmp.1194 var=498 stl=X off=10 __tmp.1195 var=499 stl=X off=11) Ff64_mul (__link.1193 a_low.1189 a_high.1190 b_low.1191 b_high.1192)  <1491>;
        (__tmp.1197 var=498) deassign (__tmp.1194)  <1493>;
        (__tmp.1199 var=499) deassign (__tmp.1195)  <1495>;
    } #256 off=33
    #261 off=34
    (__link.1209 var=510) w32_jal_t21s_s2 (f64_add.1082)  <1508>;
    (__ct_381768055.1599 var=566) const ()  <1987>;
    (__ct_3210133868.1600 var=567) const ()  <1989>;
    call {
        (a_low.1210 var=505 stl=X off=12) assign (__ct_381768055.1599)  <1509>;
        (a_high.1211 var=506 stl=X off=13) assign (__ct_3210133868.1600)  <1510>;
        (b_low.1212 var=507 stl=X off=14) assign (__tmp.1197)  <1511>;
        (b_high.1213 var=508 stl=X off=15) assign (__tmp.1199)  <1512>;
        (__link.1214 var=510 stl=X off=1) assign (__link.1209)  <1513>;
        (__tmp.1215 var=512 stl=X off=10 __tmp.1216 var=513 stl=X off=11) Ff64_add (__link.1214 a_low.1210 a_high.1211 b_low.1212 b_high.1213)  <1514>;
        (__tmp.1218 var=512) deassign (__tmp.1215)  <1516>;
        (__tmp.1220 var=513) deassign (__tmp.1216)  <1518>;
    } #262 off=35
    #267 off=36
    (__link.1230 var=496) w32_jal_t21s_s2 (f64_mul.1040)  <1531>;
    call {
        (a_low.1231 var=491 stl=X off=12) assign (__fch_z_low.439)  <1532>;
        (a_high.1232 var=492 stl=X off=13) assign (__fch_z_high.444)  <1533>;
        (b_low.1233 var=493 stl=X off=14) assign (__tmp.1218)  <1534>;
        (b_high.1234 var=494 stl=X off=15) assign (__tmp.1220)  <1535>;
        (__link.1235 var=496 stl=X off=1) assign (__link.1230)  <1536>;
        (__tmp.1236 var=498 stl=X off=10 __tmp.1237 var=499 stl=X off=11) Ff64_mul (__link.1235 a_low.1231 a_high.1232 b_low.1233 b_high.1234)  <1537>;
        (__tmp.1239 var=498) deassign (__tmp.1236)  <1539>;
        (__tmp.1241 var=499) deassign (__tmp.1237)  <1541>;
    } #268 off=37
    #273 off=38
    (__link.1251 var=510) w32_jal_t21s_s2 (f64_add.1082)  <1554>;
    (__ct_1431655756.1601 var=568) const ()  <1991>;
    (__ct_1067799893.1602 var=569) const ()  <1993>;
    call {
        (a_low.1252 var=505 stl=X off=12) assign (__ct_1431655756.1601)  <1555>;
        (a_high.1253 var=506 stl=X off=13) assign (__ct_1067799893.1602)  <1556>;
        (b_low.1254 var=507 stl=X off=14) assign (__tmp.1239)  <1557>;
        (b_high.1255 var=508 stl=X off=15) assign (__tmp.1241)  <1558>;
        (__link.1256 var=510 stl=X off=1) assign (__link.1251)  <1559>;
        (__tmp.1257 var=512 stl=X off=10 __tmp.1258 var=513 stl=X off=11) Ff64_add (__link.1256 a_low.1252 a_high.1253 b_low.1254 b_high.1255)  <1560>;
        (__tmp.1260 var=512) deassign (__tmp.1257)  <1562>;
        (__tmp.1262 var=513) deassign (__tmp.1258)  <1564>;
    } #274 off=39
    #279 off=40
    (__link.1272 var=496) w32_jal_t21s_s2 (f64_mul.1040)  <1577>;
    call {
        (a_low.1273 var=491 stl=X off=12) assign (__fch_z_low.429)  <1578>;
        (a_high.1274 var=492 stl=X off=13) assign (__fch_z_high.434)  <1579>;
        (b_low.1275 var=493 stl=X off=14) assign (__tmp.1260)  <1580>;
        (b_high.1276 var=494 stl=X off=15) assign (__tmp.1262)  <1581>;
        (__link.1277 var=496 stl=X off=1) assign (__link.1272)  <1582>;
        (__tmp.1278 var=498 stl=X off=10 __tmp.1279 var=499 stl=X off=11) Ff64_mul (__link.1277 a_low.1273 a_high.1274 b_low.1275 b_high.1276)  <1583>;
        (__tmp.1281 var=498) deassign (__tmp.1278)  <1585>;
        (__tmp.1283 var=499) deassign (__tmp.1279)  <1587>;
    } #280 off=41
    #216 off=42
    (__ct_40t0.94 var=72) const ()  <105>;
    (__adr_r.96 var=74) __Pvoid__pl___Pvoid___sint (__rd___sp.93 __ct_40t0.94)  <107>;
    (__M_DMw.500 var=5 r_low.501 var=33) store (__tmp.1281 __adr_r.96 r_low.32)  <540>;
    (__M_DMw.506 var=5 r_high.507 var=34) store (__tmp.1283 __adr_r.948 r_high.33)  <545>;
    (__ct_44t0.918 var=386) const ()  <1062>;
    (__adr_r.948 var=416) __Pvoid__pl___Pvoid___sint (__rd___sp.93 __ct_44t0.918)  <1096>;
    call {
        () chess_separator_scheduler ()  <546>;
    } #29 off=43
    #30 off=44
    (__fch_ix.508 var=198) load (__M_DMw.4 __adr_ix.86 ix.154)  <547>;
    (__ct_1070805811.509 var=199) const ()  <548>;
    (__tmp.511 var=201) bool__lt___sint___sint (__fch_ix.508 __ct_1070805811.509)  <550>;
    (f64_sub.1355 var=534) const ()  <1668>;
    (__ct_1071644672.1603 var=570) const ()  <1995>;
    (__trgt.1619 var=585) const ()  <2155>;
    () void_br_bool_t13s_s2 (__tmp.511 __trgt.1619)  <2156>;
    (__either.1620 var=579) undefined ()  <2157>;
    if {
        {
            () if_expr (__either.1620)  <594>;
        } #32
        {
            #321 off=71
            (__fch_z_low.560 var=207) load (__M_DMw.4 __adr_z.91 z_low.421)  <600>;
            (__fch_z_high.565 var=210) load (__M_DMw.4 __adr_z.916 z_high.427)  <605>;
            (__adr_z.916 var=384) __Pvoid__pl___Pvoid___sint (__rd___sp.88 __ct_36t0.915)  <1060>;
            (__link.1293 var=496) w32_jal_t21s_s2 (f64_mul.1040)  <1600>;
            call {
                (a_low.1294 var=491 stl=X off=12) assign (__ct_0.211)  <1601>;
                (a_high.1295 var=492 stl=X off=13) assign (__ct_1071644672.1603)  <1602>;
                (b_low.1296 var=493 stl=X off=14) assign (__fch_z_low.560)  <1603>;
                (b_high.1297 var=494 stl=X off=15) assign (__fch_z_high.565)  <1604>;
                (__link.1298 var=496 stl=X off=1) assign (__link.1293)  <1605>;
                (__tmp.1299 var=498 stl=X off=10 __tmp.1300 var=499 stl=X off=11) Ff64_mul (__link.1298 a_low.1294 a_high.1295 b_low.1296 b_high.1297)  <1606>;
                (__tmp.1302 var=498) deassign (__tmp.1299)  <1608>;
                (__tmp.1304 var=499) deassign (__tmp.1300)  <1610>;
            } #322 off=72
            #327 off=73
            (__fch_z_low.569 var=213) load (__M_DMw.4 __adr_z.91 z_low.421)  <609>;
            (__fch_z_high.574 var=216) load (__M_DMw.4 __adr_z.917 z_high.427)  <614>;
            (__fch_r_low.577 var=218) load (__M_DMw.4 __adr_r.96 r_low.501)  <617>;
            (__fch_r_high.582 var=221) load (__M_DMw.4 __adr_r.919 r_high.507)  <622>;
            (__adr_z.917 var=385) __Pvoid__pl___Pvoid___sint (__rd___sp.88 __ct_36t0.915)  <1061>;
            (__adr_r.919 var=387) __Pvoid__pl___Pvoid___sint (__rd___sp.93 __ct_44t0.918)  <1064>;
            (__link.1314 var=496) w32_jal_t21s_s2 (f64_mul.1040)  <1623>;
            call {
                (a_low.1315 var=491 stl=X off=12) assign (__fch_z_low.569)  <1624>;
                (a_high.1316 var=492 stl=X off=13) assign (__fch_z_high.574)  <1625>;
                (b_low.1317 var=493 stl=X off=14) assign (__fch_r_low.577)  <1626>;
                (b_high.1318 var=494 stl=X off=15) assign (__fch_r_high.582)  <1627>;
                (__link.1319 var=496 stl=X off=1) assign (__link.1314)  <1628>;
                (__tmp.1320 var=498 stl=X off=10 __tmp.1321 var=499 stl=X off=11) Ff64_mul (__link.1319 a_low.1315 a_high.1316 b_low.1317 b_high.1318)  <1629>;
                (__tmp.1323 var=498) deassign (__tmp.1320)  <1631>;
                (__tmp.1325 var=499) deassign (__tmp.1321)  <1633>;
            } #328 off=74
            #333 off=75
            (__fch_x_low.586 var=224) load (__M_DMw.4 __adr_x.81 x_low.127)  <626>;
            (__fch_x_high.591 var=227) load (__M_DMw.4 __adr_x.914 x_high.133)  <631>;
            (__fch_y_low.594 var=229) load (__M_DMw.4 __adr_y.76 y_low.118)  <634>;
            (__fch_y_high.599 var=232) load (__M_DMw.4 __adr_y.913 y_high.124)  <639>;
            (__adr_y.913 var=381) __Pvoid__pl___Pvoid___sint (__rd___sp.73 __ct_4t0.912)  <1056>;
            (__adr_x.914 var=382) __Pvoid__pl___Pvoid___sint (__rd___sp.78 __ct_12t0.910)  <1057>;
            (__link.1335 var=496) w32_jal_t21s_s2 (f64_mul.1040)  <1646>;
            call {
                (a_low.1336 var=491 stl=X off=12) assign (__fch_x_low.586)  <1647>;
                (a_high.1337 var=492 stl=X off=13) assign (__fch_x_high.591)  <1648>;
                (b_low.1338 var=493 stl=X off=14) assign (__fch_y_low.594)  <1649>;
                (b_high.1339 var=494 stl=X off=15) assign (__fch_y_high.599)  <1650>;
                (__link.1340 var=496 stl=X off=1) assign (__link.1335)  <1651>;
                (__tmp.1341 var=498 stl=X off=10 __tmp.1342 var=499 stl=X off=11) Ff64_mul (__link.1340 a_low.1336 a_high.1337 b_low.1338 b_high.1339)  <1652>;
                (__tmp.1344 var=498) deassign (__tmp.1341)  <1654>;
                (__tmp.1346 var=499) deassign (__tmp.1342)  <1656>;
            } #334 off=76
            #339 off=77
            (__link.1356 var=535) w32_jal_t21s_s2 (f64_sub.1355)  <1669>;
            call {
                (a_low.1357 var=530 stl=X off=12) assign (__tmp.1323)  <1670>;
                (a_high.1358 var=531 stl=X off=13) assign (__tmp.1325)  <1671>;
                (b_low.1359 var=532 stl=X off=14) assign (__tmp.1344)  <1672>;
                (b_high.1360 var=533 stl=X off=15) assign (__tmp.1346)  <1673>;
                (__link.1361 var=535 stl=X off=1) assign (__link.1356)  <1674>;
                (__tmp.1362 var=537 stl=X off=10 __tmp.1363 var=538 stl=X off=11) Ff64_sub (__link.1361 a_low.1357 a_high.1358 b_low.1359 b_high.1360)  <1675>;
                (__tmp.1365 var=537) deassign (__tmp.1362)  <1677>;
                (__tmp.1367 var=538) deassign (__tmp.1363)  <1679>;
            } #340 off=78
            #345 off=79
            (__link.1377 var=535) w32_jal_t21s_s2 (f64_sub.1355)  <1692>;
            call {
                (a_low.1378 var=530 stl=X off=12) assign (__tmp.1302)  <1693>;
                (a_high.1379 var=531 stl=X off=13) assign (__tmp.1304)  <1694>;
                (b_low.1380 var=532 stl=X off=14) assign (__tmp.1365)  <1695>;
                (b_high.1381 var=533 stl=X off=15) assign (__tmp.1367)  <1696>;
                (__link.1382 var=535 stl=X off=1) assign (__link.1377)  <1697>;
                (__tmp.1383 var=537 stl=X off=10 __tmp.1384 var=538 stl=X off=11) Ff64_sub (__link.1382 a_low.1378 a_high.1379 b_low.1380 b_high.1381)  <1698>;
                (__tmp.1386 var=537) deassign (__tmp.1383)  <1700>;
                (__tmp.1388 var=538) deassign (__tmp.1384)  <1702>;
            } #346 off=80
            #351 off=81
            (__link.1398 var=535) w32_jal_t21s_s2 (f64_sub.1355)  <1715>;
            call {
                (a_low.1399 var=530 stl=X off=12) assign (__ct_0.211)  <1716>;
                (a_high.1400 var=531 stl=X off=13) assign (__ct_1072693248.869)  <1717>;
                (b_low.1401 var=532 stl=X off=14) assign (__tmp.1386)  <1718>;
                (b_high.1402 var=533 stl=X off=15) assign (__tmp.1388)  <1719>;
                (__link.1403 var=535 stl=X off=1) assign (__link.1398)  <1720>;
                (__tmp.1404 var=537 stl=X off=10 __tmp.1405 var=538 stl=X off=11) Ff64_sub (__link.1403 a_low.1399 a_high.1400 b_low.1401 b_high.1402)  <1721>;
                (__tmp.1407 var=537) deassign (__tmp.1404)  <1723>;
                (__tmp.1409 var=538) deassign (__tmp.1405)  <1725>;
            } #352 off=82
        } #33
        {
            #95 off=45
            (__ct_48t0.99 var=76) const ()  <110>;
            (__adr_qx.101 var=78) __Pvoid__pl___Pvoid___sint (__rd___sp.98 __ct_48t0.99)  <112>;
            (__fch_ix.605 var=237) load (__M_DMw.4 __adr_ix.86 ix.154)  <646>;
            (__ct_1072234496.606 var=238) const ()  <647>;
            (__ct_52t0.920 var=388) const ()  <1065>;
            (__tmp.982 var=240) bool__lt___sint___sint (__ct_1072234496.606 __fch_ix.605)  <1174>;
            (__trgt.1616 var=583) const ()  <2150>;
            () void_br_bool_t13s_s2 (__tmp.982 __trgt.1616)  <2151>;
            (__either.1617 var=579) undefined ()  <2152>;
            if {
                {
                    () if_expr (__either.1617)  <693>;
                } #39
                {
                    (__M_DMw.655 var=5 qx_low.656 var=35) store (__ct_0.211 __adr_qx.101 qx_low.34)  <697>;
                    (__M_DMw.661 var=5 qx_high.662 var=36) store (__ct_1070727168.870 __adr_qx.921 qx_high.35)  <702>;
                    (__ct_1070727168.870 var=340) const ()  <1009>;
                    (__adr_qx.921 var=389) __Pvoid__pl___Pvoid___sint (__rd___sp.98 __ct_52t0.920)  <1067>;
                } #41 off=49
                {
                    #46 off=46
                    (__fch_ix.665 var=247) load (__M_DMw.4 __adr_ix.86 ix.154)  <707>;
                    (__tmp.668 var=250) __sint__pl___sint___sint (__fch_ix.665 __ct_m2097152.877)  <710>;
                    (__ct_m2097152.877 var=359) const ()  <1017>;
                    call {
                        () chess_separator_scheduler ()  <722>;
                    } #51 off=47
                    #52 off=48
                    (__M_DMw.680 var=5 qx_low.681 var=35) store (__ct_0.211 __adr_qx.101 qx_low.34)  <725>;
                    (__M_DMw.686 var=5 qx_high.687 var=36) store (__tmp.668 __adr_qx.922 qx_high.35)  <730>;
                    (__adr_qx.922 var=390) __Pvoid__pl___Pvoid___sint (__rd___sp.98 __ct_52t0.920)  <1068>;
                    (__trgt.1618 var=584) const ()  <2153>;
                    () void_j_t21s_s2 (__trgt.1618)  <2154>;
                } #43
                {
                    (qx_low.688 var=35) merge (qx_low.656 qx_low.681)  <732>;
                    (qx_high.689 var=36) merge (qx_high.662 qx_high.687)  <733>;
                } #54
            } #38
            #381 off=50
            (__fch_z_low.696 var=267) load (__M_DMw.4 __adr_z.91 z_low.421)  <740>;
            (__fch_z_high.701 var=270) load (__M_DMw.4 __adr_z.925 z_high.427)  <745>;
            (__adr_z.925 var=393) __Pvoid__pl___Pvoid___sint (__rd___sp.88 __ct_36t0.915)  <1071>;
            (__link.1428 var=496) w32_jal_t21s_s2 (f64_mul.1040)  <1751>;
            call {
                (a_low.1429 var=491 stl=X off=12) assign (__ct_0.211)  <1752>;
                (a_high.1430 var=492 stl=X off=13) assign (__ct_1071644672.1603)  <1753>;
                (b_low.1431 var=493 stl=X off=14) assign (__fch_z_low.696)  <1754>;
                (b_high.1432 var=494 stl=X off=15) assign (__fch_z_high.701)  <1755>;
                (__link.1433 var=496 stl=X off=1) assign (__link.1428)  <1756>;
                (__tmp.1434 var=498 stl=X off=10 __tmp.1435 var=499 stl=X off=11) Ff64_mul (__link.1433 a_low.1429 a_high.1430 b_low.1431 b_high.1432)  <1757>;
                (__tmp.1437 var=498) deassign (__tmp.1434)  <1759>;
                (__tmp.1439 var=499) deassign (__tmp.1435)  <1761>;
            } #382 off=51
            #387 off=52
            (__fch_qx_low.705 var=273) load (__M_DMw.4 __adr_qx.101 qx_low.688)  <749>;
            (__fch_qx_high.710 var=276) load (__M_DMw.4 __adr_qx.928 qx_high.689)  <754>;
            (__adr_qx.928 var=396) __Pvoid__pl___Pvoid___sint (__rd___sp.98 __ct_52t0.920)  <1074>;
            (__link.1449 var=535) w32_jal_t21s_s2 (f64_sub.1355)  <1774>;
            call {
                (a_low.1450 var=530 stl=X off=12) assign (__tmp.1437)  <1775>;
                (a_high.1451 var=531 stl=X off=13) assign (__tmp.1439)  <1776>;
                (b_low.1452 var=532 stl=X off=14) assign (__fch_qx_low.705)  <1777>;
                (b_high.1453 var=533 stl=X off=15) assign (__fch_qx_high.710)  <1778>;
                (__link.1454 var=535 stl=X off=1) assign (__link.1449)  <1779>;
                (__tmp.1455 var=537 stl=X off=10 __tmp.1456 var=538 stl=X off=11) Ff64_sub (__link.1454 a_low.1450 a_high.1451 b_low.1452 b_high.1453)  <1780>;
                (__tmp.1458 var=537) deassign (__tmp.1455)  <1782>;
                (__tmp.1460 var=538) deassign (__tmp.1456)  <1784>;
            } #388 off=53
            #378 off=54
            (__ct_24t0.104 var=80) const ()  <115>;
            (__adr_hz.106 var=82) __Pvoid__pl___Pvoid___sint (__rd___sp.103 __ct_24t0.104)  <117>;
            (__M_DMw.714 var=5 hz_low.715 var=37) store (__tmp.1458 __adr_hz.106 hz_low.36)  <758>;
            (__M_DMw.720 var=5 hz_high.721 var=38) store (__tmp.1460 __adr_hz.931 hz_high.37)  <763>;
            (__ct_28t0.930 var=398) const ()  <1076>;
            (__adr_hz.931 var=399) __Pvoid__pl___Pvoid___sint (__rd___sp.103 __ct_28t0.930)  <1078>;
            call {
                () chess_separator_scheduler ()  <764>;
            } #56 off=55
            #405 off=56
            (__fch_qx_low.725 var=285) load (__M_DMw.4 __adr_qx.101 qx_low.688)  <768>;
            (__fch_qx_high.730 var=288) load (__M_DMw.4 __adr_qx.929 qx_high.689)  <773>;
            (__adr_qx.929 var=397) __Pvoid__pl___Pvoid___sint (__rd___sp.98 __ct_52t0.920)  <1075>;
            (__link.1470 var=535) w32_jal_t21s_s2 (f64_sub.1355)  <1797>;
            call {
                (a_low.1471 var=530 stl=X off=12) assign (__ct_0.211)  <1798>;
                (a_high.1472 var=531 stl=X off=13) assign (__ct_1072693248.869)  <1799>;
                (b_low.1473 var=532 stl=X off=14) assign (__fch_qx_low.725)  <1800>;
                (b_high.1474 var=533 stl=X off=15) assign (__fch_qx_high.730)  <1801>;
                (__link.1475 var=535 stl=X off=1) assign (__link.1470)  <1802>;
                (__tmp.1476 var=537 stl=X off=10 __tmp.1477 var=538 stl=X off=11) Ff64_sub (__link.1475 a_low.1471 a_high.1472 b_low.1473 b_high.1474)  <1803>;
                (__tmp.1479 var=537) deassign (__tmp.1476)  <1805>;
                (__tmp.1481 var=538) deassign (__tmp.1477)  <1807>;
            } #406 off=57
            #402 off=58
            (__ct_16t0.109 var=84) const ()  <120>;
            (__adr_a.111 var=86) __Pvoid__pl___Pvoid___sint (__rd___sp.108 __ct_16t0.109)  <122>;
            (__M_DMw.734 var=5 a_low.735 var=39) store (__tmp.1479 __adr_a.111 a_low.38)  <777>;
            (__M_DMw.740 var=5 a_high.741 var=40) store (__tmp.1481 __adr_a.934 a_high.39)  <782>;
            (__ct_20t0.933 var=401) const ()  <1080>;
            (__adr_a.934 var=402) __Pvoid__pl___Pvoid___sint (__rd___sp.108 __ct_20t0.933)  <1082>;
            call {
                () chess_separator_scheduler ()  <783>;
            } #58 off=59
            #452 off=60
            (__fch_a_low.743 var=295) load (__M_DMw.4 __adr_a.111 a_low.735)  <785>;
            (__fch_a_high.748 var=298) load (__M_DMw.4 __adr_a.935 a_high.741)  <790>;
            (__fch_hz_low.751 var=300) load (__M_DMw.4 __adr_hz.106 hz_low.715)  <793>;
            (__fch_hz_high.756 var=303) load (__M_DMw.4 __adr_hz.932 hz_high.721)  <798>;
            (__fch_z_low.759 var=305) load (__M_DMw.4 __adr_z.91 z_low.421)  <801>;
            (__fch_z_high.764 var=308) load (__M_DMw.4 __adr_z.926 z_high.427)  <806>;
            (__fch_r_low.767 var=310) load (__M_DMw.4 __adr_r.96 r_low.501)  <809>;
            (__fch_r_high.772 var=313) load (__M_DMw.4 __adr_r.927 r_high.507)  <814>;
            (__adr_z.926 var=394) __Pvoid__pl___Pvoid___sint (__rd___sp.88 __ct_36t0.915)  <1072>;
            (__adr_r.927 var=395) __Pvoid__pl___Pvoid___sint (__rd___sp.93 __ct_44t0.918)  <1073>;
            (__adr_hz.932 var=400) __Pvoid__pl___Pvoid___sint (__rd___sp.103 __ct_28t0.930)  <1079>;
            (__adr_a.935 var=403) __Pvoid__pl___Pvoid___sint (__rd___sp.108 __ct_20t0.933)  <1083>;
            (__link.1491 var=496) w32_jal_t21s_s2 (f64_mul.1040)  <1820>;
            call {
                (a_low.1492 var=491 stl=X off=12) assign (__fch_z_low.759)  <1821>;
                (a_high.1493 var=492 stl=X off=13) assign (__fch_z_high.764)  <1822>;
                (b_low.1494 var=493 stl=X off=14) assign (__fch_r_low.767)  <1823>;
                (b_high.1495 var=494 stl=X off=15) assign (__fch_r_high.772)  <1824>;
                (__link.1496 var=496 stl=X off=1) assign (__link.1491)  <1825>;
                (__tmp.1497 var=498 stl=X off=10 __tmp.1498 var=499 stl=X off=11) Ff64_mul (__link.1496 a_low.1492 a_high.1493 b_low.1494 b_high.1495)  <1826>;
                (__tmp.1500 var=498) deassign (__tmp.1497)  <1828>;
                (__tmp.1502 var=499) deassign (__tmp.1498)  <1830>;
            } #453 off=61
            #458 off=62
            (__fch_x_low.776 var=316) load (__M_DMw.4 __adr_x.81 x_low.127)  <818>;
            (__fch_x_high.781 var=319) load (__M_DMw.4 __adr_x.924 x_high.133)  <823>;
            (__fch_y_low.784 var=321) load (__M_DMw.4 __adr_y.76 y_low.118)  <826>;
            (__fch_y_high.789 var=324) load (__M_DMw.4 __adr_y.923 y_high.124)  <831>;
            (__adr_y.923 var=391) __Pvoid__pl___Pvoid___sint (__rd___sp.73 __ct_4t0.912)  <1069>;
            (__adr_x.924 var=392) __Pvoid__pl___Pvoid___sint (__rd___sp.78 __ct_12t0.910)  <1070>;
            (__link.1512 var=496) w32_jal_t21s_s2 (f64_mul.1040)  <1843>;
            call {
                (a_low.1513 var=491 stl=X off=12) assign (__fch_x_low.776)  <1844>;
                (a_high.1514 var=492 stl=X off=13) assign (__fch_x_high.781)  <1845>;
                (b_low.1515 var=493 stl=X off=14) assign (__fch_y_low.784)  <1846>;
                (b_high.1516 var=494 stl=X off=15) assign (__fch_y_high.789)  <1847>;
                (__link.1517 var=496 stl=X off=1) assign (__link.1512)  <1848>;
                (__tmp.1518 var=498 stl=X off=10 __tmp.1519 var=499 stl=X off=11) Ff64_mul (__link.1517 a_low.1513 a_high.1514 b_low.1515 b_high.1516)  <1849>;
                (__tmp.1521 var=498) deassign (__tmp.1518)  <1851>;
                (__tmp.1523 var=499) deassign (__tmp.1519)  <1853>;
            } #459 off=63
            #464 off=64
            (__link.1533 var=535) w32_jal_t21s_s2 (f64_sub.1355)  <1866>;
            call {
                (a_low.1534 var=530 stl=X off=12) assign (__tmp.1500)  <1867>;
                (a_high.1535 var=531 stl=X off=13) assign (__tmp.1502)  <1868>;
                (b_low.1536 var=532 stl=X off=14) assign (__tmp.1521)  <1869>;
                (b_high.1537 var=533 stl=X off=15) assign (__tmp.1523)  <1870>;
                (__link.1538 var=535 stl=X off=1) assign (__link.1533)  <1871>;
                (__tmp.1539 var=537 stl=X off=10 __tmp.1540 var=538 stl=X off=11) Ff64_sub (__link.1538 a_low.1534 a_high.1535 b_low.1536 b_high.1537)  <1872>;
                (__tmp.1542 var=537) deassign (__tmp.1539)  <1874>;
                (__tmp.1544 var=538) deassign (__tmp.1540)  <1876>;
            } #465 off=65
            #470 off=66
            (__link.1554 var=535) w32_jal_t21s_s2 (f64_sub.1355)  <1889>;
            call {
                (a_low.1555 var=530 stl=X off=12) assign (__fch_hz_low.751)  <1890>;
                (a_high.1556 var=531 stl=X off=13) assign (__fch_hz_high.756)  <1891>;
                (b_low.1557 var=532 stl=X off=14) assign (__tmp.1542)  <1892>;
                (b_high.1558 var=533 stl=X off=15) assign (__tmp.1544)  <1893>;
                (__link.1559 var=535 stl=X off=1) assign (__link.1554)  <1894>;
                (__tmp.1560 var=537 stl=X off=10 __tmp.1561 var=538 stl=X off=11) Ff64_sub (__link.1559 a_low.1555 a_high.1556 b_low.1557 b_high.1558)  <1895>;
                (__tmp.1563 var=537) deassign (__tmp.1560)  <1897>;
                (__tmp.1565 var=538) deassign (__tmp.1561)  <1899>;
            } #471 off=67
            #476 off=68
            (__link.1575 var=535) w32_jal_t21s_s2 (f64_sub.1355)  <1912>;
            call {
                (a_low.1576 var=530 stl=X off=12) assign (__fch_a_low.743)  <1913>;
                (a_high.1577 var=531 stl=X off=13) assign (__fch_a_high.748)  <1914>;
                (b_low.1578 var=532 stl=X off=14) assign (__tmp.1563)  <1915>;
                (b_high.1579 var=533 stl=X off=15) assign (__tmp.1565)  <1916>;
                (__link.1580 var=535 stl=X off=1) assign (__link.1575)  <1917>;
                (__tmp.1581 var=537 stl=X off=10 __tmp.1582 var=538 stl=X off=11) Ff64_sub (__link.1580 a_low.1576 a_high.1577 b_low.1578 b_high.1579)  <1918>;
                (__tmp.1584 var=537) deassign (__tmp.1581)  <1920>;
                (__tmp.1586 var=538) deassign (__tmp.1582)  <1922>;
            } #477 off=69
            #483 off=70
            (__trgt.1621 var=586) const ()  <2158>;
            () void_j_t21s_s2 (__trgt.1621)  <2159>;
        } #36
        {
            (qx_low.795 var=35) merge (qx_low.34 qx_low.688)  <838>;
            (qx_high.796 var=36) merge (qx_high.35 qx_high.689)  <839>;
            (hz_low.797 var=37) merge (hz_low.36 hz_low.715)  <840>;
            (hz_high.798 var=38) merge (hz_high.37 hz_high.721)  <841>;
            (a_low.799 var=39) merge (a_low.38 a_low.735)  <842>;
            (a_high.800 var=40) merge (a_high.39 a_high.741)  <843>;
            (__rt_low.873 var=44) merge (__tmp.1407 __tmp.1584)  <1013>;
            (__rt_high.876 var=45) merge (__tmp.1409 __tmp.1586)  <1016>;
        } #61
    } #31
    #63 off=83 nxt=-2
    (__rd___sp.805 var=41) rd_res_reg (__R_SP.11 __sp.72)  <848>;
    (__tmp.808 var=331) __Pvoid__pl___Pvoid___sint (__rd___sp.805 __ct_60s0.260)  <851>;
    (__R_SP.809 var=12 __sp.810 var=18) wr_res_reg (__tmp.808 __sp.72)  <852>;
    () void___rts_jr_w32 (__la.42)  <853>;
    (__rt_low.812 var=44 stl=X off=10) assign (__rt_low.873)  <855>;
    () out (__rt_low.812)  <856>;
    (__rt_high.814 var=45 stl=X off=11) assign (__rt_high.876)  <858>;
    () out (__rt_high.814)  <859>;
    () sink (__sp.810)  <869>;
    () sink (ix.154)  <872>;
    () sink (y_low.118)  <878>;
    () sink (y_high.124)  <879>;
    () sink (x_low.127)  <880>;
    () sink (x_high.133)  <881>;
    () sink (z_low.421)  <882>;
    () sink (z_high.427)  <883>;
    () sink (r_low.501)  <884>;
    () sink (r_high.507)  <885>;
    () sink (qx_low.795)  <886>;
    () sink (qx_high.796)  <887>;
    () sink (hz_low.797)  <888>;
    () sink (hz_high.798)  <889>;
    () sink (a_low.799)  <890>;
    () sink (a_high.800)  <891>;
} #0
0 : 'src/math.c';
----------
0 : (0,675:0,0);
3 : (0,675:35,0);
4 : (0,675:35,0);
5 : (0,675:25,0);
6 : (0,675:25,0);
8 : (0,688:4,7);
9 : (0,689:7,8);
10 : (0,689:7,8);
11 : (0,690:9,8);
12 : (0,690:4,8);
14 : (0,690:22,9);
16 : (0,691:8,9);
21 : (0,691:24,10);
22 : (0,691:8,13);
24 : (0,690:4,18);
27 : (0,693:7,22);
29 : (0,694:7,23);
30 : (0,695:10,23);
31 : (0,695:4,23);
33 : (0,705:8,24);
36 : (0,696:8,27);
38 : (0,698:8,27);
41 : (0,699:15,29);
43 : (0,700:15,31);
46 : (0,701:29,33);
51 : (0,701:16,38);
52 : (0,701:4,41);
56 : (0,703:11,45);
58 : (0,704:11,46);
63 : (0,695:4,51);
95 : (0,698:14,27);
123 : (0,688:1,6);
134 : (0,691:19,9);
137 : (0,691:12,9);
138 : (0,691:12,9);
158 : (0,693:4,21);
161 : (0,693:10,21);
162 : (0,693:10,21);
216 : (0,694:4,22);
219 : (0,694:40,22);
220 : (0,694:40,22);
225 : (0,694:38,22);
226 : (0,694:38,22);
231 : (0,694:34,22);
232 : (0,694:34,22);
237 : (0,694:32,22);
238 : (0,694:32,22);
243 : (0,694:28,22);
244 : (0,694:28,22);
249 : (0,694:26,22);
250 : (0,694:26,22);
255 : (0,694:22,22);
256 : (0,694:22,22);
261 : (0,694:20,22);
262 : (0,694:20,22);
267 : (0,694:16,22);
268 : (0,694:16,22);
273 : (0,694:14,22);
274 : (0,694:14,22);
279 : (0,694:10,22);
280 : (0,694:10,22);
321 : (0,696:25,24);
322 : (0,696:25,24);
327 : (0,696:32,24);
328 : (0,696:32,24);
333 : (0,696:38,24);
334 : (0,696:38,24);
339 : (0,696:35,24);
340 : (0,696:35,24);
345 : (0,696:28,24);
346 : (0,696:28,24);
351 : (0,696:19,24);
352 : (0,696:19,24);
378 : (0,703:8,44);
381 : (0,703:16,44);
382 : (0,703:16,44);
387 : (0,703:18,44);
388 : (0,703:18,44);
402 : (0,704:8,45);
405 : (0,704:16,45);
406 : (0,704:16,45);
452 : (0,705:27,46);
453 : (0,705:27,46);
458 : (0,705:31,46);
459 : (0,705:31,46);
464 : (0,705:29,46);
465 : (0,705:29,46);
470 : (0,705:23,46);
471 : (0,705:23,46);
476 : (0,705:17,46);
477 : (0,705:17,46);
----------
78 : (0,675:14,0);
79 : (0,675:14,0);
81 : (0,675:14,0);
82 : (0,675:14,0);
84 : (0,675:42,0);
85 : (0,675:42,0);
87 : (0,675:42,0);
89 : (0,675:32,0);
90 : (0,675:32,0);
92 : (0,675:32,0);
94 : (0,687:12,0);
95 : (0,687:12,0);
97 : (0,687:12,0);
99 : (0,686:16,0);
100 : (0,686:16,0);
102 : (0,686:16,0);
104 : (0,686:18,0);
105 : (0,686:18,0);
107 : (0,686:18,0);
109 : (0,686:20,0);
110 : (0,686:20,0);
112 : (0,686:20,0);
114 : (0,686:13,0);
115 : (0,686:13,0);
117 : (0,686:13,0);
119 : (0,686:11,0);
120 : (0,686:11,0);
122 : (0,686:11,0);
128 : (0,675:35,0);
133 : (0,675:35,0);
134 : (0,675:35,0);
136 : (0,675:25,0);
141 : (0,675:25,0);
142 : (0,675:25,0);
149 : (0,688:21,6);
156 : (0,688:1,6);
157 : (0,688:4,7);
158 : (0,689:4,7);
159 : (0,689:10,0);
161 : (0,689:7,7);
162 : (0,689:4,7);
163 : (0,689:7,8);
164 : (0,690:7,8);
165 : (0,690:10,0);
211 : (0,690:4,8);
213 : (0,691:17,9);
218 : (0,691:17,9);
221 : (0,691:21,0);
223 : (0,691:19,9);
267 : (0,691:8,9);
270 : (0,691:24,0);
271 : (0,691:24,0);
273 : (0,691:24,0);
274 : (0,691:24,10);
275 : (0,691:24,10);
277 : (0,691:31,0);
280 : (0,691:31,0);
444 : (0,693:9,21);
449 : (0,693:9,21);
452 : (0,693:11,21);
457 : (0,693:11,21);
461 : (0,693:4,21);
466 : (0,693:4,21);
467 : (0,693:7,22);
469 : (0,694:9,22);
474 : (0,694:9,22);
479 : (0,694:15,22);
484 : (0,694:15,22);
489 : (0,694:21,22);
494 : (0,694:21,22);
499 : (0,694:27,22);
504 : (0,694:27,22);
509 : (0,694:33,22);
514 : (0,694:33,22);
519 : (0,694:39,22);
524 : (0,694:39,22);
540 : (0,694:4,22);
545 : (0,694:4,22);
546 : (0,694:7,23);
547 : (0,695:7,23);
548 : (0,695:12,0);
550 : (0,695:10,23);
594 : (0,695:4,23);
600 : (0,696:26,24);
605 : (0,696:26,24);
609 : (0,696:31,24);
614 : (0,696:31,24);
617 : (0,696:33,24);
622 : (0,696:33,24);
626 : (0,696:37,24);
631 : (0,696:37,24);
634 : (0,696:39,24);
639 : (0,696:39,24);
646 : (0,698:11,27);
647 : (0,698:16,0);
693 : (0,698:8,27);
697 : (0,699:12,28);
702 : (0,699:12,28);
707 : (0,701:27,33);
710 : (0,701:29,33);
722 : (0,701:16,38);
725 : (0,701:1,40);
730 : (0,701:1,40);
732 : (0,698:8,43);
733 : (0,698:8,43);
740 : (0,703:17,44);
745 : (0,703:17,44);
749 : (0,703:19,44);
754 : (0,703:19,44);
758 : (0,703:8,44);
763 : (0,703:8,44);
764 : (0,703:11,45);
768 : (0,704:17,45);
773 : (0,704:17,45);
777 : (0,704:8,45);
782 : (0,704:8,45);
783 : (0,704:11,46);
785 : (0,705:15,46);
790 : (0,705:15,46);
793 : (0,705:20,46);
798 : (0,705:20,46);
801 : (0,705:26,46);
806 : (0,705:26,46);
809 : (0,705:28,46);
814 : (0,705:28,46);
818 : (0,705:30,46);
823 : (0,705:30,46);
826 : (0,705:32,46);
831 : (0,705:32,46);
838 : (0,695:4,50);
839 : (0,695:4,50);
840 : (0,695:4,50);
841 : (0,695:4,50);
842 : (0,695:4,50);
843 : (0,695:4,50);
848 : (0,695:4,0);
851 : (0,695:4,0);
852 : (0,695:4,51);
853 : (0,695:4,51);
855 : (0,695:4,0);
858 : (0,695:4,0);
1007 : (0,691:31,0);
1009 : (0,699:17,0);
1017 : (0,701:29,0);
1051 : (0,675:32,0);
1054 : (0,675:42,0);
1058 : (0,686:16,0);
1062 : (0,686:18,0);
1065 : (0,686:20,0);
1076 : (0,686:13,0);
1080 : (0,686:11,0);
1174 : (0,698:14,27);
1304 : (0,691:12,0);
1305 : (0,691:12,0);
1306 : (0,691:12,9);
1307 : (0,691:12,9);
1308 : (0,691:12,9);
1309 : (0,691:12,9);
1310 : (0,691:12,9);
1311 : (0,691:12,9);
1312 : (0,691:12,9);
1323 : (0,693:10,0);
1324 : (0,693:10,21);
1325 : (0,693:10,21);
1326 : (0,693:10,21);
1327 : (0,693:10,21);
1328 : (0,693:10,21);
1329 : (0,693:10,21);
1330 : (0,693:10,21);
1332 : (0,693:10,21);
1334 : (0,693:10,21);
1347 : (0,694:40,22);
1348 : (0,694:40,22);
1349 : (0,694:40,22);
1350 : (0,694:40,22);
1351 : (0,694:40,22);
1352 : (0,694:40,22);
1353 : (0,694:40,22);
1355 : (0,694:40,22);
1357 : (0,694:40,22);
1369 : (0,694:38,0);
1370 : (0,694:38,22);
1371 : (0,694:38,22);
1372 : (0,694:38,22);
1373 : (0,694:38,22);
1374 : (0,694:38,22);
1375 : (0,694:38,22);
1376 : (0,694:38,22);
1378 : (0,694:38,22);
1380 : (0,694:38,22);
1393 : (0,694:34,22);
1394 : (0,694:34,22);
1395 : (0,694:34,22);
1396 : (0,694:34,22);
1397 : (0,694:34,22);
1398 : (0,694:34,22);
1399 : (0,694:34,22);
1401 : (0,694:34,22);
1403 : (0,694:34,22);
1416 : (0,694:32,22);
1417 : (0,694:32,22);
1418 : (0,694:32,22);
1419 : (0,694:32,22);
1420 : (0,694:32,22);
1421 : (0,694:32,22);
1422 : (0,694:32,22);
1424 : (0,694:32,22);
1426 : (0,694:32,22);
1439 : (0,694:28,22);
1440 : (0,694:28,22);
1441 : (0,694:28,22);
1442 : (0,694:28,22);
1443 : (0,694:28,22);
1444 : (0,694:28,22);
1445 : (0,694:28,22);
1447 : (0,694:28,22);
1449 : (0,694:28,22);
1462 : (0,694:26,22);
1463 : (0,694:26,22);
1464 : (0,694:26,22);
1465 : (0,694:26,22);
1466 : (0,694:26,22);
1467 : (0,694:26,22);
1468 : (0,694:26,22);
1470 : (0,694:26,22);
1472 : (0,694:26,22);
1485 : (0,694:22,22);
1486 : (0,694:22,22);
1487 : (0,694:22,22);
1488 : (0,694:22,22);
1489 : (0,694:22,22);
1490 : (0,694:22,22);
1491 : (0,694:22,22);
1493 : (0,694:22,22);
1495 : (0,694:22,22);
1508 : (0,694:20,22);
1509 : (0,694:20,22);
1510 : (0,694:20,22);
1511 : (0,694:20,22);
1512 : (0,694:20,22);
1513 : (0,694:20,22);
1514 : (0,694:20,22);
1516 : (0,694:20,22);
1518 : (0,694:20,22);
1531 : (0,694:16,22);
1532 : (0,694:16,22);
1533 : (0,694:16,22);
1534 : (0,694:16,22);
1535 : (0,694:16,22);
1536 : (0,694:16,22);
1537 : (0,694:16,22);
1539 : (0,694:16,22);
1541 : (0,694:16,22);
1554 : (0,694:14,22);
1555 : (0,694:14,22);
1556 : (0,694:14,22);
1557 : (0,694:14,22);
1558 : (0,694:14,22);
1559 : (0,694:14,22);
1560 : (0,694:14,22);
1562 : (0,694:14,22);
1564 : (0,694:14,22);
1577 : (0,694:10,22);
1578 : (0,694:10,22);
1579 : (0,694:10,22);
1580 : (0,694:10,22);
1581 : (0,694:10,22);
1582 : (0,694:10,22);
1583 : (0,694:10,22);
1585 : (0,694:10,22);
1587 : (0,694:10,22);
1600 : (0,696:25,24);
1601 : (0,696:25,24);
1602 : (0,696:25,24);
1603 : (0,696:25,24);
1604 : (0,696:25,24);
1605 : (0,696:25,24);
1606 : (0,696:25,24);
1608 : (0,696:25,24);
1610 : (0,696:25,24);
1623 : (0,696:32,24);
1624 : (0,696:32,24);
1625 : (0,696:32,24);
1626 : (0,696:32,24);
1627 : (0,696:32,24);
1628 : (0,696:32,24);
1629 : (0,696:32,24);
1631 : (0,696:32,24);
1633 : (0,696:32,24);
1646 : (0,696:38,24);
1647 : (0,696:38,24);
1648 : (0,696:38,24);
1649 : (0,696:38,24);
1650 : (0,696:38,24);
1651 : (0,696:38,24);
1652 : (0,696:38,24);
1654 : (0,696:38,24);
1656 : (0,696:38,24);
1668 : (0,696:35,0);
1669 : (0,696:35,24);
1670 : (0,696:35,24);
1671 : (0,696:35,24);
1672 : (0,696:35,24);
1673 : (0,696:35,24);
1674 : (0,696:35,24);
1675 : (0,696:35,24);
1677 : (0,696:35,24);
1679 : (0,696:35,24);
1692 : (0,696:28,24);
1693 : (0,696:28,24);
1694 : (0,696:28,24);
1695 : (0,696:28,24);
1696 : (0,696:28,24);
1697 : (0,696:28,24);
1698 : (0,696:28,24);
1700 : (0,696:28,24);
1702 : (0,696:28,24);
1715 : (0,696:19,24);
1716 : (0,696:19,24);
1717 : (0,696:19,24);
1718 : (0,696:19,24);
1719 : (0,696:19,24);
1720 : (0,696:19,24);
1721 : (0,696:19,24);
1723 : (0,696:19,24);
1725 : (0,696:19,24);
1751 : (0,703:16,44);
1752 : (0,703:16,44);
1753 : (0,703:16,44);
1754 : (0,703:16,44);
1755 : (0,703:16,44);
1756 : (0,703:16,44);
1757 : (0,703:16,44);
1759 : (0,703:16,44);
1761 : (0,703:16,44);
1774 : (0,703:18,44);
1775 : (0,703:18,44);
1776 : (0,703:18,44);
1777 : (0,703:18,44);
1778 : (0,703:18,44);
1779 : (0,703:18,44);
1780 : (0,703:18,44);
1782 : (0,703:18,44);
1784 : (0,703:18,44);
1797 : (0,704:16,45);
1798 : (0,704:16,45);
1799 : (0,704:16,45);
1800 : (0,704:16,45);
1801 : (0,704:16,45);
1802 : (0,704:16,45);
1803 : (0,704:16,45);
1805 : (0,704:16,45);
1807 : (0,704:16,45);
1820 : (0,705:27,46);
1821 : (0,705:27,46);
1822 : (0,705:27,46);
1823 : (0,705:27,46);
1824 : (0,705:27,46);
1825 : (0,705:27,46);
1826 : (0,705:27,46);
1828 : (0,705:27,46);
1830 : (0,705:27,46);
1843 : (0,705:31,46);
1844 : (0,705:31,46);
1845 : (0,705:31,46);
1846 : (0,705:31,46);
1847 : (0,705:31,46);
1848 : (0,705:31,46);
1849 : (0,705:31,46);
1851 : (0,705:31,46);
1853 : (0,705:31,46);
1866 : (0,705:29,46);
1867 : (0,705:29,46);
1868 : (0,705:29,46);
1869 : (0,705:29,46);
1870 : (0,705:29,46);
1871 : (0,705:29,46);
1872 : (0,705:29,46);
1874 : (0,705:29,46);
1876 : (0,705:29,46);
1889 : (0,705:23,46);
1890 : (0,705:23,46);
1891 : (0,705:23,46);
1892 : (0,705:23,46);
1893 : (0,705:23,46);
1894 : (0,705:23,46);
1895 : (0,705:23,46);
1897 : (0,705:23,46);
1899 : (0,705:23,46);
1912 : (0,705:17,46);
1913 : (0,705:17,46);
1914 : (0,705:17,46);
1915 : (0,705:17,46);
1916 : (0,705:17,46);
1917 : (0,705:17,46);
1918 : (0,705:17,46);
1920 : (0,705:17,46);
1922 : (0,705:17,46);
1971 : (0,694:41,0);
1973 : (0,694:41,0);
1975 : (0,694:36,0);
1977 : (0,694:36,0);
1979 : (0,694:30,0);
1981 : (0,694:30,0);
1983 : (0,694:24,0);
1985 : (0,694:24,0);
1987 : (0,694:18,0);
1989 : (0,694:18,0);
1991 : (0,694:12,0);
1993 : (0,694:12,0);
1995 : (0,696:22,0);
2093 : (0,690:9,8);
2142 : (0,691:8,9);
2146 : (0,690:4,8);
2151 : (0,698:8,27);
2156 : (0,695:4,23);

