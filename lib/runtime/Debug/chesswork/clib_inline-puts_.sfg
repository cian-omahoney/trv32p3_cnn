
// File generated by noodle version U-2022.12#33f3808fcb#221128, Thu Feb 29 17:34:11 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -D__tct_patch__=0 -itrv32p3_cnn_chess.h +Sal +Sca +Osps -Wflla +NOtcr +NOcse +NOlsw +NOifv +NOrle +NOrlt +wDebug/chesswork src/clib_inline.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!! extern inline int puts(const char *)
Fputs : user_defined, called {
    fnm : "puts" 'int puts(const char *)';
    arg : ( w32:i w32:r w32:i );
    loc : ( X[1] X[10] X[11] );
    frm : ( l=8 );
}
****
!! extern int fputs(const char *, FILE *)
Ffputs : user_defined, called {
    fnm : "fputs" 'int fputs(const char *, FILE *)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
    llv : 0 0 0 0 0 ;
}
!! extern int fputc(int, FILE *)
Ffputc : user_defined, called {
    fnm : "fputc" 'int fputc(int, FILE *)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
    llv : 0 0 0 0 0 ;
}
***/

[
    0 : puts typ=u08 bnd=e stl=PMb
    5 : __M_DMw typ=w32 bnd=d stl=DMw
    8 : __M_DMw_stat typ=w32 bnd=d stl=DMw_stat
   12 : __R_SP typ=w32 bnd=d stl=SP
   13 : __vola typ=u08 bnd=b stl=PMb
   16 : __extPMb typ=u08 bnd=b stl=PMb
   17 : __extDMb typ=w08 bnd=b stl=DMb
   18 : __sp typ=w32 bnd=b stl=SP
   19 : s typ=w08 val=0t0 bnd=a sz=4 algn=4 stl=DMb tref=__P__cchar_DMb
   20 : rt typ=w08 val=4t0 bnd=a sz=4 algn=4 stl=DMb tref=__sint_DMb
   21 : stdout typ=w08 bnd=e sz=4 algn=4 stl=DMb_stat tref=__PFILE_DMb_stat
   22 : __extDMb___PFILE typ=w08 bnd=b stl=DMb
   23 : __extPMb_FILE typ=u08 bnd=b stl=PMb
   24 : __extPMb_void typ=u08 bnd=b stl=PMb
   25 : __extDMb_void typ=w08 bnd=b stl=DMb
   26 : __rd___sp typ=w32 bnd=m
   28 : __ptr_stdout typ=w32 val=0a bnd=m adro=21
   29 : __la typ=w32 bnd=p tref=w32__
   30 : __rt typ=w32 bnd=p tref=__sint__
   31 : __arg_s typ=w32 bnd=p tref=__P__cchar__
   32 : __ct_m8S0 typ=w32 val=-8S0 bnd=m
   34 : __tmp typ=w32 bnd=m
   36 : __ct_0t0 typ=w32 val=0t0 bnd=m
   38 : __adr_s typ=w32 bnd=m adro=19
   40 : __ct_4t0 typ=w32 val=4t0 bnd=m
   42 : __adr_rt typ=w32 bnd=m adro=20
   43 : __fch_s typ=w32 bnd=m
   44 : __fch_stdout typ=w32 bnd=m
   47 : fputs typ=t21s_s2 val=0r bnd=m
   48 : __link typ=w32 bnd=m
   49 : __tmp typ=w32 bnd=m
   50 : __fch_rt typ=w32 bnd=m
   51 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   53 : __tmp typ=bool bnd=m
   55 : __ct_10 typ=w32 val=10f bnd=m
   56 : __ct typ=w32 bnd=m
   57 : __fch_stdout typ=w32 bnd=m
   60 : fputc typ=t21s_s2 val=0r bnd=m
   61 : __link typ=w32 bnd=m
   62 : __tmp typ=w32 bnd=m
   63 : __ct_8s0 typ=w32 val=8s0 bnd=m
   65 : __tmp typ=w32 bnd=m
   78 : __either typ=bool bnd=m
   79 : __trgt typ=t13s_s2 val=0j bnd=m
   80 : __trgt typ=t21s_s2 val=0j bnd=m
]
Fputs {
    #3 off=0
    (__M_DMw.4 var=5) st_def ()  <8>;
    (__M_DMw_stat.7 var=8) st_def ()  <14>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__vola.12 var=13) source ()  <23>;
    (__extPMb.15 var=16) source ()  <26>;
    (__extDMb.16 var=17) source ()  <27>;
    (__sp.17 var=18) source ()  <28>;
    (s.18 var=19) source ()  <29>;
    (rt.19 var=20) source ()  <30>;
    (stdout.20 var=21) source ()  <31>;
    (__extDMb___PFILE.21 var=22) source ()  <32>;
    (__extPMb_FILE.22 var=23) source ()  <33>;
    (__extPMb_void.23 var=24) source ()  <34>;
    (__extDMb_void.24 var=25) source ()  <35>;
    (__la.28 var=29 stl=X off=1) inp ()  <39>;
    (__la.29 var=29) deassign (__la.28)  <40>;
    (__arg_s.32 var=31 stl=X off=11) inp ()  <43>;
    (__arg_s.33 var=31) deassign (__arg_s.32)  <44>;
    (__rd___sp.35 var=26) rd_res_reg (__R_SP.11 __sp.17)  <46>;
    (__ct_m8S0.36 var=32) const ()  <47>;
    (__tmp.38 var=34) __Pvoid__pl___Pvoid___sint (__rd___sp.35 __ct_m8S0.36)  <49>;
    (__R_SP.39 var=12 __sp.40 var=18) wr_res_reg (__tmp.38 __sp.17)  <50>;
    (__rd___sp.41 var=26) rd_res_reg (__R_SP.11 __sp.40)  <52>;
    (__ct_0t0.42 var=36) const ()  <53>;
    (__adr_s.44 var=38) __Pvoid__pl___Pvoid___sint (__rd___sp.41 __ct_0t0.42)  <55>;
    (__rd___sp.46 var=26) rd_res_reg (__R_SP.11 __sp.40)  <57>;
    (__M_DMw.51 var=5 s.52 var=19) store (__arg_s.33 __adr_s.44 s.18)  <62>;
    call {
        () chess_separator_scheduler ()  <63>;
    } #4 off=1
    #5 off=2
    (__ptr_stdout.26 var=28) const ()  <37>;
    (__fch_s.53 var=43) load (__M_DMw.4 __adr_s.44 s.52)  <64>;
    (__fch_stdout.55 var=44) load (__M_DMw_stat.7 __ptr_stdout.26 stdout.20)  <66>;
    (fputs.59 var=47) const ()  <70>;
    (__link.60 var=48) w32_jal_t21s_s2 (fputs.59)  <71>;
    call {
        (__fch_s.54 var=43 stl=X off=11) assign (__fch_s.53)  <65>;
        (__fch_stdout.56 var=44 stl=X off=12) assign (__fch_stdout.55)  <67>;
        (__link.61 var=48 stl=X off=1) assign (__link.60)  <72>;
        (__tmp.62 var=49 stl=X off=10 __extDMb.65 var=17 __extDMb___PFILE.66 var=22 __extDMb_void.67 var=25 __extPMb.68 var=16 __extPMb_FILE.69 var=23 __extPMb_void.70 var=24 stdout.71 var=21 __vola.72 var=13) Ffputs (__link.61 __fch_s.54 __fch_stdout.56 __extDMb.16 __extDMb___PFILE.21 __extDMb_void.24 __extPMb.15 __extPMb_FILE.22 __extPMb_void.23 stdout.20 __vola.12)  <73>;
        (__tmp.63 var=49) deassign (__tmp.62)  <74>;
    } #6 off=3
    #7 off=4
    (__ct_4t0.47 var=40) const ()  <58>;
    (__adr_rt.49 var=42) __Pvoid__pl___Pvoid___sint (__rd___sp.46 __ct_4t0.47)  <60>;
    (__M_DMw.73 var=5 rt.74 var=20) store (__tmp.63 __adr_rt.49 rt.19)  <76>;
    call {
        () chess_separator_scheduler ()  <77>;
    } #8 off=5
    #9 off=6
    (__fch_rt.75 var=50) load (__M_DMw.4 __adr_rt.49 rt.74)  <78>;
    (__ct_0.76 var=51) const ()  <79>;
    (__tmp.78 var=53) bool__lt___sint___sint (__fch_rt.75 __ct_0.76)  <81>;
    (__trgt.165 var=79) const ()  <232>;
    () void_br_bool_t13s_s2 (__tmp.78 __trgt.165)  <233>;
    (__either.166 var=78) undefined ()  <234>;
    if {
        {
            () if_expr (__either.166)  <101>;
        } #11
        {
            (__rt.98 var=30) load (__M_DMw.4 __adr_rt.49 rt.74)  <102>;
        } #13 off=10
        {
            #16 off=7
            (__ct_10.99 var=55) const ()  <104>;
            (__fch_stdout.102 var=57) load (__M_DMw_stat.7 __ptr_stdout.26 stdout.71)  <107>;
            (fputc.106 var=60) const ()  <111>;
            (__link.107 var=61) w32_jal_t21s_s2 (fputc.106)  <112>;
            call {
                (__ct.101 var=56 stl=X off=11) assign (__ct_10.99)  <106>;
                (__fch_stdout.103 var=57 stl=X off=12) assign (__fch_stdout.102)  <108>;
                (__link.108 var=61 stl=X off=1) assign (__link.107)  <113>;
                (__tmp.109 var=62 stl=X off=10 __extDMb.112 var=17 __extDMb___PFILE.113 var=22 __extDMb_void.114 var=25 __extPMb.115 var=16 __extPMb_FILE.116 var=23 __extPMb_void.117 var=24 stdout.118 var=21 __vola.119 var=13) Ffputc (__link.108 __ct.101 __fch_stdout.103 __extDMb.65 __extDMb___PFILE.66 __extDMb_void.67 __extPMb.68 __extPMb_FILE.69 __extPMb_void.70 stdout.71 __vola.72)  <114>;
                (__tmp.110 var=62) deassign (__tmp.109)  <115>;
            } #17 off=8
            #23 off=9
            (__trgt.167 var=80) const ()  <235>;
            () void_j_t21s_s2 (__trgt.167)  <236>;
        } #15
        {
            (__vola.120 var=13) merge (__vola.72 __vola.119)  <118>;
            (__extPMb.121 var=16) merge (__extPMb.68 __extPMb.115)  <119>;
            (__extDMb.122 var=17) merge (__extDMb.65 __extDMb.112)  <120>;
            (stdout.123 var=21) merge (stdout.71 stdout.118)  <121>;
            (__extDMb___PFILE.124 var=22) merge (__extDMb___PFILE.66 __extDMb___PFILE.113)  <122>;
            (__extPMb_FILE.125 var=23) merge (__extPMb_FILE.69 __extPMb_FILE.116)  <123>;
            (__extPMb_void.126 var=24) merge (__extPMb_void.70 __extPMb_void.117)  <124>;
            (__extDMb_void.127 var=25) merge (__extDMb_void.67 __extDMb_void.114)  <125>;
            (__rt.128 var=30) merge (__rt.98 __tmp.110)  <126>;
        } #19
    } #10
    #21 off=11 nxt=-2
    (__rd___sp.129 var=26) rd_res_reg (__R_SP.11 __sp.40)  <127>;
    (__ct_8s0.130 var=63) const ()  <128>;
    (__tmp.132 var=65) __Pvoid__pl___Pvoid___sint (__rd___sp.129 __ct_8s0.130)  <130>;
    (__R_SP.133 var=12 __sp.134 var=18) wr_res_reg (__tmp.132 __sp.40)  <131>;
    () void___rts_jr_w32 (__la.29)  <132>;
    (__rt.135 var=30 stl=X off=10) assign (__rt.128)  <133>;
    () out (__rt.135)  <134>;
    () sink (__vola.120)  <135>;
    () sink (__extPMb.121)  <138>;
    () sink (__extDMb.122)  <139>;
    () sink (__sp.134)  <140>;
    () sink (s.52)  <141>;
    () sink (rt.74)  <142>;
    () sink (stdout.123)  <143>;
    () sink (__extDMb___PFILE.124)  <144>;
    () sink (__extPMb_FILE.125)  <145>;
    () sink (__extPMb_void.126)  <146>;
    () sink (__extDMb_void.127)  <147>;
} #0
0 : 'include/stdio.h';
----------
0 : (0,203:16,0);
3 : (0,203:16,0);
4 : (0,203:16,0);
5 : (0,205:22,2);
6 : (0,205:13,2);
7 : (0,205:13,2);
8 : (0,205:13,2);
9 : (0,206:11,3);
10 : (0,206:4,3);
13 : (0,207:8,5);
15 : (0,207:8,6);
16 : (0,208:23,7);
17 : (0,208:11,7);
21 : (0,208:4,11);
----------
46 : (0,203:16,0);
47 : (0,203:16,0);
49 : (0,203:16,0);
50 : (0,203:16,0);
52 : (0,203:28,0);
53 : (0,203:28,0);
55 : (0,203:28,0);
57 : (0,205:8,0);
58 : (0,205:8,0);
60 : (0,205:8,0);
62 : (0,203:16,0);
63 : (0,203:16,0);
64 : (0,205:19,2);
65 : (0,205:19,0);
66 : (0,205:22,2);
67 : (0,205:22,0);
71 : (0,205:13,2);
72 : (0,205:13,0);
73 : (0,205:13,2);
76 : (0,205:13,2);
77 : (0,205:13,2);
78 : (0,206:8,3);
79 : (0,206:13,0);
81 : (0,206:11,3);
101 : (0,206:4,3);
102 : (0,207:15,4);
104 : (0,208:21,0);
106 : (0,208:21,0);
107 : (0,208:23,7);
108 : (0,208:23,0);
112 : (0,208:11,7);
113 : (0,208:11,0);
114 : (0,208:11,7);
118 : (0,206:4,10);
119 : (0,206:4,10);
120 : (0,206:4,10);
121 : (0,206:4,10);
122 : (0,206:4,10);
123 : (0,206:4,10);
124 : (0,206:4,10);
125 : (0,206:4,10);
126 : (0,206:4,10);
127 : (0,208:4,0);
128 : (0,208:4,0);
130 : (0,208:4,0);
131 : (0,208:4,11);
132 : (0,208:4,11);
133 : (0,208:4,0);
233 : (0,206:4,3);

