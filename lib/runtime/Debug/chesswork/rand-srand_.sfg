
// File generated by noodle version U-2022.12#33f3808fcb#221128, Tue Mar 19 15:58:56 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -D__tct_patch__=0 -itrv32p3_cnn_chess.h +Sal +Sca +Osps -Wflla +NOtcr +NOcse +NOifv +NOrle +NOrlt +wDebug/chesswork src/rand.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!!  void srand(unsigned)
Fsrand : user_defined, called {
    fnm : "srand" 'void srand(unsigned)';
    arg : ( w32:i w32:i );
    loc : ( X[1] X[10] );
    frm : ( l=4 );
}
****
***/

[
    0 : srand typ=u08 bnd=e stl=PMb
    5 : __M_DMw typ=w32 bnd=d stl=DMw
    8 : __M_DMw_stat typ=w32 bnd=d stl=DMw_stat
   12 : __R_SP typ=w32 bnd=d stl=SP
   18 : __sp typ=w32 bnd=b stl=SP
   19 : seed typ=w08 val=0t0 bnd=a sz=4 algn=4 stl=DMb tref=__uint_DMb
   20 : _ZL4next typ=w08 bnd=i sz=4 algn=4 stl=DMb_stat tref=__ulong_DMb_stat
   22 : __rd___sp typ=w32 bnd=m
   24 : __ptr_next typ=w32 val=0a bnd=m adro=20
   25 : __la typ=w32 bnd=p tref=w32__
   26 : __arg_seed typ=w32 bnd=p tref=__uint__
   27 : __ct_m4S0 typ=w32 val=-4S0 bnd=m
   29 : __tmp typ=w32 bnd=m
   31 : __ct_0t0 typ=w32 val=0t0 bnd=m
   33 : __adr_seed typ=w32 bnd=m adro=19
   34 : __fch_seed typ=w32 bnd=m
   35 : __ct_4s0 typ=w32 val=4s0 bnd=m
   37 : __tmp typ=w32 bnd=m
]
Fsrand {
    #3 off=0
    (__M_DMw.4 var=5) st_def ()  <8>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__sp.17 var=18) source ()  <28>;
    (seed.18 var=19) source ()  <29>;
    (_ZL4next.19 var=20) source ()  <30>;
    (__la.24 var=25 stl=X off=1) inp ()  <35>;
    (__la.25 var=25) deassign (__la.24)  <36>;
    (__arg_seed.27 var=26 stl=X off=10) inp ()  <38>;
    (__arg_seed.28 var=26) deassign (__arg_seed.27)  <39>;
    (__rd___sp.30 var=22) rd_res_reg (__R_SP.11 __sp.17)  <41>;
    (__ct_m4S0.31 var=27) const ()  <42>;
    (__tmp.33 var=29) __Pvoid__pl___Pvoid___sint (__rd___sp.30 __ct_m4S0.31)  <44>;
    (__R_SP.34 var=12 __sp.35 var=18) wr_res_reg (__tmp.33 __sp.17)  <45>;
    (__rd___sp.36 var=22) rd_res_reg (__R_SP.11 __sp.35)  <47>;
    (__ct_0t0.37 var=31) const ()  <48>;
    (__adr_seed.39 var=33) __Pvoid__pl___Pvoid___sint (__rd___sp.36 __ct_0t0.37)  <50>;
    (__M_DMw.41 var=5 seed.42 var=19) store (__arg_seed.28 __adr_seed.39 seed.18)  <52>;
    call {
        () chess_separator_scheduler ()  <53>;
    } #4 off=1
    #5 off=2
    (__ptr_next.22 var=24) const ()  <33>;
    (__fch_seed.43 var=34) load (__M_DMw.4 __adr_seed.39 seed.42)  <54>;
    (__M_DMw_stat.44 var=8 _ZL4next.45 var=20) store (__fch_seed.43 __ptr_next.22 _ZL4next.19)  <55>;
    call {
        () chess_separator_scheduler ()  <56>;
    } #6 off=3
    #8 off=4 nxt=-2
    (__rd___sp.46 var=22) rd_res_reg (__R_SP.11 __sp.35)  <57>;
    (__ct_4s0.47 var=35) const ()  <58>;
    (__tmp.49 var=37) __Pvoid__pl___Pvoid___sint (__rd___sp.46 __ct_4s0.47)  <60>;
    (__R_SP.50 var=12 __sp.51 var=18) wr_res_reg (__tmp.49 __sp.35)  <61>;
    () void___rts_jr_w32 (__la.25)  <62>;
    () sink (__sp.51)  <68>;
    () sink (seed.42)  <69>;
    () sink (_ZL4next.45)  <70>;
} #0
0 : 'src/rand.c';
----------
0 : (0,31:0,0);
3 : (0,31:11,0);
4 : (0,31:11,0);
5 : (0,33:9,3);
6 : (0,33:9,3);
8 : (0,34:0,3);
----------
41 : (0,31:5,0);
42 : (0,31:5,0);
44 : (0,31:5,0);
45 : (0,31:5,0);
47 : (0,31:24,0);
48 : (0,31:24,0);
50 : (0,31:24,0);
52 : (0,31:11,0);
53 : (0,31:11,0);
54 : (0,33:11,2);
55 : (0,33:4,2);
56 : (0,33:9,3);
57 : (0,34:0,0);
58 : (0,34:0,0);
60 : (0,34:0,0);
61 : (0,34:0,3);
62 : (0,34:0,3);

