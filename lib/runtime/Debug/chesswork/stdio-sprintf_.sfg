
// File generated by noodle version U-2022.12#33f3808fcb#221128, Thu Feb 29 17:34:08 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -D__tct_patch__=0 -itrv32p3_cnn_chess.h +Sal +Sca +Osps -Wflla +NOtcr +NOcse +NOlsw +NOifv +NOrle +NOrlt +wDebug/chesswork src/stdio.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!! extern int sprintf(char *, const char *, ...)
Fsprintf : user_defined, called {
    fnm : "sprintf" 'int sprintf(char *, const char *, ...)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
    frm : ( l=84 );
    llv : 0 0 0 0 0 ;
}
****
!! static void clib_hosted_io(Hosted_clib_vars *)
Fclib_hosted_io : user_defined, called {
    fnm : "clib_hosted_io" 'void clib_hosted_io(Hosted_clib_vars *)';
    arg : ( w32:i w32:i );
    loc : ( X[1] X[10] );
    llv : 0 0 0 0 0 ;
}
***/

[
    0 : sprintf typ=u08 bnd=e stl=PMb
    5 : __M_DMw typ=w32 bnd=d stl=DMw
   12 : __R_SP typ=w32 bnd=d stl=SP
   13 : __vola typ=u08 bnd=b stl=PMb
   16 : __extPMb typ=u08 bnd=b stl=PMb
   17 : __extDMb typ=w08 bnd=b stl=DMb
   18 : __sp typ=w32 bnd=b stl=SP
   19 : format typ=w08 val=0t0 bnd=a sz=4 algn=4 stl=DMb tref=__P__cchar_DMb
   20 : str typ=w08 val=4t0 bnd=a sz=4 algn=4 stl=DMb tref=__P__cchar_DMb
   21 : ap typ=w08 val=8t0 bnd=a sz=4 algn=4 stl=DMb tref=va_list_DMb
   22 : __inl__hosted_clib_vars typ=w08 val=16t0 bnd=a sz=68 algn=4 stl=DMb tref=Hosted_clib_vars_DMb
   23 : rt typ=w08 val=12t0 bnd=a sz=4 algn=4 stl=DMb tref=__sint_DMb
   24 : __extPMb_void typ=u08 bnd=b stl=PMb
   25 : __inl__hosted_clib_vars_gets_s typ=w08 bnd=B stl=DMb
   26 : __inl__hosted_clib_vars_format typ=w08 bnd=B stl=DMb
   27 : __inl__hosted_clib_vars_ap typ=w08 bnd=B stl=DMb
   28 : __inl__hosted_clib_vars_call_type typ=w08 bnd=B stl=DMb
   29 : __inl__hosted_clib_vars_stream_rt typ=w08 bnd=B stl=DMb
   30 : __extDMb_void typ=w08 bnd=b stl=DMb
   31 : __extDMb_Hosted_clib_vars typ=w08 bnd=b stl=DMb
   32 : __extDMb___PDMbvoid typ=w08 bnd=b stl=DMb
   33 : __extDMb___Pvoid typ=w08 bnd=b stl=DMb
   34 : __extDMb_w32 typ=w08 bnd=b stl=DMb
   35 : __rd___sp typ=w32 bnd=m
   36 : __la typ=w32 bnd=p tref=w32__
   37 : __rt typ=w32 bnd=p tref=__sint__
   38 : __arg_str typ=w32 bnd=p tref=__P__cchar__
   39 : __arg_format typ=w32 bnd=p tref=__P__cchar__
   40 : __ct_m84S0 typ=w32 val=-84S0 bnd=m
   42 : __tmp typ=w32 bnd=m
   43 : __ct_84t0 typ=w32 val=84t0 bnd=m
   45 : __tmp typ=w32 bnd=m
   47 : __ct_0t0 typ=w32 val=0t0 bnd=m
   49 : __adr_format typ=w32 bnd=m adro=19
   51 : __ct_4t0 typ=w32 val=4t0 bnd=m
   53 : __adr_str typ=w32 bnd=m adro=20
   55 : __ct_8t0 typ=w32 val=8t0 bnd=m
   57 : __adr_ap typ=w32 bnd=m adro=21
   58 : __ptr___inl__hosted_clib_vars typ=w32 bnd=m
   59 : __ct_16t0 typ=w32 val=16t0 bnd=m
   61 : __adr___inl__hosted_clib_vars typ=w32 bnd=m adro=22
   63 : __ct_12t0 typ=w32 val=12t0 bnd=m
   65 : __adr_rt typ=w32 bnd=m adro=23
   73 : __fch_str typ=w32 bnd=m
   74 : __fch_format typ=w32 bnd=m
   75 : __fch_ap typ=w32 bnd=m
   85 : __ct_23 typ=w32 val=23f bnd=m
   90 : __ct_m1 typ=w32 val=-1f bnd=m
   97 : clib_hosted_io typ=t21s_s2 val=0r bnd=m
   98 : __link typ=w32 bnd=m
  102 : __fch___inl__hosted_clib_vars_stream_rt typ=w32 bnd=m
  107 : __ct_84s0 typ=w32 val=84s0 bnd=m
  109 : __tmp typ=w32 bnd=m
  116 : __ct_60t0 typ=w32 val=60t0 bnd=m
  117 : __adr___inl__hosted_clib_vars typ=w32 bnd=m adro=22
  118 : __ct_36t0 typ=w32 val=36t0 bnd=m
  119 : __adr___inl__hosted_clib_vars typ=w32 bnd=m adro=22
  120 : __ct_80t0 typ=w32 val=80t0 bnd=m
  121 : __adr___inl__hosted_clib_vars typ=w32 bnd=m adro=22
  122 : __ct_24t0 typ=w32 val=24t0 bnd=m
  123 : __adr___inl__hosted_clib_vars typ=w32 bnd=m adro=22
  124 : __adr___inl__hosted_clib_vars typ=w32 bnd=m adro=22
]
Fsprintf {
    #3 off=0
    (__M_DMw.4 var=5) st_def ()  <8>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__vola.12 var=13) source ()  <23>;
    (__extPMb.15 var=16) source ()  <26>;
    (__extDMb.16 var=17) source ()  <27>;
    (__sp.17 var=18) source ()  <28>;
    (format.18 var=19) source ()  <29>;
    (str.19 var=20) source ()  <30>;
    (ap.20 var=21) source ()  <31>;
    (__inl__hosted_clib_vars.21 var=22) source ()  <32>;
    (rt.22 var=23) source ()  <33>;
    (__extPMb_void.23 var=24) source ()  <34>;
    (__inl__hosted_clib_vars_gets_s.24 var=25) source ()  <35>;
    (__inl__hosted_clib_vars_format.25 var=26) source ()  <36>;
    (__inl__hosted_clib_vars_ap.26 var=27) source ()  <37>;
    (__inl__hosted_clib_vars_call_type.27 var=28) source ()  <38>;
    (__inl__hosted_clib_vars_stream_rt.28 var=29) source ()  <39>;
    (__extDMb_void.29 var=30) source ()  <40>;
    (__extDMb_Hosted_clib_vars.30 var=31) source ()  <41>;
    (__extDMb___PDMbvoid.31 var=32) source ()  <42>;
    (__extDMb___Pvoid.32 var=33) source ()  <43>;
    (__extDMb_w32.33 var=34) source ()  <44>;
    (__la.35 var=36 stl=X off=1) inp ()  <46>;
    (__la.36 var=36) deassign (__la.35)  <47>;
    (__arg_str.39 var=38 stl=X off=11) inp ()  <50>;
    (__arg_str.40 var=38) deassign (__arg_str.39)  <51>;
    (__arg_format.42 var=39 stl=X off=12) inp ()  <53>;
    (__arg_format.43 var=39) deassign (__arg_format.42)  <54>;
    (__rd___sp.45 var=35) rd_res_reg (__R_SP.11 __sp.17)  <56>;
    (__ct_m84S0.46 var=40) const ()  <57>;
    (__tmp.48 var=42) __Pvoid__pl___Pvoid___sint (__rd___sp.45 __ct_m84S0.46)  <59>;
    (__R_SP.49 var=12 __sp.50 var=18) wr_res_reg (__tmp.48 __sp.17)  <60>;
    (__rd___sp.51 var=35) rd_res_reg (__R_SP.11 __sp.50)  <61>;
    (__rd___sp.55 var=35) rd_res_reg (__R_SP.11 __sp.50)  <66>;
    (__ct_0t0.56 var=47) const ()  <67>;
    (__adr_format.58 var=49) __Pvoid__pl___Pvoid___sint (__rd___sp.55 __ct_0t0.56)  <69>;
    (__rd___sp.60 var=35) rd_res_reg (__R_SP.11 __sp.50)  <71>;
    (__rd___sp.65 var=35) rd_res_reg (__R_SP.11 __sp.50)  <76>;
    (__rd___sp.70 var=35) rd_res_reg (__R_SP.11 __sp.50)  <81>;
    (__rd___sp.75 var=35) rd_res_reg (__R_SP.11 __sp.50)  <86>;
    (__M_DMw.87 var=5 format.88 var=19) store (__arg_format.43 __adr_format.58 format.18)  <98>;
    call {
        () chess_separator_scheduler ()  <99>;
    } #4 off=1
    #5 off=2
    (__ct_4t0.61 var=51) const ()  <72>;
    (__adr_str.63 var=53) __Pvoid__pl___Pvoid___sint (__rd___sp.60 __ct_4t0.61)  <74>;
    (__M_DMw.89 var=5 str.90 var=20) store (__arg_str.40 __adr_str.63 str.19)  <100>;
    call {
        () chess_separator_scheduler ()  <101>;
    } #6 off=3
    #7 off=4
    (__ct_84t0.52 var=43) const ()  <62>;
    (__tmp.54 var=45) __Pvoid__pl___Pvoid___sint (__rd___sp.51 __ct_84t0.52)  <64>;
    (__ct_8t0.66 var=55) const ()  <77>;
    (__adr_ap.68 var=57) __Pvoid__pl___Pvoid___sint (__rd___sp.65 __ct_8t0.66)  <79>;
    (__M_DMw.91 var=5 ap.92 var=21) store (__tmp.54 __adr_ap.68 ap.20)  <102>;
    call {
        () chess_separator_scheduler ()  <105>;
    } #10 off=5
    #11 off=6
    (__fch_str.95 var=73) load (__M_DMw.4 __adr_str.63 str.90)  <107>;
    call {
        () chess_separator_scheduler ()  <108>;
    } #12 off=7
    #13 off=8
    (__fch_format.97 var=74) load (__M_DMw.4 __adr_format.58 format.88)  <110>;
    call {
        () chess_separator_scheduler ()  <111>;
    } #14 off=9
    #15 off=10
    (__fch_ap.99 var=75) load (__M_DMw.4 __adr_ap.68 ap.92)  <113>;
    call {
        () chess_separator_scheduler ()  <120>;
    } #22 off=11
    #23 off=12
    (__M_DMw.106 var=5 __inl__hosted_clib_vars_gets_s.107 var=25) store (__fch_str.95 __adr___inl__hosted_clib_vars.218 __inl__hosted_clib_vars_gets_s.24)  <124>;
    (__ct_60t0.217 var=116) const ()  <283>;
    (__adr___inl__hosted_clib_vars.218 var=117) __Pvoid__pl___Pvoid___sint (__rd___sp.70 __ct_60t0.217)  <285>;
    call {
        () chess_separator_scheduler ()  <125>;
    } #24 off=13
    #25 off=14
    (__M_DMw.111 var=5 __inl__hosted_clib_vars_format.112 var=26) store (__fch_format.97 __adr___inl__hosted_clib_vars.220 __inl__hosted_clib_vars_format.25)  <129>;
    (__ct_36t0.219 var=118) const ()  <286>;
    (__adr___inl__hosted_clib_vars.220 var=119) __Pvoid__pl___Pvoid___sint (__rd___sp.70 __ct_36t0.219)  <288>;
    call {
        () chess_separator_scheduler ()  <130>;
    } #26 off=15
    #27 off=16
    (__M_DMw.116 var=5 __inl__hosted_clib_vars_ap.117 var=27) store (__fch_ap.99 __adr___inl__hosted_clib_vars.222 __inl__hosted_clib_vars_ap.26)  <134>;
    (__ct_80t0.221 var=120) const ()  <289>;
    (__adr___inl__hosted_clib_vars.222 var=121) __Pvoid__pl___Pvoid___sint (__rd___sp.70 __ct_80t0.221)  <291>;
    call {
        () chess_separator_scheduler ()  <135>;
    } #28 off=17
    #29 off=18
    (__ct_16t0.71 var=59) const ()  <82>;
    (__adr___inl__hosted_clib_vars.73 var=61) __Pvoid__pl___Pvoid___sint (__rd___sp.70 __ct_16t0.71)  <84>;
    (__ct_23.118 var=85) const ()  <136>;
    (__M_DMw.123 var=5 __inl__hosted_clib_vars_call_type.124 var=28) store (__ct_23.118 __adr___inl__hosted_clib_vars.73 __inl__hosted_clib_vars_call_type.27)  <141>;
    call {
        () chess_separator_scheduler ()  <142>;
    } #30 off=19
    #31 off=20
    (__ct_m1.125 var=90) const ()  <143>;
    (__M_DMw.130 var=5 __inl__hosted_clib_vars_stream_rt.131 var=29) store (__ct_m1.125 __adr___inl__hosted_clib_vars.224 __inl__hosted_clib_vars_stream_rt.28)  <148>;
    (__ct_24t0.223 var=122) const ()  <292>;
    (__adr___inl__hosted_clib_vars.224 var=123) __Pvoid__pl___Pvoid___sint (__rd___sp.70 __ct_24t0.223)  <294>;
    call {
        () chess_separator_scheduler ()  <149>;
    } #32 off=21
    #33 off=22
    (clib_hosted_io.135 var=97) const ()  <153>;
    (__link.136 var=98) w32_jal_t21s_s2 (clib_hosted_io.135)  <154>;
    call {
        (__ptr___inl__hosted_clib_vars.132 var=58 stl=X off=10) assign (__adr___inl__hosted_clib_vars.73)  <150>;
        (__link.137 var=98 stl=X off=1) assign (__link.136)  <155>;
        (__extDMb.138 var=17 __extDMb_Hosted_clib_vars.139 var=31 __extDMb___PDMbvoid.140 var=32 __extDMb___Pvoid.141 var=33 __extDMb_void.142 var=30 __extDMb_w32.143 var=34 __extPMb.144 var=16 __extPMb_void.145 var=24 __inl__hosted_clib_vars.146 var=22 __inl__hosted_clib_vars_ap.147 var=27 __inl__hosted_clib_vars_call_type.148 var=28 __inl__hosted_clib_vars_format.149 var=26 __inl__hosted_clib_vars_gets_s.150 var=25 __inl__hosted_clib_vars_stream_rt.151 var=29 __vola.152 var=13) Fclib_hosted_io (__link.137 __ptr___inl__hosted_clib_vars.132 __extDMb.16 __extDMb_Hosted_clib_vars.30 __extDMb___PDMbvoid.31 __extDMb___Pvoid.32 __extDMb_void.29 __extDMb_w32.33 __extPMb.15 __extPMb_void.23 __inl__hosted_clib_vars.21 __inl__hosted_clib_vars_ap.117 __inl__hosted_clib_vars_call_type.124 __inl__hosted_clib_vars_format.112 __inl__hosted_clib_vars_gets_s.107 __inl__hosted_clib_vars_stream_rt.131 __vola.12)  <156>;
    } #34 off=23
    #36 off=24
    (__fch___inl__hosted_clib_vars_stream_rt.156 var=102) load (__M_DMw.4 __adr___inl__hosted_clib_vars.225 __inl__hosted_clib_vars_stream_rt.151)  <161>;
    (__adr___inl__hosted_clib_vars.225 var=124) __Pvoid__pl___Pvoid___sint (__rd___sp.70 __ct_24t0.223)  <295>;
    call {
        () chess_separator_scheduler ()  <162>;
    } #37 off=25
    #38 off=26
    (__ct_12t0.76 var=63) const ()  <87>;
    (__adr_rt.78 var=65) __Pvoid__pl___Pvoid___sint (__rd___sp.75 __ct_12t0.76)  <89>;
    (__M_DMw.157 var=5 rt.158 var=23) store (__fch___inl__hosted_clib_vars_stream_rt.156 __adr_rt.78 rt.22)  <163>;
    call {
        () chess_separator_scheduler ()  <168>;
    } #41 off=27
    #44 off=28 nxt=-2
    (__rt.162 var=37) load (__M_DMw.4 __adr_rt.78 rt.158)  <169>;
    (__rd___sp.163 var=35) rd_res_reg (__R_SP.11 __sp.50)  <170>;
    (__ct_84s0.164 var=107) const ()  <171>;
    (__tmp.166 var=109) __Pvoid__pl___Pvoid___sint (__rd___sp.163 __ct_84s0.164)  <173>;
    (__R_SP.167 var=12 __sp.168 var=18) wr_res_reg (__tmp.166 __sp.50)  <174>;
    () void___rts_jr_w32 (__la.36)  <175>;
    (__rt.169 var=37 stl=X off=10) assign (__rt.162)  <176>;
    () out (__rt.169)  <177>;
    () sink (__vola.152)  <178>;
    () sink (__extPMb.144)  <181>;
    () sink (__extDMb.138)  <182>;
    () sink (__sp.168)  <183>;
    () sink (format.88)  <184>;
    () sink (str.90)  <185>;
    () sink (ap.92)  <186>;
    () sink (__inl__hosted_clib_vars.146)  <187>;
    () sink (rt.158)  <188>;
    () sink (__extPMb_void.145)  <189>;
    () sink (__inl__hosted_clib_vars_gets_s.150)  <190>;
    () sink (__inl__hosted_clib_vars_format.149)  <191>;
    () sink (__inl__hosted_clib_vars_ap.147)  <192>;
    () sink (__inl__hosted_clib_vars_call_type.148)  <193>;
    () sink (__inl__hosted_clib_vars_stream_rt.151)  <194>;
    () sink (__extDMb_void.142)  <195>;
    () sink (__extDMb_Hosted_clib_vars.139)  <196>;
    () sink (__extDMb___PDMbvoid.140)  <197>;
    () sink (__extDMb___Pvoid.141)  <198>;
    () sink (__extDMb_w32.143)  <199>;
} #0
0 : 'src/stdio.c';
----------
0 : (0,771:0,0);
3 : (0,771:23,0);
4 : (0,771:23,0);
5 : (0,771:12,0);
6 : (0,771:12,0);
7 : (0,774:6,6);
10 : (0,775:13,8);
11 : (0,775:23,9);
12 : (0,775:23,9);
13 : (0,775:28,10);
14 : (0,775:28,10);
15 : (0,775:36,11);
22 : (0,775:13,14);
23 : (0,775:13,17);
24 : (0,775:13,17);
25 : (0,775:13,18);
26 : (0,775:13,18);
27 : (0,775:13,19);
28 : (0,775:13,19);
29 : (0,775:13,20);
30 : (0,775:13,20);
31 : (0,775:13,21);
32 : (0,775:13,21);
33 : (0,775:13,21);
34 : (0,775:13,21);
36 : (0,775:13,23);
37 : (0,775:13,23);
38 : (0,775:11,26);
41 : (0,776:1,27);
44 : (0,777:4,27);
----------
56 : (0,771:4,0);
57 : (0,771:4,0);
59 : (0,771:4,0);
60 : (0,771:4,0);
61 : (0,771:4,0);
62 : (0,771:4,0);
64 : (0,771:4,0);
66 : (0,771:35,0);
67 : (0,771:35,0);
69 : (0,771:35,0);
71 : (0,771:18,0);
72 : (0,771:18,0);
74 : (0,771:18,0);
76 : (0,773:12,0);
77 : (0,773:12,0);
79 : (0,773:12,0);
81 : (0,775:13,0);
82 : (0,775:13,0);
84 : (0,775:13,0);
86 : (0,775:8,0);
87 : (0,775:8,0);
89 : (0,775:8,0);
98 : (0,771:23,0);
99 : (0,771:23,0);
100 : (0,771:12,0);
101 : (0,771:12,0);
102 : (0,774:2,5);
105 : (0,775:13,8);
107 : (0,775:23,9);
108 : (0,775:23,9);
110 : (0,775:28,10);
111 : (0,775:28,10);
113 : (0,775:36,11);
120 : (0,775:13,14);
124 : (0,775:13,16);
125 : (0,775:13,17);
129 : (0,775:13,17);
130 : (0,775:13,18);
134 : (0,775:13,18);
135 : (0,775:13,19);
136 : (0,775:13,0);
141 : (0,775:13,19);
142 : (0,775:13,20);
143 : (0,775:13,0);
148 : (0,775:13,20);
149 : (0,775:13,21);
150 : (0,775:13,0);
154 : (0,775:13,21);
155 : (0,775:13,0);
156 : (0,775:13,21);
161 : (0,775:13,22);
162 : (0,775:13,23);
163 : (0,775:13,25);
168 : (0,776:1,27);
169 : (0,777:11,27);
170 : (0,777:4,0);
171 : (0,777:4,0);
173 : (0,777:4,0);
174 : (0,777:4,27);
175 : (0,777:4,27);
176 : (0,777:11,0);
283 : (0,775:13,0);
285 : (0,775:13,0);
286 : (0,775:13,0);
288 : (0,775:13,0);
289 : (0,775:13,0);
291 : (0,775:13,0);
292 : (0,775:13,0);
294 : (0,775:13,0);
295 : (0,775:13,0);

