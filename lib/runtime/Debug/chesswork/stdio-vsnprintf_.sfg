
// File generated by noodle version U-2022.12#33f3808fcb#221128, Tue Mar 19 17:13:45 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -D__tct_patch__=0 -itrv32p3_cnn_chess.h +Sal +Sca +Osps -Wflla +NOtcr +NOcse +NOifv +NOrle +NOrlt +wDebug/chesswork src/stdio.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!! extern int vsnprintf(char *, size_t, const char *, va_list)
Fvsnprintf : user_defined, called {
    fnm : "vsnprintf" 'int vsnprintf(char *, size_t, const char *, va_list)';
    arg : ( w32:i w32:r w32:i w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] X[14] );
    frm : ( l=84 );
    llv : 0 0 0 0 0 ;
}
****
!! static void clib_hosted_io(Hosted_clib_vars *)
Fclib_hosted_io : user_defined, called {
    fnm : "clib_hosted_io" 'void clib_hosted_io(Hosted_clib_vars *)';
    arg : ( w32:i w32:i );
    loc : ( X[1] X[10] );
    llv : 0 0 0 0 0 ;
}
***/

[
    0 : vsnprintf typ=u08 bnd=e stl=PMb
    5 : __M_DMw typ=w32 bnd=d stl=DMw
   12 : __R_SP typ=w32 bnd=d stl=SP
   13 : __vola typ=u08 bnd=b stl=PMb
   16 : __extPMb typ=u08 bnd=b stl=PMb
   17 : __extDMb typ=w08 bnd=b stl=DMb
   18 : __sp typ=w32 bnd=b stl=SP
   19 : ap typ=w08 val=0t0 bnd=a sz=4 algn=4 stl=DMb tref=va_list_DMb
   20 : format typ=w08 val=4t0 bnd=a sz=4 algn=4 stl=DMb tref=__P__cchar_DMb
   21 : size typ=w08 val=8t0 bnd=a sz=4 algn=4 stl=DMb tref=size_t_DMb
   22 : str typ=w08 val=12t0 bnd=a sz=4 algn=4 stl=DMb tref=__P__cchar_DMb
   23 : __inl__hosted_clib_vars typ=w08 val=16t0 bnd=a sz=68 algn=4 stl=DMb tref=Hosted_clib_vars_DMb
   24 : __extPMb_void typ=u08 bnd=b stl=PMb
   25 : __inl__hosted_clib_vars_gets_s typ=w08 bnd=B stl=DMb
   26 : __inl__hosted_clib_vars_size typ=w08 bnd=B stl=DMb
   27 : __inl__hosted_clib_vars_format typ=w08 bnd=B stl=DMb
   28 : __inl__hosted_clib_vars_ap typ=w08 bnd=B stl=DMb
   29 : __inl__hosted_clib_vars_call_type typ=w08 bnd=B stl=DMb
   30 : __inl__hosted_clib_vars_stream_rt typ=w08 bnd=B stl=DMb
   31 : __extDMb_void typ=w08 bnd=b stl=DMb
   32 : __extDMb_Hosted_clib_vars typ=w08 bnd=b stl=DMb
   33 : __extDMb___PDMbvoid typ=w08 bnd=b stl=DMb
   34 : __extDMb_w32 typ=w08 bnd=b stl=DMb
   35 : __extDMb___Pvoid typ=w08 bnd=b stl=DMb
   36 : __rd___sp typ=w32 bnd=m
   37 : __la typ=w32 bnd=p tref=w32__
   38 : __rt typ=w32 bnd=p tref=__sint__
   39 : __arg_str typ=w32 bnd=p tref=__P__cchar__
   40 : __arg_size typ=w32 bnd=p tref=size_t__
   41 : __arg_format typ=w32 bnd=p tref=__P__cchar__
   42 : __arg_ap typ=w32 bnd=p tref=va_list__
   43 : __ct_m84S0 typ=w32 val=-84S0 bnd=m
   45 : __tmp typ=w32 bnd=m
   47 : __ct_0t0 typ=w32 val=0t0 bnd=m
   49 : __adr_ap typ=w32 bnd=m adro=19
   51 : __ct_4t0 typ=w32 val=4t0 bnd=m
   53 : __adr_format typ=w32 bnd=m adro=20
   55 : __ct_8t0 typ=w32 val=8t0 bnd=m
   57 : __adr_size typ=w32 bnd=m adro=21
   59 : __ct_12t0 typ=w32 val=12t0 bnd=m
   61 : __adr_str typ=w32 bnd=m adro=22
   62 : __ptr___inl__hosted_clib_vars typ=w32 bnd=m
   63 : __ct_16t0 typ=w32 val=16t0 bnd=m
   65 : __adr___inl__hosted_clib_vars typ=w32 bnd=m adro=23
   75 : __fch_str typ=w32 bnd=m
   76 : __fch_size typ=w32 bnd=m
   77 : __fch_format typ=w32 bnd=m
   78 : __fch_ap typ=w32 bnd=m
   91 : __ct_24 typ=w32 val=24f bnd=m
   96 : __ct_m1 typ=w32 val=-1f bnd=m
  103 : clib_hosted_io typ=t21s_s2 val=0r bnd=m
  104 : __link typ=w32 bnd=m
  109 : __ct_84s0 typ=w32 val=84s0 bnd=m
  111 : __tmp typ=w32 bnd=m
  118 : __ct_60t0 typ=w32 val=60t0 bnd=m
  119 : __adr___inl__hosted_clib_vars typ=w32 bnd=m adro=23
  120 : __ct_64t0 typ=w32 val=64t0 bnd=m
  121 : __adr___inl__hosted_clib_vars typ=w32 bnd=m adro=23
  122 : __ct_36t0 typ=w32 val=36t0 bnd=m
  123 : __adr___inl__hosted_clib_vars typ=w32 bnd=m adro=23
  124 : __ct_80t0 typ=w32 val=80t0 bnd=m
  125 : __adr___inl__hosted_clib_vars typ=w32 bnd=m adro=23
  126 : __ct_24t0 typ=w32 val=24t0 bnd=m
  127 : __adr___inl__hosted_clib_vars typ=w32 bnd=m adro=23
  128 : __adr___inl__hosted_clib_vars typ=w32 bnd=m adro=23
]
Fvsnprintf {
    #3 off=0
    (__M_DMw.4 var=5) st_def ()  <8>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__vola.12 var=13) source ()  <23>;
    (__extPMb.15 var=16) source ()  <26>;
    (__extDMb.16 var=17) source ()  <27>;
    (__sp.17 var=18) source ()  <28>;
    (ap.18 var=19) source ()  <29>;
    (format.19 var=20) source ()  <30>;
    (size.20 var=21) source ()  <31>;
    (str.21 var=22) source ()  <32>;
    (__inl__hosted_clib_vars.22 var=23) source ()  <33>;
    (__extPMb_void.23 var=24) source ()  <34>;
    (__inl__hosted_clib_vars_gets_s.24 var=25) source ()  <35>;
    (__inl__hosted_clib_vars_size.25 var=26) source ()  <36>;
    (__inl__hosted_clib_vars_format.26 var=27) source ()  <37>;
    (__inl__hosted_clib_vars_ap.27 var=28) source ()  <38>;
    (__inl__hosted_clib_vars_call_type.28 var=29) source ()  <39>;
    (__inl__hosted_clib_vars_stream_rt.29 var=30) source ()  <40>;
    (__extDMb_void.30 var=31) source ()  <41>;
    (__extDMb_Hosted_clib_vars.31 var=32) source ()  <42>;
    (__extDMb___PDMbvoid.32 var=33) source ()  <43>;
    (__extDMb_w32.33 var=34) source ()  <44>;
    (__extDMb___Pvoid.34 var=35) source ()  <45>;
    (__la.36 var=37 stl=X off=1) inp ()  <47>;
    (__la.37 var=37) deassign (__la.36)  <48>;
    (__arg_str.40 var=39 stl=X off=11) inp ()  <51>;
    (__arg_str.41 var=39) deassign (__arg_str.40)  <52>;
    (__arg_size.43 var=40 stl=X off=12) inp ()  <54>;
    (__arg_size.44 var=40) deassign (__arg_size.43)  <55>;
    (__arg_format.46 var=41 stl=X off=13) inp ()  <57>;
    (__arg_format.47 var=41) deassign (__arg_format.46)  <58>;
    (__arg_ap.49 var=42 stl=X off=14) inp ()  <60>;
    (__arg_ap.50 var=42) deassign (__arg_ap.49)  <61>;
    (__rd___sp.52 var=36) rd_res_reg (__R_SP.11 __sp.17)  <63>;
    (__ct_m84S0.53 var=43) const ()  <64>;
    (__tmp.55 var=45) __Pvoid__pl___Pvoid___sint (__rd___sp.52 __ct_m84S0.53)  <66>;
    (__R_SP.56 var=12 __sp.57 var=18) wr_res_reg (__tmp.55 __sp.17)  <67>;
    (__rd___sp.58 var=36) rd_res_reg (__R_SP.11 __sp.57)  <69>;
    (__ct_0t0.59 var=47) const ()  <70>;
    (__adr_ap.61 var=49) __Pvoid__pl___Pvoid___sint (__rd___sp.58 __ct_0t0.59)  <72>;
    (__rd___sp.63 var=36) rd_res_reg (__R_SP.11 __sp.57)  <74>;
    (__rd___sp.68 var=36) rd_res_reg (__R_SP.11 __sp.57)  <79>;
    (__rd___sp.73 var=36) rd_res_reg (__R_SP.11 __sp.57)  <84>;
    (__rd___sp.78 var=36) rd_res_reg (__R_SP.11 __sp.57)  <89>;
    (__M_DMw.92 var=5 ap.93 var=19) store (__arg_ap.50 __adr_ap.61 ap.18)  <103>;
    call {
        () chess_separator_scheduler ()  <104>;
    } #4 off=1
    #5 off=2
    (__ct_4t0.64 var=51) const ()  <75>;
    (__adr_format.66 var=53) __Pvoid__pl___Pvoid___sint (__rd___sp.63 __ct_4t0.64)  <77>;
    (__M_DMw.94 var=5 format.95 var=20) store (__arg_format.47 __adr_format.66 format.19)  <105>;
    call {
        () chess_separator_scheduler ()  <106>;
    } #6 off=3
    #7 off=4
    (__ct_8t0.69 var=55) const ()  <80>;
    (__adr_size.71 var=57) __Pvoid__pl___Pvoid___sint (__rd___sp.68 __ct_8t0.69)  <82>;
    (__M_DMw.96 var=5 size.97 var=21) store (__arg_size.44 __adr_size.71 size.20)  <107>;
    call {
        () chess_separator_scheduler ()  <108>;
    } #8 off=5
    #9 off=6
    (__ct_12t0.74 var=59) const ()  <85>;
    (__adr_str.76 var=61) __Pvoid__pl___Pvoid___sint (__rd___sp.73 __ct_12t0.74)  <87>;
    (__M_DMw.98 var=5 str.99 var=22) store (__arg_str.41 __adr_str.76 str.21)  <109>;
    call {
        () chess_separator_scheduler ()  <112>;
    } #12 off=7
    #13 off=8
    (__fch_str.102 var=75) load (__M_DMw.4 __adr_str.76 str.99)  <114>;
    call {
        () chess_separator_scheduler ()  <115>;
    } #14 off=9
    #15 off=10
    (__fch_size.104 var=76) load (__M_DMw.4 __adr_size.71 size.97)  <117>;
    call {
        () chess_separator_scheduler ()  <118>;
    } #16 off=11
    #17 off=12
    (__fch_format.106 var=77) load (__M_DMw.4 __adr_format.66 format.95)  <120>;
    call {
        () chess_separator_scheduler ()  <121>;
    } #18 off=13
    #19 off=14
    (__fch_ap.108 var=78) load (__M_DMw.4 __adr_ap.61 ap.93)  <123>;
    call {
        () chess_separator_scheduler ()  <132>;
    } #28 off=15
    #29 off=16
    (__M_DMw.116 var=5 __inl__hosted_clib_vars_gets_s.117 var=25) store (__fch_str.102 __adr___inl__hosted_clib_vars.234 __inl__hosted_clib_vars_gets_s.24)  <136>;
    (__ct_60t0.233 var=118) const ()  <300>;
    (__adr___inl__hosted_clib_vars.234 var=119) __Pvoid__pl___Pvoid___sint (__rd___sp.78 __ct_60t0.233)  <302>;
    call {
        () chess_separator_scheduler ()  <137>;
    } #30 off=17
    #31 off=18
    (__M_DMw.121 var=5 __inl__hosted_clib_vars_size.122 var=26) store (__fch_size.104 __adr___inl__hosted_clib_vars.236 __inl__hosted_clib_vars_size.25)  <141>;
    (__ct_64t0.235 var=120) const ()  <303>;
    (__adr___inl__hosted_clib_vars.236 var=121) __Pvoid__pl___Pvoid___sint (__rd___sp.78 __ct_64t0.235)  <305>;
    call {
        () chess_separator_scheduler ()  <142>;
    } #32 off=19
    #33 off=20
    (__M_DMw.126 var=5 __inl__hosted_clib_vars_format.127 var=27) store (__fch_format.106 __adr___inl__hosted_clib_vars.238 __inl__hosted_clib_vars_format.26)  <146>;
    (__ct_36t0.237 var=122) const ()  <306>;
    (__adr___inl__hosted_clib_vars.238 var=123) __Pvoid__pl___Pvoid___sint (__rd___sp.78 __ct_36t0.237)  <308>;
    call {
        () chess_separator_scheduler ()  <147>;
    } #34 off=21
    #35 off=22
    (__M_DMw.131 var=5 __inl__hosted_clib_vars_ap.132 var=28) store (__fch_ap.108 __adr___inl__hosted_clib_vars.240 __inl__hosted_clib_vars_ap.27)  <151>;
    (__ct_80t0.239 var=124) const ()  <309>;
    (__adr___inl__hosted_clib_vars.240 var=125) __Pvoid__pl___Pvoid___sint (__rd___sp.78 __ct_80t0.239)  <311>;
    call {
        () chess_separator_scheduler ()  <152>;
    } #36 off=23
    #37 off=24
    (__ct_16t0.79 var=63) const ()  <90>;
    (__adr___inl__hosted_clib_vars.81 var=65) __Pvoid__pl___Pvoid___sint (__rd___sp.78 __ct_16t0.79)  <92>;
    (__ct_24.133 var=91) const ()  <153>;
    (__M_DMw.138 var=5 __inl__hosted_clib_vars_call_type.139 var=29) store (__ct_24.133 __adr___inl__hosted_clib_vars.81 __inl__hosted_clib_vars_call_type.28)  <158>;
    call {
        () chess_separator_scheduler ()  <159>;
    } #38 off=25
    #39 off=26
    (__ct_m1.140 var=96) const ()  <160>;
    (__M_DMw.145 var=5 __inl__hosted_clib_vars_stream_rt.146 var=30) store (__ct_m1.140 __adr___inl__hosted_clib_vars.242 __inl__hosted_clib_vars_stream_rt.29)  <165>;
    (__ct_24t0.241 var=126) const ()  <312>;
    (__adr___inl__hosted_clib_vars.242 var=127) __Pvoid__pl___Pvoid___sint (__rd___sp.78 __ct_24t0.241)  <314>;
    call {
        () chess_separator_scheduler ()  <166>;
    } #40 off=27
    #41 off=28
    (clib_hosted_io.150 var=103) const ()  <170>;
    (__link.151 var=104) w32_jal_t21s_s2 (clib_hosted_io.150)  <171>;
    call {
        (__ptr___inl__hosted_clib_vars.147 var=62 stl=X off=10) assign (__adr___inl__hosted_clib_vars.81)  <167>;
        (__link.152 var=104 stl=X off=1) assign (__link.151)  <172>;
        (__extDMb.153 var=17 __extDMb_Hosted_clib_vars.154 var=32 __extDMb___PDMbvoid.155 var=33 __extDMb___Pvoid.156 var=35 __extDMb_void.157 var=31 __extDMb_w32.158 var=34 __extPMb.159 var=16 __extPMb_void.160 var=24 __inl__hosted_clib_vars.161 var=23 __inl__hosted_clib_vars_ap.162 var=28 __inl__hosted_clib_vars_call_type.163 var=29 __inl__hosted_clib_vars_format.164 var=27 __inl__hosted_clib_vars_gets_s.165 var=25 __inl__hosted_clib_vars_size.166 var=26 __inl__hosted_clib_vars_stream_rt.167 var=30 __vola.168 var=13) Fclib_hosted_io (__link.152 __ptr___inl__hosted_clib_vars.147 __extDMb.16 __extDMb_Hosted_clib_vars.31 __extDMb___PDMbvoid.32 __extDMb___Pvoid.34 __extDMb_void.30 __extDMb_w32.33 __extPMb.15 __extPMb_void.23 __inl__hosted_clib_vars.22 __inl__hosted_clib_vars_ap.132 __inl__hosted_clib_vars_call_type.139 __inl__hosted_clib_vars_format.127 __inl__hosted_clib_vars_gets_s.117 __inl__hosted_clib_vars_size.122 __inl__hosted_clib_vars_stream_rt.146 __vola.12)  <173>;
    } #42 off=29
    #44 off=30
    (__rt.172 var=38) load (__M_DMw.4 __adr___inl__hosted_clib_vars.243 __inl__hosted_clib_vars_stream_rt.167)  <178>;
    (__adr___inl__hosted_clib_vars.243 var=128) __Pvoid__pl___Pvoid___sint (__rd___sp.78 __ct_24t0.241)  <315>;
    call {
        () chess_separator_scheduler ()  <179>;
    } #45 off=31
    #47 off=32 nxt=-2
    (__rd___sp.173 var=36) rd_res_reg (__R_SP.11 __sp.57)  <180>;
    (__ct_84s0.174 var=109) const ()  <181>;
    (__tmp.176 var=111) __Pvoid__pl___Pvoid___sint (__rd___sp.173 __ct_84s0.174)  <183>;
    (__R_SP.177 var=12 __sp.178 var=18) wr_res_reg (__tmp.176 __sp.57)  <184>;
    () void___rts_jr_w32 (__la.37)  <185>;
    (__rt.179 var=38 stl=X off=10) assign (__rt.172)  <186>;
    () out (__rt.179)  <187>;
    () sink (__vola.168)  <188>;
    () sink (__extPMb.159)  <191>;
    () sink (__extDMb.153)  <192>;
    () sink (__sp.178)  <193>;
    () sink (ap.93)  <194>;
    () sink (format.95)  <195>;
    () sink (size.97)  <196>;
    () sink (str.99)  <197>;
    () sink (__inl__hosted_clib_vars.161)  <198>;
    () sink (__extPMb_void.160)  <199>;
    () sink (__inl__hosted_clib_vars_gets_s.165)  <200>;
    () sink (__inl__hosted_clib_vars_size.166)  <201>;
    () sink (__inl__hosted_clib_vars_format.164)  <202>;
    () sink (__inl__hosted_clib_vars_ap.162)  <203>;
    () sink (__inl__hosted_clib_vars_call_type.163)  <204>;
    () sink (__inl__hosted_clib_vars_stream_rt.167)  <205>;
    () sink (__extDMb_void.157)  <206>;
    () sink (__extDMb_Hosted_clib_vars.154)  <207>;
    () sink (__extDMb___PDMbvoid.155)  <208>;
    () sink (__extDMb_w32.158)  <209>;
    () sink (__extDMb___Pvoid.156)  <210>;
} #0
0 : 'src/stdio.c';
----------
0 : (0,794:0,0);
3 : (0,794:58,0);
4 : (0,794:58,0);
5 : (0,794:38,0);
6 : (0,794:38,0);
7 : (0,794:25,0);
8 : (0,794:25,0);
9 : (0,794:14,0);
12 : (0,796:11,6);
13 : (0,796:22,7);
14 : (0,796:22,7);
15 : (0,796:27,8);
16 : (0,796:27,8);
17 : (0,796:33,9);
18 : (0,796:33,9);
19 : (0,796:41,10);
28 : (0,796:11,14);
29 : (0,796:11,17);
30 : (0,796:11,17);
31 : (0,796:11,18);
32 : (0,796:11,18);
33 : (0,796:11,19);
34 : (0,796:11,19);
35 : (0,796:11,20);
36 : (0,796:11,20);
37 : (0,796:11,21);
38 : (0,796:11,21);
39 : (0,796:11,22);
40 : (0,796:11,22);
41 : (0,796:11,22);
42 : (0,796:11,22);
44 : (0,796:11,24);
45 : (0,796:11,24);
47 : (0,796:4,26);
----------
63 : (0,794:4,0);
64 : (0,794:4,0);
66 : (0,794:4,0);
67 : (0,794:4,0);
69 : (0,794:66,0);
70 : (0,794:66,0);
72 : (0,794:66,0);
74 : (0,794:50,0);
75 : (0,794:50,0);
77 : (0,794:50,0);
79 : (0,794:32,0);
80 : (0,794:32,0);
82 : (0,794:32,0);
84 : (0,794:20,0);
85 : (0,794:20,0);
87 : (0,794:20,0);
89 : (0,796:11,0);
90 : (0,796:11,0);
92 : (0,796:11,0);
103 : (0,794:58,0);
104 : (0,794:58,0);
105 : (0,794:38,0);
106 : (0,794:38,0);
107 : (0,794:25,0);
108 : (0,794:25,0);
109 : (0,794:14,0);
112 : (0,796:11,6);
114 : (0,796:22,7);
115 : (0,796:22,7);
117 : (0,796:27,8);
118 : (0,796:27,8);
120 : (0,796:33,9);
121 : (0,796:33,9);
123 : (0,796:41,10);
132 : (0,796:11,14);
136 : (0,796:11,16);
137 : (0,796:11,17);
141 : (0,796:11,17);
142 : (0,796:11,18);
146 : (0,796:11,18);
147 : (0,796:11,19);
151 : (0,796:11,19);
152 : (0,796:11,20);
153 : (0,796:11,0);
158 : (0,796:11,20);
159 : (0,796:11,21);
160 : (0,796:11,0);
165 : (0,796:11,21);
166 : (0,796:11,22);
167 : (0,796:11,0);
171 : (0,796:11,22);
172 : (0,796:11,0);
173 : (0,796:11,22);
178 : (0,796:11,23);
179 : (0,796:11,24);
180 : (0,796:4,0);
181 : (0,796:4,0);
183 : (0,796:4,0);
184 : (0,796:4,26);
185 : (0,796:4,26);
186 : (0,796:21,0);
300 : (0,796:11,0);
302 : (0,796:11,0);
303 : (0,796:11,0);
305 : (0,796:11,0);
306 : (0,796:11,0);
308 : (0,796:11,0);
309 : (0,796:11,0);
311 : (0,796:11,0);
312 : (0,796:11,0);
314 : (0,796:11,0);
315 : (0,796:11,0);

