
// File generated by noodle version U-2022.12#33f3808fcb#221128, Fri Feb 16 13:34:03 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -D__tct_patch__=0 -itrv32p3_cnn_chess.h +Sal +Sca +Osps -Wflla +NOtcr +NOcse +NOlsw +NOifv +NOrle +NOrlt +wDebug/chesswork src/malloc.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!! static void init()
Finit : user_defined, called {
    fnm : "init" 'void init()';
    arg : ( w32:i );
    loc : ( X[1] );
    frm : ( l=4 );
}
****
***/

[
    0 : init typ=u08 bnd=i stl=PMb
    5 : __M_DMw typ=w32 bnd=d stl=DMw
    8 : __M_DMw_stat typ=w32 bnd=d stl=DMw_stat
   12 : __R_SP typ=w32 bnd=d stl=SP
   18 : __sp typ=w32 bnd=b stl=SP
   19 : _ZL8sentinel typ=w08 bnd=i sz=4 algn=4 stl=DMb_stat tref=__PMBlock__DMb_stat
   21 : _ZL4pool typ=w08 bnd=i sz=262160 algn=4 stl=DMb tref=__A16385MBlock__DMb
   23 : first typ=w08 val=0t0 bnd=a sz=4 algn=4 stl=DMb tref=__PMBlock__DMb
   24 : _ZL4pool_head typ=w08 bnd=b stl=DMb
   26 : _ZL4pool_u typ=w08 bnd=b stl=DMb
   28 : __extDMb_MBlock__u typ=w08 bnd=b stl=DMb
   29 : __rd___sp typ=w32 bnd=m
   31 : __ptr_sentinel typ=w32 val=0a bnd=m adro=19
   33 : __ptr_pool typ=w32 val=0a bnd=m adro=21
   34 : __la typ=w32 bnd=p tref=w32__
   35 : __ct_m4S0 typ=w32 val=-4S0 bnd=m
   37 : __tmp typ=w32 bnd=m
   39 : __ct_0t0 typ=w32 val=0t0 bnd=m
   41 : __adr_first typ=w32 bnd=m adro=23
   55 : __tmp typ=w32 bnd=m
   60 : __ct_2147483648 typ=t20s_rp12 val=-524288f bnd=m
   67 : __ct_4 typ=w32 val=4f bnd=m
   91 : __ct_16384 typ=t20s_rp12 val=4f bnd=m
  107 : __fch__ZL4pool_u typ=w32 bnd=m
  110 : __tmp typ=w32 bnd=m
  116 : __tmp typ=w32 bnd=m
  126 : __fch__ZL4pool_u typ=w32 bnd=m
  154 : __ct_4s0 typ=w32 val=4s0 bnd=m
  156 : __tmp typ=w32 bnd=m
  160 : __ct_1 typ=w32 val=1f bnd=m
  168 : __shv___ptr_pool typ=w32 bnd=m
  169 : __ct_8 typ=w32 val=8f bnd=m
  170 : __shv___fch__ZL8sentinel typ=w32 bnd=m
  171 : __ptr__ZL4pool__a262144 typ=w32 val=262144a bnd=m adro=21
  172 : __ptr__ZL4pool__a262148 typ=w32 val=262148a bnd=m adro=21
  173 : __ptr__ZL4pool__a262152 typ=w32 val=262152a bnd=m adro=21
]
Finit {
    #48 off=0
    (__M_DMw.4 var=5) st_def ()  <8>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__sp.17 var=18) source ()  <28>;
    (_ZL8sentinel.18 var=19) source ()  <29>;
    (first.22 var=23) source ()  <33>;
    (_ZL4pool_head.23 var=24) source ()  <34>;
    (_ZL4pool_u.25 var=26) source ()  <36>;
    (__extDMb_MBlock__u.27 var=28) source ()  <38>;
    (__la.33 var=34 stl=X off=1) inp ()  <44>;
    (__la.34 var=34) deassign (__la.33)  <45>;
    (__rd___sp.36 var=29) rd_res_reg (__R_SP.11 __sp.17)  <47>;
    (__ct_m4S0.37 var=35) const ()  <48>;
    (__tmp.39 var=37) __Pvoid__pl___Pvoid___sint (__rd___sp.36 __ct_m4S0.37)  <50>;
    (__R_SP.40 var=12 __sp.41 var=18) wr_res_reg (__tmp.39 __sp.17)  <51>;
    (__rd___sp.42 var=29) rd_res_reg (__R_SP.11 __sp.41)  <53>;
    (__ct_1.232 var=160) const ()  <285>;
    call {
        (__tmp.61 var=55 stl=X off=10) assign (__ct_1.232)  <72>;
        () void_chess_assert_bool (__tmp.61)  <73>;
    } #4 off=1
    #6 off=2
    (__ptr_sentinel.29 var=31) const ()  <40>;
    (__M_DMw_stat.65 var=8 _ZL8sentinel.66 var=19) store (__ptr__ZL4pool__a262144.244 __ptr_sentinel.29 _ZL8sentinel.18)  <78>;
    (__ptr__ZL4pool__a262144.244 var=171) const ()  <313>;
    call {
        () chess_separator_scheduler ()  <85>;
    } #11 off=3
    #12 off=4
    (__ct_2147483648.71 var=60) const ()  <86>;
    (__M_DMw.76 var=5 _ZL4pool_head.77 var=24) store (__ct_2147483648.71 __ptr__ZL4pool__a262144.244 _ZL4pool_head.23)  <91>;
    call {
        () chess_separator_scheduler ()  <93>;
    } #14 off=5
    #15 off=6
    (__M_DMw.89 var=5 _ZL4pool_u.90 var=26) store (__ptr__ZL4pool__a262144.244 __ptr__ZL4pool__a262148.245 _ZL4pool_u.25)  <105>;
    (__ptr__ZL4pool__a262148.245 var=172) const ()  <315>;
    call {
        () chess_separator_scheduler ()  <106>;
    } #16 off=7
    #17 off=8
    (__M_DMw.102 var=5 _ZL4pool_u.103 var=26) store (__ptr__ZL4pool__a262144.244 __ptr__ZL4pool__a262152.246 _ZL4pool_u.90)  <118>;
    (__ptr__ZL4pool__a262152.246 var=173) const ()  <317>;
    call {
        () chess_separator_scheduler ()  <119>;
    } #18 off=9
    #19 off=10
    (__ptr_pool.31 var=33) const ()  <42>;
    (__ct_0t0.43 var=39) const ()  <54>;
    (__adr_first.45 var=41) __Pvoid__pl___Pvoid___sint (__rd___sp.42 __ct_0t0.43)  <56>;
    (__M_DMw.107 var=5 first.108 var=23) store (__ptr_pool.31 __adr_first.45 first.22)  <123>;
    call {
        () chess_separator_scheduler ()  <130>;
    } #24 off=11
    #25 off=12
    (__ct_4.80 var=67) const ()  <96>;
    (__ct_16384.113 var=91) const ()  <131>;
    (__M_DMw.118 var=5 _ZL4pool_head.119 var=24) store (__ct_16384.113 __ptr_pool.31 _ZL4pool_head.77)  <136>;
    (__shv___ptr_pool.238 var=168) __Pvoid__pl___Pvoid___sint (__ptr_pool.31 __ct_4.80)  <306>;
    call {
        () chess_separator_scheduler ()  <149>;
    } #35 off=13
    #36 off=14
    (__fch__ZL4pool_u.136 var=107) load (__M_DMw.4 __shv___fch__ZL8sentinel.241 _ZL4pool_u.103)  <159>;
    (__tmp.139 var=110) __Pvoid__pl___Pvoid___sint (__fch__ZL4pool_u.136 __ct_4.80)  <162>;
    (__tmp.145 var=116) __Pvoid__pl___Pvoid___sint (__tmp.139 __ct_4.80)  <168>;
    (__M_DMw.146 var=5 _ZL4pool_u.147 var=26 __extDMb_MBlock__u.148 var=28) store (__ptr_pool.31 __tmp.145 _ZL4pool_u.103 __extDMb_MBlock__u.27)  <169>;
    (__shv___fch__ZL8sentinel.241 var=170) __Pvoid__pl___Pvoid___sint (__ptr__ZL4pool__a262144.244 __ct_4.80)  <310>;
    call {
        () chess_separator_scheduler ()  <170>;
    } #37 off=15
    #38 off=16
    (__fch__ZL4pool_u.158 var=126) load (__M_DMw.4 __shv___fch__ZL8sentinel.242 _ZL4pool_u.147)  <180>;
    (__M_DMw.168 var=5 _ZL4pool_u.169 var=26) store (__fch__ZL4pool_u.158 __shv___ptr_pool.238 _ZL4pool_u.147)  <190>;
    (__shv___fch__ZL8sentinel.242 var=170) __Pvoid__pl___Pvoid___sint (__ptr__ZL4pool__a262144.244 __ct_4.80)  <311>;
    call {
        () chess_separator_scheduler ()  <191>;
    } #39 off=17
    #40 off=18
    (__M_DMw.179 var=5 _ZL4pool_u.180 var=26) store (__ptr__ZL4pool__a262144.244 __shv___ptr_pool.240 _ZL4pool_u.169)  <201>;
    (__ct_8.239 var=169) const ()  <307>;
    (__shv___ptr_pool.240 var=168) __Pvoid__pl___Pvoid___sint (__ptr_pool.31 __ct_8.239)  <309>;
    call {
        () chess_separator_scheduler ()  <202>;
    } #41 off=19
    #42 off=20
    (__M_DMw.190 var=5 _ZL4pool_u.191 var=26) store (__ptr_pool.31 __shv___fch__ZL8sentinel.243 _ZL4pool_u.180)  <212>;
    (__shv___fch__ZL8sentinel.243 var=170) __Pvoid__pl___Pvoid___sint (__ptr__ZL4pool__a262144.244 __ct_4.80)  <312>;
    call {
        () chess_separator_scheduler ()  <214>;
    } #44 off=21
    #46 off=22 nxt=-2
    (__rd___sp.192 var=29) rd_res_reg (__R_SP.11 __sp.41)  <215>;
    (__ct_4s0.193 var=154) const ()  <216>;
    (__tmp.195 var=156) __Pvoid__pl___Pvoid___sint (__rd___sp.192 __ct_4s0.193)  <218>;
    (__R_SP.196 var=12 __sp.197 var=18) wr_res_reg (__tmp.195 __sp.41)  <219>;
    () void___rts_jr_w32 (__la.34)  <220>;
    () sink (__sp.197)  <226>;
    () sink (_ZL8sentinel.66)  <227>;
    () sink (first.108)  <231>;
    () sink (_ZL4pool_head.119)  <232>;
    () sink (_ZL4pool_u.191)  <234>;
    () sink (__extDMb_MBlock__u.148)  <236>;
} #0
0 : 'src/malloc.c';
----------
0 : (0,120:0,0);
4 : (0,123:4,1);
6 : (0,125:13,3);
11 : (0,126:4,7);
12 : (0,126:4,11);
14 : (0,126:12,15);
15 : (0,127:26,16);
16 : (0,127:26,16);
17 : (0,128:26,17);
18 : (0,128:26,17);
19 : (0,130:26,17);
24 : (0,131:4,22);
25 : (0,131:4,26);
35 : (0,132:4,34);
36 : (0,132:4,36);
37 : (0,132:4,36);
38 : (0,132:4,37);
39 : (0,132:4,37);
40 : (0,132:4,38);
41 : (0,132:4,38);
42 : (0,132:4,39);
44 : (0,132:16,43);
46 : (0,133:0,43);
48 : (0,130:13,0);
----------
42 : (0,125:16,0);
47 : (0,120:12,0);
48 : (0,120:12,0);
50 : (0,120:12,0);
51 : (0,120:12,0);
53 : (0,130:13,0);
54 : (0,130:13,0);
56 : (0,130:13,0);
72 : (0,123:33,0);
73 : (0,123:4,1);
78 : (0,125:4,2);
85 : (0,126:4,7);
86 : (0,126:4,0);
91 : (0,126:4,10);
93 : (0,126:12,15);
96 : (0,127:12,0);
105 : (0,127:20,15);
106 : (0,127:26,16);
118 : (0,128:20,16);
119 : (0,128:26,17);
123 : (0,130:26,17);
130 : (0,131:4,22);
131 : (0,131:4,0);
136 : (0,131:4,25);
149 : (0,132:4,34);
159 : (0,132:4,35);
162 : (0,132:4,35);
168 : (0,132:4,35);
169 : (0,132:4,35);
170 : (0,132:4,36);
180 : (0,132:4,36);
190 : (0,132:4,36);
191 : (0,132:4,37);
201 : (0,132:4,37);
202 : (0,132:4,38);
212 : (0,132:4,38);
214 : (0,132:16,43);
215 : (0,133:0,0);
216 : (0,133:0,0);
218 : (0,133:0,0);
219 : (0,133:0,43);
220 : (0,133:0,43);
306 : (0,132:4,0);
309 : (0,132:4,0);
310 : (0,132:4,0);
311 : (0,132:4,0);
312 : (0,132:4,0);
313 : (0,125:20,0);
315 : (0,127:12,0);
317 : (0,128:20,0);

