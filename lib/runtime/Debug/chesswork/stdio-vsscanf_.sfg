
// File generated by noodle version U-2022.12#33f3808fcb#221128, Tue Mar 19 17:30:46 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -D__tct_patch__=0 -itrv32p3_cnn_chess.h +Sal +Sca +Osps -Wflla +NOtcr +NOcse +NOifv +NOrle +NOrlt +wDebug/chesswork src/stdio.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!! extern int vsscanf(const char *, const char *, va_list)
Fvsscanf : user_defined, called {
    fnm : "vsscanf" 'int vsscanf(const char *, const char *, va_list)';
    arg : ( w32:i w32:r w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] );
    frm : ( l=80 );
    llv : 0 0 0 0 0 ;
}
****
!! static void clib_hosted_io(Hosted_clib_vars *)
Fclib_hosted_io : user_defined, called {
    fnm : "clib_hosted_io" 'void clib_hosted_io(Hosted_clib_vars *)';
    arg : ( w32:i w32:i );
    loc : ( X[1] X[10] );
    llv : 0 0 0 0 0 ;
}
***/

[
    0 : vsscanf typ=u08 bnd=e stl=PMb
    5 : __M_DMw typ=w32 bnd=d stl=DMw
   12 : __R_SP typ=w32 bnd=d stl=SP
   13 : __vola typ=u08 bnd=b stl=PMb
   16 : __extPMb typ=u08 bnd=b stl=PMb
   17 : __extDMb typ=w08 bnd=b stl=DMb
   18 : __sp typ=w32 bnd=b stl=SP
   19 : ap typ=w08 val=0t0 bnd=a sz=4 algn=4 stl=DMb tref=va_list_DMb
   20 : format typ=w08 val=4t0 bnd=a sz=4 algn=4 stl=DMb tref=__P__cchar_DMb
   21 : str typ=w08 val=8t0 bnd=a sz=4 algn=4 stl=DMb tref=__P__cchar_DMb
   22 : __inl__hosted_clib_vars typ=w08 val=12t0 bnd=a sz=68 algn=4 stl=DMb tref=Hosted_clib_vars_DMb
   23 : __extPMb_void typ=u08 bnd=b stl=PMb
   24 : __inl__hosted_clib_vars_puts_s typ=w08 bnd=B stl=DMb
   25 : __inl__hosted_clib_vars_format typ=w08 bnd=B stl=DMb
   26 : __inl__hosted_clib_vars_ap typ=w08 bnd=B stl=DMb
   27 : __inl__hosted_clib_vars_call_type typ=w08 bnd=B stl=DMb
   28 : __inl__hosted_clib_vars_stream_rt typ=w08 bnd=B stl=DMb
   29 : __extDMb_void typ=w08 bnd=b stl=DMb
   30 : __extDMb_Hosted_clib_vars typ=w08 bnd=b stl=DMb
   31 : __extDMb___PDMbvoid typ=w08 bnd=b stl=DMb
   32 : __extDMb___Pvoid typ=w08 bnd=b stl=DMb
   33 : __extDMb_w32 typ=w08 bnd=b stl=DMb
   34 : __rd___sp typ=w32 bnd=m
   35 : __la typ=w32 bnd=p tref=w32__
   36 : __rt typ=w32 bnd=p tref=__sint__
   37 : __arg_str typ=w32 bnd=p tref=__P__cchar__
   38 : __arg_format typ=w32 bnd=p tref=__P__cchar__
   39 : __arg_ap typ=w32 bnd=p tref=va_list__
   40 : __ct_m80S0 typ=w32 val=-80S0 bnd=m
   42 : __tmp typ=w32 bnd=m
   44 : __ct_0t0 typ=w32 val=0t0 bnd=m
   46 : __adr_ap typ=w32 bnd=m adro=19
   48 : __ct_4t0 typ=w32 val=4t0 bnd=m
   50 : __adr_format typ=w32 bnd=m adro=20
   52 : __ct_8t0 typ=w32 val=8t0 bnd=m
   54 : __adr_str typ=w32 bnd=m adro=21
   55 : __ptr___inl__hosted_clib_vars typ=w32 bnd=m
   56 : __ct_12t0 typ=w32 val=12t0 bnd=m
   58 : __adr___inl__hosted_clib_vars typ=w32 bnd=m adro=22
   66 : __fch_str typ=w32 bnd=m
   67 : __fch_format typ=w32 bnd=m
   68 : __fch_ap typ=w32 bnd=m
   78 : __ct_25 typ=w32 val=25f bnd=m
   83 : __ct_m1 typ=w32 val=-1f bnd=m
   90 : clib_hosted_io typ=t21s_s2 val=0r bnd=m
   91 : __link typ=w32 bnd=m
   96 : __ct_80s0 typ=w32 val=80s0 bnd=m
   98 : __tmp typ=w32 bnd=m
  105 : __ct_52t0 typ=w32 val=52t0 bnd=m
  106 : __adr___inl__hosted_clib_vars typ=w32 bnd=m adro=22
  107 : __ct_32t0 typ=w32 val=32t0 bnd=m
  108 : __adr___inl__hosted_clib_vars typ=w32 bnd=m adro=22
  109 : __ct_76t0 typ=w32 val=76t0 bnd=m
  110 : __adr___inl__hosted_clib_vars typ=w32 bnd=m adro=22
  111 : __ct_20t0 typ=w32 val=20t0 bnd=m
  112 : __adr___inl__hosted_clib_vars typ=w32 bnd=m adro=22
  113 : __adr___inl__hosted_clib_vars typ=w32 bnd=m adro=22
]
Fvsscanf {
    #3 off=0
    (__M_DMw.4 var=5) st_def ()  <8>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__vola.12 var=13) source ()  <23>;
    (__extPMb.15 var=16) source ()  <26>;
    (__extDMb.16 var=17) source ()  <27>;
    (__sp.17 var=18) source ()  <28>;
    (ap.18 var=19) source ()  <29>;
    (format.19 var=20) source ()  <30>;
    (str.20 var=21) source ()  <31>;
    (__inl__hosted_clib_vars.21 var=22) source ()  <32>;
    (__extPMb_void.22 var=23) source ()  <33>;
    (__inl__hosted_clib_vars_puts_s.23 var=24) source ()  <34>;
    (__inl__hosted_clib_vars_format.24 var=25) source ()  <35>;
    (__inl__hosted_clib_vars_ap.25 var=26) source ()  <36>;
    (__inl__hosted_clib_vars_call_type.26 var=27) source ()  <37>;
    (__inl__hosted_clib_vars_stream_rt.27 var=28) source ()  <38>;
    (__extDMb_void.28 var=29) source ()  <39>;
    (__extDMb_Hosted_clib_vars.29 var=30) source ()  <40>;
    (__extDMb___PDMbvoid.30 var=31) source ()  <41>;
    (__extDMb___Pvoid.31 var=32) source ()  <42>;
    (__extDMb_w32.32 var=33) source ()  <43>;
    (__la.34 var=35 stl=X off=1) inp ()  <45>;
    (__la.35 var=35) deassign (__la.34)  <46>;
    (__arg_str.38 var=37 stl=X off=11) inp ()  <49>;
    (__arg_str.39 var=37) deassign (__arg_str.38)  <50>;
    (__arg_format.41 var=38 stl=X off=12) inp ()  <52>;
    (__arg_format.42 var=38) deassign (__arg_format.41)  <53>;
    (__arg_ap.44 var=39 stl=X off=13) inp ()  <55>;
    (__arg_ap.45 var=39) deassign (__arg_ap.44)  <56>;
    (__rd___sp.47 var=34) rd_res_reg (__R_SP.11 __sp.17)  <58>;
    (__ct_m80S0.48 var=40) const ()  <59>;
    (__tmp.50 var=42) __Pvoid__pl___Pvoid___sint (__rd___sp.47 __ct_m80S0.48)  <61>;
    (__R_SP.51 var=12 __sp.52 var=18) wr_res_reg (__tmp.50 __sp.17)  <62>;
    (__rd___sp.53 var=34) rd_res_reg (__R_SP.11 __sp.52)  <64>;
    (__ct_0t0.54 var=44) const ()  <65>;
    (__adr_ap.56 var=46) __Pvoid__pl___Pvoid___sint (__rd___sp.53 __ct_0t0.54)  <67>;
    (__rd___sp.58 var=34) rd_res_reg (__R_SP.11 __sp.52)  <69>;
    (__rd___sp.63 var=34) rd_res_reg (__R_SP.11 __sp.52)  <74>;
    (__rd___sp.68 var=34) rd_res_reg (__R_SP.11 __sp.52)  <79>;
    (__M_DMw.80 var=5 ap.81 var=19) store (__arg_ap.45 __adr_ap.56 ap.18)  <91>;
    call {
        () chess_separator_scheduler ()  <92>;
    } #4 off=1
    #5 off=2
    (__ct_4t0.59 var=48) const ()  <70>;
    (__adr_format.61 var=50) __Pvoid__pl___Pvoid___sint (__rd___sp.58 __ct_4t0.59)  <72>;
    (__M_DMw.82 var=5 format.83 var=20) store (__arg_format.42 __adr_format.61 format.19)  <93>;
    call {
        () chess_separator_scheduler ()  <94>;
    } #6 off=3
    #7 off=4
    (__ct_8t0.64 var=52) const ()  <75>;
    (__adr_str.66 var=54) __Pvoid__pl___Pvoid___sint (__rd___sp.63 __ct_8t0.64)  <77>;
    (__M_DMw.84 var=5 str.85 var=21) store (__arg_str.39 __adr_str.66 str.20)  <95>;
    call {
        () chess_separator_scheduler ()  <98>;
    } #10 off=5
    #11 off=6
    (__fch_str.88 var=66) load (__M_DMw.4 __adr_str.66 str.85)  <100>;
    call {
        () chess_separator_scheduler ()  <101>;
    } #12 off=7
    #13 off=8
    (__fch_format.90 var=67) load (__M_DMw.4 __adr_format.61 format.83)  <103>;
    call {
        () chess_separator_scheduler ()  <104>;
    } #14 off=9
    #15 off=10
    (__fch_ap.92 var=68) load (__M_DMw.4 __adr_ap.56 ap.81)  <106>;
    call {
        () chess_separator_scheduler ()  <113>;
    } #22 off=11
    #23 off=12
    (__M_DMw.99 var=5 __inl__hosted_clib_vars_puts_s.100 var=24) store (__fch_str.88 __adr___inl__hosted_clib_vars.204 __inl__hosted_clib_vars_puts_s.23)  <117>;
    (__ct_52t0.203 var=105) const ()  <263>;
    (__adr___inl__hosted_clib_vars.204 var=106) __Pvoid__pl___Pvoid___sint (__rd___sp.68 __ct_52t0.203)  <265>;
    call {
        () chess_separator_scheduler ()  <118>;
    } #24 off=13
    #25 off=14
    (__M_DMw.104 var=5 __inl__hosted_clib_vars_format.105 var=25) store (__fch_format.90 __adr___inl__hosted_clib_vars.206 __inl__hosted_clib_vars_format.24)  <122>;
    (__ct_32t0.205 var=107) const ()  <266>;
    (__adr___inl__hosted_clib_vars.206 var=108) __Pvoid__pl___Pvoid___sint (__rd___sp.68 __ct_32t0.205)  <268>;
    call {
        () chess_separator_scheduler ()  <123>;
    } #26 off=15
    #27 off=16
    (__M_DMw.109 var=5 __inl__hosted_clib_vars_ap.110 var=26) store (__fch_ap.92 __adr___inl__hosted_clib_vars.208 __inl__hosted_clib_vars_ap.25)  <127>;
    (__ct_76t0.207 var=109) const ()  <269>;
    (__adr___inl__hosted_clib_vars.208 var=110) __Pvoid__pl___Pvoid___sint (__rd___sp.68 __ct_76t0.207)  <271>;
    call {
        () chess_separator_scheduler ()  <128>;
    } #28 off=17
    #29 off=18
    (__ct_12t0.69 var=56) const ()  <80>;
    (__adr___inl__hosted_clib_vars.71 var=58) __Pvoid__pl___Pvoid___sint (__rd___sp.68 __ct_12t0.69)  <82>;
    (__ct_25.111 var=78) const ()  <129>;
    (__M_DMw.116 var=5 __inl__hosted_clib_vars_call_type.117 var=27) store (__ct_25.111 __adr___inl__hosted_clib_vars.71 __inl__hosted_clib_vars_call_type.26)  <134>;
    call {
        () chess_separator_scheduler ()  <135>;
    } #30 off=19
    #31 off=20
    (__ct_m1.118 var=83) const ()  <136>;
    (__M_DMw.123 var=5 __inl__hosted_clib_vars_stream_rt.124 var=28) store (__ct_m1.118 __adr___inl__hosted_clib_vars.210 __inl__hosted_clib_vars_stream_rt.27)  <141>;
    (__ct_20t0.209 var=111) const ()  <272>;
    (__adr___inl__hosted_clib_vars.210 var=112) __Pvoid__pl___Pvoid___sint (__rd___sp.68 __ct_20t0.209)  <274>;
    call {
        () chess_separator_scheduler ()  <142>;
    } #32 off=21
    #33 off=22
    (clib_hosted_io.128 var=90) const ()  <146>;
    (__link.129 var=91) w32_jal_t21s_s2 (clib_hosted_io.128)  <147>;
    call {
        (__ptr___inl__hosted_clib_vars.125 var=55 stl=X off=10) assign (__adr___inl__hosted_clib_vars.71)  <143>;
        (__link.130 var=91 stl=X off=1) assign (__link.129)  <148>;
        (__extDMb.131 var=17 __extDMb_Hosted_clib_vars.132 var=30 __extDMb___PDMbvoid.133 var=31 __extDMb___Pvoid.134 var=32 __extDMb_void.135 var=29 __extDMb_w32.136 var=33 __extPMb.137 var=16 __extPMb_void.138 var=23 __inl__hosted_clib_vars.139 var=22 __inl__hosted_clib_vars_ap.140 var=26 __inl__hosted_clib_vars_call_type.141 var=27 __inl__hosted_clib_vars_format.142 var=25 __inl__hosted_clib_vars_puts_s.143 var=24 __inl__hosted_clib_vars_stream_rt.144 var=28 __vola.145 var=13) Fclib_hosted_io (__link.130 __ptr___inl__hosted_clib_vars.125 __extDMb.16 __extDMb_Hosted_clib_vars.29 __extDMb___PDMbvoid.30 __extDMb___Pvoid.31 __extDMb_void.28 __extDMb_w32.32 __extPMb.15 __extPMb_void.22 __inl__hosted_clib_vars.21 __inl__hosted_clib_vars_ap.110 __inl__hosted_clib_vars_call_type.117 __inl__hosted_clib_vars_format.105 __inl__hosted_clib_vars_puts_s.100 __inl__hosted_clib_vars_stream_rt.124 __vola.12)  <149>;
    } #34 off=23
    #36 off=24
    (__rt.149 var=36) load (__M_DMw.4 __adr___inl__hosted_clib_vars.211 __inl__hosted_clib_vars_stream_rt.144)  <154>;
    (__adr___inl__hosted_clib_vars.211 var=113) __Pvoid__pl___Pvoid___sint (__rd___sp.68 __ct_20t0.209)  <275>;
    call {
        () chess_separator_scheduler ()  <155>;
    } #37 off=25
    #39 off=26 nxt=-2
    (__rd___sp.150 var=34) rd_res_reg (__R_SP.11 __sp.52)  <156>;
    (__ct_80s0.151 var=96) const ()  <157>;
    (__tmp.153 var=98) __Pvoid__pl___Pvoid___sint (__rd___sp.150 __ct_80s0.151)  <159>;
    (__R_SP.154 var=12 __sp.155 var=18) wr_res_reg (__tmp.153 __sp.52)  <160>;
    () void___rts_jr_w32 (__la.35)  <161>;
    (__rt.156 var=36 stl=X off=10) assign (__rt.149)  <162>;
    () out (__rt.156)  <163>;
    () sink (__vola.145)  <164>;
    () sink (__extPMb.137)  <167>;
    () sink (__extDMb.131)  <168>;
    () sink (__sp.155)  <169>;
    () sink (ap.81)  <170>;
    () sink (format.83)  <171>;
    () sink (str.85)  <172>;
    () sink (__inl__hosted_clib_vars.139)  <173>;
    () sink (__extPMb_void.138)  <174>;
    () sink (__inl__hosted_clib_vars_puts_s.143)  <175>;
    () sink (__inl__hosted_clib_vars_format.142)  <176>;
    () sink (__inl__hosted_clib_vars_ap.140)  <177>;
    () sink (__inl__hosted_clib_vars_call_type.141)  <178>;
    () sink (__inl__hosted_clib_vars_stream_rt.144)  <179>;
    () sink (__extDMb_void.135)  <180>;
    () sink (__extDMb_Hosted_clib_vars.132)  <181>;
    () sink (__extDMb___PDMbvoid.133)  <182>;
    () sink (__extDMb___Pvoid.134)  <183>;
    () sink (__extDMb_w32.136)  <184>;
} #0
0 : 'src/stdio.c';
----------
0 : (0,833:0,0);
3 : (0,833:49,0);
4 : (0,833:49,0);
5 : (0,833:29,0);
6 : (0,833:29,0);
7 : (0,833:12,0);
10 : (0,835:11,5);
11 : (0,835:20,6);
12 : (0,835:20,6);
13 : (0,835:25,7);
14 : (0,835:25,7);
15 : (0,835:33,8);
22 : (0,835:11,11);
23 : (0,835:11,14);
24 : (0,835:11,14);
25 : (0,835:11,15);
26 : (0,835:11,15);
27 : (0,835:11,16);
28 : (0,835:11,16);
29 : (0,835:11,17);
30 : (0,835:11,17);
31 : (0,835:11,18);
32 : (0,835:11,18);
33 : (0,835:11,18);
34 : (0,835:11,18);
36 : (0,835:11,20);
37 : (0,835:11,20);
39 : (0,835:4,22);
----------
58 : (0,833:4,0);
59 : (0,833:4,0);
61 : (0,833:4,0);
62 : (0,833:4,0);
64 : (0,833:57,0);
65 : (0,833:57,0);
67 : (0,833:57,0);
69 : (0,833:41,0);
70 : (0,833:41,0);
72 : (0,833:41,0);
74 : (0,833:24,0);
75 : (0,833:24,0);
77 : (0,833:24,0);
79 : (0,835:11,0);
80 : (0,835:11,0);
82 : (0,835:11,0);
91 : (0,833:49,0);
92 : (0,833:49,0);
93 : (0,833:29,0);
94 : (0,833:29,0);
95 : (0,833:12,0);
98 : (0,835:11,5);
100 : (0,835:20,6);
101 : (0,835:20,6);
103 : (0,835:25,7);
104 : (0,835:25,7);
106 : (0,835:33,8);
113 : (0,835:11,11);
117 : (0,835:11,13);
118 : (0,835:11,14);
122 : (0,835:11,14);
123 : (0,835:11,15);
127 : (0,835:11,15);
128 : (0,835:11,16);
129 : (0,835:11,0);
134 : (0,835:11,16);
135 : (0,835:11,17);
136 : (0,835:11,0);
141 : (0,835:11,17);
142 : (0,835:11,18);
143 : (0,835:11,0);
147 : (0,835:11,18);
148 : (0,835:11,0);
149 : (0,835:11,18);
154 : (0,835:11,19);
155 : (0,835:11,20);
156 : (0,835:4,0);
157 : (0,835:4,0);
159 : (0,835:4,0);
160 : (0,835:4,22);
161 : (0,835:4,22);
162 : (0,835:19,0);
263 : (0,835:11,0);
265 : (0,835:11,0);
266 : (0,835:11,0);
268 : (0,835:11,0);
269 : (0,835:11,0);
271 : (0,835:11,0);
272 : (0,835:11,0);
274 : (0,835:11,0);
275 : (0,835:11,0);

