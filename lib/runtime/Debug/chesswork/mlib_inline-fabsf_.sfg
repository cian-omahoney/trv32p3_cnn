
// File generated by noodle version U-2022.12#33f3808fcb#221128, Tue Mar 19 15:59:02 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -D__tct_patch__=0 -itrv32p3_cnn_chess.h +Sal +Sca +Osps -Wflla +NOtcr +NOcse +NOifv +NOrle +NOrlt +wDebug/chesswork src/mlib_inline.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!! extern inline float fabsf(float)
Ffabsf : user_defined, called {
    fnm : "fabsf" 'float fabsf(float)';
    arg : ( w32:i w32:r w32:i );
    loc : ( X[1] X[10] X[11] );
    frm : ( l=4 );
}
****
***/

[
    0 : fabsf typ=u08 bnd=e stl=PMb
    5 : __M_DMw typ=w32 bnd=d stl=DMw
   12 : __R_SP typ=w32 bnd=d stl=SP
   18 : __sp typ=w32 bnd=b stl=SP
   19 : a typ=w08 val=0t0 bnd=a sz=4 algn=4 stl=DMb tref=__ffloat_DMb
   20 : __rd___sp typ=w32 bnd=m
   21 : __la typ=w32 bnd=p tref=w32__
   22 : __rt typ=w32 bnd=p tref=__ffloat__
   23 : __arg_a typ=w32 bnd=p tref=__ffloat__
   24 : __ct_m4S0 typ=w32 val=-4S0 bnd=m
   26 : __tmp typ=w32 bnd=m
   28 : __ct_0t0 typ=w32 val=0t0 bnd=m
   30 : __adr_a typ=w32 bnd=m adro=19
   31 : __fch_a typ=w32 bnd=m
   33 : __ct_2147483647 typ=w32 val=2147483647f bnd=m
   35 : __tmp typ=w32 bnd=m
   37 : __ct_4s0 typ=w32 val=4s0 bnd=m
   39 : __tmp typ=w32 bnd=m
]
Ffabsf {
    #3 off=0
    (__M_DMw.4 var=5) st_def ()  <8>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__sp.17 var=18) source ()  <28>;
    (a.18 var=19) source ()  <29>;
    (__la.20 var=21 stl=X off=1) inp ()  <31>;
    (__la.21 var=21) deassign (__la.20)  <32>;
    (__arg_a.24 var=23 stl=X off=11) inp ()  <35>;
    (__arg_a.25 var=23) deassign (__arg_a.24)  <36>;
    (__rd___sp.27 var=20) rd_res_reg (__R_SP.11 __sp.17)  <38>;
    (__ct_m4S0.28 var=24) const ()  <39>;
    (__tmp.30 var=26) __Pvoid__pl___Pvoid___sint (__rd___sp.27 __ct_m4S0.28)  <41>;
    (__R_SP.31 var=12 __sp.32 var=18) wr_res_reg (__tmp.30 __sp.17)  <42>;
    (__rd___sp.33 var=20) rd_res_reg (__R_SP.11 __sp.32)  <44>;
    (__ct_0t0.34 var=28) const ()  <45>;
    (__adr_a.36 var=30) __Pvoid__pl___Pvoid___sint (__rd___sp.33 __ct_0t0.34)  <47>;
    (__M_DMw.38 var=5 a.39 var=19) store (__arg_a.25 __adr_a.36 a.18)  <49>;
    call {
        () chess_separator_scheduler ()  <50>;
    } #4 off=1
    #7 off=2 nxt=-2
    (__fch_a.40 var=31) load (__M_DMw.4 __adr_a.36 a.39)  <51>;
    (__ct_2147483647.42 var=33) const ()  <53>;
    (__tmp.44 var=35) __sint__ad___sint___sint (__fch_a.40 __ct_2147483647.42)  <55>;
    (__rd___sp.46 var=20) rd_res_reg (__R_SP.11 __sp.32)  <57>;
    (__ct_4s0.47 var=37) const ()  <58>;
    (__tmp.49 var=39) __Pvoid__pl___Pvoid___sint (__rd___sp.46 __ct_4s0.47)  <60>;
    (__R_SP.50 var=12 __sp.51 var=18) wr_res_reg (__tmp.49 __sp.32)  <61>;
    () void___rts_jr_w32 (__la.21)  <62>;
    (__rt.52 var=22 stl=X off=10) assign (__tmp.44)  <63>;
    () out (__rt.52)  <64>;
    () sink (__sp.51)  <70>;
    () sink (a.39)  <71>;
} #0
0 : 'include/math.h';
----------
0 : (0,24:19,0);
3 : (0,24:19,0);
4 : (0,24:19,0);
7 : (0,26:4,2);
----------
38 : (0,24:19,0);
39 : (0,24:19,0);
41 : (0,24:19,0);
42 : (0,24:19,0);
44 : (0,24:25,0);
45 : (0,24:25,0);
47 : (0,24:25,0);
49 : (0,24:19,0);
50 : (0,24:19,0);
51 : (0,26:29,2);
53 : (0,26:34,0);
55 : (0,26:32,2);
57 : (0,26:4,0);
58 : (0,26:4,0);
60 : (0,26:4,0);
61 : (0,26:4,2);
62 : (0,26:4,2);
63 : (0,26:19,0);

