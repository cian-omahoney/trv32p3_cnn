
// File generated by noodle version U-2022.12#33f3808fcb#221128, Fri Mar 22 17:53:37 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -D__tct_patch__=0 -itrv32p3_cnn_chess.h +Sal +Sca +Osps -Wflla +NOtcr +NOcse +NOifv +NOrle +NOrlt +wDebug/chesswork src/math.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!! extern float sinf(float)
Fsinf : user_defined, called {
    fnm : "sinf" 'float sinf(float)';
    arg : ( w32:i w32:r w32:i );
    loc : ( X[1] X[10] X[11] );
    frm : ( l=24 );
}
****
!! static float kernel_sinf(float, float, int)
Fkernel_sinf : user_defined, called {
    fnm : "kernel_sinf" 'float kernel_sinf(float, float, int)';
    arg : ( w32:i w32:r w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] );
    llv : 0 0 0 0 0 ;
}
!! static int32_t rem_pio2f(float, float *)
Frem_pio2f : user_defined, called {
    fnm : "rem_pio2f" 'int32_t rem_pio2f(float, float *)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
    llv : 0 0 0 0 0 ;
}
!! static float kernel_cosf(float, float)
Fkernel_cosf : user_defined, called {
    fnm : "kernel_cosf" 'float kernel_cosf(float, float)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
    llv : 0 0 0 0 0 ;
}
!!  float32_t f32_sub(float32_t, float32_t)
Ff32_sub : user_defined, called {
    fnm : "f32_sub" 'float32_t f32_sub(float32_t, float32_t)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
}
***/

[
    0 : sinf typ=u08 bnd=e stl=PMb
    5 : __M_DMw typ=w32 bnd=d stl=DMw
   12 : __R_SP typ=w32 bnd=d stl=SP
   18 : __sp typ=w32 bnd=b stl=SP
   19 : x typ=w08 val=0t0 bnd=a sz=4 algn=4 stl=DMb tref=__ffloat_DMb
   20 : z typ=w08 val=12t0 bnd=a sz=4 algn=4 stl=DMb tref=__ffloat_DMb
   21 : ix typ=w08 val=20t0 bnd=a sz=4 algn=4 stl=DMb tref=int32_t_DMb
   22 : n typ=w08 val=16t0 bnd=a sz=4 algn=4 stl=DMb tref=int32_t_DMb
   23 : y typ=w08 val=4t0 bnd=a sz=8 algn=4 stl=DMb tref=__A2__ffloat_DMb
   26 : __rd___sp typ=w32 bnd=m
   27 : __la typ=w32 bnd=p tref=w32__
   28 : __rt typ=w32 bnd=p tref=__ffloat__
   29 : __arg_x typ=w32 bnd=p tref=__ffloat__
   30 : __ct_m24S0 typ=w32 val=-24S0 bnd=m
   32 : __tmp typ=w32 bnd=m
   34 : __ct_0t0 typ=w32 val=0t0 bnd=m
   36 : __adr_x typ=w32 bnd=m adro=19
   38 : __ct_12t0 typ=w32 val=12t0 bnd=m
   40 : __adr_z typ=w32 bnd=m adro=20
   42 : __ct_20t0 typ=w32 val=20t0 bnd=m
   44 : __adr_ix typ=w32 bnd=m adro=21
   46 : __ct_16t0 typ=w32 val=16t0 bnd=m
   48 : __adr_n typ=w32 bnd=m adro=22
   49 : __ptr_y typ=w32 bnd=m
   50 : __ct_4t0 typ=w32 val=4t0 bnd=m
   52 : __adr_y typ=w32 bnd=m adro=23
   53 : __case typ=w32 bnd=m lscp=25 tref=__sint__
   54 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   56 : __fch_x typ=w32 bnd=m
   58 : __fch_ix typ=w32 bnd=m
   59 : __ct_2147483647 typ=w32 val=2147483647f bnd=m
   61 : __tmp typ=w32 bnd=m
   62 : __fch_ix typ=w32 bnd=m
   63 : __ct_1061752792 typ=w32 val=1061752792f bnd=m
   65 : __tmp typ=bool bnd=m
   66 : __fch_x typ=w32 bnd=m
   67 : __fch_z typ=w32 bnd=m
   69 : __ct typ=w32 bnd=m
   72 : kernel_sinf typ=t21s_s2 val=0r bnd=m
   73 : __link typ=w32 bnd=m
   74 : __tmp typ=w32 bnd=m
   75 : __fch_ix typ=w32 bnd=m
   76 : __ct_2139095040 typ=t20s_rp12 val=522240f bnd=m
   78 : __tmp typ=bool bnd=m
   79 : __fch_x typ=w32 bnd=m
   80 : __fch_x typ=w32 bnd=m
   82 : __fch_x typ=w32 bnd=m
   85 : rem_pio2f typ=t21s_s2 val=0r bnd=m
   86 : __link typ=w32 bnd=m
   87 : __tmp typ=w32 bnd=m
   88 : __fch_n typ=w32 bnd=m
   89 : __ct_3 typ=w32 val=3f bnd=m
   94 : __tmp typ=bool bnd=m
   98 : __fch_y typ=w32 bnd=m
  102 : __fch_y typ=w32 bnd=m
  103 : __ct_1 typ=w32 val=1f bnd=m
  104 : __ct typ=w32 bnd=m
  108 : __link typ=w32 bnd=m
  109 : __tmp typ=w32 bnd=m
  112 : __tmp typ=bool bnd=m
  116 : __fch_y typ=w32 bnd=m
  120 : __fch_y typ=w32 bnd=m
  123 : kernel_cosf typ=t21s_s2 val=0r bnd=m
  124 : __link typ=w32 bnd=m
  125 : __tmp typ=w32 bnd=m
  126 : __ct_2 typ=w32 val=2f bnd=m
  128 : __tmp typ=bool bnd=m
  134 : __fch_y typ=w32 bnd=m
  138 : __fch_y typ=w32 bnd=m
  140 : __ct typ=w32 bnd=m
  144 : __link typ=w32 bnd=m
  145 : __tmp typ=w32 bnd=m
  152 : __fch_y typ=w32 bnd=m
  156 : __fch_y typ=w32 bnd=m
  160 : __link typ=w32 bnd=m
  161 : __tmp typ=w32 bnd=m
  163 : __ct_24s0 typ=w32 val=24s0 bnd=m
  165 : __tmp typ=w32 bnd=m
  178 : __ct_8t0 typ=w32 val=8t0 bnd=m
  179 : __adr_y typ=w32 bnd=m adro=23
  180 : __adr_y typ=w32 bnd=m adro=23
  181 : __adr_y typ=w32 bnd=m adro=23
  182 : __adr_y typ=w32 bnd=m adro=23
  191 : a typ=w32 bnd=m tref=float32_t__
  192 : b typ=w32 bnd=m tref=float32_t__
  193 : f32_sub typ=t21s_s2 val=0r bnd=m
  194 : __link typ=w32 bnd=m
  207 : __either typ=bool bnd=m
  208 : __trgt typ=t13s_s2 val=0j bnd=m
  209 : __trgt typ=t21s_s2 val=0j bnd=m
  210 : __trgt typ=t13s_s2 val=0j bnd=m
  211 : __trgt typ=t21s_s2 val=0j bnd=m
  212 : __trgt typ=t13s_s2 val=0j bnd=m
  213 : __trgt typ=t21s_s2 val=0j bnd=m
  214 : __trgt typ=t13s_s2 val=0j bnd=m
  215 : __trgt typ=t21s_s2 val=0j bnd=m
  216 : __trgt typ=t13s_s2 val=0j bnd=m
  217 : __trgt typ=t21s_s2 val=0j bnd=m
]
Fsinf {
    #3 off=0
    (__M_DMw.4 var=5) st_def ()  <8>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__sp.17 var=18) source ()  <28>;
    (x.18 var=19) source ()  <29>;
    (z.19 var=20) source ()  <30>;
    (ix.20 var=21) source ()  <31>;
    (n.21 var=22) source ()  <32>;
    (y.22 var=23) source ()  <33>;
    (__la.26 var=27 stl=X off=1) inp ()  <37>;
    (__la.27 var=27) deassign (__la.26)  <38>;
    (__arg_x.30 var=29 stl=X off=11) inp ()  <41>;
    (__arg_x.31 var=29) deassign (__arg_x.30)  <42>;
    (__rd___sp.33 var=26) rd_res_reg (__R_SP.11 __sp.17)  <44>;
    (__ct_m24S0.34 var=30) const ()  <45>;
    (__tmp.36 var=32) __Pvoid__pl___Pvoid___sint (__rd___sp.33 __ct_m24S0.34)  <47>;
    (__R_SP.37 var=12 __sp.38 var=18) wr_res_reg (__tmp.36 __sp.17)  <48>;
    (__rd___sp.39 var=26) rd_res_reg (__R_SP.11 __sp.38)  <50>;
    (__ct_0t0.40 var=34) const ()  <51>;
    (__adr_x.42 var=36) __Pvoid__pl___Pvoid___sint (__rd___sp.39 __ct_0t0.40)  <53>;
    (__rd___sp.44 var=26) rd_res_reg (__R_SP.11 __sp.38)  <55>;
    (__rd___sp.49 var=26) rd_res_reg (__R_SP.11 __sp.38)  <60>;
    (__rd___sp.54 var=26) rd_res_reg (__R_SP.11 __sp.38)  <65>;
    (__rd___sp.59 var=26) rd_res_reg (__R_SP.11 __sp.38)  <70>;
    (__M_DMw.65 var=5 x.66 var=19) store (__arg_x.31 __adr_x.42 x.18)  <76>;
    call {
        () chess_separator_scheduler ()  <77>;
    } #4 off=1
    #5 off=2
    (__ct_12t0.45 var=38) const ()  <56>;
    (__adr_z.47 var=40) __Pvoid__pl___Pvoid___sint (__rd___sp.44 __ct_12t0.45)  <58>;
    (__ct_0.67 var=54) const ()  <78>;
    (__M_DMw.69 var=5 z.70 var=20) store (__ct_0.67 __adr_z.47 z.19)  <80>;
    call {
        () chess_separator_scheduler ()  <81>;
    } #6 off=3
    #7 off=4
    (__ct_20t0.50 var=42) const ()  <61>;
    (__adr_ix.52 var=44) __Pvoid__pl___Pvoid___sint (__rd___sp.49 __ct_20t0.50)  <63>;
    (__fch_x.71 var=56) load (__M_DMw.4 __adr_x.42 x.66)  <82>;
    (__M_DMw.73 var=5 ix.74 var=21) store (__fch_x.71 __adr_ix.52 ix.20)  <84>;
    call {
        () chess_separator_scheduler ()  <85>;
    } #8 off=5
    #9 off=6
    (__fch_ix.75 var=58) load (__M_DMw.4 __adr_ix.52 ix.74)  <86>;
    (__ct_2147483647.76 var=59) const ()  <87>;
    (__tmp.78 var=61) __sint__ad___sint___sint (__fch_ix.75 __ct_2147483647.76)  <89>;
    (__M_DMw.79 var=5 ix.80 var=21) store (__tmp.78 __adr_ix.52 ix.74)  <90>;
    call {
        () chess_separator_scheduler ()  <91>;
    } #10 off=7
    #75 off=8
    (__fch_ix.81 var=62) load (__M_DMw.4 __adr_ix.52 ix.80)  <92>;
    (__ct_1061752792.82 var=63) const ()  <93>;
    (kernel_sinf.116 var=72) const ()  <128>;
    (__tmp.386 var=65) bool__ge___sint___sint (__ct_1061752792.82 __fch_ix.81)  <491>;
    (__trgt.438 var=216) const ()  <648>;
    () void_br_bool_t13s_s2 (__tmp.386 __trgt.438)  <649>;
    (__either.439 var=207) undefined ()  <650>;
    if {
        {
            () if_expr (__either.439)  <118>;
        } #13
        {
            #15 off=38
            (__fch_x.107 var=66) load (__M_DMw.4 __adr_x.42 x.66)  <119>;
            (__link.117 var=73) w32_jal_t21s_s2 (kernel_sinf.116)  <129>;
            call {
                (__fch_x.108 var=66 stl=X off=11) assign (__fch_x.107)  <120>;
                (__fch_z.110 var=67 stl=X off=12) assign (__ct_0.67)  <122>;
                (__ct.113 var=69 stl=X off=13) assign (__ct_0.67)  <125>;
                (__link.118 var=73 stl=X off=1) assign (__link.117)  <130>;
                (__tmp.119 var=74 stl=X off=10) Fkernel_sinf (__link.118 __fch_x.108 __fch_z.110 __ct.113)  <131>;
                (__tmp.120 var=74) deassign (__tmp.119)  <132>;
            } #16 off=39
        } #14
        {
            #19 off=9
            (__fch_ix.122 var=75) load (__M_DMw.4 __adr_ix.52 ix.80)  <135>;
            (__ct_2139095040.123 var=76) const ()  <136>;
            (__tmp.125 var=78) bool__ge___sint___sint (__fch_ix.122 __ct_2139095040.123)  <138>;
            (f32_sub.392 var=193) const ()  <521>;
            (__trgt.435 var=214) const ()  <643>;
            () void_br_bool_t13s_s2 (__tmp.125 __trgt.435)  <644>;
            (__either.436 var=207) undefined ()  <645>;
            if {
                {
                    () if_expr (__either.436)  <161>;
                } #21
                {
                    #82 off=35
                    (__fch_x.148 var=79) load (__M_DMw.4 __adr_x.42 x.66)  <162>;
                    (__fch_x.149 var=80) load (__M_DMw.4 __adr_x.42 x.66)  <163>;
                    (__link.393 var=194) w32_jal_t21s_s2 (f32_sub.392)  <522>;
                    call {
                        (a.394 var=191 stl=X off=11) assign (__fch_x.148)  <523>;
                        (b.395 var=192 stl=X off=12) assign (__fch_x.149)  <524>;
                        (__link.396 var=194 stl=X off=1) assign (__link.393)  <525>;
                        (__rt.397 var=28 stl=X off=10) Ff32_sub (__link.396 a.394 b.395)  <526>;
                        (__rt.398 var=28) deassign (__rt.397)  <527>;
                    } #83 off=36
                } #22
                {
                    #26 off=10
                    (__ct_4t0.60 var=50) const ()  <71>;
                    (__adr_y.62 var=52) __Pvoid__pl___Pvoid___sint (__rd___sp.59 __ct_4t0.60)  <73>;
                    (__fch_x.151 var=82) load (__M_DMw.4 __adr_x.42 x.66)  <166>;
                    (rem_pio2f.156 var=85) const ()  <171>;
                    (__link.157 var=86) w32_jal_t21s_s2 (rem_pio2f.156)  <172>;
                    call {
                        (__fch_x.152 var=82 stl=X off=11) assign (__fch_x.151)  <167>;
                        (__ptr_y.153 var=49 stl=X off=12) assign (__adr_y.62)  <168>;
                        (__link.158 var=86 stl=X off=1) assign (__link.157)  <173>;
                        (__tmp.159 var=87 stl=X off=10 y.162 var=23) Frem_pio2f (__link.158 __fch_x.152 __ptr_y.153 y.22)  <174>;
                        (__tmp.160 var=87) deassign (__tmp.159)  <175>;
                    } #27 off=11
                    #28 off=12
                    (__ct_16t0.55 var=46) const ()  <66>;
                    (__adr_n.57 var=48) __Pvoid__pl___Pvoid___sint (__rd___sp.54 __ct_16t0.55)  <68>;
                    (__M_DMw.163 var=5 n.164 var=22) store (__tmp.160 __adr_n.57 n.21)  <177>;
                    call {
                        () chess_separator_scheduler ()  <178>;
                    } #29 off=13
                    #30 off=14
                    (__fch_n.166 var=88) load (__M_DMw.4 __adr_n.57 n.164)  <180>;
                    (__ct_3.167 var=89) const ()  <181>;
                    (__case.169 var=53) __sint__ad___sint___sint (__fch_n.166 __ct_3.167)  <183>;
                    call {
                        () chess_separator_scheduler ()  <184>;
                    } #31 off=15
                    #32 off=16
                    (__tmp.172 var=94) bool__eq___sint___sint (__case.169 __ct_0.67)  <187>;
                    (__ct_1.205 var=103) const ()  <221>;
                    (__ct_8t0.377 var=178) const ()  <459>;
                    (__trgt.432 var=212) const ()  <638>;
                    () void_br_bool_t13s_s2 (__tmp.172 __trgt.432)  <639>;
                    (__either.433 var=207) undefined ()  <640>;
                    if {
                        {
                            () if_expr (__either.433)  <210>;
                        } #34
                        {
                            #36 off=32
                            (__fch_y.198 var=98) load (__M_DMw.4 __adr_y.62 y.162)  <214>;
                            (__fch_y.203 var=102) load (__M_DMw.4 __adr_y.378 y.162)  <219>;
                            (__link.211 var=108) w32_jal_t21s_s2 (kernel_sinf.116)  <227>;
                            (__adr_y.378 var=179) __Pvoid__pl___Pvoid___sint (__rd___sp.59 __ct_8t0.377)  <461>;
                            call {
                                (__fch_y.199 var=98 stl=X off=11) assign (__fch_y.198)  <215>;
                                (__fch_y.204 var=102 stl=X off=12) assign (__fch_y.203)  <220>;
                                (__ct.207 var=104 stl=X off=13) assign (__ct_1.205)  <223>;
                                (__link.212 var=108 stl=X off=1) assign (__link.211)  <228>;
                                (__tmp.213 var=109 stl=X off=10) Fkernel_sinf (__link.212 __fch_y.199 __fch_y.204 __ct.207)  <229>;
                                (__tmp.214 var=109) deassign (__tmp.213)  <230>;
                            } #37 off=33
                        } #35
                        {
                            #40 off=17
                            (__tmp.218 var=112) bool__eq___sint___sint (__case.169 __ct_1.205)  <235>;
                            (kernel_cosf.253 var=123) const ()  <271>;
                            (__trgt.429 var=210) const ()  <633>;
                            () void_br_bool_t13s_s2 (__tmp.218 __trgt.429)  <634>;
                            (__either.430 var=207) undefined ()  <635>;
                            if {
                                {
                                    () if_expr (__either.430)  <258>;
                                } #42
                                {
                                    #44 off=29
                                    (__fch_y.244 var=116) load (__M_DMw.4 __adr_y.62 y.162)  <262>;
                                    (__fch_y.249 var=120) load (__M_DMw.4 __adr_y.379 y.162)  <267>;
                                    (__link.254 var=124) w32_jal_t21s_s2 (kernel_cosf.253)  <272>;
                                    (__adr_y.379 var=180) __Pvoid__pl___Pvoid___sint (__rd___sp.59 __ct_8t0.377)  <462>;
                                    call {
                                        (__fch_y.245 var=116 stl=X off=11) assign (__fch_y.244)  <263>;
                                        (__fch_y.250 var=120 stl=X off=12) assign (__fch_y.249)  <268>;
                                        (__link.255 var=124 stl=X off=1) assign (__link.254)  <273>;
                                        (__tmp.256 var=125 stl=X off=10) Fkernel_cosf (__link.255 __fch_y.245 __fch_y.250)  <274>;
                                        (__tmp.257 var=125) deassign (__tmp.256)  <275>;
                                    } #45 off=30
                                } #43
                                {
                                    #48 off=18
                                    (__ct_2.259 var=126) const ()  <278>;
                                    (__tmp.261 var=128) bool__eq___sint___sint (__case.169 __ct_2.259)  <280>;
                                    (__trgt.426 var=208) const ()  <628>;
                                    () void_br_bool_t13s_s2 (__tmp.261 __trgt.426)  <629>;
                                    (__either.427 var=207) undefined ()  <630>;
                                    if {
                                        {
                                            () if_expr (__either.427)  <303>;
                                        } #50
                                        {
                                            #52 off=24
                                            (__fch_y.289 var=134) load (__M_DMw.4 __adr_y.62 y.162)  <309>;
                                            (__fch_y.294 var=138) load (__M_DMw.4 __adr_y.380 y.162)  <314>;
                                            (__link.302 var=144) w32_jal_t21s_s2 (kernel_sinf.116)  <322>;
                                            (__adr_y.380 var=181) __Pvoid__pl___Pvoid___sint (__rd___sp.59 __ct_8t0.377)  <463>;
                                            call {
                                                (__fch_y.290 var=134 stl=X off=11) assign (__fch_y.289)  <310>;
                                                (__fch_y.295 var=138 stl=X off=12) assign (__fch_y.294)  <315>;
                                                (__ct.298 var=140 stl=X off=13) assign (__ct_1.205)  <318>;
                                                (__link.303 var=144 stl=X off=1) assign (__link.302)  <323>;
                                                (__tmp.304 var=145 stl=X off=10) Fkernel_sinf (__link.303 __fch_y.290 __fch_y.295 __ct.298)  <324>;
                                                (__tmp.305 var=145) deassign (__tmp.304)  <325>;
                                            } #53 off=25
                                            #88 off=26
                                            (__link.403 var=194) w32_jal_t21s_s2 (f32_sub.392)  <535>;
                                            call {
                                                (a.404 var=191 stl=X off=11) assign (__ct_0.67)  <536>;
                                                (b.405 var=192 stl=X off=12) assign (__tmp.305)  <537>;
                                                (__link.406 var=194 stl=X off=1) assign (__link.403)  <538>;
                                                (__rt.407 var=28 stl=X off=10) Ff32_sub (__link.406 a.404 b.405)  <539>;
                                                (__rt.408 var=28) deassign (__rt.407)  <540>;
                                            } #89 off=27
                                        } #51
                                        {
                                            #57 off=19
                                            (__fch_y.313 var=152) load (__M_DMw.4 __adr_y.62 y.162)  <334>;
                                            (__fch_y.318 var=156) load (__M_DMw.4 __adr_y.381 y.162)  <339>;
                                            (__link.323 var=160) w32_jal_t21s_s2 (kernel_cosf.253)  <344>;
                                            (__adr_y.381 var=182) __Pvoid__pl___Pvoid___sint (__rd___sp.59 __ct_8t0.377)  <464>;
                                            call {
                                                (__fch_y.314 var=152 stl=X off=11) assign (__fch_y.313)  <335>;
                                                (__fch_y.319 var=156 stl=X off=12) assign (__fch_y.318)  <340>;
                                                (__link.324 var=160 stl=X off=1) assign (__link.323)  <345>;
                                                (__tmp.325 var=161 stl=X off=10) Fkernel_cosf (__link.324 __fch_y.314 __fch_y.319)  <346>;
                                                (__tmp.326 var=161) deassign (__tmp.325)  <347>;
                                            } #58 off=20
                                            #94 off=21
                                            (__link.413 var=194) w32_jal_t21s_s2 (f32_sub.392)  <548>;
                                            call {
                                                (a.414 var=191 stl=X off=11) assign (__ct_0.67)  <549>;
                                                (b.415 var=192 stl=X off=12) assign (__tmp.326)  <550>;
                                                (__link.416 var=194 stl=X off=1) assign (__link.413)  <551>;
                                                (__rt.417 var=28 stl=X off=10) Ff32_sub (__link.416 a.414 b.415)  <552>;
                                                (__rt.418 var=28) deassign (__rt.417)  <553>;
                                            } #95 off=22
                                            #99 off=23
                                            (__trgt.428 var=209) const ()  <631>;
                                            () void_j_t21s_s2 (__trgt.428)  <632>;
                                        } #56
                                        {
                                            (__rt.329 var=28) merge (__rt.408 __rt.418)  <351>;
                                        } #61
                                    } #49
                                    #100 off=28
                                    (__trgt.431 var=211) const ()  <636>;
                                    () void_j_t21s_s2 (__trgt.431)  <637>;
                                } #47
                                {
                                    (__rt.330 var=28) merge (__tmp.257 __rt.329)  <353>;
                                } #63
                            } #41
                            #101 off=31
                            (__trgt.434 var=213) const ()  <641>;
                            () void_j_t21s_s2 (__trgt.434)  <642>;
                        } #39
                        {
                            (__rt.331 var=28) merge (__tmp.214 __rt.330)  <355>;
                        } #65
                    } #33
                    #102 off=34
                    (__trgt.437 var=215) const ()  <646>;
                    () void_j_t21s_s2 (__trgt.437)  <647>;
                } #25
                {
                    (n.332 var=22) merge (n.21 n.164)  <357>;
                    (y.333 var=23) merge (y.22 y.162)  <358>;
                    (__rt.334 var=28) merge (__rt.398 __rt.331)  <359>;
                } #67
            } #20
            #103 off=37
            (__trgt.440 var=217) const ()  <651>;
            () void_j_t21s_s2 (__trgt.440)  <652>;
        } #18
        {
            (n.336 var=22) merge (n.21 n.332)  <362>;
            (y.337 var=23) merge (y.22 y.333)  <363>;
            (__rt.338 var=28) merge (__tmp.120 __rt.334)  <364>;
        } #69
    } #12
    #71 off=40 nxt=-2
    (__rd___sp.340 var=26) rd_res_reg (__R_SP.11 __sp.38)  <366>;
    (__ct_24s0.341 var=163) const ()  <367>;
    (__tmp.343 var=165) __Pvoid__pl___Pvoid___sint (__rd___sp.340 __ct_24s0.341)  <369>;
    (__R_SP.344 var=12 __sp.345 var=18) wr_res_reg (__tmp.343 __sp.38)  <370>;
    () void___rts_jr_w32 (__la.27)  <371>;
    (__rt.346 var=28 stl=X off=10) assign (__rt.338)  <372>;
    () out (__rt.346)  <373>;
    () sink (__sp.345)  <379>;
    () sink (x.66)  <380>;
    () sink (z.70)  <381>;
    () sink (ix.80)  <382>;
    () sink (n.336)  <383>;
    () sink (y.337)  <384>;
} #0
0 : 'src/math.c';
----------
0 : (0,817:0,0);
3 : (0,817:11,0);
4 : (0,817:11,0);
5 : (0,819:20,2);
6 : (0,819:20,2);
7 : (0,822:4,5);
8 : (0,822:4,5);
9 : (0,825:7,7);
10 : (0,825:7,7);
12 : (0,826:4,7);
14 : (0,829:9,8);
15 : (0,826:48,8);
16 : (0,826:32,8);
18 : (0,826:25,11);
19 : (0,829:15,11);
20 : (0,829:9,11);
22 : (0,835:8,12);
25 : (0,829:29,15);
26 : (0,833:24,15);
27 : (0,833:12,15);
28 : (0,833:10,16);
29 : (0,833:10,16);
30 : (0,835:8,16);
31 : (0,835:8,16);
32 : (0,835:8,17);
33 : (0,835:8,17);
35 : (0,836:8,18);
36 : (0,835:47,18);
37 : (0,835:25,18);
39 : (0,835:17,22);
40 : (0,836:8,22);
41 : (0,836:8,22);
43 : (0,837:8,23);
44 : (0,836:43,23);
45 : (0,836:25,23);
47 : (0,836:17,27);
48 : (0,837:8,27);
49 : (0,837:8,27);
51 : (0,838:17,28);
52 : (0,837:47,28);
53 : (0,837:25,28);
56 : (0,837:17,32);
57 : (0,838:43,32);
58 : (0,838:25,32);
71 : (0,826:4,58);
75 : (0,826:10,7);
82 : (0,829:37,12);
83 : (0,829:37,12);
88 : (0,837:17,29);
89 : (0,837:17,29);
94 : (0,838:17,33);
95 : (0,838:17,33);
----------
44 : (0,817:6,0);
45 : (0,817:6,0);
47 : (0,817:6,0);
48 : (0,817:6,0);
50 : (0,817:17,0);
51 : (0,817:17,0);
53 : (0,817:17,0);
55 : (0,819:15,0);
56 : (0,819:15,0);
58 : (0,819:15,0);
60 : (0,820:15,0);
61 : (0,820:15,0);
63 : (0,820:15,0);
65 : (0,820:12,0);
66 : (0,820:12,0);
68 : (0,820:12,0);
70 : (0,819:10,0);
71 : (0,819:10,0);
73 : (0,819:10,0);
76 : (0,817:11,0);
77 : (0,817:11,0);
78 : (0,819:20,0);
80 : (0,819:20,2);
81 : (0,819:20,2);
82 : (0,822:15,4);
84 : (0,822:1,4);
85 : (0,822:4,5);
86 : (0,825:4,6);
87 : (0,825:10,0);
89 : (0,825:7,6);
90 : (0,825:4,6);
91 : (0,825:7,7);
92 : (0,826:7,7);
93 : (0,826:13,0);
118 : (0,826:4,7);
119 : (0,826:44,8);
120 : (0,826:44,0);
122 : (0,826:46,0);
125 : (0,826:48,0);
129 : (0,826:32,8);
130 : (0,826:32,0);
131 : (0,826:32,8);
135 : (0,829:13,11);
136 : (0,829:17,0);
138 : (0,829:15,11);
161 : (0,829:9,11);
162 : (0,829:36,12);
163 : (0,829:38,12);
166 : (0,833:22,15);
167 : (0,833:22,0);
168 : (0,833:24,0);
172 : (0,833:12,15);
173 : (0,833:12,0);
174 : (0,833:12,15);
177 : (0,833:8,15);
178 : (0,833:10,16);
180 : (0,834:15,16);
181 : (0,834:17,0);
183 : (0,834:16,16);
184 : (0,835:8,16);
187 : (0,835:8,17);
210 : (0,835:8,17);
214 : (0,835:38,18);
215 : (0,835:38,0);
219 : (0,835:43,18);
220 : (0,835:43,0);
221 : (0,835:47,0);
223 : (0,835:47,0);
227 : (0,835:25,18);
228 : (0,835:25,0);
229 : (0,835:25,18);
235 : (0,836:8,22);
258 : (0,836:8,22);
262 : (0,836:38,23);
263 : (0,836:38,0);
267 : (0,836:43,23);
268 : (0,836:43,0);
272 : (0,836:25,23);
273 : (0,836:25,0);
274 : (0,836:25,23);
278 : (0,837:8,0);
280 : (0,837:8,27);
303 : (0,837:8,27);
309 : (0,837:38,28);
310 : (0,837:38,0);
314 : (0,837:43,28);
315 : (0,837:43,0);
318 : (0,837:47,0);
322 : (0,837:25,28);
323 : (0,837:25,0);
324 : (0,837:25,28);
334 : (0,838:38,32);
335 : (0,838:38,0);
339 : (0,838:43,32);
340 : (0,838:43,0);
344 : (0,838:25,32);
345 : (0,838:25,0);
346 : (0,838:25,32);
351 : (0,837:8,36);
353 : (0,836:8,41);
355 : (0,835:8,46);
357 : (0,829:9,52);
358 : (0,829:9,52);
359 : (0,829:9,52);
362 : (0,826:4,57);
363 : (0,826:4,57);
364 : (0,826:4,57);
366 : (0,826:4,0);
367 : (0,826:4,0);
369 : (0,826:4,0);
370 : (0,826:4,58);
371 : (0,826:4,58);
372 : (0,826:4,0);
459 : (0,819:10,0);
461 : (0,835:43,0);
462 : (0,836:43,0);
463 : (0,837:43,0);
464 : (0,838:43,0);
491 : (0,826:10,7);
521 : (0,829:37,0);
522 : (0,829:37,12);
523 : (0,829:37,12);
524 : (0,829:37,12);
525 : (0,829:37,12);
526 : (0,829:37,12);
527 : (0,829:37,12);
535 : (0,837:24,28);
536 : (0,837:24,28);
537 : (0,837:24,28);
538 : (0,837:24,28);
539 : (0,837:24,28);
540 : (0,837:24,28);
548 : (0,838:24,32);
549 : (0,838:24,32);
550 : (0,838:24,32);
551 : (0,838:24,32);
552 : (0,838:24,32);
553 : (0,838:24,32);
629 : (0,837:8,27);
634 : (0,836:8,22);
639 : (0,835:8,17);
644 : (0,829:9,11);
649 : (0,826:4,7);

