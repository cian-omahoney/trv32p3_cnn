
// File generated by noodle version U-2022.12#33f3808fcb#221128, Tue Mar 19 15:58:54 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -D__tct_patch__=0 -itrv32p3_cnn_chess.h +Sal +Sca +Osps -Wflla +NOtcr +NOcse +NOifv +NOrle +NOrlt +wDebug/chesswork src/stdio.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!! extern int printf(const char *, ...)
Fprintf : user_defined, called {
    fnm : "printf" 'int printf(const char *, ...)';
    arg : ( w32:i w32:r w32:i );
    loc : ( X[1] X[10] X[11] );
    frm : ( l=12 );
    llv : 0 0 0 0 0 ;
}
****
!! extern int vfprintf(FILE *, const char *, va_list)
Fvfprintf : user_defined, called {
    fnm : "vfprintf" 'int vfprintf(FILE *, const char *, va_list)';
    arg : ( w32:i w32:r w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] );
    llv : 0 0 0 0 0 ;
}
***/

[
    0 : printf typ=u08 bnd=e stl=PMb
    5 : __M_DMw typ=w32 bnd=d stl=DMw
    8 : __M_DMw_stat typ=w32 bnd=d stl=DMw_stat
   12 : __R_SP typ=w32 bnd=d stl=SP
   13 : __vola typ=u08 bnd=b stl=PMb
   16 : __extPMb typ=u08 bnd=b stl=PMb
   17 : __extDMb typ=w08 bnd=b stl=DMb
   18 : __sp typ=w32 bnd=b stl=SP
   19 : format typ=w08 val=0t0 bnd=a sz=4 algn=4 stl=DMb tref=__P__cchar_DMb
   20 : ap typ=w08 val=4t0 bnd=a sz=4 algn=4 stl=DMb tref=va_list_DMb
   21 : stdout typ=w08 bnd=e sz=4 algn=4 stl=DMb_stat tref=__PFILE_DMb_stat_1
   22 : __extDMb___PFILE typ=w08 bnd=b stl=DMb
   23 : rt typ=w08 val=8t0 bnd=a sz=4 algn=4 stl=DMb tref=__sint_DMb
   24 : __extDMb_FILE typ=w08 bnd=b stl=DMb
   25 : __extPMb_void typ=u08 bnd=b stl=PMb
   26 : __extDMb_void typ=w08 bnd=b stl=DMb
   27 : __rd___sp typ=w32 bnd=m
   29 : __ptr_stdout typ=w32 val=0a bnd=m adro=21
   30 : __la typ=w32 bnd=p tref=w32__
   31 : __rt typ=w32 bnd=p tref=__sint__
   32 : __arg_format typ=w32 bnd=p tref=__P__cchar__
   33 : __ct_m12S0 typ=w32 val=-12S0 bnd=m
   35 : __tmp typ=w32 bnd=m
   36 : __ct_12t0 typ=w32 val=12t0 bnd=m
   38 : __tmp typ=w32 bnd=m
   40 : __ct_0t0 typ=w32 val=0t0 bnd=m
   42 : __adr_format typ=w32 bnd=m adro=19
   44 : __ct_4t0 typ=w32 val=4t0 bnd=m
   46 : __adr_ap typ=w32 bnd=m adro=20
   48 : __ct_8t0 typ=w32 val=8t0 bnd=m
   50 : __adr_rt typ=w32 bnd=m adro=23
   56 : __fch_format typ=w32 bnd=m
   57 : __fch_ap typ=w32 bnd=m
   58 : __fch_stdout typ=w32 bnd=m
   61 : vfprintf typ=t21s_s2 val=0r bnd=m
   62 : __link typ=w32 bnd=m
   63 : __tmp typ=w32 bnd=m
   68 : __ct_12s0 typ=w32 val=12s0 bnd=m
   70 : __tmp typ=w32 bnd=m
]
Fprintf {
    #3 off=0
    (__M_DMw.4 var=5) st_def ()  <8>;
    (__M_DMw_stat.7 var=8) st_def ()  <14>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__vola.12 var=13) source ()  <23>;
    (__extPMb.15 var=16) source ()  <26>;
    (__extDMb.16 var=17) source ()  <27>;
    (__sp.17 var=18) source ()  <28>;
    (format.18 var=19) source ()  <29>;
    (ap.19 var=20) source ()  <30>;
    (stdout.20 var=21) source ()  <31>;
    (__extDMb___PFILE.21 var=22) source ()  <32>;
    (rt.22 var=23) source ()  <33>;
    (__extDMb_FILE.23 var=24) source ()  <34>;
    (__extPMb_void.24 var=25) source ()  <35>;
    (__extDMb_void.25 var=26) source ()  <36>;
    (__la.29 var=30 stl=X off=1) inp ()  <40>;
    (__la.30 var=30) deassign (__la.29)  <41>;
    (__arg_format.33 var=32 stl=X off=11) inp ()  <44>;
    (__arg_format.34 var=32) deassign (__arg_format.33)  <45>;
    (__rd___sp.36 var=27) rd_res_reg (__R_SP.11 __sp.17)  <47>;
    (__ct_m12S0.37 var=33) const ()  <48>;
    (__tmp.39 var=35) __Pvoid__pl___Pvoid___sint (__rd___sp.36 __ct_m12S0.37)  <50>;
    (__R_SP.40 var=12 __sp.41 var=18) wr_res_reg (__tmp.39 __sp.17)  <51>;
    (__rd___sp.42 var=27) rd_res_reg (__R_SP.11 __sp.41)  <52>;
    (__rd___sp.46 var=27) rd_res_reg (__R_SP.11 __sp.41)  <57>;
    (__ct_0t0.47 var=40) const ()  <58>;
    (__adr_format.49 var=42) __Pvoid__pl___Pvoid___sint (__rd___sp.46 __ct_0t0.47)  <60>;
    (__rd___sp.51 var=27) rd_res_reg (__R_SP.11 __sp.41)  <62>;
    (__rd___sp.56 var=27) rd_res_reg (__R_SP.11 __sp.41)  <67>;
    (__M_DMw.66 var=5 format.67 var=19) store (__arg_format.34 __adr_format.49 format.18)  <77>;
    call {
        () chess_separator_scheduler ()  <78>;
    } #4 off=1
    #5 off=2
    (__ct_12t0.43 var=36) const ()  <53>;
    (__tmp.45 var=38) __Pvoid__pl___Pvoid___sint (__rd___sp.42 __ct_12t0.43)  <55>;
    (__ct_4t0.52 var=44) const ()  <63>;
    (__adr_ap.54 var=46) __Pvoid__pl___Pvoid___sint (__rd___sp.51 __ct_4t0.52)  <65>;
    (__M_DMw.68 var=5 ap.69 var=20) store (__tmp.45 __adr_ap.54 ap.19)  <79>;
    call {
        () chess_separator_scheduler ()  <82>;
    } #8 off=3
    #9 off=4
    (__fch_format.72 var=56) load (__M_DMw.4 __adr_format.49 format.67)  <84>;
    call {
        () chess_separator_scheduler ()  <85>;
    } #10 off=5
    #11 off=6
    (__fch_ap.74 var=57) load (__M_DMw.4 __adr_ap.54 ap.69)  <87>;
    call {
        () chess_separator_scheduler ()  <92>;
    } #16 off=7
    #17 off=8
    (__ptr_stdout.27 var=29) const ()  <38>;
    (__fch_stdout.77 var=58) load (__M_DMw_stat.7 __ptr_stdout.27 stdout.20)  <93>;
    (vfprintf.83 var=61) const ()  <99>;
    (__link.84 var=62) w32_jal_t21s_s2 (vfprintf.83)  <100>;
    call {
        (__fch_stdout.78 var=58 stl=X off=11) assign (__fch_stdout.77)  <94>;
        (__fch_format.79 var=56 stl=X off=12) assign (__fch_format.72)  <95>;
        (__fch_ap.80 var=57 stl=X off=13) assign (__fch_ap.74)  <96>;
        (__link.85 var=62 stl=X off=1) assign (__link.84)  <101>;
        (__tmp.86 var=63 stl=X off=10 __extDMb.89 var=17 __extDMb_FILE.90 var=24 __extDMb___PFILE.91 var=22 __extDMb_void.92 var=26 __extPMb.93 var=16 __extPMb_void.94 var=25 stdout.95 var=21 __vola.96 var=13) Fvfprintf (__link.85 __fch_stdout.78 __fch_format.79 __fch_ap.80 __extDMb.16 __extDMb_FILE.23 __extDMb___PFILE.21 __extDMb_void.25 __extPMb.15 __extPMb_void.24 stdout.20 __vola.12)  <102>;
        (__tmp.87 var=63) deassign (__tmp.86)  <103>;
    } #18 off=9
    #20 off=10
    (__ct_8t0.57 var=48) const ()  <68>;
    (__adr_rt.59 var=50) __Pvoid__pl___Pvoid___sint (__rd___sp.56 __ct_8t0.57)  <70>;
    (__M_DMw.97 var=5 rt.98 var=23) store (__tmp.87 __adr_rt.59 rt.22)  <106>;
    call {
        () chess_separator_scheduler ()  <111>;
    } #23 off=11
    #26 off=12 nxt=-2
    (__rt.102 var=31) load (__M_DMw.4 __adr_rt.59 rt.98)  <112>;
    (__rd___sp.103 var=27) rd_res_reg (__R_SP.11 __sp.41)  <113>;
    (__ct_12s0.104 var=68) const ()  <114>;
    (__tmp.106 var=70) __Pvoid__pl___Pvoid___sint (__rd___sp.103 __ct_12s0.104)  <116>;
    (__R_SP.107 var=12 __sp.108 var=18) wr_res_reg (__tmp.106 __sp.41)  <117>;
    () void___rts_jr_w32 (__la.30)  <118>;
    (__rt.109 var=31 stl=X off=10) assign (__rt.102)  <119>;
    () out (__rt.109)  <120>;
    () sink (__vola.96)  <121>;
    () sink (__extPMb.93)  <124>;
    () sink (__extDMb.89)  <125>;
    () sink (__sp.108)  <126>;
    () sink (format.67)  <127>;
    () sink (ap.69)  <128>;
    () sink (stdout.95)  <129>;
    () sink (__extDMb___PFILE.91)  <130>;
    () sink (rt.98)  <131>;
    () sink (__extDMb_FILE.90)  <132>;
    () sink (__extPMb_void.94)  <133>;
    () sink (__extDMb_void.92)  <134>;
} #0
0 : 'src/stdio.c';
----------
0 : (0,357:0,0);
3 : (0,357:11,0);
4 : (0,357:11,0);
5 : (0,360:6,5);
8 : (0,361:13,7);
9 : (0,361:21,8);
10 : (0,361:21,8);
11 : (0,361:29,9);
16 : (0,361:13,11);
17 : (0,361:13,12);
18 : (0,361:13,12);
20 : (0,361:11,16);
23 : (0,362:1,17);
26 : (0,363:4,17);
----------
47 : (0,357:4,0);
48 : (0,357:4,0);
50 : (0,357:4,0);
51 : (0,357:4,0);
52 : (0,357:4,0);
53 : (0,357:4,0);
55 : (0,357:4,0);
57 : (0,357:23,0);
58 : (0,357:23,0);
60 : (0,357:23,0);
62 : (0,359:12,0);
63 : (0,359:12,0);
65 : (0,359:12,0);
67 : (0,361:8,0);
68 : (0,361:8,0);
70 : (0,361:8,0);
77 : (0,357:11,0);
78 : (0,357:11,0);
79 : (0,360:2,4);
82 : (0,361:13,7);
84 : (0,361:21,8);
85 : (0,361:21,8);
87 : (0,361:29,9);
92 : (0,361:13,11);
93 : (0,361:13,12);
94 : (0,361:13,0);
95 : (0,361:13,0);
96 : (0,361:13,0);
100 : (0,361:13,12);
101 : (0,361:13,0);
102 : (0,361:13,12);
106 : (0,361:13,15);
111 : (0,362:1,17);
112 : (0,363:11,17);
113 : (0,363:4,0);
114 : (0,363:4,0);
116 : (0,363:4,0);
117 : (0,363:4,17);
118 : (0,363:4,17);
119 : (0,363:11,0);

