
// File generated by noodle version U-2022.12#33f3808fcb#221128, Thu Feb 29 17:34:08 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -D__tct_patch__=0 -itrv32p3_cnn_chess.h +Sal +Sca +Osps -Wflla +NOtcr +NOcse +NOlsw +NOifv +NOrle +NOrlt +wDebug/chesswork src/stdio.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!! extern FILE *fopen(const char *, const char *)
Ffopen : user_defined, called {
    fnm : "fopen" 'FILE *fopen(const char *, const char *)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
    frm : ( l=80 );
    llv : 0 0 0 0 0 ;
}
****
!! static void clib_hosted_io(Hosted_clib_vars *)
Fclib_hosted_io : user_defined, called {
    fnm : "clib_hosted_io" 'void clib_hosted_io(Hosted_clib_vars *)';
    arg : ( w32:i w32:i );
    loc : ( X[1] X[10] );
    llv : 0 0 0 0 0 ;
}
***/

[
    0 : fopen typ=u08 bnd=e stl=PMb
    5 : __M_DMw typ=w32 bnd=d stl=DMw
    8 : __M_DMw_stat typ=w32 bnd=d stl=DMw_stat
   12 : __R_SP typ=w32 bnd=d stl=SP
   13 : __vola typ=u08 bnd=b stl=PMb
   16 : __extPMb typ=u08 bnd=b stl=PMb
   17 : __extDMb typ=w08 bnd=b stl=DMb
   18 : __sp typ=w32 bnd=b stl=SP
   19 : mode typ=w08 val=0t0 bnd=a sz=4 algn=4 stl=DMb tref=__P__cchar_DMb
   20 : path typ=w08 val=4t0 bnd=a sz=4 algn=4 stl=DMb tref=__P__cchar_DMb
   21 : idx typ=w08 val=76t0 bnd=a sz=4 algn=4 stl=DMb tref=__sint_DMb
   22 : _ZL18_hosted_clib_files typ=w08 bnd=i sz=128 algn=4 stl=DMb tref=__A16FILE_DMb
   23 : __extDMb_FILE typ=w08 bnd=b stl=DMb
   24 : errno typ=w08 bnd=e sz=4 algn=4 stl=DMb_stat tref=__sint_DMb_stat
   25 : __extDMb_w32 typ=w08 bnd=b stl=DMb
   26 : _hosted_clib_vars typ=w08 val=8t0 bnd=a sz=68 algn=4 stl=DMb tref=Hosted_clib_vars_DMb
   27 : _ZL18_hosted_clib_files_in_use typ=w08 bnd=b stl=DMb
   28 : _hosted_clib_vars_str_arg1 typ=w08 bnd=B stl=DMb
   29 : _hosted_clib_vars_str_arg2 typ=w08 bnd=B stl=DMb
   30 : _hosted_clib_vars_call_type typ=w08 bnd=B stl=DMb
   31 : _hosted_clib_vars_stream_rt typ=w08 bnd=B stl=DMb
   32 : __extPMb_void typ=u08 bnd=b stl=PMb
   33 : __extDMb_void typ=w08 bnd=b stl=DMb
   34 : __extDMb_Hosted_clib_vars typ=w08 bnd=b stl=DMb
   35 : __extDMb___PDMbvoid typ=w08 bnd=b stl=DMb
   36 : __extDMb___anonymous1__stdio_ typ=w08 bnd=b stl=DMb
   37 : __extDMb___anonymous2__stdio_ typ=w08 bnd=b stl=DMb
   38 : _ZL18_hosted_clib_files_stream typ=w08 bnd=b stl=DMb
   39 : _hosted_clib_vars_stream_id typ=w08 bnd=B stl=DMb
   40 : __rd___sp typ=w32 bnd=m
   42 : __ptr__hosted_clib_files typ=w32 val=0a bnd=m adro=22
   44 : __ptr_errno typ=w32 val=0a bnd=m adro=24
   45 : __la typ=w32 bnd=p tref=w32__
   46 : __rt typ=w32 bnd=p tref=__PFILE__
   47 : __arg_path typ=w32 bnd=p tref=__P__cchar__
   48 : __arg_mode typ=w32 bnd=p tref=__P__cchar__
   49 : __ct_m80S0 typ=w32 val=-80S0 bnd=m
   51 : __tmp typ=w32 bnd=m
   53 : __ct_0t0 typ=w32 val=0t0 bnd=m
   55 : __adr_mode typ=w32 bnd=m adro=19
   57 : __ct_4t0 typ=w32 val=4t0 bnd=m
   59 : __adr_path typ=w32 bnd=m adro=20
   61 : __ct_76t0 typ=w32 val=76t0 bnd=m
   63 : __adr_idx typ=w32 bnd=m adro=21
   64 : __ptr__hosted_clib_vars typ=w32 bnd=m
   65 : __ct_8t0 typ=w32 val=8t0 bnd=m
   67 : __adr__hosted_clib_vars typ=w32 bnd=m adro=26
   69 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   72 : __ct_16 typ=w32 val=16f bnd=m
   75 : __fch_idx typ=w32 bnd=m
   78 : __tmp typ=w32 bnd=m
   79 : __tmp typ=w32 bnd=m
   80 : __ct_4 typ=w32 val=4f bnd=m
   82 : __tmp typ=w32 bnd=m
   83 : __fch__ZL18_hosted_clib_files_in_use typ=w32 bnd=m
   86 : __tmp typ=bool bnd=m
   88 : __fch_idx typ=w32 bnd=m
   89 : __ct_1 typ=w32 val=1f bnd=m
   91 : __tmp typ=w32 bnd=m
   92 : __fch_idx typ=w32 bnd=m
   95 : __tmp typ=bool bnd=m
   96 : __fch_idx typ=w32 bnd=m
   99 : __tmp typ=bool bnd=m
  100 : __ct_24 typ=w32 val=24f bnd=m
  105 : __fch_path typ=w32 bnd=m
  112 : __fch_mode typ=w32 bnd=m
  124 : __ct_9 typ=w32 val=9f bnd=m
  131 : clib_hosted_io typ=t21s_s2 val=0r bnd=m
  132 : __link typ=w32 bnd=m
  136 : __fch__hosted_clib_vars_stream_rt typ=w32 bnd=m
  139 : __tmp typ=bool bnd=m
  143 : __fch__hosted_clib_vars_stream_rt typ=w32 bnd=m
  150 : __fch__hosted_clib_vars_stream_id typ=w32 bnd=m
  151 : __fch_idx typ=w32 bnd=m
  154 : __tmp typ=w32 bnd=m
  155 : __tmp typ=w32 bnd=m
  161 : __fch_idx typ=w32 bnd=m
  164 : __tmp typ=w32 bnd=m
  165 : __tmp typ=w32 bnd=m
  168 : __tmp typ=w32 bnd=m
  169 : __fch_idx typ=w32 bnd=m
  172 : __tmp typ=w32 bnd=m
  174 : __ct_80s0 typ=w32 val=80s0 bnd=m
  176 : __tmp typ=w32 bnd=m
  183 : __ct_3 typ=w32 val=3f bnd=m
  184 : __ct_16t0 typ=w32 val=16t0 bnd=m
  185 : __adr__hosted_clib_vars typ=w32 bnd=m adro=26
  186 : __ct_12t0 typ=w32 val=12t0 bnd=m
  187 : __adr__hosted_clib_vars typ=w32 bnd=m adro=26
  188 : __ct_20t0 typ=w32 val=20t0 bnd=m
  189 : __adr__hosted_clib_vars typ=w32 bnd=m adro=26
  190 : __ct_24t0 typ=w32 val=24t0 bnd=m
  191 : __adr__hosted_clib_vars typ=w32 bnd=m adro=26
  192 : __adr__hosted_clib_vars typ=w32 bnd=m adro=26
  193 : __adr__hosted_clib_vars typ=w32 bnd=m adro=26
  202 : __either typ=bool bnd=m
  203 : __trgt typ=t13s_s2 val=0j bnd=m
  204 : __trgt typ=t13s_s2 val=0j bnd=m
  205 : __trgt typ=t13s_s2 val=0j bnd=m
  206 : __trgt typ=t21s_s2 val=0j bnd=m
  207 : __trgt typ=t13s_s2 val=0j bnd=m
  208 : __trgt typ=t21s_s2 val=0j bnd=m
  209 : __trgt typ=t21s_s2 val=0j bnd=m
]
Ffopen {
    #4 off=0
    (__M_DMw.4 var=5) st_def ()  <8>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__vola.12 var=13) source ()  <23>;
    (__extPMb.15 var=16) source ()  <26>;
    (__extDMb.16 var=17) source ()  <27>;
    (__sp.17 var=18) source ()  <28>;
    (mode.18 var=19) source ()  <29>;
    (path.19 var=20) source ()  <30>;
    (idx.20 var=21) source ()  <31>;
    (_ZL18_hosted_clib_files.21 var=22) source ()  <32>;
    (__extDMb_FILE.22 var=23) source ()  <33>;
    (errno.23 var=24) source ()  <34>;
    (__extDMb_w32.24 var=25) source ()  <35>;
    (_hosted_clib_vars.25 var=26) source ()  <36>;
    (_ZL18_hosted_clib_files_in_use.26 var=27) source ()  <37>;
    (_hosted_clib_vars_str_arg1.27 var=28) source ()  <38>;
    (_hosted_clib_vars_str_arg2.28 var=29) source ()  <39>;
    (_hosted_clib_vars_call_type.29 var=30) source ()  <40>;
    (_hosted_clib_vars_stream_rt.30 var=31) source ()  <41>;
    (__extPMb_void.31 var=32) source ()  <42>;
    (__extDMb_void.32 var=33) source ()  <43>;
    (__extDMb_Hosted_clib_vars.33 var=34) source ()  <44>;
    (__extDMb___PDMbvoid.34 var=35) source ()  <45>;
    (__extDMb___anonymous1__stdio_.35 var=36) source ()  <46>;
    (__extDMb___anonymous2__stdio_.36 var=37) source ()  <47>;
    (_ZL18_hosted_clib_files_stream.37 var=38) source ()  <48>;
    (_hosted_clib_vars_stream_id.38 var=39) source ()  <49>;
    (__la.44 var=45 stl=X off=1) inp ()  <55>;
    (__la.45 var=45) deassign (__la.44)  <56>;
    (__arg_path.48 var=47 stl=X off=11) inp ()  <59>;
    (__arg_path.49 var=47) deassign (__arg_path.48)  <60>;
    (__arg_mode.51 var=48 stl=X off=12) inp ()  <62>;
    (__arg_mode.52 var=48) deassign (__arg_mode.51)  <63>;
    (__rd___sp.54 var=40) rd_res_reg (__R_SP.11 __sp.17)  <65>;
    (__ct_m80S0.55 var=49) const ()  <66>;
    (__tmp.57 var=51) __Pvoid__pl___Pvoid___sint (__rd___sp.54 __ct_m80S0.55)  <68>;
    (__R_SP.58 var=12 __sp.59 var=18) wr_res_reg (__tmp.57 __sp.17)  <69>;
    (__rd___sp.60 var=40) rd_res_reg (__R_SP.11 __sp.59)  <71>;
    (__ct_0t0.61 var=53) const ()  <72>;
    (__adr_mode.63 var=55) __Pvoid__pl___Pvoid___sint (__rd___sp.60 __ct_0t0.61)  <74>;
    (__rd___sp.65 var=40) rd_res_reg (__R_SP.11 __sp.59)  <76>;
    (__rd___sp.70 var=40) rd_res_reg (__R_SP.11 __sp.59)  <81>;
    (__rd___sp.75 var=40) rd_res_reg (__R_SP.11 __sp.59)  <86>;
    (__M_DMw.81 var=5 mode.82 var=19) store (__arg_mode.52 __adr_mode.63 mode.18)  <92>;
    call {
        () chess_separator_scheduler ()  <93>;
    } #5 off=1
    #6 off=2
    (__ct_4t0.66 var=57) const ()  <77>;
    (__adr_path.68 var=59) __Pvoid__pl___Pvoid___sint (__rd___sp.65 __ct_4t0.66)  <79>;
    (__M_DMw.83 var=5 path.84 var=20) store (__arg_path.49 __adr_path.68 path.19)  <94>;
    call {
        () chess_separator_scheduler ()  <95>;
    } #7 off=3
    #8 off=4
    (__ct_76t0.71 var=61) const ()  <82>;
    (__adr_idx.73 var=63) __Pvoid__pl___Pvoid___sint (__rd___sp.70 __ct_76t0.71)  <84>;
    (__ct_0.85 var=69) const ()  <96>;
    (__M_DMw.87 var=5 idx.88 var=21) store (__ct_0.85 __adr_idx.73 idx.20)  <98>;
    call {
        () chess_separator_scheduler ()  <99>;
    } #9 off=5
    #145 off=6
    (__ptr__hosted_clib_files.40 var=42) const ()  <51>;
    (__ct_16.90 var=72) const ()  <101>;
    (__ct_4.174 var=80) const ()  <187>;
    (__ct_1.297 var=89) const ()  <377>;
    (__ct_3.731 var=183) const ()  <829>;
    (__trgt.748 var=203) const ()  <919>;
    (__trgt.750 var=204) const ()  <923>;
    (__trgt.758 var=209) const ()  <936>;
    do {
        {
            (idx.139 var=21) entry (idx.322 idx.88)  <152>;
        } #15
        {
            #17 off=7
            (__fch_idx.169 var=75) load (__M_DMw.4 __adr_idx.73 idx.139)  <182>;
            (__tmp.172 var=78) __sint__ls___sint___sint (__fch_idx.169 __ct_3.731)  <185>;
            (__tmp.173 var=79) __Pvoid__pl___Pvoid___sint (__ptr__hosted_clib_files.40 __tmp.172)  <186>;
            (__tmp.176 var=82) __Pvoid__pl___Pvoid___sint (__tmp.173 __ct_4.174)  <189>;
            (__fch__ZL18_hosted_clib_files_in_use.177 var=83) load (__M_DMw.4 __tmp.176 _ZL18_hosted_clib_files_in_use.26)  <190>;
            (__tmp.726 var=86) bool__eq___sint___sint (__fch__ZL18_hosted_clib_files_in_use.177 __ct_0.85)  <824>;
            () void_br_bool_t13s_s2 (__tmp.726 __trgt.748)  <920>;
            (__either.749 var=202) undefined ()  <921>;
            if {
                {
                    () if_expr (__either.749)  <233>;
                    () chess_rear_then ()  <922>;
                } #19
                {
                    () sink (__sp.59)  <239>;
                    () sink (mode.82)  <240>;
                    () sink (path.84)  <241>;
                    () sink (idx.139)  <242>;
                    () sync_sink (idx.139) sid=9  <269>;
                    () void_j_t21s_s2 (__trgt.758)  <937>;
                } #21 off=9 nxt=-3 tgt=1
                {
                } #22 off=8
                {
                } #23
            } #18
            #24 off=10
            (__fch_idx.296 var=88) load (__M_DMw.4 __adr_idx.73 idx.139)  <375>;
            call {
                () chess_separator_scheduler ()  <376>;
            } #25 off=11
            #26 off=12
            (__tmp.299 var=91) __sint__pl___sint___sint (__fch_idx.296 __ct_1.297)  <379>;
            (__M_DMw.300 var=5 idx.301 var=21) store (__tmp.299 __adr_idx.73 idx.139)  <380>;
            call {
                () chess_separator_scheduler ()  <382>;
            } #28 off=13
            #29 off=14
            (__fch_idx.302 var=92) load (__M_DMw.4 __adr_idx.73 idx.301)  <383>;
            (__tmp.305 var=95) bool__lt___sint___sint (__fch_idx.302 __ct_16.90)  <386>;
            () void_br_bool_t13s_s2 (__tmp.305 __trgt.750)  <924>;
            (__either.751 var=202) undefined ()  <925>;
        } #16
        {
            () while_expr (__either.751)  <387>;
            (idx.322 var=21 idx.323 var=21) exit (idx.301)  <396>;
        } #30
    } #14 rng=[1,2147483647]
    sync {
        (idx.428 var=21) sync_link (idx.323) sid=9  <472>;
    } #1 off=16
    #33 off=17
    (__ptr_errno.42 var=44) const ()  <53>;
    (__fch_idx.458 var=96) load (__M_DMw.4 __adr_idx.73 idx.428)  <502>;
    (__tmp.461 var=99) bool__ge___sint___sint (__fch_idx.458 __ct_16.90)  <505>;
    (__trgt.755 var=207) const ()  <931>;
    () void_br_bool_t13s_s2 (__tmp.461 __trgt.755)  <932>;
    (__either.756 var=202) undefined ()  <933>;
    if {
        {
            () if_expr (__either.756)  <544>;
        } #35
        {
            (__ct_24.500 var=100) const ()  <545>;
            (__M_DMw_stat.502 var=8 errno.503 var=24) store (__ct_24.500 __ptr_errno.42 errno.23)  <547>;
        } #37 off=36
        {
            #42 off=18
            (__fch_path.507 var=105) load (__M_DMw.4 __adr_path.68 path.84)  <553>;
            (__M_DMw.514 var=5 _hosted_clib_vars_str_arg1.515 var=28) store (__fch_path.507 __adr__hosted_clib_vars.737 _hosted_clib_vars_str_arg1.27)  <560>;
            (__ct_20t0.736 var=188) const ()  <837>;
            (__adr__hosted_clib_vars.737 var=189) __Pvoid__pl___Pvoid___sint (__rd___sp.75 __ct_20t0.736)  <839>;
            call {
                () chess_separator_scheduler ()  <561>;
            } #43 off=19
            #44 off=20
            (__fch_mode.516 var=112) load (__M_DMw.4 __adr_mode.63 mode.82)  <562>;
            (__M_DMw.523 var=5 _hosted_clib_vars_str_arg2.524 var=29) store (__fch_mode.516 __adr__hosted_clib_vars.739 _hosted_clib_vars_str_arg2.28)  <569>;
            (__ct_24t0.738 var=190) const ()  <840>;
            (__adr__hosted_clib_vars.739 var=191) __Pvoid__pl___Pvoid___sint (__rd___sp.75 __ct_24t0.738)  <842>;
            call {
                () chess_separator_scheduler ()  <570>;
            } #45 off=21
            #46 off=22
            (__ct_8t0.76 var=65) const ()  <87>;
            (__adr__hosted_clib_vars.78 var=67) __Pvoid__pl___Pvoid___sint (__rd___sp.75 __ct_8t0.76)  <89>;
            (__M_DMw.530 var=5 _hosted_clib_vars_call_type.531 var=30) store (__ct_0.85 __adr__hosted_clib_vars.78 _hosted_clib_vars_call_type.29)  <576>;
            call {
                () chess_separator_scheduler ()  <577>;
            } #47 off=23
            #48 off=24
            (__ct_9.532 var=124) const ()  <578>;
            (__M_DMw.537 var=5 _hosted_clib_vars_stream_rt.538 var=31) store (__ct_9.532 __adr__hosted_clib_vars.740 _hosted_clib_vars_stream_rt.30)  <583>;
            (__ct_16t0.732 var=184) const ()  <831>;
            (__adr__hosted_clib_vars.740 var=192) __Pvoid__pl___Pvoid___sint (__rd___sp.75 __ct_16t0.732)  <843>;
            call {
                () chess_separator_scheduler ()  <584>;
            } #49 off=25
            #50 off=26
            (clib_hosted_io.542 var=131) const ()  <588>;
            (__link.543 var=132) w32_jal_t21s_s2 (clib_hosted_io.542)  <589>;
            call {
                (__ptr__hosted_clib_vars.539 var=64 stl=X off=10) assign (__adr__hosted_clib_vars.78)  <585>;
                (__link.544 var=132 stl=X off=1) assign (__link.543)  <590>;
                (_ZL18_hosted_clib_files.545 var=22 _ZL18_hosted_clib_files_in_use.546 var=27 _ZL18_hosted_clib_files_stream.547 var=38 __extDMb.548 var=17 __extDMb_FILE.549 var=23 __extDMb_Hosted_clib_vars.550 var=34 __extDMb___PDMbvoid.551 var=35 __extDMb___anonymous1__stdio_.552 var=36 __extDMb___anonymous2__stdio_.553 var=37 __extDMb_void.554 var=33 __extDMb_w32.555 var=25 __extPMb.556 var=16 __extPMb_void.557 var=32 _hosted_clib_vars.558 var=26 _hosted_clib_vars_call_type.559 var=30 _hosted_clib_vars_str_arg1.560 var=28 _hosted_clib_vars_str_arg2.561 var=29 _hosted_clib_vars_stream_id.562 var=39 _hosted_clib_vars_stream_rt.563 var=31 errno.564 var=24 __vola.565 var=13) Fclib_hosted_io (__link.544 __ptr__hosted_clib_vars.539 _ZL18_hosted_clib_files.21 _ZL18_hosted_clib_files_in_use.26 _ZL18_hosted_clib_files_stream.37 __extDMb.16 __extDMb_FILE.22 __extDMb_Hosted_clib_vars.33 __extDMb___PDMbvoid.34 __extDMb___anonymous1__stdio_.35 __extDMb___anonymous2__stdio_.36 __extDMb_void.32 __extDMb_w32.24 __extPMb.15 __extPMb_void.31 _hosted_clib_vars.25 _hosted_clib_vars_call_type.531 _hosted_clib_vars_str_arg1.515 _hosted_clib_vars_str_arg2.524 _hosted_clib_vars_stream_id.38 _hosted_clib_vars_stream_rt.538 errno.23 __vola.12)  <591>;
            } #51 off=27
            #53 off=28
            (__fch__hosted_clib_vars_stream_rt.569 var=136) load (__M_DMw.4 __adr__hosted_clib_vars.741 _hosted_clib_vars_stream_rt.563)  <596>;
            (__tmp.572 var=139) bool__ne___sint___sint (__fch__hosted_clib_vars_stream_rt.569 __ct_0.85)  <599>;
            (__adr__hosted_clib_vars.741 var=193) __Pvoid__pl___Pvoid___sint (__rd___sp.75 __ct_16t0.732)  <844>;
            (__trgt.752 var=205) const ()  <926>;
            () void_br_bool_t13s_s2 (__tmp.572 __trgt.752)  <927>;
            (__either.753 var=202) undefined ()  <928>;
            if {
                {
                    () if_expr (__either.753)  <638>;
                } #55
                {
                    (__fch__hosted_clib_vars_stream_rt.614 var=143) load (__M_DMw.4 __adr__hosted_clib_vars.733 _hosted_clib_vars_stream_rt.563)  <642>;
                    (__M_DMw_stat.615 var=8 errno.616 var=24) store (__fch__hosted_clib_vars_stream_rt.614 __ptr_errno.42 errno.564)  <643>;
                    (__adr__hosted_clib_vars.733 var=185) __Pvoid__pl___Pvoid___sint (__rd___sp.75 __ct_16t0.732)  <833>;
                } #57 off=34
                {
                    #62 off=29
                    (__fch__hosted_clib_vars_stream_id.623 var=150) load (__M_DMw.4 __adr__hosted_clib_vars.735 _hosted_clib_vars_stream_id.562)  <652>;
                    (__fch_idx.624 var=151) load (__M_DMw.4 __adr_idx.73 idx.428)  <653>;
                    (__tmp.627 var=154) __sint__ls___sint___sint (__fch_idx.624 __ct_3.731)  <656>;
                    (__tmp.628 var=155) __Pvoid__pl___Pvoid___sint (__ptr__hosted_clib_files.40 __tmp.627)  <657>;
                    (__M_DMw.632 var=5 _ZL18_hosted_clib_files_stream.633 var=38) store (__fch__hosted_clib_vars_stream_id.623 __tmp.628 _ZL18_hosted_clib_files_stream.547)  <661>;
                    (__ct_12t0.734 var=186) const ()  <834>;
                    (__adr__hosted_clib_vars.735 var=187) __Pvoid__pl___Pvoid___sint (__rd___sp.75 __ct_12t0.734)  <836>;
                    call {
                        () chess_separator_scheduler ()  <662>;
                    } #63 off=30
                    #64 off=31
                    (__fch_idx.636 var=161) load (__M_DMw.4 __adr_idx.73 idx.428)  <665>;
                    (__tmp.639 var=164) __sint__ls___sint___sint (__fch_idx.636 __ct_3.731)  <668>;
                    (__tmp.640 var=165) __Pvoid__pl___Pvoid___sint (__ptr__hosted_clib_files.40 __tmp.639)  <669>;
                    (__tmp.643 var=168) __Pvoid__pl___Pvoid___sint (__tmp.640 __ct_4.174)  <672>;
                    (__M_DMw.644 var=5 _ZL18_hosted_clib_files_in_use.645 var=27) store (__ct_1.297 __tmp.643 _ZL18_hosted_clib_files_in_use.546)  <673>;
                    call {
                        () chess_separator_scheduler ()  <674>;
                    } #65 off=32
                    #66 off=33
                    (__fch_idx.646 var=169) load (__M_DMw.4 __adr_idx.73 idx.428)  <675>;
                    (__tmp.649 var=172) __sint__ls___sint___sint (__fch_idx.646 __ct_3.731)  <678>;
                    (__rt.650 var=46) __Pvoid__pl___Pvoid___sint (__ptr__hosted_clib_files.40 __tmp.649)  <679>;
                    (__trgt.754 var=206) const ()  <929>;
                    () void_j_t21s_s2 (__trgt.754)  <930>;
                } #61
                {
                    (errno.651 var=24) merge (errno.616 errno.564)  <681>;
                    (_ZL18_hosted_clib_files_in_use.652 var=27) merge (_ZL18_hosted_clib_files_in_use.546 _ZL18_hosted_clib_files_in_use.645)  <682>;
                    (_ZL18_hosted_clib_files_stream.653 var=38) merge (_ZL18_hosted_clib_files_stream.547 _ZL18_hosted_clib_files_stream.633)  <683>;
                    (__rt.654 var=46) merge (__ct_0.85 __rt.650)  <684>;
                } #68
            } #54
            #148 off=35
            (__trgt.757 var=208) const ()  <934>;
            () void_j_t21s_s2 (__trgt.757)  <935>;
        } #41
        {
            (__vola.655 var=13) merge (__vola.12 __vola.565)  <685>;
            (__extPMb.656 var=16) merge (__extPMb.15 __extPMb.556)  <686>;
            (__extDMb.657 var=17) merge (__extDMb.16 __extDMb.548)  <687>;
            (_ZL18_hosted_clib_files.658 var=22) merge (_ZL18_hosted_clib_files.21 _ZL18_hosted_clib_files.545)  <688>;
            (__extDMb_FILE.659 var=23) merge (__extDMb_FILE.22 __extDMb_FILE.549)  <689>;
            (errno.660 var=24) merge (errno.503 errno.651)  <690>;
            (__extDMb_w32.661 var=25) merge (__extDMb_w32.24 __extDMb_w32.555)  <691>;
            (_hosted_clib_vars.662 var=26) merge (_hosted_clib_vars.25 _hosted_clib_vars.558)  <692>;
            (_ZL18_hosted_clib_files_in_use.663 var=27) merge (_ZL18_hosted_clib_files_in_use.26 _ZL18_hosted_clib_files_in_use.652)  <693>;
            (_hosted_clib_vars_str_arg1.664 var=28) merge (_hosted_clib_vars_str_arg1.27 _hosted_clib_vars_str_arg1.560)  <694>;
            (_hosted_clib_vars_str_arg2.665 var=29) merge (_hosted_clib_vars_str_arg2.28 _hosted_clib_vars_str_arg2.561)  <695>;
            (_hosted_clib_vars_call_type.666 var=30) merge (_hosted_clib_vars_call_type.29 _hosted_clib_vars_call_type.559)  <696>;
            (_hosted_clib_vars_stream_rt.667 var=31) merge (_hosted_clib_vars_stream_rt.30 _hosted_clib_vars_stream_rt.563)  <697>;
            (__extPMb_void.668 var=32) merge (__extPMb_void.31 __extPMb_void.557)  <698>;
            (__extDMb_void.669 var=33) merge (__extDMb_void.32 __extDMb_void.554)  <699>;
            (__extDMb_Hosted_clib_vars.670 var=34) merge (__extDMb_Hosted_clib_vars.33 __extDMb_Hosted_clib_vars.550)  <700>;
            (__extDMb___PDMbvoid.671 var=35) merge (__extDMb___PDMbvoid.34 __extDMb___PDMbvoid.551)  <701>;
            (__extDMb___anonymous1__stdio_.672 var=36) merge (__extDMb___anonymous1__stdio_.35 __extDMb___anonymous1__stdio_.552)  <702>;
            (__extDMb___anonymous2__stdio_.673 var=37) merge (__extDMb___anonymous2__stdio_.36 __extDMb___anonymous2__stdio_.553)  <703>;
            (_ZL18_hosted_clib_files_stream.674 var=38) merge (_ZL18_hosted_clib_files_stream.37 _ZL18_hosted_clib_files_stream.653)  <704>;
            (_hosted_clib_vars_stream_id.675 var=39) merge (_hosted_clib_vars_stream_id.38 _hosted_clib_vars_stream_id.562)  <705>;
            (__rt.676 var=46) merge (__ct_0.85 __rt.654)  <706>;
        } #69
    } #34
    #71 off=37 nxt=-2
    (__rd___sp.677 var=40) rd_res_reg (__R_SP.11 __sp.59)  <707>;
    (__ct_80s0.678 var=174) const ()  <708>;
    (__tmp.680 var=176) __Pvoid__pl___Pvoid___sint (__rd___sp.677 __ct_80s0.678)  <710>;
    (__R_SP.681 var=12 __sp.682 var=18) wr_res_reg (__tmp.680 __sp.59)  <711>;
    () void___rts_jr_w32 (__la.45)  <712>;
    (__rt.683 var=46 stl=X off=10) assign (__rt.676)  <713>;
    () out (__rt.683)  <714>;
    () sink (__vola.655)  <715>;
    () sink (__extPMb.656)  <718>;
    () sink (__extDMb.657)  <719>;
    () sink (__sp.682)  <720>;
    () sink (mode.82)  <721>;
    () sink (path.84)  <722>;
    () sink (idx.428)  <723>;
    () sink (_ZL18_hosted_clib_files.658)  <724>;
    () sink (__extDMb_FILE.659)  <725>;
    () sink (errno.660)  <726>;
    () sink (__extDMb_w32.661)  <727>;
    () sink (_hosted_clib_vars.662)  <728>;
    () sink (_ZL18_hosted_clib_files_in_use.663)  <729>;
    () sink (_hosted_clib_vars_str_arg1.664)  <730>;
    () sink (_hosted_clib_vars_str_arg2.665)  <731>;
    () sink (_hosted_clib_vars_call_type.666)  <732>;
    () sink (_hosted_clib_vars_stream_rt.667)  <733>;
    () sink (__extPMb_void.668)  <734>;
    () sink (__extDMb_void.669)  <735>;
    () sink (__extDMb_Hosted_clib_vars.670)  <736>;
    () sink (__extDMb___PDMbvoid.671)  <737>;
    () sink (__extDMb___anonymous1__stdio_.672)  <738>;
    () sink (__extDMb___anonymous2__stdio_.673)  <739>;
    () sink (_ZL18_hosted_clib_files_stream.674)  <740>;
    () sink (_hosted_clib_vars_stream_id.675)  <741>;
} #0
0 : 'src/stdio.c';
----------
0 : (0,115:0,0);
1 : (0,120:4,22);
4 : (0,115:30,0);
5 : (0,115:30,0);
6 : (0,115:12,0);
7 : (0,115:12,0);
8 : (0,120:12,6);
9 : (0,120:12,6);
14 : (0,120:4,7);
16 : (0,120:4,7);
17 : (0,121:12,7);
18 : (0,121:8,7);
21 : (0,122:12,8);
22 : (0,121:8,10);
24 : (0,120:30,0);
25 : (0,120:30,0);
26 : (0,120:30,0);
28 : (0,120:4,16);
29 : (0,120:21,17);
33 : (0,123:12,23);
34 : (0,123:4,23);
37 : (0,124:14,25);
41 : (0,125:8,28);
42 : (0,128:36,30);
43 : (0,128:36,30);
44 : (0,129:36,31);
45 : (0,129:36,31);
46 : (0,131:32,32);
47 : (0,131:32,32);
48 : (0,133:32,33);
49 : (0,133:32,33);
50 : (0,135:19,33);
51 : (0,135:4,33);
53 : (0,137:4,34);
54 : (0,137:4,34);
57 : (0,138:14,36);
61 : (0,139:8,39);
62 : (0,142:35,41);
63 : (0,142:35,41);
64 : (0,143:35,42);
65 : (0,143:35,42);
66 : (0,144:4,43);
71 : (0,144:4,49);
----------
65 : (0,115:6,0);
66 : (0,115:6,0);
68 : (0,115:6,0);
69 : (0,115:6,0);
71 : (0,115:42,0);
72 : (0,115:42,0);
74 : (0,115:42,0);
76 : (0,115:24,0);
77 : (0,115:24,0);
79 : (0,115:24,0);
81 : (0,119:8,0);
82 : (0,119:8,0);
84 : (0,119:8,0);
86 : (0,117:21,0);
87 : (0,117:21,0);
89 : (0,117:21,0);
92 : (0,115:30,0);
93 : (0,115:30,0);
94 : (0,115:12,0);
95 : (0,115:12,0);
96 : (0,120:14,0);
98 : (0,120:8,5);
99 : (0,120:12,6);
101 : (0,120:4,0);
152 : (0,120:4,7);
182 : (0,121:32,7);
185 : (0,121:32,7);
186 : (0,121:31,7);
187 : (0,121:36,0);
189 : (0,121:36,7);
190 : (0,121:36,7);
233 : (0,121:8,7);
375 : (0,120:27,0);
376 : (0,120:30,0);
377 : (0,120:30,0);
379 : (0,120:30,0);
380 : (0,120:27,0);
382 : (0,120:4,16);
383 : (0,120:17,17);
386 : (0,120:21,17);
387 : (0,120:4,17);
396 : (0,120:4,17);
502 : (0,123:8,23);
505 : (0,123:12,23);
544 : (0,123:4,23);
545 : (0,124:16,0);
547 : (0,124:8,24);
553 : (0,128:38,29);
560 : (0,128:30,29);
561 : (0,128:36,30);
562 : (0,129:38,30);
569 : (0,129:30,30);
570 : (0,129:36,31);
576 : (0,131:21,31);
577 : (0,131:32,32);
578 : (0,133:34,0);
583 : (0,133:21,32);
584 : (0,133:32,33);
585 : (0,135:19,0);
589 : (0,135:4,33);
590 : (0,135:4,0);
591 : (0,135:4,33);
596 : (0,137:25,34);
599 : (0,137:4,34);
638 : (0,137:4,34);
642 : (0,138:33,35);
643 : (0,138:8,35);
652 : (0,142:54,40);
653 : (0,142:23,40);
656 : (0,142:23,40);
657 : (0,142:22,40);
661 : (0,142:27,40);
662 : (0,142:35,41);
665 : (0,143:23,41);
668 : (0,143:23,41);
669 : (0,143:22,41);
672 : (0,143:27,41);
673 : (0,143:27,41);
674 : (0,143:35,42);
675 : (0,144:31,42);
678 : (0,144:31,42);
679 : (0,144:30,42);
681 : (0,137:4,45);
682 : (0,137:4,45);
683 : (0,137:4,45);
684 : (0,137:4,45);
685 : (0,123:4,48);
686 : (0,123:4,48);
687 : (0,123:4,48);
688 : (0,123:4,48);
689 : (0,123:4,48);
690 : (0,123:4,48);
691 : (0,123:4,48);
692 : (0,123:4,48);
693 : (0,123:4,48);
694 : (0,123:4,48);
695 : (0,123:4,48);
696 : (0,123:4,48);
697 : (0,123:4,48);
698 : (0,123:4,48);
699 : (0,123:4,48);
700 : (0,123:4,48);
701 : (0,123:4,48);
702 : (0,123:4,48);
703 : (0,123:4,48);
704 : (0,123:4,48);
705 : (0,123:4,48);
706 : (0,123:4,48);
707 : (0,144:4,0);
708 : (0,144:4,0);
710 : (0,144:4,0);
711 : (0,144:4,49);
712 : (0,144:4,49);
713 : (0,144:4,0);
824 : (0,121:12,7);
829 : (0,121:32,0);
831 : (0,117:21,0);
833 : (0,138:33,35);
834 : (0,117:21,0);
836 : (0,142:54,40);
837 : (0,117:21,0);
839 : (0,128:21,0);
840 : (0,117:21,0);
842 : (0,129:21,0);
843 : (0,133:21,0);
844 : (0,137:25,0);
920 : (0,121:8,7);
924 : (0,120:4,17);
927 : (0,137:4,34);
932 : (0,123:4,23);

