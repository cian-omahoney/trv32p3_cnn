
// File generated by noodle version U-2022.12#33f3808fcb#221128, Sat Mar 16 14:40:51 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -D__tct_patch__=0 -itrv32p3_cnn_chess.h +Sal +Sca +Osps -Wflla +NOtcr +NOcse +NOifv +NOrle +NOrlt +wDebug/chesswork src/math.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!! extern double sin(double)
Fsin : user_defined, called {
    fnm : "sin" 'double sin(double)';
    arg : ( w32:i w32:r w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] );
    frm : ( l=40 );
}
****
!! static double kernel_sin(double, double, int)
Fkernel_sin : user_defined, called {
    fnm : "kernel_sin" 'double kernel_sin(double, double, int)';
    arg : ( w32:i w32:r w32:r w32:i w32:i w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] X[14] X[15] X[16] );
    llv : 0 0 0 0 0 ;
}
!! static int32_t rem_pio2(double, double *)
Frem_pio2 : user_defined, called {
    fnm : "rem_pio2" 'int32_t rem_pio2(double, double *)';
    arg : ( w32:i w32:r w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] );
    llv : 0 0 0 0 0 ;
}
!! static double kernel_cos(double, double)
Fkernel_cos : user_defined, called {
    fnm : "kernel_cos" 'double kernel_cos(double, double)';
    arg : ( w32:i w32:r w32:r w32:i w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] X[14] X[15] );
    llv : 0 0 0 0 0 ;
}
!!  float64_t f64_sub(float64_t, float64_t)
Ff64_sub : user_defined, called {
    fnm : "f64_sub" 'float64_t f64_sub(float64_t, float64_t)';
    arg : ( w32:i w32:r w32:r w32:i w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] X[14] X[15] );
}
***/

[
    0 : sin typ=u08 bnd=e stl=PMb
    5 : __M_DMw typ=w32 bnd=d stl=DMw
   12 : __R_SP typ=w32 bnd=d stl=SP
   18 : __sp typ=w32 bnd=b stl=SP
   19 : x typ=w08 val=0t0 bnd=a sz=8 algn=4 stl=DMb tref=__fdouble_DMb
   20 : z typ=w08 val=24t0 bnd=a sz=8 algn=4 stl=DMb tref=__fdouble_DMb
   21 : ix typ=w08 val=36t0 bnd=a sz=4 algn=4 stl=DMb tref=int32_t_DMb
   22 : n typ=w08 val=32t0 bnd=a sz=4 algn=4 stl=DMb tref=int32_t_DMb
   23 : y typ=w08 val=8t0 bnd=a sz=16 algn=4 stl=DMb tref=__A2__fdouble_DMb
   24 : x_low typ=w08 bnd=B stl=DMb
   25 : x_high typ=w08 bnd=B stl=DMb
   26 : z_low typ=w08 bnd=B stl=DMb
   27 : z_high typ=w08 bnd=B stl=DMb
   30 : y_low typ=w08 bnd=B stl=DMb
   31 : y_high typ=w08 bnd=B stl=DMb
   33 : __rd___sp typ=w32 bnd=m
   34 : __la typ=w32 bnd=p tref=w32__
   36 : __rt_low typ=w32 bnd=m tref=__uint__
   37 : __rt_high typ=w32 bnd=m tref=__uint__
   39 : __arg_x_low typ=w32 bnd=m tref=__uint__
   40 : __arg_x_high typ=w32 bnd=m tref=__uint__
   41 : __ct_m40S0 typ=w32 val=-40S0 bnd=m
   43 : __tmp typ=w32 bnd=m
   45 : __ct_0t0 typ=w32 val=0t0 bnd=m
   47 : __adr_x typ=w32 bnd=m adro=19
   49 : __ct_24t0 typ=w32 val=24t0 bnd=m
   51 : __adr_z typ=w32 bnd=m adro=20
   53 : __ct_36t0 typ=w32 val=36t0 bnd=m
   55 : __adr_ix typ=w32 bnd=m adro=21
   57 : __ct_32t0 typ=w32 val=32t0 bnd=m
   59 : __adr_n typ=w32 bnd=m adro=22
   60 : __ptr_y typ=w32 bnd=m
   61 : __ct_8t0 typ=w32 val=8t0 bnd=m
   63 : __adr_y typ=w32 bnd=m adro=23
   64 : __case typ=w32 bnd=m lscp=25 tref=__sint__
   77 : __fch_x_high typ=w32 bnd=m
   83 : __fch_ix typ=w32 bnd=m
   84 : __ct_2147483647 typ=w32 val=2147483647f bnd=m
   86 : __tmp typ=w32 bnd=m
   87 : __fch_ix typ=w32 bnd=m
   88 : __ct_1072243195 typ=w32 val=1072243195f bnd=m
   90 : __tmp typ=bool bnd=m
   92 : __fch_x_low typ=w32 bnd=m
   95 : __fch_x_high typ=w32 bnd=m
   96 : __record_low typ=w32 bnd=m tref=__uint__
   97 : __record_high typ=w32 bnd=m tref=__uint__
  102 : __fch_z_high typ=w32 bnd=m
  103 : __record_low typ=w32 bnd=m tref=__uint__
  104 : __record_high typ=w32 bnd=m tref=__uint__
  105 : __ct_0 typ=t20s_rp12 val=0f bnd=m
  106 : __ct typ=w32 bnd=m
  109 : kernel_sin typ=t21s_s2 val=0r bnd=m
  110 : __link typ=w32 bnd=m
  112 : __tmp typ=w32 bnd=m
  113 : __tmp typ=w32 bnd=m
  114 : __fch_ix typ=w32 bnd=m
  115 : __ct_2146435072 typ=t20s_rp12 val=524032f bnd=m
  117 : __tmp typ=bool bnd=m
  119 : __fch_x_low typ=w32 bnd=m
  122 : __fch_x_high typ=w32 bnd=m
  124 : __fch_x_low typ=w32 bnd=m
  127 : __fch_x_high typ=w32 bnd=m
  130 : __fch_x_low typ=w32 bnd=m
  133 : __fch_x_high typ=w32 bnd=m
  134 : __record_low typ=w32 bnd=m tref=__uint__
  135 : __record_high typ=w32 bnd=m tref=__uint__
  138 : rem_pio2 typ=t21s_s2 val=0r bnd=m
  139 : __link typ=w32 bnd=m
  140 : __tmp typ=w32 bnd=m
  141 : __fch_n typ=w32 bnd=m
  142 : __ct_3 typ=w32 val=3f bnd=m
  147 : __tmp typ=bool bnd=m
  152 : __fch_y_low typ=w32 bnd=m
  155 : __fch_y_high typ=w32 bnd=m
  156 : __record_low typ=w32 bnd=m tref=__uint__
  157 : __record_high typ=w32 bnd=m tref=__uint__
  162 : __fch_y_low typ=w32 bnd=m
  165 : __fch_y_high typ=w32 bnd=m
  166 : __record_low typ=w32 bnd=m tref=__uint__
  167 : __record_high typ=w32 bnd=m tref=__uint__
  168 : __ct_1 typ=w32 val=1f bnd=m
  169 : __ct typ=w32 bnd=m
  173 : __link typ=w32 bnd=m
  175 : __tmp typ=w32 bnd=m
  176 : __tmp typ=w32 bnd=m
  179 : __tmp typ=bool bnd=m
  184 : __fch_y_low typ=w32 bnd=m
  187 : __fch_y_high typ=w32 bnd=m
  188 : __record_low typ=w32 bnd=m tref=__uint__
  189 : __record_high typ=w32 bnd=m tref=__uint__
  194 : __fch_y_low typ=w32 bnd=m
  197 : __fch_y_high typ=w32 bnd=m
  198 : __record_low typ=w32 bnd=m tref=__uint__
  199 : __record_high typ=w32 bnd=m tref=__uint__
  202 : kernel_cos typ=t21s_s2 val=0r bnd=m
  203 : __link typ=w32 bnd=m
  205 : __tmp typ=w32 bnd=m
  206 : __tmp typ=w32 bnd=m
  207 : __ct_2 typ=w32 val=2f bnd=m
  209 : __tmp typ=bool bnd=m
  216 : __fch_y_low typ=w32 bnd=m
  219 : __fch_y_high typ=w32 bnd=m
  220 : __record_low typ=w32 bnd=m tref=__uint__
  221 : __record_high typ=w32 bnd=m tref=__uint__
  226 : __fch_y_low typ=w32 bnd=m
  229 : __fch_y_high typ=w32 bnd=m
  230 : __record_low typ=w32 bnd=m tref=__uint__
  231 : __record_high typ=w32 bnd=m tref=__uint__
  233 : __ct typ=w32 bnd=m
  237 : __link typ=w32 bnd=m
  239 : __tmp typ=w32 bnd=m
  240 : __tmp typ=w32 bnd=m
  248 : __fch_y_low typ=w32 bnd=m
  251 : __fch_y_high typ=w32 bnd=m
  252 : __record_low typ=w32 bnd=m tref=__uint__
  253 : __record_high typ=w32 bnd=m tref=__uint__
  258 : __fch_y_low typ=w32 bnd=m
  261 : __fch_y_high typ=w32 bnd=m
  262 : __record_low typ=w32 bnd=m tref=__uint__
  263 : __record_high typ=w32 bnd=m tref=__uint__
  267 : __link typ=w32 bnd=m
  269 : __tmp typ=w32 bnd=m
  270 : __tmp typ=w32 bnd=m
  272 : __ct_40s0 typ=w32 val=40s0 bnd=m
  274 : __tmp typ=w32 bnd=m
  300 : __ct_28t0 typ=w32 val=28t0 bnd=m
  301 : __adr_z typ=w32 bnd=m adro=20
  302 : __ct_4t0 typ=w32 val=4t0 bnd=m
  303 : __adr_x typ=w32 bnd=m adro=19
  304 : __adr_x typ=w32 bnd=m adro=19
  305 : __adr_x typ=w32 bnd=m adro=19
  306 : __ct_12t0 typ=w32 val=12t0 bnd=m
  307 : __adr_y typ=w32 bnd=m adro=23
  308 : __ct_16t0 typ=w32 val=16t0 bnd=m
  309 : __adr_y typ=w32 bnd=m adro=23
  310 : __ct_20t0 typ=w32 val=20t0 bnd=m
  311 : __adr_y typ=w32 bnd=m adro=23
  312 : __adr_y typ=w32 bnd=m adro=23
  313 : __adr_y typ=w32 bnd=m adro=23
  314 : __adr_y typ=w32 bnd=m adro=23
  315 : __adr_y typ=w32 bnd=m adro=23
  316 : __adr_y typ=w32 bnd=m adro=23
  317 : __adr_y typ=w32 bnd=m adro=23
  318 : __adr_y typ=w32 bnd=m adro=23
  319 : __adr_y typ=w32 bnd=m adro=23
  320 : __adr_y typ=w32 bnd=m adro=23
  321 : __adr_x typ=w32 bnd=m adro=19
  322 : __adr_x typ=w32 bnd=m adro=19
  323 : __adr_x typ=w32 bnd=m adro=19
  324 : __adr_z typ=w32 bnd=m adro=20
  368 : a_low typ=w32 bnd=m tref=__uint__
  369 : a_high typ=w32 bnd=m tref=__uint__
  370 : b_low typ=w32 bnd=m tref=__uint__
  371 : b_high typ=w32 bnd=m tref=__uint__
  372 : f64_sub typ=t21s_s2 val=0r bnd=m
  373 : __link typ=w32 bnd=m
  375 : __tmp typ=w32 bnd=m
  376 : __tmp typ=w32 bnd=m
  390 : __either typ=bool bnd=m
  391 : __trgt typ=t13s_s2 val=0j bnd=m
  392 : __trgt typ=t21s_s2 val=0j bnd=m
  393 : __trgt typ=t13s_s2 val=0j bnd=m
  394 : __trgt typ=t21s_s2 val=0j bnd=m
  395 : __trgt typ=t13s_s2 val=0j bnd=m
  396 : __trgt typ=t21s_s2 val=0j bnd=m
  397 : __trgt typ=t13s_s2 val=0j bnd=m
  398 : __trgt typ=t21s_s2 val=0j bnd=m
  399 : __trgt typ=t13s_s2 val=0j bnd=m
  400 : __trgt typ=t21s_s2 val=0j bnd=m
]
Fsin {
    #3 off=0
    (__M_DMw.4 var=5) st_def ()  <8>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__sp.17 var=18) source ()  <28>;
    (ix.20 var=21) source ()  <31>;
    (n.21 var=22) source ()  <32>;
    (y.22 var=23) source ()  <33>;
    (x_low.23 var=24) source ()  <34>;
    (x_high.24 var=25) source ()  <35>;
    (z_low.25 var=26) source ()  <36>;
    (z_high.26 var=27) source ()  <37>;
    (y_low.29 var=30) source ()  <40>;
    (y_high.30 var=31) source ()  <41>;
    (__la.33 var=34 stl=X off=1) inp ()  <44>;
    (__la.34 var=34) deassign (__la.33)  <45>;
    (__arg_x_low.42 var=39 stl=X off=12) inp ()  <53>;
    (__arg_x_low.43 var=39) deassign (__arg_x_low.42)  <54>;
    (__arg_x_high.46 var=40 stl=X off=13) inp ()  <57>;
    (__arg_x_high.47 var=40) deassign (__arg_x_high.46)  <58>;
    (__rd___sp.50 var=33) rd_res_reg (__R_SP.11 __sp.17)  <61>;
    (__ct_m40S0.51 var=41) const ()  <62>;
    (__tmp.53 var=43) __Pvoid__pl___Pvoid___sint (__rd___sp.50 __ct_m40S0.51)  <64>;
    (__R_SP.54 var=12 __sp.55 var=18) wr_res_reg (__tmp.53 __sp.17)  <65>;
    (__rd___sp.56 var=33) rd_res_reg (__R_SP.11 __sp.55)  <67>;
    (__ct_0t0.57 var=45) const ()  <68>;
    (__adr_x.59 var=47) __Pvoid__pl___Pvoid___sint (__rd___sp.56 __ct_0t0.57)  <70>;
    (__rd___sp.61 var=33) rd_res_reg (__R_SP.11 __sp.55)  <72>;
    (__rd___sp.66 var=33) rd_res_reg (__R_SP.11 __sp.55)  <77>;
    (__rd___sp.71 var=33) rd_res_reg (__R_SP.11 __sp.55)  <82>;
    (__rd___sp.76 var=33) rd_res_reg (__R_SP.11 __sp.55)  <87>;
    (__M_DMw.83 var=5 x_low.84 var=24) store (__arg_x_low.43 __adr_x.59 x_low.23)  <94>;
    (__M_DMw.89 var=5 x_high.90 var=25) store (__arg_x_high.47 __adr_x.696 x_high.24)  <99>;
    (__ct_4t0.676 var=302) const ()  <766>;
    (__adr_x.696 var=322) __Pvoid__pl___Pvoid___sint (__rd___sp.56 __ct_4t0.676)  <790>;
    call {
        () chess_separator_scheduler ()  <100>;
    } #4 off=1
    #5 off=2
    (__ct_24t0.62 var=49) const ()  <73>;
    (__adr_z.64 var=51) __Pvoid__pl___Pvoid___sint (__rd___sp.61 __ct_24t0.62)  <75>;
    (__M_DMw.94 var=5 z_low.95 var=26) store (__ct_0.180 __adr_z.64 z_low.25)  <104>;
    (__M_DMw.100 var=5 z_high.101 var=27) store (__ct_0.180 __adr_z.698 z_high.26)  <109>;
    (__ct_0.180 var=105) const ()  <190>;
    (__ct_28t0.674 var=300) const ()  <763>;
    (__adr_z.698 var=324) __Pvoid__pl___Pvoid___sint (__rd___sp.61 __ct_28t0.674)  <792>;
    call {
        () chess_separator_scheduler ()  <110>;
    } #6 off=3
    #120 off=4
    (__ct_36t0.67 var=53) const ()  <78>;
    (__adr_ix.69 var=55) __Pvoid__pl___Pvoid___sint (__rd___sp.66 __ct_36t0.67)  <80>;
    (__fch_x_high.108 var=77) load (__M_DMw.4 __adr_x.697 x_high.90)  <117>;
    (__M_DMw.115 var=5 ix.116 var=21) store (__fch_x_high.108 __adr_ix.69 ix.20)  <124>;
    (__adr_x.697 var=323) __Pvoid__pl___Pvoid___sint (__rd___sp.56 __ct_4t0.676)  <791>;
    call {
        () chess_separator_scheduler ()  <125>;
    } #8 off=5
    #9 off=6
    (__fch_ix.117 var=83) load (__M_DMw.4 __adr_ix.69 ix.116)  <126>;
    (__ct_2147483647.118 var=84) const ()  <127>;
    (__tmp.120 var=86) __sint__ad___sint___sint (__fch_ix.117 __ct_2147483647.118)  <129>;
    (__M_DMw.121 var=5 ix.122 var=21) store (__tmp.120 __adr_ix.69 ix.116)  <130>;
    call {
        () chess_separator_scheduler ()  <131>;
    } #10 off=7
    #111 off=8
    (__fch_ix.123 var=87) load (__M_DMw.4 __adr_ix.69 ix.122)  <132>;
    (__ct_1072243195.124 var=88) const ()  <133>;
    (kernel_sin.185 var=109) const ()  <195>;
    (__tmp.732 var=90) bool__ge___sint___sint (__ct_1072243195.124 __fch_ix.123)  <860>;
    (__trgt.826 var=399) const ()  <1134>;
    () void_br_bool_t13s_s2 (__tmp.732 __trgt.826)  <1135>;
    (__either.827 var=390) undefined ()  <1136>;
    if {
        {
            () if_expr (__either.827)  <165>;
        } #13
        {
            #15 off=38
            (__fch_x_low.157 var=92) load (__M_DMw.4 __adr_x.59 x_low.84)  <167>;
            (__fch_x_high.162 var=95) load (__M_DMw.4 __adr_x.677 x_high.90)  <172>;
            (__fch_z_high.174 var=102) load (__M_DMw.4 __adr_z.675 z_high.101)  <184>;
            (__link.186 var=110) w32_jal_t21s_s2 (kernel_sin.185)  <196>;
            (__adr_z.675 var=301) __Pvoid__pl___Pvoid___sint (__rd___sp.61 __ct_28t0.674)  <765>;
            (__adr_x.677 var=303) __Pvoid__pl___Pvoid___sint (__rd___sp.56 __ct_4t0.676)  <768>;
            call {
                (__record_low.165 var=96 stl=X off=12) assign (__fch_x_low.157)  <175>;
                (__record_high.167 var=97 stl=X off=13) assign (__fch_x_high.162)  <177>;
                (__record_low.177 var=103 stl=X off=14) assign (__ct_0.180)  <187>;
                (__record_high.179 var=104 stl=X off=15) assign (__fch_z_high.174)  <189>;
                (__ct.182 var=106 stl=X off=16) assign (__ct_0.180)  <192>;
                (__link.187 var=110 stl=X off=1) assign (__link.186)  <197>;
                (__tmp.189 var=112 stl=X off=10 __tmp.193 var=113 stl=X off=11) Fkernel_sin (__link.187 __record_low.165 __record_high.167 __record_low.177 __record_high.179 __ct.182)  <198>;
                (__tmp.190 var=112) deassign (__tmp.189)  <200>;
                (__tmp.194 var=113) deassign (__tmp.193)  <203>;
            } #16 off=39
        } #14
        {
            #19 off=9
            (__fch_ix.197 var=114) load (__M_DMw.4 __adr_ix.69 ix.122)  <207>;
            (__ct_2146435072.198 var=115) const ()  <208>;
            (__tmp.200 var=117) bool__ge___sint___sint (__fch_ix.197 __ct_2146435072.198)  <210>;
            (f64_sub.749 var=372) const ()  <939>;
            (__trgt.823 var=397) const ()  <1129>;
            () void_br_bool_t13s_s2 (__tmp.200 __trgt.823)  <1130>;
            (__either.824 var=390) undefined ()  <1131>;
            if {
                {
                    () if_expr (__either.824)  <240>;
                } #21
                {
                    #139 off=35
                    (__fch_x_low.231 var=119) load (__M_DMw.4 __adr_x.59 x_low.84)  <242>;
                    (__fch_x_high.236 var=122) load (__M_DMw.4 __adr_x.678 x_high.90)  <247>;
                    (__fch_x_low.239 var=124) load (__M_DMw.4 __adr_x.59 x_low.84)  <250>;
                    (__fch_x_high.244 var=127) load (__M_DMw.4 __adr_x.679 x_high.90)  <255>;
                    (__adr_x.678 var=304) __Pvoid__pl___Pvoid___sint (__rd___sp.56 __ct_4t0.676)  <769>;
                    (__adr_x.679 var=305) __Pvoid__pl___Pvoid___sint (__rd___sp.56 __ct_4t0.676)  <770>;
                    (__link.750 var=373) w32_jal_t21s_s2 (f64_sub.749)  <940>;
                    call {
                        (a_low.751 var=368 stl=X off=12) assign (__fch_x_low.231)  <941>;
                        (a_high.752 var=369 stl=X off=13) assign (__fch_x_high.236)  <942>;
                        (b_low.753 var=370 stl=X off=14) assign (__fch_x_low.239)  <943>;
                        (b_high.754 var=371 stl=X off=15) assign (__fch_x_high.244)  <944>;
                        (__link.755 var=373 stl=X off=1) assign (__link.750)  <945>;
                        (__tmp.756 var=375 stl=X off=10 __tmp.757 var=376 stl=X off=11) Ff64_sub (__link.755 a_low.751 a_high.752 b_low.753 b_high.754)  <946>;
                        (__tmp.759 var=375) deassign (__tmp.756)  <948>;
                        (__tmp.761 var=376) deassign (__tmp.757)  <950>;
                    } #140 off=36
                } #22
                {
                    #26 off=10
                    (__ct_8t0.77 var=61) const ()  <88>;
                    (__adr_y.79 var=63) __Pvoid__pl___Pvoid___sint (__rd___sp.76 __ct_8t0.77)  <90>;
                    (__fch_x_low.248 var=130) load (__M_DMw.4 __adr_x.59 x_low.84)  <260>;
                    (__fch_x_high.253 var=133) load (__M_DMw.4 __adr_x.695 x_high.90)  <265>;
                    (rem_pio2.262 var=138) const ()  <274>;
                    (__link.263 var=139) w32_jal_t21s_s2 (rem_pio2.262)  <275>;
                    (__adr_x.695 var=321) __Pvoid__pl___Pvoid___sint (__rd___sp.56 __ct_4t0.676)  <789>;
                    call {
                        (__record_low.256 var=134 stl=X off=11) assign (__fch_x_low.248)  <268>;
                        (__record_high.258 var=135 stl=X off=12) assign (__fch_x_high.253)  <270>;
                        (__ptr_y.259 var=60 stl=X off=13) assign (__adr_y.79)  <271>;
                        (__link.264 var=139 stl=X off=1) assign (__link.263)  <276>;
                        (__tmp.265 var=140 stl=X off=10 y.268 var=23 y_high.269 var=31 y_low.270 var=30) Frem_pio2 (__link.264 __record_low.256 __record_high.258 __ptr_y.259 y.22 y_high.30 y_low.29)  <277>;
                        (__tmp.266 var=140) deassign (__tmp.265)  <278>;
                    } #27 off=11
                    #28 off=12
                    (__ct_32t0.72 var=57) const ()  <83>;
                    (__adr_n.74 var=59) __Pvoid__pl___Pvoid___sint (__rd___sp.71 __ct_32t0.72)  <85>;
                    (__M_DMw.271 var=5 n.272 var=22) store (__tmp.266 __adr_n.74 n.21)  <280>;
                    call {
                        () chess_separator_scheduler ()  <281>;
                    } #29 off=13
                    #30 off=14
                    (__fch_n.274 var=141) load (__M_DMw.4 __adr_n.74 n.272)  <283>;
                    (__ct_3.275 var=142) const ()  <284>;
                    (__case.277 var=64) __sint__ad___sint___sint (__fch_n.274 __ct_3.275)  <286>;
                    call {
                        () chess_separator_scheduler ()  <287>;
                    } #31 off=15
                    #32 off=16
                    (__tmp.280 var=147) bool__eq___sint___sint (__case.277 __ct_0.180)  <290>;
                    (__ct_1.340 var=168) const ()  <351>;
                    (__ct_12t0.680 var=306) const ()  <771>;
                    (__ct_16t0.682 var=308) const ()  <774>;
                    (__ct_20t0.684 var=310) const ()  <777>;
                    (__trgt.820 var=395) const ()  <1124>;
                    () void_br_bool_t13s_s2 (__tmp.280 __trgt.820)  <1125>;
                    (__either.821 var=390) undefined ()  <1126>;
                    if {
                        {
                            () if_expr (__either.821)  <320>;
                        } #34
                        {
                            #36 off=32
                            (__fch_y_low.314 var=152) load (__M_DMw.4 __adr_y.79 y_low.270)  <325>;
                            (__fch_y_high.319 var=155) load (__M_DMw.4 __adr_y.681 y_high.269)  <330>;
                            (__fch_y_low.329 var=162) load (__M_DMw.4 __adr_y.683 y_low.270)  <340>;
                            (__fch_y_high.334 var=165) load (__M_DMw.4 __adr_y.685 y_high.269)  <345>;
                            (__link.346 var=173) w32_jal_t21s_s2 (kernel_sin.185)  <357>;
                            (__adr_y.681 var=307) __Pvoid__pl___Pvoid___sint (__rd___sp.76 __ct_12t0.680)  <773>;
                            (__adr_y.683 var=309) __Pvoid__pl___Pvoid___sint (__rd___sp.76 __ct_16t0.682)  <776>;
                            (__adr_y.685 var=311) __Pvoid__pl___Pvoid___sint (__rd___sp.76 __ct_20t0.684)  <779>;
                            call {
                                (__record_low.322 var=156 stl=X off=12) assign (__fch_y_low.314)  <333>;
                                (__record_high.324 var=157 stl=X off=13) assign (__fch_y_high.319)  <335>;
                                (__record_low.337 var=166 stl=X off=14) assign (__fch_y_low.329)  <348>;
                                (__record_high.339 var=167 stl=X off=15) assign (__fch_y_high.334)  <350>;
                                (__ct.342 var=169 stl=X off=16) assign (__ct_1.340)  <353>;
                                (__link.347 var=173 stl=X off=1) assign (__link.346)  <358>;
                                (__tmp.349 var=175 stl=X off=10 __tmp.353 var=176 stl=X off=11) Fkernel_sin (__link.347 __record_low.322 __record_high.324 __record_low.337 __record_high.339 __ct.342)  <359>;
                                (__tmp.350 var=175) deassign (__tmp.349)  <361>;
                                (__tmp.354 var=176) deassign (__tmp.353)  <364>;
                            } #37 off=33
                        } #35
                        {
                            #40 off=17
                            (__tmp.359 var=179) bool__eq___sint___sint (__case.277 __ct_1.340)  <370>;
                            (kernel_cos.421 var=202) const ()  <433>;
                            (__trgt.817 var=393) const ()  <1119>;
                            () void_br_bool_t13s_s2 (__tmp.359 __trgt.817)  <1120>;
                            (__either.818 var=390) undefined ()  <1121>;
                            if {
                                {
                                    () if_expr (__either.818)  <400>;
                                } #42
                                {
                                    #44 off=29
                                    (__fch_y_low.393 var=184) load (__M_DMw.4 __adr_y.79 y_low.270)  <405>;
                                    (__fch_y_high.398 var=187) load (__M_DMw.4 __adr_y.686 y_high.269)  <410>;
                                    (__fch_y_low.408 var=194) load (__M_DMw.4 __adr_y.687 y_low.270)  <420>;
                                    (__fch_y_high.413 var=197) load (__M_DMw.4 __adr_y.688 y_high.269)  <425>;
                                    (__link.422 var=203) w32_jal_t21s_s2 (kernel_cos.421)  <434>;
                                    (__adr_y.686 var=312) __Pvoid__pl___Pvoid___sint (__rd___sp.76 __ct_12t0.680)  <780>;
                                    (__adr_y.687 var=313) __Pvoid__pl___Pvoid___sint (__rd___sp.76 __ct_16t0.682)  <781>;
                                    (__adr_y.688 var=314) __Pvoid__pl___Pvoid___sint (__rd___sp.76 __ct_20t0.684)  <782>;
                                    call {
                                        (__record_low.401 var=188 stl=X off=12) assign (__fch_y_low.393)  <413>;
                                        (__record_high.403 var=189 stl=X off=13) assign (__fch_y_high.398)  <415>;
                                        (__record_low.416 var=198 stl=X off=14) assign (__fch_y_low.408)  <428>;
                                        (__record_high.418 var=199 stl=X off=15) assign (__fch_y_high.413)  <430>;
                                        (__link.423 var=203 stl=X off=1) assign (__link.422)  <435>;
                                        (__tmp.425 var=205 stl=X off=10 __tmp.429 var=206 stl=X off=11) Fkernel_cos (__link.423 __record_low.401 __record_high.403 __record_low.416 __record_high.418)  <436>;
                                        (__tmp.426 var=205) deassign (__tmp.425)  <438>;
                                        (__tmp.430 var=206) deassign (__tmp.429)  <441>;
                                    } #45 off=30
                                } #43
                                {
                                    #48 off=18
                                    (__ct_2.433 var=207) const ()  <445>;
                                    (__tmp.435 var=209) bool__eq___sint___sint (__case.277 __ct_2.433)  <447>;
                                    (__trgt.814 var=391) const ()  <1114>;
                                    () void_br_bool_t13s_s2 (__tmp.435 __trgt.814)  <1115>;
                                    (__either.815 var=390) undefined ()  <1116>;
                                    if {
                                        {
                                            () if_expr (__either.815)  <477>;
                                        } #50
                                        {
                                            #52 off=24
                                            (__fch_y_low.471 var=216) load (__M_DMw.4 __adr_y.79 y_low.270)  <484>;
                                            (__fch_y_high.476 var=219) load (__M_DMw.4 __adr_y.689 y_high.269)  <489>;
                                            (__fch_y_low.486 var=226) load (__M_DMw.4 __adr_y.690 y_low.270)  <499>;
                                            (__fch_y_high.491 var=229) load (__M_DMw.4 __adr_y.691 y_high.269)  <504>;
                                            (__link.503 var=237) w32_jal_t21s_s2 (kernel_sin.185)  <516>;
                                            (__adr_y.689 var=315) __Pvoid__pl___Pvoid___sint (__rd___sp.76 __ct_12t0.680)  <783>;
                                            (__adr_y.690 var=316) __Pvoid__pl___Pvoid___sint (__rd___sp.76 __ct_16t0.682)  <784>;
                                            (__adr_y.691 var=317) __Pvoid__pl___Pvoid___sint (__rd___sp.76 __ct_20t0.684)  <785>;
                                            call {
                                                (__record_low.479 var=220 stl=X off=12) assign (__fch_y_low.471)  <492>;
                                                (__record_high.481 var=221 stl=X off=13) assign (__fch_y_high.476)  <494>;
                                                (__record_low.494 var=230 stl=X off=14) assign (__fch_y_low.486)  <507>;
                                                (__record_high.496 var=231 stl=X off=15) assign (__fch_y_high.491)  <509>;
                                                (__ct.499 var=233 stl=X off=16) assign (__ct_1.340)  <512>;
                                                (__link.504 var=237 stl=X off=1) assign (__link.503)  <517>;
                                                (__tmp.506 var=239 stl=X off=10 __tmp.510 var=240 stl=X off=11) Fkernel_sin (__link.504 __record_low.479 __record_high.481 __record_low.494 __record_high.496 __ct.499)  <518>;
                                                (__tmp.507 var=239) deassign (__tmp.506)  <520>;
                                                (__tmp.511 var=240) deassign (__tmp.510)  <523>;
                                            } #53 off=25
                                            #145 off=26
                                            (__link.771 var=373) w32_jal_t21s_s2 (f64_sub.749)  <963>;
                                            call {
                                                (a_low.772 var=368 stl=X off=12) assign (__ct_0.180)  <964>;
                                                (a_high.773 var=369 stl=X off=13) assign (__ct_0.180)  <965>;
                                                (b_low.774 var=370 stl=X off=14) assign (__tmp.507)  <966>;
                                                (b_high.775 var=371 stl=X off=15) assign (__tmp.511)  <967>;
                                                (__link.776 var=373 stl=X off=1) assign (__link.771)  <968>;
                                                (__tmp.777 var=375 stl=X off=10 __tmp.778 var=376 stl=X off=11) Ff64_sub (__link.776 a_low.772 a_high.773 b_low.774 b_high.775)  <969>;
                                                (__tmp.780 var=375) deassign (__tmp.777)  <971>;
                                                (__tmp.782 var=376) deassign (__tmp.778)  <973>;
                                            } #146 off=27
                                        } #51
                                        {
                                            #57 off=19
                                            (__fch_y_low.521 var=248) load (__M_DMw.4 __adr_y.79 y_low.270)  <534>;
                                            (__fch_y_high.526 var=251) load (__M_DMw.4 __adr_y.692 y_high.269)  <539>;
                                            (__fch_y_low.536 var=258) load (__M_DMw.4 __adr_y.693 y_low.270)  <549>;
                                            (__fch_y_high.541 var=261) load (__M_DMw.4 __adr_y.694 y_high.269)  <554>;
                                            (__link.550 var=267) w32_jal_t21s_s2 (kernel_cos.421)  <563>;
                                            (__adr_y.692 var=318) __Pvoid__pl___Pvoid___sint (__rd___sp.76 __ct_12t0.680)  <786>;
                                            (__adr_y.693 var=319) __Pvoid__pl___Pvoid___sint (__rd___sp.76 __ct_16t0.682)  <787>;
                                            (__adr_y.694 var=320) __Pvoid__pl___Pvoid___sint (__rd___sp.76 __ct_20t0.684)  <788>;
                                            call {
                                                (__record_low.529 var=252 stl=X off=12) assign (__fch_y_low.521)  <542>;
                                                (__record_high.531 var=253 stl=X off=13) assign (__fch_y_high.526)  <544>;
                                                (__record_low.544 var=262 stl=X off=14) assign (__fch_y_low.536)  <557>;
                                                (__record_high.546 var=263 stl=X off=15) assign (__fch_y_high.541)  <559>;
                                                (__link.551 var=267 stl=X off=1) assign (__link.550)  <564>;
                                                (__tmp.553 var=269 stl=X off=10 __tmp.557 var=270 stl=X off=11) Fkernel_cos (__link.551 __record_low.529 __record_high.531 __record_low.544 __record_high.546)  <565>;
                                                (__tmp.554 var=269) deassign (__tmp.553)  <567>;
                                                (__tmp.558 var=270) deassign (__tmp.557)  <570>;
                                            } #58 off=20
                                            #151 off=21
                                            (__link.792 var=373) w32_jal_t21s_s2 (f64_sub.749)  <986>;
                                            call {
                                                (a_low.793 var=368 stl=X off=12) assign (__ct_0.180)  <987>;
                                                (a_high.794 var=369 stl=X off=13) assign (__ct_0.180)  <988>;
                                                (b_low.795 var=370 stl=X off=14) assign (__tmp.554)  <989>;
                                                (b_high.796 var=371 stl=X off=15) assign (__tmp.558)  <990>;
                                                (__link.797 var=373 stl=X off=1) assign (__link.792)  <991>;
                                                (__tmp.798 var=375 stl=X off=10 __tmp.799 var=376 stl=X off=11) Ff64_sub (__link.797 a_low.793 a_high.794 b_low.795 b_high.796)  <992>;
                                                (__tmp.801 var=375) deassign (__tmp.798)  <994>;
                                                (__tmp.803 var=376) deassign (__tmp.799)  <996>;
                                            } #152 off=22
                                            #156 off=23
                                            (__trgt.816 var=392) const ()  <1117>;
                                            () void_j_t21s_s2 (__trgt.816)  <1118>;
                                        } #56
                                        {
                                            (__rt_low.638 var=36) merge (__tmp.780 __tmp.801)  <726>;
                                            (__rt_high.653 var=37) merge (__tmp.782 __tmp.803)  <741>;
                                        } #61
                                    } #49
                                    #157 off=28
                                    (__trgt.819 var=394) const ()  <1122>;
                                    () void_j_t21s_s2 (__trgt.819)  <1123>;
                                } #47
                                {
                                    (__rt_low.635 var=36) merge (__tmp.426 __rt_low.638)  <723>;
                                    (__rt_high.650 var=37) merge (__tmp.430 __rt_high.653)  <738>;
                                } #63
                            } #41
                            #158 off=31
                            (__trgt.822 var=396) const ()  <1127>;
                            () void_j_t21s_s2 (__trgt.822)  <1128>;
                        } #39
                        {
                            (__rt_low.632 var=36) merge (__tmp.350 __rt_low.635)  <720>;
                            (__rt_high.647 var=37) merge (__tmp.354 __rt_high.650)  <735>;
                        } #65
                    } #33
                    #159 off=34
                    (__trgt.825 var=398) const ()  <1132>;
                    () void_j_t21s_s2 (__trgt.825)  <1133>;
                } #25
                {
                    (n.565 var=22) merge (n.21 n.272)  <581>;
                    (y.566 var=23) merge (y.22 y.268)  <582>;
                    (y_low.567 var=30) merge (y_low.29 y_low.270)  <583>;
                    (y_high.568 var=31) merge (y_high.30 y_high.269)  <584>;
                    (__rt_low.629 var=36) merge (__tmp.759 __rt_low.632)  <717>;
                    (__rt_high.644 var=37) merge (__tmp.761 __rt_high.647)  <732>;
                } #67
            } #20
            #160 off=37
            (__trgt.828 var=400) const ()  <1137>;
            () void_j_t21s_s2 (__trgt.828)  <1138>;
        } #18
        {
            (n.571 var=22) merge (n.21 n.565)  <588>;
            (y.572 var=23) merge (y.22 y.566)  <589>;
            (y_low.573 var=30) merge (y_low.29 y_low.567)  <590>;
            (y_high.574 var=31) merge (y_high.30 y_high.568)  <591>;
            (__rt_low.626 var=36) merge (__tmp.190 __rt_low.629)  <714>;
            (__rt_high.641 var=37) merge (__tmp.194 __rt_high.644)  <729>;
        } #69
    } #12
    #71 off=40 nxt=-2
    (__rd___sp.577 var=33) rd_res_reg (__R_SP.11 __sp.55)  <594>;
    (__ct_40s0.578 var=272) const ()  <595>;
    (__tmp.580 var=274) __Pvoid__pl___Pvoid___sint (__rd___sp.577 __ct_40s0.578)  <597>;
    (__R_SP.581 var=12 __sp.582 var=18) wr_res_reg (__tmp.580 __sp.55)  <598>;
    () void___rts_jr_w32 (__la.34)  <599>;
    (__rt_low.584 var=36 stl=X off=10) assign (__rt_low.626)  <601>;
    () out (__rt_low.584)  <602>;
    (__rt_high.586 var=37 stl=X off=11) assign (__rt_high.641)  <604>;
    () out (__rt_high.586)  <605>;
    () sink (__sp.582)  <613>;
    () sink (ix.122)  <616>;
    () sink (n.571)  <617>;
    () sink (y.572)  <618>;
    () sink (x_low.84)  <619>;
    () sink (x_high.90)  <620>;
    () sink (z_low.95)  <621>;
    () sink (z_high.101)  <622>;
    () sink (y_low.573)  <625>;
    () sink (y_high.574)  <626>;
} #0
0 : 'src/math.c';
----------
0 : (0,844:0,0);
3 : (0,844:11,0);
4 : (0,844:11,0);
5 : (0,846:18,2);
6 : (0,846:18,2);
8 : (0,850:4,5);
9 : (0,853:7,6);
10 : (0,853:7,6);
12 : (0,854:4,6);
14 : (0,857:9,7);
15 : (0,854:47,7);
16 : (0,854:32,7);
18 : (0,854:25,10);
19 : (0,857:15,10);
20 : (0,857:9,10);
22 : (0,863:8,11);
25 : (0,857:29,14);
26 : (0,861:23,14);
27 : (0,861:12,14);
28 : (0,861:10,15);
29 : (0,861:10,15);
30 : (0,863:8,15);
31 : (0,863:8,15);
32 : (0,863:8,16);
33 : (0,863:8,16);
35 : (0,864:8,17);
36 : (0,863:46,17);
37 : (0,863:25,17);
39 : (0,863:17,21);
40 : (0,864:8,21);
41 : (0,864:8,21);
43 : (0,865:8,22);
44 : (0,864:42,22);
45 : (0,864:25,22);
47 : (0,864:17,26);
48 : (0,865:8,26);
49 : (0,865:8,26);
51 : (0,866:17,27);
52 : (0,865:46,27);
53 : (0,865:25,27);
56 : (0,865:17,31);
57 : (0,866:42,31);
58 : (0,866:25,31);
71 : (0,854:4,57);
111 : (0,854:10,6);
120 : (0,850:1,4);
139 : (0,857:37,11);
140 : (0,857:37,11);
145 : (0,865:17,28);
146 : (0,865:17,28);
151 : (0,866:17,32);
152 : (0,866:17,32);
----------
61 : (0,844:7,0);
62 : (0,844:7,0);
64 : (0,844:7,0);
65 : (0,844:7,0);
67 : (0,844:18,0);
68 : (0,844:18,0);
70 : (0,844:18,0);
72 : (0,846:16,0);
73 : (0,846:16,0);
75 : (0,846:16,0);
77 : (0,847:15,0);
78 : (0,847:15,0);
80 : (0,847:15,0);
82 : (0,847:12,0);
83 : (0,847:12,0);
85 : (0,847:12,0);
87 : (0,846:11,0);
88 : (0,846:11,0);
90 : (0,846:11,0);
94 : (0,844:11,0);
99 : (0,844:11,0);
100 : (0,844:11,0);
104 : (0,846:18,2);
109 : (0,846:18,2);
110 : (0,846:18,2);
117 : (0,850:21,4);
124 : (0,850:1,4);
125 : (0,850:4,5);
126 : (0,853:4,5);
127 : (0,853:10,0);
129 : (0,853:7,5);
130 : (0,853:4,5);
131 : (0,853:7,6);
132 : (0,854:7,6);
133 : (0,854:13,0);
165 : (0,854:4,6);
167 : (0,854:43,7);
172 : (0,854:43,7);
175 : (0,854:43,0);
177 : (0,854:43,0);
184 : (0,854:45,7);
187 : (0,854:45,0);
189 : (0,854:45,0);
190 : (0,854:47,0);
192 : (0,854:47,0);
196 : (0,854:32,7);
197 : (0,854:32,0);
198 : (0,854:32,7);
207 : (0,857:13,10);
208 : (0,857:17,0);
210 : (0,857:15,10);
240 : (0,857:9,10);
242 : (0,857:36,11);
247 : (0,857:36,11);
250 : (0,857:38,11);
255 : (0,857:38,11);
260 : (0,861:21,14);
265 : (0,861:21,14);
268 : (0,861:21,0);
270 : (0,861:21,0);
271 : (0,861:23,0);
275 : (0,861:12,14);
276 : (0,861:12,0);
277 : (0,861:12,14);
280 : (0,861:8,14);
281 : (0,861:10,15);
283 : (0,862:15,15);
284 : (0,862:17,0);
286 : (0,862:16,15);
287 : (0,863:8,15);
290 : (0,863:8,16);
320 : (0,863:8,16);
325 : (0,863:37,17);
330 : (0,863:37,17);
333 : (0,863:37,0);
335 : (0,863:37,0);
340 : (0,863:42,17);
345 : (0,863:42,17);
348 : (0,863:42,0);
350 : (0,863:42,0);
351 : (0,863:46,0);
353 : (0,863:46,0);
357 : (0,863:25,17);
358 : (0,863:25,0);
359 : (0,863:25,17);
370 : (0,864:8,21);
400 : (0,864:8,21);
405 : (0,864:37,22);
410 : (0,864:37,22);
413 : (0,864:37,0);
415 : (0,864:37,0);
420 : (0,864:42,22);
425 : (0,864:42,22);
428 : (0,864:42,0);
430 : (0,864:42,0);
434 : (0,864:25,22);
435 : (0,864:25,0);
436 : (0,864:25,22);
445 : (0,865:8,0);
447 : (0,865:8,26);
477 : (0,865:8,26);
484 : (0,865:37,27);
489 : (0,865:37,27);
492 : (0,865:37,0);
494 : (0,865:37,0);
499 : (0,865:42,27);
504 : (0,865:42,27);
507 : (0,865:42,0);
509 : (0,865:42,0);
512 : (0,865:46,0);
516 : (0,865:25,27);
517 : (0,865:25,0);
518 : (0,865:25,27);
534 : (0,866:37,31);
539 : (0,866:37,31);
542 : (0,866:37,0);
544 : (0,866:37,0);
549 : (0,866:42,31);
554 : (0,866:42,31);
557 : (0,866:42,0);
559 : (0,866:42,0);
563 : (0,866:25,31);
564 : (0,866:25,0);
565 : (0,866:25,31);
581 : (0,857:9,51);
582 : (0,857:9,51);
583 : (0,857:9,51);
584 : (0,857:9,51);
588 : (0,854:4,56);
589 : (0,854:4,56);
590 : (0,854:4,56);
591 : (0,854:4,56);
594 : (0,854:4,0);
595 : (0,854:4,0);
597 : (0,854:4,0);
598 : (0,854:4,57);
599 : (0,854:4,57);
601 : (0,854:4,0);
604 : (0,854:4,0);
763 : (0,846:16,0);
766 : (0,844:18,0);
771 : (0,846:11,0);
774 : (0,846:11,0);
776 : (0,863:42,0);
777 : (0,846:11,0);
781 : (0,864:42,0);
784 : (0,865:42,0);
787 : (0,866:42,0);
860 : (0,854:10,6);
939 : (0,857:37,0);
940 : (0,857:37,11);
941 : (0,857:37,11);
942 : (0,857:37,11);
943 : (0,857:37,11);
944 : (0,857:37,11);
945 : (0,857:37,11);
946 : (0,857:37,11);
948 : (0,857:37,11);
950 : (0,857:37,11);
963 : (0,865:24,27);
964 : (0,865:24,27);
965 : (0,865:24,27);
966 : (0,865:24,27);
967 : (0,865:24,27);
968 : (0,865:24,27);
969 : (0,865:24,27);
971 : (0,865:24,27);
973 : (0,865:24,27);
986 : (0,866:24,31);
987 : (0,866:24,31);
988 : (0,866:24,31);
989 : (0,866:24,31);
990 : (0,866:24,31);
991 : (0,866:24,31);
992 : (0,866:24,31);
994 : (0,866:24,31);
996 : (0,866:24,31);
1115 : (0,865:8,26);
1120 : (0,864:8,21);
1125 : (0,863:8,16);
1130 : (0,857:9,10);
1135 : (0,854:4,6);

