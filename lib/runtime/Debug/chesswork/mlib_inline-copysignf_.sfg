
// File generated by noodle version U-2022.12#33f3808fcb#221128, Tue Mar 19 17:13:53 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -D__tct_patch__=0 -itrv32p3_cnn_chess.h +Sal +Sca +Osps -Wflla +NOtcr +NOcse +NOifv +NOrle +NOrlt +wDebug/chesswork src/mlib_inline.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!! extern inline float copysignf(float, float)
Fcopysignf : user_defined, called {
    fnm : "copysignf" 'float copysignf(float, float)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
    frm : ( l=8 );
}
****
***/

[
    0 : copysignf typ=u08 bnd=e stl=PMb
    5 : __M_DMw typ=w32 bnd=d stl=DMw
   12 : __R_SP typ=w32 bnd=d stl=SP
   18 : __sp typ=w32 bnd=b stl=SP
   19 : y typ=w08 val=0t0 bnd=a sz=4 algn=4 stl=DMb tref=__ffloat_DMb
   20 : x typ=w08 val=4t0 bnd=a sz=4 algn=4 stl=DMb tref=__ffloat_DMb
   21 : __rd___sp typ=w32 bnd=m
   22 : __la typ=w32 bnd=p tref=w32__
   23 : __rt typ=w32 bnd=p tref=__ffloat__
   24 : __arg_x typ=w32 bnd=p tref=__ffloat__
   25 : __arg_y typ=w32 bnd=p tref=__ffloat__
   26 : __ct_m8S0 typ=w32 val=-8S0 bnd=m
   28 : __tmp typ=w32 bnd=m
   30 : __ct_0t0 typ=w32 val=0t0 bnd=m
   32 : __adr_y typ=w32 bnd=m adro=19
   34 : __ct_4t0 typ=w32 val=4t0 bnd=m
   36 : __adr_x typ=w32 bnd=m adro=20
   37 : __fch_x typ=w32 bnd=m
   39 : __ct_2147483647 typ=w32 val=2147483647f bnd=m
   41 : __tmp typ=w32 bnd=m
   43 : __fch_y typ=w32 bnd=m
   46 : __ct_2147483648 typ=t20s_rp12 val=-524288f bnd=m
   48 : __tmp typ=w32 bnd=m
   49 : __tmp typ=w32 bnd=m
   52 : __ct_8s0 typ=w32 val=8s0 bnd=m
   54 : __tmp typ=w32 bnd=m
]
Fcopysignf {
    #3 off=0
    (__M_DMw.4 var=5) st_def ()  <8>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__sp.17 var=18) source ()  <28>;
    (y.18 var=19) source ()  <29>;
    (x.19 var=20) source ()  <30>;
    (__la.21 var=22 stl=X off=1) inp ()  <32>;
    (__la.22 var=22) deassign (__la.21)  <33>;
    (__arg_x.25 var=24 stl=X off=11) inp ()  <36>;
    (__arg_x.26 var=24) deassign (__arg_x.25)  <37>;
    (__arg_y.28 var=25 stl=X off=12) inp ()  <39>;
    (__arg_y.29 var=25) deassign (__arg_y.28)  <40>;
    (__rd___sp.31 var=21) rd_res_reg (__R_SP.11 __sp.17)  <42>;
    (__ct_m8S0.32 var=26) const ()  <43>;
    (__tmp.34 var=28) __Pvoid__pl___Pvoid___sint (__rd___sp.31 __ct_m8S0.32)  <45>;
    (__R_SP.35 var=12 __sp.36 var=18) wr_res_reg (__tmp.34 __sp.17)  <46>;
    (__rd___sp.37 var=21) rd_res_reg (__R_SP.11 __sp.36)  <48>;
    (__ct_0t0.38 var=30) const ()  <49>;
    (__adr_y.40 var=32) __Pvoid__pl___Pvoid___sint (__rd___sp.37 __ct_0t0.38)  <51>;
    (__rd___sp.42 var=21) rd_res_reg (__R_SP.11 __sp.36)  <53>;
    (__M_DMw.47 var=5 y.48 var=19) store (__arg_y.29 __adr_y.40 y.18)  <58>;
    call {
        () chess_separator_scheduler ()  <59>;
    } #4 off=1
    #5 off=2
    (__ct_4t0.43 var=34) const ()  <54>;
    (__adr_x.45 var=36) __Pvoid__pl___Pvoid___sint (__rd___sp.42 __ct_4t0.43)  <56>;
    (__M_DMw.49 var=5 x.50 var=20) store (__arg_x.26 __adr_x.45 x.19)  <60>;
    call {
        () chess_separator_scheduler ()  <61>;
    } #6 off=3
    #9 off=4 nxt=-2
    (__fch_x.51 var=37) load (__M_DMw.4 __adr_x.45 x.50)  <62>;
    (__ct_2147483647.53 var=39) const ()  <64>;
    (__tmp.55 var=41) __sint__ad___sint___sint (__fch_x.51 __ct_2147483647.53)  <66>;
    (__fch_y.57 var=43) load (__M_DMw.4 __adr_y.40 y.48)  <68>;
    (__ct_2147483648.60 var=46) const ()  <71>;
    (__tmp.62 var=48) __uint__ad___uint___uint (__fch_y.57 __ct_2147483648.60)  <73>;
    (__tmp.63 var=49) __uint__or___uint___uint (__tmp.55 __tmp.62)  <74>;
    (__rd___sp.66 var=21) rd_res_reg (__R_SP.11 __sp.36)  <77>;
    (__ct_8s0.67 var=52) const ()  <78>;
    (__tmp.69 var=54) __Pvoid__pl___Pvoid___sint (__rd___sp.66 __ct_8s0.67)  <80>;
    (__R_SP.70 var=12 __sp.71 var=18) wr_res_reg (__tmp.69 __sp.36)  <81>;
    () void___rts_jr_w32 (__la.22)  <82>;
    (__rt.72 var=23 stl=X off=10) assign (__tmp.63)  <83>;
    () out (__rt.72)  <84>;
    () sink (__sp.71)  <90>;
    () sink (y.48)  <91>;
    () sink (x.50)  <92>;
} #0
0 : 'include/math.h';
----------
0 : (0,29:23,0);
3 : (0,29:32,0);
4 : (0,29:32,0);
5 : (0,29:23,0);
6 : (0,29:23,0);
9 : (0,32:4,3);
----------
42 : (0,29:23,0);
43 : (0,29:23,0);
45 : (0,29:23,0);
46 : (0,29:23,0);
48 : (0,29:38,0);
49 : (0,29:38,0);
51 : (0,29:38,0);
53 : (0,29:29,0);
54 : (0,29:29,0);
56 : (0,29:29,0);
58 : (0,29:32,0);
59 : (0,29:32,0);
60 : (0,29:23,0);
61 : (0,29:23,0);
62 : (0,32:30,3);
64 : (0,32:35,0);
66 : (0,32:33,3);
68 : (0,32:59,3);
71 : (0,32:62,0);
73 : (0,32:62,3);
74 : (0,32:47,3);
77 : (0,32:4,0);
78 : (0,32:4,0);
80 : (0,32:4,0);
81 : (0,32:4,3);
82 : (0,32:4,3);
83 : (0,32:19,0);

