
// File generated by noodle version U-2022.12#33f3808fcb#221128, Fri Mar 22 18:55:27 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -D__tct_patch__=0 -itrv32p3_cnn_chess.h +Sal +Sca +Osps -Wflla +NOtcr +NOcse +NOifv +NOrle +NOrlt +wDebug/chesswork src/malloc.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!!  void free(void *)
Ffree : user_defined, called {
    fnm : "free" 'void free(void *)';
    arg : ( w32:i w32:i );
    loc : ( X[1] X[10] );
    frm : ( l=8 );
}
****
***/

[
    0 : free typ=u08 bnd=e stl=PMb
    5 : __M_DMw typ=w32 bnd=d stl=DMw
    8 : __M_DMw_stat typ=w32 bnd=d stl=DMw_stat
   12 : __R_SP typ=w32 bnd=d stl=SP
   18 : __sp typ=w32 bnd=b stl=SP
   19 : p typ=w08 val=0t0 bnd=a sz=4 algn=4 stl=DMb tref=__Pvoid_DMb
   20 : block typ=w08 val=4t0 bnd=a sz=4 algn=4 stl=DMb lscp=8 tref=__PMBlock__DMb
   21 : _ZL8sentinel typ=w08 bnd=i sz=4 algn=4 stl=DMb_stat tref=__PMBlock__DMb_stat
   22 : __extDMb___PMBlock_ typ=w08 bnd=b stl=DMb
   23 : __extPMb_void typ=u08 bnd=b stl=PMb
   25 : __extDMb_head typ=w08 bnd=b stl=DMb
   26 : __extDMb_w32 typ=w08 bnd=b stl=DMb
   27 : __extDMb_MBlock__head typ=w08 bnd=b stl=DMb
   28 : __extDMb_MBlock__u typ=w08 bnd=b stl=DMb
   29 : __extDMb___anonymous0__malloc_ typ=w08 bnd=b stl=DMb
   30 : __extDMb_u typ=w08 bnd=b stl=DMb
   31 : __extPMb_u typ=u08 bnd=b stl=PMb
   32 : __extPMb___PMBlock_ typ=u08 bnd=b stl=PMb
   33 : __extPMb_w32 typ=u08 bnd=b stl=PMb
   34 : __extPMb___anonymous0__malloc_ typ=u08 bnd=b stl=PMb
   35 : __rd___sp typ=w32 bnd=m
   37 : __ptr_sentinel typ=w32 val=0a bnd=m adro=21
   38 : __la typ=w32 bnd=p tref=w32__
   39 : __arg_p typ=w32 bnd=p tref=__Pvoid__
   40 : __ct_m8S0 typ=w32 val=-8S0 bnd=m
   42 : __tmp typ=w32 bnd=m
   44 : __ct_0t0 typ=w32 val=0t0 bnd=m
   46 : __adr_p typ=w32 bnd=m adro=19
   48 : __ct_4t0 typ=w32 val=4t0 bnd=m
   50 : __adr_block typ=w32 bnd=m adro=20
   60 : __fch_p typ=w32 bnd=m
   61 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   64 : __tmp typ=bool bnd=m
   65 : __fch_p typ=w32 bnd=m
   69 : __ct_4 typ=w32 val=4f bnd=m
   74 : __tmp typ=w32 bnd=m
   75 : __fch_block typ=w32 bnd=m
   79 : __fchtmp typ=w32 bnd=m
   80 : __ct_2147483647 typ=w32 val=2147483647f bnd=m
   82 : __tmp typ=w32 bnd=m
   83 : __fch__ZL8sentinel typ=w32 bnd=m
   84 : __fch_block typ=w32 bnd=m
   94 : __fch___extDMb_MBlock__u typ=w32 bnd=m
   97 : __tmp typ=w32 bnd=m
  103 : __tmp typ=w32 bnd=m
  113 : __fch___extDMb_MBlock__u typ=w32 bnd=m
  141 : __ct_8s0 typ=w32 val=8s0 bnd=m
  143 : __tmp typ=w32 bnd=m
  150 : __shv___fch__ZL8sentinel typ=w32 bnd=m
  151 : __shv___fch_block typ=w32 bnd=m
  152 : __ct_8 typ=w32 val=8f bnd=m
  154 : __ct_m4 typ=w32 val=-4f bnd=m
  163 : __either typ=bool bnd=m
  164 : __trgt typ=t13s_s2 val=0j bnd=m
  165 : __trgt typ=t21s_s2 val=0j bnd=m
]
Ffree {
    #3 off=0
    (__M_DMw.4 var=5) st_def ()  <8>;
    (__M_DMw_stat.7 var=8) st_def ()  <14>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__sp.17 var=18) source ()  <28>;
    (p.18 var=19) source ()  <29>;
    (block.19 var=20) source ()  <30>;
    (_ZL8sentinel.20 var=21) source ()  <31>;
    (__extDMb___PMBlock_.21 var=22) source ()  <32>;
    (__extPMb_void.22 var=23) source ()  <33>;
    (__extDMb_head.24 var=25) source ()  <35>;
    (__extDMb_w32.25 var=26) source ()  <36>;
    (__extDMb_MBlock__head.26 var=27) source ()  <37>;
    (__extDMb_MBlock__u.27 var=28) source ()  <38>;
    (__extDMb___anonymous0__malloc_.28 var=29) source ()  <39>;
    (__extDMb_u.29 var=30) source ()  <40>;
    (__extPMb_u.30 var=31) source ()  <41>;
    (__extPMb___PMBlock_.31 var=32) source ()  <42>;
    (__extPMb_w32.32 var=33) source ()  <43>;
    (__extPMb___anonymous0__malloc_.33 var=34) source ()  <44>;
    (__la.37 var=38 stl=X off=1) inp ()  <48>;
    (__la.38 var=38) deassign (__la.37)  <49>;
    (__arg_p.40 var=39 stl=X off=10) inp ()  <51>;
    (__arg_p.41 var=39) deassign (__arg_p.40)  <52>;
    (__rd___sp.43 var=35) rd_res_reg (__R_SP.11 __sp.17)  <54>;
    (__ct_m8S0.44 var=40) const ()  <55>;
    (__tmp.46 var=42) __Pvoid__pl___Pvoid___sint (__rd___sp.43 __ct_m8S0.44)  <57>;
    (__R_SP.47 var=12 __sp.48 var=18) wr_res_reg (__tmp.46 __sp.17)  <58>;
    (__rd___sp.49 var=35) rd_res_reg (__R_SP.11 __sp.48)  <60>;
    (__ct_0t0.50 var=44) const ()  <61>;
    (__adr_p.52 var=46) __Pvoid__pl___Pvoid___sint (__rd___sp.49 __ct_0t0.50)  <63>;
    (__rd___sp.54 var=35) rd_res_reg (__R_SP.11 __sp.48)  <65>;
    (__M_DMw.68 var=5 p.69 var=19) store (__arg_p.41 __adr_p.52 p.18)  <79>;
    call {
        () chess_separator_scheduler ()  <80>;
    } #4 off=1
    #5 off=2
    (__fch_p.70 var=60) load (__M_DMw.4 __adr_p.52 p.69)  <81>;
    (__ct_0.71 var=61) const ()  <82>;
    (__tmp.324 var=64) bool__eq___Pvoid___Pvoid (__fch_p.70 __ct_0.71)  <380>;
    (__trgt.327 var=164) const ()  <395>;
    () void_br_bool_t13s_s2 (__tmp.324 __trgt.327)  <396>;
    (__either.328 var=163) undefined ()  <397>;
    if {
        {
            () if_expr (__either.328)  <122>;
        } #7
        {
        } #37 off=20
        {
            #9 off=3
            (__ct_4t0.55 var=48) const ()  <66>;
            (__adr_block.57 var=50) __Pvoid__pl___Pvoid___sint (__rd___sp.54 __ct_4t0.55)  <68>;
            (__fch_p.111 var=65) load (__M_DMw.4 __adr_p.52 p.69)  <123>;
            (__tmp.120 var=74) __Pvoid__pl___Pvoid___sint (__fch_p.111 __ct_m4.319)  <132>;
            (__M_DMw.121 var=5 block.122 var=20) store (__tmp.120 __adr_block.57 block.19)  <133>;
            (__ct_m4.319 var=154) const ()  <350>;
            call {
                () chess_separator_scheduler ()  <134>;
            } #10 off=4
            #11 off=5
            (__fch_block.125 var=75) load (__M_DMw.4 __adr_block.57 block.122)  <137>;
            call {
                () chess_separator_scheduler ()  <144>;
            } #16 off=6
            #17 off=7
            (__fchtmp.130 var=79) load (__M_DMw.4 __fch_block.125 _ZL8sentinel.20 __extDMb_MBlock__head.26 __extDMb_MBlock__u.27 __extDMb___PMBlock_.21 __extDMb___anonymous0__malloc_.28 __extDMb_head.24 __extDMb_u.29 __extDMb_w32.25 __extPMb_void.22)  <145>;
            (__ct_2147483647.131 var=80) const ()  <146>;
            (__tmp.133 var=82) __uint__ad___uint___uint (__fchtmp.130 __ct_2147483647.131)  <148>;
            (__M_DMw.134 var=5 _ZL8sentinel.135 var=21 __extDMb_MBlock__head.136 var=27 __extDMb_MBlock__u.137 var=28 __extDMb___PMBlock_.138 var=22 __extDMb___anonymous0__malloc_.139 var=29 __extDMb_head.140 var=25 __extDMb_u.141 var=30 __extDMb_w32.142 var=26 __extPMb_void.143 var=23) store (__tmp.133 __fch_block.125 _ZL8sentinel.20 __extDMb_MBlock__head.26 __extDMb_MBlock__u.27 __extDMb___PMBlock_.21 __extDMb___anonymous0__malloc_.28 __extDMb_head.24 __extDMb_u.29 __extDMb_w32.25 __extPMb_void.22)  <149>;
            call {
                () chess_separator_scheduler ()  <151>;
            } #19 off=8
            #20 off=9
            (__ptr_sentinel.35 var=37) const ()  <46>;
            (__fch__ZL8sentinel.146 var=83) load (__M_DMw_stat.7 __ptr_sentinel.35 _ZL8sentinel.135)  <154>;
            call {
                () chess_separator_scheduler ()  <155>;
            } #21 off=10
            #22 off=11
            (__fch_block.148 var=84) load (__M_DMw.4 __adr_block.57 block.122)  <157>;
            call {
                () chess_separator_scheduler ()  <162>;
            } #27 off=12
            #28 off=13
            (__ct_4.115 var=69) const ()  <127>;
            (__fch___extDMb_MBlock__u.160 var=94) load (__M_DMw.4 __shv___fch__ZL8sentinel.312 __extDMb_MBlock__u.137)  <172>;
            (__tmp.163 var=97) __Pvoid__pl___Pvoid___sint (__fch___extDMb_MBlock__u.160 __ct_4.115)  <175>;
            (__tmp.169 var=103) __Pvoid__pl___Pvoid___sint (__tmp.163 __ct_4.115)  <181>;
            (__M_DMw.170 var=5 _ZL8sentinel.171 var=21 __extDMb_MBlock__head.172 var=27 __extDMb_MBlock__u.173 var=28 __extDMb___PMBlock_.174 var=22 __extDMb___anonymous0__malloc_.175 var=29 __extDMb_head.176 var=25 __extDMb_u.177 var=30 __extDMb_w32.178 var=26 __extPMb___PMBlock_.179 var=32 __extPMb___anonymous0__malloc_.180 var=34 __extPMb_u.181 var=31 __extPMb_void.182 var=23 __extPMb_w32.183 var=33) store (__fch_block.148 __tmp.169 _ZL8sentinel.135 __extDMb_MBlock__head.136 __extDMb_MBlock__u.137 __extDMb___PMBlock_.138 __extDMb___anonymous0__malloc_.139 __extDMb_head.140 __extDMb_u.141 __extDMb_w32.142 __extPMb___PMBlock_.31 __extPMb___anonymous0__malloc_.33 __extPMb_u.30 __extPMb_void.143 __extPMb_w32.32)  <182>;
            (__shv___fch__ZL8sentinel.312 var=150) __Pvoid__pl___Pvoid___sint (__fch__ZL8sentinel.146 __ct_4.115)  <341>;
            call {
                () chess_separator_scheduler ()  <183>;
            } #29 off=14
            #30 off=15
            (__fch___extDMb_MBlock__u.193 var=113) load (__M_DMw.4 __shv___fch__ZL8sentinel.313 __extDMb_MBlock__u.173)  <193>;
            (__M_DMw.203 var=5 _ZL8sentinel.204 var=21 __extDMb_MBlock__head.205 var=27 __extDMb_MBlock__u.206 var=28 __extDMb___PMBlock_.207 var=22 __extDMb___anonymous0__malloc_.208 var=29 __extDMb_head.209 var=25 __extDMb_u.210 var=30 __extDMb_w32.211 var=26 __extPMb_void.212 var=23) store (__fch___extDMb_MBlock__u.193 __shv___fch_block.315 _ZL8sentinel.171 __extDMb_MBlock__head.172 __extDMb_MBlock__u.173 __extDMb___PMBlock_.174 __extDMb___anonymous0__malloc_.175 __extDMb_head.176 __extDMb_u.177 __extDMb_w32.178 __extPMb_void.182)  <203>;
            (__shv___fch__ZL8sentinel.313 var=150) __Pvoid__pl___Pvoid___sint (__fch__ZL8sentinel.146 __ct_4.115)  <342>;
            (__shv___fch_block.315 var=151) __Pvoid__pl___Pvoid___sint (__fch_block.148 __ct_4.115)  <344>;
            call {
                () chess_separator_scheduler ()  <204>;
            } #31 off=16
            #32 off=17
            (__M_DMw.222 var=5 _ZL8sentinel.223 var=21 __extDMb_MBlock__head.224 var=27 __extDMb_MBlock__u.225 var=28 __extDMb___PMBlock_.226 var=22 __extDMb___anonymous0__malloc_.227 var=29 __extDMb_head.228 var=25 __extDMb_u.229 var=30 __extDMb_w32.230 var=26 __extPMb_void.231 var=23) store (__fch__ZL8sentinel.146 __shv___fch_block.317 _ZL8sentinel.204 __extDMb_MBlock__head.205 __extDMb_MBlock__u.206 __extDMb___PMBlock_.207 __extDMb___anonymous0__malloc_.208 __extDMb_head.209 __extDMb_u.210 __extDMb_w32.211 __extPMb_void.212)  <214>;
            (__ct_8.316 var=152) const ()  <345>;
            (__shv___fch_block.317 var=151) __Pvoid__pl___Pvoid___sint (__fch_block.148 __ct_8.316)  <347>;
            call {
                () chess_separator_scheduler ()  <215>;
            } #33 off=18
            #34 off=19
            (__M_DMw.241 var=5 __extDMb_MBlock__u.242 var=28) store (__fch_block.148 __shv___fch__ZL8sentinel.314 __extDMb_MBlock__u.225)  <225>;
            (__shv___fch__ZL8sentinel.314 var=150) __Pvoid__pl___Pvoid___sint (__fch__ZL8sentinel.146 __ct_4.115)  <343>;
            (__trgt.329 var=165) const ()  <398>;
            () void_j_t21s_s2 (__trgt.329)  <399>;
        } #8
        {
            (block.243 var=20) merge (block.19 block.122)  <228>;
            (_ZL8sentinel.244 var=21) merge (_ZL8sentinel.20 _ZL8sentinel.223)  <229>;
            (__extDMb___PMBlock_.245 var=22) merge (__extDMb___PMBlock_.21 __extDMb___PMBlock_.226)  <230>;
            (__extPMb_void.246 var=23) merge (__extPMb_void.22 __extPMb_void.231)  <231>;
            (__extDMb_head.247 var=25) merge (__extDMb_head.24 __extDMb_head.228)  <232>;
            (__extDMb_w32.248 var=26) merge (__extDMb_w32.25 __extDMb_w32.230)  <233>;
            (__extDMb_MBlock__head.249 var=27) merge (__extDMb_MBlock__head.26 __extDMb_MBlock__head.224)  <234>;
            (__extDMb_MBlock__u.250 var=28) merge (__extDMb_MBlock__u.27 __extDMb_MBlock__u.242)  <235>;
            (__extDMb___anonymous0__malloc_.251 var=29) merge (__extDMb___anonymous0__malloc_.28 __extDMb___anonymous0__malloc_.227)  <236>;
            (__extDMb_u.252 var=30) merge (__extDMb_u.29 __extDMb_u.229)  <237>;
            (__extPMb_u.253 var=31) merge (__extPMb_u.30 __extPMb_u.181)  <238>;
            (__extPMb___PMBlock_.254 var=32) merge (__extPMb___PMBlock_.31 __extPMb___PMBlock_.179)  <239>;
            (__extPMb_w32.255 var=33) merge (__extPMb_w32.32 __extPMb_w32.183)  <240>;
            (__extPMb___anonymous0__malloc_.256 var=34) merge (__extPMb___anonymous0__malloc_.33 __extPMb___anonymous0__malloc_.180)  <241>;
        } #38
    } #6
    #40 off=21 nxt=-2
    (__rd___sp.266 var=35) rd_res_reg (__R_SP.11 __sp.48)  <251>;
    (__ct_8s0.267 var=141) const ()  <252>;
    (__tmp.269 var=143) __Pvoid__pl___Pvoid___sint (__rd___sp.266 __ct_8s0.267)  <254>;
    (__R_SP.270 var=12 __sp.271 var=18) wr_res_reg (__tmp.269 __sp.48)  <255>;
    () void___rts_jr_w32 (__la.38)  <256>;
    () sink (__sp.271)  <262>;
    () sink (p.69)  <263>;
    () sink (block.243)  <264>;
    () sink (_ZL8sentinel.244)  <265>;
    () sink (__extDMb___PMBlock_.245)  <266>;
    () sink (__extPMb_void.246)  <267>;
    () sink (__extDMb_head.247)  <269>;
    () sink (__extDMb_w32.248)  <270>;
    () sink (__extDMb_MBlock__head.249)  <271>;
    () sink (__extDMb_MBlock__u.250)  <272>;
    () sink (__extDMb___anonymous0__malloc_.251)  <273>;
    () sink (__extDMb_u.252)  <274>;
    () sink (__extPMb_u.253)  <275>;
    () sink (__extPMb___PMBlock_.254)  <276>;
    () sink (__extPMb_w32.255)  <277>;
    () sink (__extPMb___anonymous0__malloc_.256)  <278>;
} #0
0 : 'src/malloc.c';
----------
0 : (0,135:0,0);
3 : (0,135:10,0);
4 : (0,135:10,0);
5 : (0,137:4,2);
6 : (0,137:4,2);
8 : (0,137:11,3);
9 : (0,138:25,3);
10 : (0,138:25,3);
11 : (0,139:23,5);
16 : (0,139:8,8);
17 : (0,139:8,9);
19 : (0,139:22,13);
20 : (0,140:21,14);
21 : (0,140:21,14);
22 : (0,140:30,15);
27 : (0,140:8,17);
28 : (0,140:8,19);
29 : (0,140:8,19);
30 : (0,140:8,20);
31 : (0,140:8,20);
32 : (0,140:8,21);
33 : (0,140:8,21);
34 : (0,140:8,22);
37 : (0,137:4,28);
40 : (0,137:4,31);
----------
54 : (0,135:5,0);
55 : (0,135:5,0);
57 : (0,135:5,0);
58 : (0,135:5,0);
60 : (0,135:16,0);
61 : (0,135:16,0);
63 : (0,135:16,0);
65 : (0,138:17,0);
66 : (0,138:17,0);
68 : (0,138:17,0);
79 : (0,135:10,0);
80 : (0,135:10,0);
81 : (0,137:8,2);
82 : (0,137:4,0);
122 : (0,137:4,2);
123 : (0,138:43,3);
127 : (0,138:72,0);
132 : (0,138:45,3);
133 : (0,138:25,3);
134 : (0,138:25,3);
137 : (0,139:23,5);
144 : (0,139:8,8);
145 : (0,139:8,8);
146 : (0,139:8,0);
148 : (0,139:8,8);
149 : (0,139:8,8);
151 : (0,139:22,13);
154 : (0,140:21,14);
155 : (0,140:21,14);
157 : (0,140:30,15);
162 : (0,140:8,17);
172 : (0,140:8,18);
175 : (0,140:8,18);
181 : (0,140:8,18);
182 : (0,140:8,18);
183 : (0,140:8,19);
193 : (0,140:8,19);
203 : (0,140:8,19);
204 : (0,140:8,20);
214 : (0,140:8,20);
215 : (0,140:8,21);
225 : (0,140:8,21);
228 : (0,137:4,30);
229 : (0,137:4,30);
230 : (0,137:4,30);
231 : (0,137:4,30);
232 : (0,137:4,30);
233 : (0,137:4,30);
234 : (0,137:4,30);
235 : (0,137:4,30);
236 : (0,137:4,30);
237 : (0,137:4,30);
238 : (0,137:4,30);
239 : (0,137:4,30);
240 : (0,137:4,30);
241 : (0,137:4,30);
251 : (0,137:4,0);
252 : (0,137:4,0);
254 : (0,137:4,0);
255 : (0,137:4,31);
256 : (0,137:4,31);
341 : (0,140:8,0);
342 : (0,140:8,0);
343 : (0,140:8,0);
344 : (0,140:8,0);
347 : (0,140:8,0);
350 : (0,138:45,0);
380 : (0,137:4,2);
396 : (0,137:4,2);

