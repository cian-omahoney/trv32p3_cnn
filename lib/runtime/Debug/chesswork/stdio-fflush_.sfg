
// File generated by noodle version U-2022.12#33f3808fcb#221128, Tue Mar 19 17:13:45 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -D__tct_patch__=0 -itrv32p3_cnn_chess.h +Sal +Sca +Osps -Wflla +NOtcr +NOcse +NOifv +NOrle +NOrlt +wDebug/chesswork src/stdio.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!! extern int fflush(FILE *)
Ffflush : user_defined, called {
    fnm : "fflush" 'int fflush(FILE *)';
    arg : ( w32:i w32:r w32:i );
    loc : ( X[1] X[10] X[11] );
    frm : ( l=72 );
    llv : 0 0 0 0 0 ;
}
****
!! static void clib_hosted_io(Hosted_clib_vars *)
Fclib_hosted_io : user_defined, called {
    fnm : "clib_hosted_io" 'void clib_hosted_io(Hosted_clib_vars *)';
    arg : ( w32:i w32:i );
    loc : ( X[1] X[10] );
    llv : 0 0 0 0 0 ;
}
***/

[
    0 : fflush typ=u08 bnd=e stl=PMb
    5 : __M_DMw typ=w32 bnd=d stl=DMw
    8 : __M_DMw_stat typ=w32 bnd=d stl=DMw_stat
   12 : __R_SP typ=w32 bnd=d stl=SP
   13 : __vola typ=u08 bnd=b stl=PMb
   16 : __extPMb typ=u08 bnd=b stl=PMb
   17 : __extDMb typ=w08 bnd=b stl=DMb
   18 : __sp typ=w32 bnd=b stl=SP
   19 : stream typ=w08 val=0t0 bnd=a sz=4 algn=4 stl=DMb tref=__PFILE_DMb
   20 : _hosted_clib_vars typ=w08 val=4t0 bnd=a sz=68 algn=4 stl=DMb tref=Hosted_clib_vars_DMb
   21 : errno typ=w08 bnd=e sz=4 algn=4 stl=DMb_stat tref=__sint_DMb_stat
   22 : __extDMb_w32 typ=w08 bnd=b stl=DMb
   23 : __extDMb_FILE typ=w08 bnd=b stl=DMb
   24 : _hosted_clib_vars_stream_id typ=w08 bnd=B stl=DMb
   25 : __extDMb_FILE_stream typ=w08 bnd=b stl=DMb
   26 : _hosted_clib_vars_call_type typ=w08 bnd=B stl=DMb
   27 : _hosted_clib_vars_stream_rt typ=w08 bnd=B stl=DMb
   28 : __extPMb_void typ=u08 bnd=b stl=PMb
   29 : __extDMb_void typ=w08 bnd=b stl=DMb
   30 : __extDMb_Hosted_clib_vars typ=w08 bnd=b stl=DMb
   31 : __rd___sp typ=w32 bnd=m
   33 : __ptr_errno typ=w32 val=0a bnd=m adro=21
   34 : __la typ=w32 bnd=p tref=w32__
   35 : __rt typ=w32 bnd=p tref=__sint__
   36 : __arg_stream typ=w32 bnd=p tref=__PFILE__
   37 : __ct_m72S0 typ=w32 val=-72S0 bnd=m
   39 : __tmp typ=w32 bnd=m
   41 : __ct_0t0 typ=w32 val=0t0 bnd=m
   43 : __adr_stream typ=w32 bnd=m adro=19
   44 : __ptr__hosted_clib_vars typ=w32 bnd=m
   45 : __ct_4t0 typ=w32 val=4t0 bnd=m
   47 : __adr__hosted_clib_vars typ=w32 bnd=m adro=20
   48 : __fch_stream typ=w32 bnd=m
   49 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   52 : __tmp typ=bool bnd=m
   53 : __ct_m1 typ=w32 val=-1f bnd=m
   58 : __fch_stream typ=w32 bnd=m
   62 : __fch___extDMb_FILE_stream typ=w32 bnd=m
   66 : __ct_9 typ=w32 val=9f bnd=m
   78 : clib_hosted_io typ=t21s_s2 val=0r bnd=m
   79 : __link typ=w32 bnd=m
   83 : __fch__hosted_clib_vars_stream_rt typ=w32 bnd=m
   86 : __tmp typ=bool bnd=m
   90 : __fch__hosted_clib_vars_stream_rt typ=w32 bnd=m
   95 : __ct_72s0 typ=w32 val=72s0 bnd=m
   97 : __tmp typ=w32 bnd=m
  104 : __ct_8t0 typ=w32 val=8t0 bnd=m
  105 : __adr__hosted_clib_vars typ=w32 bnd=m adro=20
  106 : __adr__hosted_clib_vars typ=w32 bnd=m adro=20
  107 : __ct_12t0 typ=w32 val=12t0 bnd=m
  108 : __adr__hosted_clib_vars typ=w32 bnd=m adro=20
  109 : __adr__hosted_clib_vars typ=w32 bnd=m adro=20
  110 : __adr__hosted_clib_vars typ=w32 bnd=m adro=20
  119 : __either typ=bool bnd=m
  120 : __trgt typ=t13s_s2 val=0j bnd=m
  121 : __trgt typ=t21s_s2 val=0j bnd=m
  122 : __trgt typ=t13s_s2 val=0j bnd=m
  123 : __trgt typ=t21s_s2 val=0j bnd=m
]
Ffflush {
    #3 off=0
    (__M_DMw.4 var=5) st_def ()  <8>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__vola.12 var=13) source ()  <23>;
    (__extPMb.15 var=16) source ()  <26>;
    (__extDMb.16 var=17) source ()  <27>;
    (__sp.17 var=18) source ()  <28>;
    (stream.18 var=19) source ()  <29>;
    (_hosted_clib_vars.19 var=20) source ()  <30>;
    (errno.20 var=21) source ()  <31>;
    (__extDMb_w32.21 var=22) source ()  <32>;
    (__extDMb_FILE.22 var=23) source ()  <33>;
    (_hosted_clib_vars_stream_id.23 var=24) source ()  <34>;
    (__extDMb_FILE_stream.24 var=25) source ()  <35>;
    (_hosted_clib_vars_call_type.25 var=26) source ()  <36>;
    (_hosted_clib_vars_stream_rt.26 var=27) source ()  <37>;
    (__extPMb_void.27 var=28) source ()  <38>;
    (__extDMb_void.28 var=29) source ()  <39>;
    (__extDMb_Hosted_clib_vars.29 var=30) source ()  <40>;
    (__la.33 var=34 stl=X off=1) inp ()  <44>;
    (__la.34 var=34) deassign (__la.33)  <45>;
    (__arg_stream.37 var=36 stl=X off=11) inp ()  <48>;
    (__arg_stream.38 var=36) deassign (__arg_stream.37)  <49>;
    (__rd___sp.40 var=31) rd_res_reg (__R_SP.11 __sp.17)  <51>;
    (__ct_m72S0.41 var=37) const ()  <52>;
    (__tmp.43 var=39) __Pvoid__pl___Pvoid___sint (__rd___sp.40 __ct_m72S0.41)  <54>;
    (__R_SP.44 var=12 __sp.45 var=18) wr_res_reg (__tmp.43 __sp.17)  <55>;
    (__rd___sp.46 var=31) rd_res_reg (__R_SP.11 __sp.45)  <57>;
    (__ct_0t0.47 var=41) const ()  <58>;
    (__adr_stream.49 var=43) __Pvoid__pl___Pvoid___sint (__rd___sp.46 __ct_0t0.47)  <60>;
    (__rd___sp.51 var=31) rd_res_reg (__R_SP.11 __sp.45)  <62>;
    (__M_DMw.56 var=5 stream.57 var=19) store (__arg_stream.38 __adr_stream.49 stream.18)  <67>;
    call {
        () chess_separator_scheduler ()  <68>;
    } #4 off=1
    #5 off=2
    (__fch_stream.58 var=48) load (__M_DMw.4 __adr_stream.49 stream.57)  <69>;
    (__ct_0.59 var=49) const ()  <70>;
    (__tmp.62 var=52) bool__eq___Pvoid___Pvoid (__fch_stream.58 __ct_0.59)  <73>;
    (__ct_m1.87 var=53) const ()  <99>;
    (__ct_8t0.219 var=104) const ()  <269>;
    (__trgt.232 var=120) const ()  <325>;
    () void_br_bool_t13s_s2 (__tmp.62 __trgt.232)  <326>;
    (__either.233 var=119) undefined ()  <327>;
    if {
        {
            () if_expr (__either.233)  <98>;
        } #7
        {
            (__M_DMw.92 var=5 _hosted_clib_vars_stream_id.93 var=24) store (__ct_m1.87 __adr__hosted_clib_vars.220 _hosted_clib_vars_stream_id.23)  <104>;
            (__adr__hosted_clib_vars.220 var=105) __Pvoid__pl___Pvoid___sint (__rd___sp.51 __ct_8t0.219)  <271>;
        } #9 off=4
        {
            (__fch_stream.94 var=58) load (__M_DMw.4 __adr_stream.49 stream.57)  <106>;
            (__fch___extDMb_FILE_stream.98 var=62) load (__M_DMw.4 __fch_stream.94 __extDMb_FILE_stream.24)  <110>;
            (__M_DMw.102 var=5 _hosted_clib_vars_stream_id.103 var=24) store (__fch___extDMb_FILE_stream.98 __adr__hosted_clib_vars.221 _hosted_clib_vars_stream_id.23)  <114>;
            (__adr__hosted_clib_vars.221 var=106) __Pvoid__pl___Pvoid___sint (__rd___sp.51 __ct_8t0.219)  <272>;
            (__trgt.234 var=121) const ()  <328>;
            () void_j_t21s_s2 (__trgt.234)  <329>;
        } #12 off=3
        {
            (_hosted_clib_vars_stream_id.104 var=24) merge (_hosted_clib_vars_stream_id.93 _hosted_clib_vars_stream_id.103)  <116>;
        } #14
    } #6
    #15 off=5
    (__ct_4t0.52 var=45) const ()  <63>;
    (__adr__hosted_clib_vars.54 var=47) __Pvoid__pl___Pvoid___sint (__rd___sp.51 __ct_4t0.52)  <65>;
    (__ct_9.105 var=66) const ()  <117>;
    (__M_DMw.110 var=5 _hosted_clib_vars_call_type.111 var=26) store (__ct_9.105 __adr__hosted_clib_vars.54 _hosted_clib_vars_call_type.25)  <122>;
    call {
        () chess_separator_scheduler ()  <123>;
    } #16 off=6
    #17 off=7
    (__M_DMw.117 var=5 _hosted_clib_vars_stream_rt.118 var=27) store (__ct_9.105 __adr__hosted_clib_vars.224 _hosted_clib_vars_stream_rt.26)  <129>;
    (__ct_12t0.222 var=107) const ()  <273>;
    (__adr__hosted_clib_vars.224 var=109) __Pvoid__pl___Pvoid___sint (__rd___sp.51 __ct_12t0.222)  <276>;
    call {
        () chess_separator_scheduler ()  <130>;
    } #18 off=8
    #19 off=9
    (clib_hosted_io.122 var=78) const ()  <134>;
    (__link.123 var=79) w32_jal_t21s_s2 (clib_hosted_io.122)  <135>;
    call {
        (__ptr__hosted_clib_vars.119 var=44 stl=X off=10) assign (__adr__hosted_clib_vars.54)  <131>;
        (__link.124 var=79 stl=X off=1) assign (__link.123)  <136>;
        (__extDMb.125 var=17 __extDMb_FILE.126 var=23 __extDMb_FILE_stream.127 var=25 __extDMb_Hosted_clib_vars.128 var=30 __extDMb_void.129 var=29 __extDMb_w32.130 var=22 __extPMb.131 var=16 __extPMb_void.132 var=28 _hosted_clib_vars.133 var=20 _hosted_clib_vars_call_type.134 var=26 _hosted_clib_vars_stream_id.135 var=24 _hosted_clib_vars_stream_rt.136 var=27 errno.137 var=21 __vola.138 var=13) Fclib_hosted_io (__link.124 __ptr__hosted_clib_vars.119 __extDMb.16 __extDMb_FILE.22 __extDMb_FILE_stream.24 __extDMb_Hosted_clib_vars.29 __extDMb_void.28 __extDMb_w32.21 __extPMb.15 __extPMb_void.27 _hosted_clib_vars.19 _hosted_clib_vars_call_type.111 _hosted_clib_vars_stream_id.104 _hosted_clib_vars_stream_rt.118 errno.20 __vola.12)  <137>;
    } #20 off=10
    #22 off=11
    (__fch__hosted_clib_vars_stream_rt.142 var=83) load (__M_DMw.4 __adr__hosted_clib_vars.225 _hosted_clib_vars_stream_rt.136)  <142>;
    (__tmp.145 var=86) bool__ne___sint___sint (__fch__hosted_clib_vars_stream_rt.142 __ct_0.59)  <145>;
    (__adr__hosted_clib_vars.225 var=110) __Pvoid__pl___Pvoid___sint (__rd___sp.51 __ct_12t0.222)  <277>;
    (__trgt.235 var=122) const ()  <330>;
    () void_br_bool_t13s_s2 (__tmp.145 __trgt.235)  <331>;
    (__either.236 var=119) undefined ()  <332>;
    if {
        {
            () if_expr (__either.236)  <170>;
        } #24
        {
            (__ptr_errno.31 var=33) const ()  <42>;
            (__fch__hosted_clib_vars_stream_rt.173 var=90) load (__M_DMw.4 __adr__hosted_clib_vars.223 _hosted_clib_vars_stream_rt.136)  <174>;
            (__M_DMw_stat.174 var=8 errno.175 var=21) store (__fch__hosted_clib_vars_stream_rt.173 __ptr_errno.31 errno.137)  <175>;
            (__adr__hosted_clib_vars.223 var=108) __Pvoid__pl___Pvoid___sint (__rd___sp.51 __ct_12t0.222)  <275>;
        } #26 off=13
        {
            (__trgt.237 var=123) const ()  <333>;
            () void_j_t21s_s2 (__trgt.237)  <334>;
        } #32 off=12
        {
            (errno.180 var=21) merge (errno.175 errno.137)  <183>;
            (__rt.181 var=35) merge (__ct_m1.87 __ct_0.59)  <184>;
        } #33
    } #23
    #35 off=14 nxt=-2
    (__rd___sp.182 var=31) rd_res_reg (__R_SP.11 __sp.45)  <185>;
    (__ct_72s0.183 var=95) const ()  <186>;
    (__tmp.185 var=97) __Pvoid__pl___Pvoid___sint (__rd___sp.182 __ct_72s0.183)  <188>;
    (__R_SP.186 var=12 __sp.187 var=18) wr_res_reg (__tmp.185 __sp.45)  <189>;
    () void___rts_jr_w32 (__la.34)  <190>;
    (__rt.188 var=35 stl=X off=10) assign (__rt.181)  <191>;
    () out (__rt.188)  <192>;
    () sink (__vola.138)  <193>;
    () sink (__extPMb.131)  <196>;
    () sink (__extDMb.125)  <197>;
    () sink (__sp.187)  <198>;
    () sink (stream.57)  <199>;
    () sink (_hosted_clib_vars.133)  <200>;
    () sink (errno.180)  <201>;
    () sink (__extDMb_w32.130)  <202>;
    () sink (__extDMb_FILE.126)  <203>;
    () sink (_hosted_clib_vars_stream_id.135)  <204>;
    () sink (__extDMb_FILE_stream.127)  <205>;
    () sink (_hosted_clib_vars_call_type.134)  <206>;
    () sink (_hosted_clib_vars_stream_rt.136)  <207>;
    () sink (__extPMb_void.132)  <208>;
    () sink (__extDMb_void.129)  <209>;
    () sink (__extDMb_Hosted_clib_vars.128)  <210>;
} #0
0 : 'src/stdio.c';
----------
0 : (0,195:0,0);
3 : (0,195:11,0);
4 : (0,195:11,0);
5 : (0,199:15,3);
6 : (0,199:4,3);
9 : (0,200:36,5);
12 : (0,202:36,8);
15 : (0,205:32,12);
16 : (0,205:32,12);
17 : (0,207:32,13);
18 : (0,207:32,13);
19 : (0,209:19,13);
20 : (0,209:4,13);
22 : (0,211:4,14);
23 : (0,211:4,14);
26 : (0,212:14,16);
32 : (0,215:4,21);
35 : (0,215:4,24);
----------
51 : (0,195:4,0);
52 : (0,195:4,0);
54 : (0,195:4,0);
55 : (0,195:4,0);
57 : (0,195:17,0);
58 : (0,195:17,0);
60 : (0,195:17,0);
62 : (0,197:21,0);
63 : (0,197:21,0);
65 : (0,197:21,0);
67 : (0,195:11,0);
68 : (0,195:11,0);
69 : (0,199:8,3);
70 : (0,199:15,0);
73 : (0,199:15,3);
98 : (0,199:4,3);
99 : (0,200:38,0);
104 : (0,200:25,4);
106 : (0,202:38,7);
110 : (0,202:44,7);
114 : (0,202:25,7);
116 : (0,199:4,10);
117 : (0,205:32,0);
122 : (0,205:21,11);
123 : (0,205:32,12);
129 : (0,207:21,12);
130 : (0,207:32,13);
131 : (0,209:19,0);
135 : (0,209:4,13);
136 : (0,209:4,0);
137 : (0,209:4,13);
142 : (0,211:25,14);
145 : (0,211:4,14);
170 : (0,211:4,14);
174 : (0,212:33,15);
175 : (0,212:8,15);
183 : (0,211:4,23);
184 : (0,211:4,23);
185 : (0,215:4,0);
186 : (0,215:4,0);
188 : (0,215:4,0);
189 : (0,215:4,24);
190 : (0,215:4,24);
191 : (0,215:4,0);
269 : (0,197:21,0);
271 : (0,200:25,4);
272 : (0,202:25,7);
273 : (0,197:21,0);
275 : (0,212:33,15);
276 : (0,207:21,0);
277 : (0,211:25,0);
326 : (0,199:4,3);
331 : (0,211:4,14);

