
// File generated by noodle version U-2022.12#33f3808fcb#221128, Thu Feb 29 17:34:11 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -D__tct_patch__=0 -itrv32p3_cnn_chess.h +Sal +Sca +Osps -Wflla +NOtcr +NOcse +NOlsw +NOifv +NOrle +NOrlt +wDebug/chesswork src/clib_inline.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!! extern inline long atol(const char *)
Fatol : user_defined, called {
    fnm : "atol" 'long atol(const char *)';
    arg : ( w32:i w32:r w32:i );
    loc : ( X[1] X[10] X[11] );
    frm : ( l=4 );
}
****
!!  long strtol(const char * restrict, char ** restrict, int)
Fstrtol : user_defined, called {
    fnm : "strtol" 'long strtol(const char * restrict, char ** restrict, int)';
    arg : ( w32:i w32:r w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] );
}
***/

[
    0 : atol typ=u08 bnd=e stl=PMb
    5 : __M_DMw typ=w32 bnd=d stl=DMw
   12 : __R_SP typ=w32 bnd=d stl=SP
   13 : __vola typ=u08 bnd=b stl=PMb
   16 : __extPMb typ=u08 bnd=b stl=PMb
   17 : __extDMb typ=w08 bnd=b stl=DMb
   18 : __sp typ=w32 bnd=b stl=SP
   19 : nptr typ=w08 val=0t0 bnd=a sz=4 algn=4 stl=DMb tref=__P__cchar_DMb
   20 : __extPMb_void typ=u08 bnd=b stl=PMb
   21 : __extDMb_void typ=w08 bnd=b stl=DMb
   22 : __rd___sp typ=w32 bnd=m
   23 : __la typ=w32 bnd=p tref=w32__
   24 : __rt typ=w32 bnd=p tref=__slong__
   25 : __arg_nptr typ=w32 bnd=p tref=__P__cchar__
   26 : __ct_m4S0 typ=w32 val=-4S0 bnd=m
   28 : __tmp typ=w32 bnd=m
   30 : __ct_0t0 typ=w32 val=0t0 bnd=m
   32 : __adr_nptr typ=w32 bnd=m adro=19
   33 : __fch_nptr typ=w32 bnd=m
   34 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   36 : __ct typ=w32 bnd=m
   37 : __ct_10 typ=w32 val=10f bnd=m
   38 : __ct typ=w32 bnd=m
   41 : strtol typ=t21s_s2 val=0r bnd=m
   42 : __link typ=w32 bnd=m
   43 : __tmp typ=w32 bnd=m
   44 : __ct_4s0 typ=w32 val=4s0 bnd=m
   46 : __tmp typ=w32 bnd=m
]
Fatol {
    #3 off=0
    (__M_DMw.4 var=5) st_def ()  <8>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__vola.12 var=13) source ()  <23>;
    (__extPMb.15 var=16) source ()  <26>;
    (__extDMb.16 var=17) source ()  <27>;
    (__sp.17 var=18) source ()  <28>;
    (nptr.18 var=19) source ()  <29>;
    (__extPMb_void.19 var=20) source ()  <30>;
    (__extDMb_void.20 var=21) source ()  <31>;
    (__la.22 var=23 stl=X off=1) inp ()  <33>;
    (__la.23 var=23) deassign (__la.22)  <34>;
    (__arg_nptr.26 var=25 stl=X off=11) inp ()  <37>;
    (__arg_nptr.27 var=25) deassign (__arg_nptr.26)  <38>;
    (__rd___sp.29 var=22) rd_res_reg (__R_SP.11 __sp.17)  <40>;
    (__ct_m4S0.30 var=26) const ()  <41>;
    (__tmp.32 var=28) __Pvoid__pl___Pvoid___sint (__rd___sp.29 __ct_m4S0.30)  <43>;
    (__R_SP.33 var=12 __sp.34 var=18) wr_res_reg (__tmp.32 __sp.17)  <44>;
    (__rd___sp.35 var=22) rd_res_reg (__R_SP.11 __sp.34)  <46>;
    (__ct_0t0.36 var=30) const ()  <47>;
    (__adr_nptr.38 var=32) __Pvoid__pl___Pvoid___sint (__rd___sp.35 __ct_0t0.36)  <49>;
    (__M_DMw.40 var=5 nptr.41 var=19) store (__arg_nptr.27 __adr_nptr.38 nptr.18)  <51>;
    call {
        () chess_separator_scheduler ()  <52>;
    } #4 off=1
    #5 off=2
    (__fch_nptr.42 var=33) load (__M_DMw.4 __adr_nptr.38 nptr.41)  <53>;
    (__ct_0.44 var=34) const ()  <55>;
    (__ct_10.48 var=37) const ()  <59>;
    (strtol.53 var=41) const ()  <64>;
    (__link.54 var=42) w32_jal_t21s_s2 (strtol.53)  <65>;
    call {
        (__fch_nptr.43 var=33 stl=X off=11) assign (__fch_nptr.42)  <54>;
        (__ct.47 var=36 stl=X off=12) assign (__ct_0.44)  <58>;
        (__ct.50 var=38 stl=X off=13) assign (__ct_10.48)  <61>;
        (__link.55 var=42 stl=X off=1) assign (__link.54)  <66>;
        (__tmp.56 var=43 stl=X off=10 __extDMb.59 var=17 __extDMb_void.60 var=21 __extPMb.61 var=16 __extPMb_void.62 var=20 __vola.63 var=13) Fstrtol (__link.55 __fch_nptr.43 __ct.47 __ct.50 __extDMb.16 __extDMb_void.20 __extPMb.15 __extPMb_void.19 __vola.12)  <67>;
        (__tmp.57 var=43) deassign (__tmp.56)  <68>;
    } #6 off=3
    #8 off=4 nxt=-2
    (__rd___sp.64 var=22) rd_res_reg (__R_SP.11 __sp.34)  <70>;
    (__ct_4s0.65 var=44) const ()  <71>;
    (__tmp.67 var=46) __Pvoid__pl___Pvoid___sint (__rd___sp.64 __ct_4s0.65)  <73>;
    (__R_SP.68 var=12 __sp.69 var=18) wr_res_reg (__tmp.67 __sp.34)  <74>;
    () void___rts_jr_w32 (__la.23)  <75>;
    (__rt.70 var=24 stl=X off=10) assign (__tmp.57)  <76>;
    () out (__rt.70)  <77>;
    () sink (__vola.63)  <78>;
    () sink (__extPMb.61)  <81>;
    () sink (__extDMb.59)  <82>;
    () sink (__sp.69)  <83>;
    () sink (nptr.41)  <84>;
    () sink (__extPMb_void.62)  <85>;
    () sink (__extDMb_void.60)  <86>;
} #0
0 : 'include/stdlib.h';
----------
0 : (0,42:17,0);
3 : (0,42:17,0);
4 : (0,42:17,0);
5 : (0,44:36,2);
6 : (0,44:11,2);
8 : (0,44:4,2);
----------
40 : (0,42:17,0);
41 : (0,42:17,0);
43 : (0,42:17,0);
44 : (0,42:17,0);
46 : (0,42:29,0);
47 : (0,42:29,0);
49 : (0,42:29,0);
51 : (0,42:17,0);
52 : (0,42:17,0);
53 : (0,44:18,2);
54 : (0,44:18,0);
55 : (0,44:24,0);
58 : (0,44:24,0);
59 : (0,44:36,0);
61 : (0,44:36,0);
65 : (0,44:11,2);
66 : (0,44:11,0);
67 : (0,44:11,2);
70 : (0,44:4,0);
71 : (0,44:4,0);
73 : (0,44:4,0);
74 : (0,44:4,2);
75 : (0,44:4,2);
76 : (0,44:17,0);

