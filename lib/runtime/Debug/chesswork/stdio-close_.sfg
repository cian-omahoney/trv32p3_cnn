
// File generated by noodle version U-2022.12#33f3808fcb#221128, Tue Mar 19 17:30:46 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -D__tct_patch__=0 -itrv32p3_cnn_chess.h +Sal +Sca +Osps -Wflla +NOtcr +NOcse +NOifv +NOrle +NOrlt +wDebug/chesswork src/stdio.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!! extern int close(int)
Fclose : user_defined, called {
    fnm : "close" 'int close(int)';
    arg : ( w32:i w32:r w32:i );
    loc : ( X[1] X[10] X[11] );
    frm : ( l=72 );
    llv : 0 0 0 0 0 ;
}
****
!! static void clib_hosted_io(Hosted_clib_vars *)
Fclib_hosted_io : user_defined, called {
    fnm : "clib_hosted_io" 'void clib_hosted_io(Hosted_clib_vars *)';
    arg : ( w32:i w32:i );
    loc : ( X[1] X[10] );
    llv : 0 0 0 0 0 ;
}
***/

[
    0 : close typ=u08 bnd=e stl=PMb
    5 : __M_DMw typ=w32 bnd=d stl=DMw
    8 : __M_DMw_stat typ=w32 bnd=d stl=DMw_stat
   12 : __R_SP typ=w32 bnd=d stl=SP
   13 : __vola typ=u08 bnd=b stl=PMb
   16 : __extPMb typ=u08 bnd=b stl=PMb
   17 : __extDMb typ=w08 bnd=b stl=DMb
   18 : __sp typ=w32 bnd=b stl=SP
   19 : fd typ=w08 val=0t0 bnd=a sz=4 algn=4 stl=DMb tref=__sint_DMb
   20 : _hosted_clib_vars typ=w08 val=4t0 bnd=a sz=68 algn=4 stl=DMb tref=Hosted_clib_vars_DMb
   21 : errno typ=w08 bnd=e sz=4 algn=4 stl=DMb_stat tref=__sint_DMb_stat
   22 : __extDMb_w32 typ=w08 bnd=b stl=DMb
   23 : _hosted_clib_vars_stream_id typ=w08 bnd=B stl=DMb
   24 : _hosted_clib_vars_call_type typ=w08 bnd=B stl=DMb
   25 : _hosted_clib_vars_stream_rt typ=w08 bnd=B stl=DMb
   26 : __extPMb_void typ=u08 bnd=b stl=PMb
   27 : __extDMb_void typ=w08 bnd=b stl=DMb
   28 : __extDMb_Hosted_clib_vars typ=w08 bnd=b stl=DMb
   29 : __rd___sp typ=w32 bnd=m
   31 : __ptr_errno typ=w32 val=0a bnd=m adro=21
   32 : __la typ=w32 bnd=p tref=w32__
   33 : __rt typ=w32 bnd=p tref=__sint__
   34 : __arg_fd typ=w32 bnd=p tref=__sint__
   35 : __ct_m72S0 typ=w32 val=-72S0 bnd=m
   37 : __tmp typ=w32 bnd=m
   39 : __ct_0t0 typ=w32 val=0t0 bnd=m
   41 : __adr_fd typ=w32 bnd=m adro=19
   42 : __ptr__hosted_clib_vars typ=w32 bnd=m
   43 : __ct_4t0 typ=w32 val=4t0 bnd=m
   45 : __adr__hosted_clib_vars typ=w32 bnd=m adro=20
   46 : __fch_fd typ=w32 bnd=m
   50 : __ct_32 typ=w32 val=32f bnd=m
   52 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   62 : clib_hosted_io typ=t21s_s2 val=0r bnd=m
   63 : __link typ=w32 bnd=m
   67 : __fch__hosted_clib_vars_stream_rt typ=w32 bnd=m
   70 : __tmp typ=bool bnd=m
   74 : __fch__hosted_clib_vars_stream_rt typ=w32 bnd=m
   75 : __ct_m1 typ=w32 val=-1f bnd=m
   79 : __ct_72s0 typ=w32 val=72s0 bnd=m
   81 : __tmp typ=w32 bnd=m
   88 : __ct_12t0 typ=w32 val=12t0 bnd=m
   89 : __adr__hosted_clib_vars typ=w32 bnd=m adro=20
   90 : __ct_8t0 typ=w32 val=8t0 bnd=m
   91 : __adr__hosted_clib_vars typ=w32 bnd=m adro=20
   92 : __adr__hosted_clib_vars typ=w32 bnd=m adro=20
   93 : __adr__hosted_clib_vars typ=w32 bnd=m adro=20
  102 : __either typ=bool bnd=m
  103 : __trgt typ=t13s_s2 val=0j bnd=m
  104 : __trgt typ=t21s_s2 val=0j bnd=m
]
Fclose {
    #3 off=0
    (__M_DMw.4 var=5) st_def ()  <8>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__vola.12 var=13) source ()  <23>;
    (__extPMb.15 var=16) source ()  <26>;
    (__extDMb.16 var=17) source ()  <27>;
    (__sp.17 var=18) source ()  <28>;
    (fd.18 var=19) source ()  <29>;
    (_hosted_clib_vars.19 var=20) source ()  <30>;
    (errno.20 var=21) source ()  <31>;
    (__extDMb_w32.21 var=22) source ()  <32>;
    (_hosted_clib_vars_stream_id.22 var=23) source ()  <33>;
    (_hosted_clib_vars_call_type.23 var=24) source ()  <34>;
    (_hosted_clib_vars_stream_rt.24 var=25) source ()  <35>;
    (__extPMb_void.25 var=26) source ()  <36>;
    (__extDMb_void.26 var=27) source ()  <37>;
    (__extDMb_Hosted_clib_vars.27 var=28) source ()  <38>;
    (__la.31 var=32 stl=X off=1) inp ()  <42>;
    (__la.32 var=32) deassign (__la.31)  <43>;
    (__arg_fd.35 var=34 stl=X off=11) inp ()  <46>;
    (__arg_fd.36 var=34) deassign (__arg_fd.35)  <47>;
    (__rd___sp.38 var=29) rd_res_reg (__R_SP.11 __sp.17)  <49>;
    (__ct_m72S0.39 var=35) const ()  <50>;
    (__tmp.41 var=37) __Pvoid__pl___Pvoid___sint (__rd___sp.38 __ct_m72S0.39)  <52>;
    (__R_SP.42 var=12 __sp.43 var=18) wr_res_reg (__tmp.41 __sp.17)  <53>;
    (__rd___sp.44 var=29) rd_res_reg (__R_SP.11 __sp.43)  <55>;
    (__ct_0t0.45 var=39) const ()  <56>;
    (__adr_fd.47 var=41) __Pvoid__pl___Pvoid___sint (__rd___sp.44 __ct_0t0.45)  <58>;
    (__rd___sp.49 var=29) rd_res_reg (__R_SP.11 __sp.43)  <60>;
    (__M_DMw.54 var=5 fd.55 var=19) store (__arg_fd.36 __adr_fd.47 fd.18)  <65>;
    call {
        () chess_separator_scheduler ()  <66>;
    } #4 off=1
    #5 off=2
    (__fch_fd.56 var=46) load (__M_DMw.4 __adr_fd.47 fd.55)  <67>;
    (__M_DMw.60 var=5 _hosted_clib_vars_stream_id.61 var=23) store (__fch_fd.56 __adr__hosted_clib_vars.174 _hosted_clib_vars_stream_id.22)  <71>;
    (__ct_8t0.173 var=90) const ()  <221>;
    (__adr__hosted_clib_vars.174 var=91) __Pvoid__pl___Pvoid___sint (__rd___sp.49 __ct_8t0.173)  <223>;
    call {
        () chess_separator_scheduler ()  <72>;
    } #6 off=3
    #7 off=4
    (__ct_4t0.50 var=43) const ()  <61>;
    (__adr__hosted_clib_vars.52 var=45) __Pvoid__pl___Pvoid___sint (__rd___sp.49 __ct_4t0.50)  <63>;
    (__ct_32.62 var=50) const ()  <73>;
    (__M_DMw.67 var=5 _hosted_clib_vars_call_type.68 var=24) store (__ct_32.62 __adr__hosted_clib_vars.52 _hosted_clib_vars_call_type.23)  <78>;
    call {
        () chess_separator_scheduler ()  <79>;
    } #8 off=5
    #9 off=6
    (__ct_0.64 var=52) const ()  <75>;
    (__M_DMw.74 var=5 _hosted_clib_vars_stream_rt.75 var=25) store (__ct_0.64 __adr__hosted_clib_vars.175 _hosted_clib_vars_stream_rt.24)  <85>;
    (__ct_12t0.171 var=88) const ()  <218>;
    (__adr__hosted_clib_vars.175 var=92) __Pvoid__pl___Pvoid___sint (__rd___sp.49 __ct_12t0.171)  <224>;
    call {
        () chess_separator_scheduler ()  <86>;
    } #10 off=7
    #11 off=8
    (clib_hosted_io.79 var=62) const ()  <90>;
    (__link.80 var=63) w32_jal_t21s_s2 (clib_hosted_io.79)  <91>;
    call {
        (__ptr__hosted_clib_vars.76 var=42 stl=X off=10) assign (__adr__hosted_clib_vars.52)  <87>;
        (__link.81 var=63 stl=X off=1) assign (__link.80)  <92>;
        (__extDMb.82 var=17 __extDMb_Hosted_clib_vars.83 var=28 __extDMb_void.84 var=27 __extDMb_w32.85 var=22 __extPMb.86 var=16 __extPMb_void.87 var=26 _hosted_clib_vars.88 var=20 _hosted_clib_vars_call_type.89 var=24 _hosted_clib_vars_stream_id.90 var=23 _hosted_clib_vars_stream_rt.91 var=25 errno.92 var=21 __vola.93 var=13) Fclib_hosted_io (__link.81 __ptr__hosted_clib_vars.76 __extDMb.16 __extDMb_Hosted_clib_vars.27 __extDMb_void.26 __extDMb_w32.21 __extPMb.15 __extPMb_void.25 _hosted_clib_vars.19 _hosted_clib_vars_call_type.68 _hosted_clib_vars_stream_id.61 _hosted_clib_vars_stream_rt.75 errno.20 __vola.12)  <93>;
    } #12 off=9
    #14 off=10
    (__fch__hosted_clib_vars_stream_rt.97 var=67) load (__M_DMw.4 __adr__hosted_clib_vars.176 _hosted_clib_vars_stream_rt.91)  <98>;
    (__tmp.100 var=70) bool__ne___sint___sint (__fch__hosted_clib_vars_stream_rt.97 __ct_0.64)  <101>;
    (__adr__hosted_clib_vars.176 var=93) __Pvoid__pl___Pvoid___sint (__rd___sp.49 __ct_12t0.171)  <225>;
    (__trgt.183 var=103) const ()  <271>;
    () void_br_bool_t13s_s2 (__tmp.100 __trgt.183)  <272>;
    (__either.184 var=102) undefined ()  <273>;
    if {
        {
            () if_expr (__either.184)  <124>;
        } #16
        {
            (__ptr_errno.29 var=31) const ()  <40>;
            (__fch__hosted_clib_vars_stream_rt.126 var=74) load (__M_DMw.4 __adr__hosted_clib_vars.172 _hosted_clib_vars_stream_rt.91)  <128>;
            (__M_DMw_stat.127 var=8 errno.128 var=21) store (__fch__hosted_clib_vars_stream_rt.126 __ptr_errno.29 errno.92)  <129>;
            (__ct_m1.129 var=75) const ()  <131>;
            (__adr__hosted_clib_vars.172 var=89) __Pvoid__pl___Pvoid___sint (__rd___sp.49 __ct_12t0.171)  <220>;
        } #28 off=12
        {
            (__trgt.185 var=104) const ()  <274>;
            () void_j_t21s_s2 (__trgt.185)  <275>;
        } #24 off=11
        {
            (errno.133 var=21) merge (errno.128 errno.92)  <137>;
            (__rt.134 var=33) merge (__ct_m1.129 __ct_0.64)  <138>;
        } #25
    } #15
    #27 off=13 nxt=-2
    (__rd___sp.135 var=29) rd_res_reg (__R_SP.11 __sp.43)  <139>;
    (__ct_72s0.136 var=79) const ()  <140>;
    (__tmp.138 var=81) __Pvoid__pl___Pvoid___sint (__rd___sp.135 __ct_72s0.136)  <142>;
    (__R_SP.139 var=12 __sp.140 var=18) wr_res_reg (__tmp.138 __sp.43)  <143>;
    () void___rts_jr_w32 (__la.32)  <144>;
    (__rt.141 var=33 stl=X off=10) assign (__rt.134)  <145>;
    () out (__rt.141)  <146>;
    () sink (__vola.93)  <147>;
    () sink (__extPMb.86)  <150>;
    () sink (__extDMb.82)  <151>;
    () sink (__sp.140)  <152>;
    () sink (fd.55)  <153>;
    () sink (_hosted_clib_vars.88)  <154>;
    () sink (errno.133)  <155>;
    () sink (__extDMb_w32.85)  <156>;
    () sink (_hosted_clib_vars_stream_id.90)  <157>;
    () sink (_hosted_clib_vars_call_type.89)  <158>;
    () sink (_hosted_clib_vars_stream_rt.91)  <159>;
    () sink (__extPMb_void.87)  <160>;
    () sink (__extDMb_void.84)  <161>;
    () sink (__extDMb_Hosted_clib_vars.83)  <162>;
} #0
0 : 'src/stdio.c';
----------
0 : (0,704:0,0);
3 : (0,704:10,0);
4 : (0,704:10,0);
5 : (0,707:32,4);
6 : (0,707:32,4);
7 : (0,708:32,5);
8 : (0,708:32,5);
9 : (0,710:32,6);
10 : (0,710:32,6);
11 : (0,712:19,6);
12 : (0,712:4,6);
14 : (0,713:4,7);
15 : (0,713:4,7);
24 : (0,717:4,14);
27 : (0,717:4,17);
----------
49 : (0,704:4,0);
50 : (0,704:4,0);
52 : (0,704:4,0);
53 : (0,704:4,0);
55 : (0,704:14,0);
56 : (0,704:14,0);
58 : (0,704:14,0);
60 : (0,706:21,0);
61 : (0,706:21,0);
63 : (0,706:21,0);
65 : (0,704:10,0);
66 : (0,704:10,0);
67 : (0,707:34,3);
71 : (0,707:21,3);
72 : (0,707:32,4);
73 : (0,708:32,0);
75 : (0,708:21,0);
78 : (0,708:21,4);
79 : (0,708:32,5);
85 : (0,710:21,5);
86 : (0,710:32,6);
87 : (0,712:19,0);
91 : (0,712:4,6);
92 : (0,712:4,0);
93 : (0,712:4,6);
98 : (0,713:25,7);
101 : (0,713:4,7);
124 : (0,713:4,7);
128 : (0,714:33,8);
129 : (0,714:8,8);
131 : (0,715:15,0);
137 : (0,713:4,16);
138 : (0,713:4,16);
139 : (0,717:4,0);
140 : (0,717:4,0);
142 : (0,717:4,0);
143 : (0,717:4,17);
144 : (0,717:4,17);
145 : (0,717:4,0);
218 : (0,706:21,0);
220 : (0,714:33,8);
221 : (0,706:21,0);
223 : (0,707:21,0);
224 : (0,710:21,0);
225 : (0,713:25,0);
272 : (0,713:4,7);

