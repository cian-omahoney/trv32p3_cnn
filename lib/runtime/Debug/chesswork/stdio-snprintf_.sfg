
// File generated by noodle version U-2022.12#33f3808fcb#221128, Thu Feb 29 15:23:25 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -D__tct_patch__=0 -itrv32p3_cnn_chess.h +Sal +Sca +Osps -Wflla +NOtcr +NOcse +NOlsw +NOifv +NOrle +NOrlt +wDebug/chesswork src/stdio.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!! extern int snprintf(char *, size_t, const char *, ...)
Fsnprintf : user_defined, called {
    fnm : "snprintf" 'int snprintf(char *, size_t, const char *, ...)';
    arg : ( w32:i w32:r w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] );
    frm : ( l=88 );
    llv : 0 0 0 0 0 ;
}
****
!! static void clib_hosted_io(Hosted_clib_vars *)
Fclib_hosted_io : user_defined, called {
    fnm : "clib_hosted_io" 'void clib_hosted_io(Hosted_clib_vars *)';
    arg : ( w32:i w32:i );
    loc : ( X[1] X[10] );
    llv : 0 0 0 0 0 ;
}
***/

[
    0 : snprintf typ=u08 bnd=e stl=PMb
    5 : __M_DMw typ=w32 bnd=d stl=DMw
   12 : __R_SP typ=w32 bnd=d stl=SP
   13 : __vola typ=u08 bnd=b stl=PMb
   16 : __extPMb typ=u08 bnd=b stl=PMb
   17 : __extDMb typ=w08 bnd=b stl=DMb
   18 : __sp typ=w32 bnd=b stl=SP
   19 : format typ=w08 val=0t0 bnd=a sz=4 algn=4 stl=DMb tref=__P__cchar_DMb
   20 : size typ=w08 val=4t0 bnd=a sz=4 algn=4 stl=DMb tref=size_t_DMb
   21 : str typ=w08 val=8t0 bnd=a sz=4 algn=4 stl=DMb tref=__P__cchar_DMb
   22 : ap typ=w08 val=12t0 bnd=a sz=4 algn=4 stl=DMb tref=va_list_DMb
   23 : __inl__hosted_clib_vars typ=w08 val=20t0 bnd=a sz=68 algn=4 stl=DMb tref=Hosted_clib_vars_DMb
   24 : rt typ=w08 val=16t0 bnd=a sz=4 algn=4 stl=DMb tref=__sint_DMb
   25 : __extPMb_void typ=u08 bnd=b stl=PMb
   26 : __inl__hosted_clib_vars_gets_s typ=w08 bnd=B stl=DMb
   27 : __inl__hosted_clib_vars_size typ=w08 bnd=B stl=DMb
   28 : __inl__hosted_clib_vars_format typ=w08 bnd=B stl=DMb
   29 : __inl__hosted_clib_vars_ap typ=w08 bnd=B stl=DMb
   30 : __inl__hosted_clib_vars_call_type typ=w08 bnd=B stl=DMb
   31 : __inl__hosted_clib_vars_stream_rt typ=w08 bnd=B stl=DMb
   32 : __extDMb_void typ=w08 bnd=b stl=DMb
   33 : __extDMb_Hosted_clib_vars typ=w08 bnd=b stl=DMb
   34 : __extDMb___PDMbvoid typ=w08 bnd=b stl=DMb
   35 : __extDMb_w32 typ=w08 bnd=b stl=DMb
   36 : __extDMb___Pvoid typ=w08 bnd=b stl=DMb
   37 : __rd___sp typ=w32 bnd=m
   38 : __la typ=w32 bnd=p tref=w32__
   39 : __rt typ=w32 bnd=p tref=__sint__
   40 : __arg_str typ=w32 bnd=p tref=__P__cchar__
   41 : __arg_size typ=w32 bnd=p tref=size_t__
   42 : __arg_format typ=w32 bnd=p tref=__P__cchar__
   43 : __ct_m88S0 typ=w32 val=-88S0 bnd=m
   45 : __tmp typ=w32 bnd=m
   46 : __ct_88t0 typ=w32 val=88t0 bnd=m
   48 : __tmp typ=w32 bnd=m
   50 : __ct_0t0 typ=w32 val=0t0 bnd=m
   52 : __adr_format typ=w32 bnd=m adro=19
   54 : __ct_4t0 typ=w32 val=4t0 bnd=m
   56 : __adr_size typ=w32 bnd=m adro=20
   58 : __ct_8t0 typ=w32 val=8t0 bnd=m
   60 : __adr_str typ=w32 bnd=m adro=21
   62 : __ct_12t0 typ=w32 val=12t0 bnd=m
   64 : __adr_ap typ=w32 bnd=m adro=22
   65 : __ptr___inl__hosted_clib_vars typ=w32 bnd=m
   66 : __ct_20t0 typ=w32 val=20t0 bnd=m
   68 : __adr___inl__hosted_clib_vars typ=w32 bnd=m adro=23
   70 : __ct_16t0 typ=w32 val=16t0 bnd=m
   72 : __adr_rt typ=w32 bnd=m adro=24
   82 : __fch_str typ=w32 bnd=m
   83 : __fch_size typ=w32 bnd=m
   84 : __fch_format typ=w32 bnd=m
   85 : __fch_ap typ=w32 bnd=m
   98 : __ct_24 typ=w32 val=24f bnd=m
  103 : __ct_m1 typ=w32 val=-1f bnd=m
  110 : clib_hosted_io typ=t21s_s2 val=0r bnd=m
  111 : __link typ=w32 bnd=m
  115 : __fch___inl__hosted_clib_vars_stream_rt typ=w32 bnd=m
  120 : __ct_88s0 typ=w32 val=88s0 bnd=m
  122 : __tmp typ=w32 bnd=m
  129 : __ct_64t0 typ=w32 val=64t0 bnd=m
  130 : __adr___inl__hosted_clib_vars typ=w32 bnd=m adro=23
  131 : __ct_68t0 typ=w32 val=68t0 bnd=m
  132 : __adr___inl__hosted_clib_vars typ=w32 bnd=m adro=23
  133 : __ct_40t0 typ=w32 val=40t0 bnd=m
  134 : __adr___inl__hosted_clib_vars typ=w32 bnd=m adro=23
  135 : __ct_84t0 typ=w32 val=84t0 bnd=m
  136 : __adr___inl__hosted_clib_vars typ=w32 bnd=m adro=23
  137 : __ct_28t0 typ=w32 val=28t0 bnd=m
  138 : __adr___inl__hosted_clib_vars typ=w32 bnd=m adro=23
  139 : __adr___inl__hosted_clib_vars typ=w32 bnd=m adro=23
]
Fsnprintf {
    #3 off=0
    (__M_DMw.4 var=5) st_def ()  <8>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__vola.12 var=13) source ()  <23>;
    (__extPMb.15 var=16) source ()  <26>;
    (__extDMb.16 var=17) source ()  <27>;
    (__sp.17 var=18) source ()  <28>;
    (format.18 var=19) source ()  <29>;
    (size.19 var=20) source ()  <30>;
    (str.20 var=21) source ()  <31>;
    (ap.21 var=22) source ()  <32>;
    (__inl__hosted_clib_vars.22 var=23) source ()  <33>;
    (rt.23 var=24) source ()  <34>;
    (__extPMb_void.24 var=25) source ()  <35>;
    (__inl__hosted_clib_vars_gets_s.25 var=26) source ()  <36>;
    (__inl__hosted_clib_vars_size.26 var=27) source ()  <37>;
    (__inl__hosted_clib_vars_format.27 var=28) source ()  <38>;
    (__inl__hosted_clib_vars_ap.28 var=29) source ()  <39>;
    (__inl__hosted_clib_vars_call_type.29 var=30) source ()  <40>;
    (__inl__hosted_clib_vars_stream_rt.30 var=31) source ()  <41>;
    (__extDMb_void.31 var=32) source ()  <42>;
    (__extDMb_Hosted_clib_vars.32 var=33) source ()  <43>;
    (__extDMb___PDMbvoid.33 var=34) source ()  <44>;
    (__extDMb_w32.34 var=35) source ()  <45>;
    (__extDMb___Pvoid.35 var=36) source ()  <46>;
    (__la.37 var=38 stl=X off=1) inp ()  <48>;
    (__la.38 var=38) deassign (__la.37)  <49>;
    (__arg_str.41 var=40 stl=X off=11) inp ()  <52>;
    (__arg_str.42 var=40) deassign (__arg_str.41)  <53>;
    (__arg_size.44 var=41 stl=X off=12) inp ()  <55>;
    (__arg_size.45 var=41) deassign (__arg_size.44)  <56>;
    (__arg_format.47 var=42 stl=X off=13) inp ()  <58>;
    (__arg_format.48 var=42) deassign (__arg_format.47)  <59>;
    (__rd___sp.50 var=37) rd_res_reg (__R_SP.11 __sp.17)  <61>;
    (__ct_m88S0.51 var=43) const ()  <62>;
    (__tmp.53 var=45) __Pvoid__pl___Pvoid___sint (__rd___sp.50 __ct_m88S0.51)  <64>;
    (__R_SP.54 var=12 __sp.55 var=18) wr_res_reg (__tmp.53 __sp.17)  <65>;
    (__rd___sp.56 var=37) rd_res_reg (__R_SP.11 __sp.55)  <66>;
    (__rd___sp.60 var=37) rd_res_reg (__R_SP.11 __sp.55)  <71>;
    (__ct_0t0.61 var=50) const ()  <72>;
    (__adr_format.63 var=52) __Pvoid__pl___Pvoid___sint (__rd___sp.60 __ct_0t0.61)  <74>;
    (__rd___sp.65 var=37) rd_res_reg (__R_SP.11 __sp.55)  <76>;
    (__rd___sp.70 var=37) rd_res_reg (__R_SP.11 __sp.55)  <81>;
    (__rd___sp.75 var=37) rd_res_reg (__R_SP.11 __sp.55)  <86>;
    (__rd___sp.80 var=37) rd_res_reg (__R_SP.11 __sp.55)  <91>;
    (__rd___sp.85 var=37) rd_res_reg (__R_SP.11 __sp.55)  <96>;
    (__M_DMw.99 var=5 format.100 var=19) store (__arg_format.48 __adr_format.63 format.18)  <110>;
    call {
        () chess_separator_scheduler ()  <111>;
    } #4 off=1
    #5 off=2
    (__ct_4t0.66 var=54) const ()  <77>;
    (__adr_size.68 var=56) __Pvoid__pl___Pvoid___sint (__rd___sp.65 __ct_4t0.66)  <79>;
    (__M_DMw.101 var=5 size.102 var=20) store (__arg_size.45 __adr_size.68 size.19)  <112>;
    call {
        () chess_separator_scheduler ()  <113>;
    } #6 off=3
    #7 off=4
    (__ct_8t0.71 var=58) const ()  <82>;
    (__adr_str.73 var=60) __Pvoid__pl___Pvoid___sint (__rd___sp.70 __ct_8t0.71)  <84>;
    (__M_DMw.103 var=5 str.104 var=21) store (__arg_str.42 __adr_str.73 str.20)  <114>;
    call {
        () chess_separator_scheduler ()  <115>;
    } #8 off=5
    #9 off=6
    (__ct_88t0.57 var=46) const ()  <67>;
    (__tmp.59 var=48) __Pvoid__pl___Pvoid___sint (__rd___sp.56 __ct_88t0.57)  <69>;
    (__ct_12t0.76 var=62) const ()  <87>;
    (__adr_ap.78 var=64) __Pvoid__pl___Pvoid___sint (__rd___sp.75 __ct_12t0.76)  <89>;
    (__M_DMw.105 var=5 ap.106 var=22) store (__tmp.59 __adr_ap.78 ap.21)  <116>;
    call {
        () chess_separator_scheduler ()  <119>;
    } #12 off=7
    #13 off=8
    (__fch_str.109 var=82) load (__M_DMw.4 __adr_str.73 str.104)  <121>;
    call {
        () chess_separator_scheduler ()  <122>;
    } #14 off=9
    #15 off=10
    (__fch_size.111 var=83) load (__M_DMw.4 __adr_size.68 size.102)  <124>;
    call {
        () chess_separator_scheduler ()  <125>;
    } #16 off=11
    #17 off=12
    (__fch_format.113 var=84) load (__M_DMw.4 __adr_format.63 format.100)  <127>;
    call {
        () chess_separator_scheduler ()  <128>;
    } #18 off=13
    #19 off=14
    (__fch_ap.115 var=85) load (__M_DMw.4 __adr_ap.78 ap.106)  <130>;
    call {
        () chess_separator_scheduler ()  <139>;
    } #28 off=15
    #29 off=16
    (__M_DMw.123 var=5 __inl__hosted_clib_vars_gets_s.124 var=26) store (__fch_str.109 __adr___inl__hosted_clib_vars.248 __inl__hosted_clib_vars_gets_s.25)  <143>;
    (__ct_64t0.247 var=129) const ()  <320>;
    (__adr___inl__hosted_clib_vars.248 var=130) __Pvoid__pl___Pvoid___sint (__rd___sp.80 __ct_64t0.247)  <322>;
    call {
        () chess_separator_scheduler ()  <144>;
    } #30 off=17
    #31 off=18
    (__M_DMw.128 var=5 __inl__hosted_clib_vars_size.129 var=27) store (__fch_size.111 __adr___inl__hosted_clib_vars.250 __inl__hosted_clib_vars_size.26)  <148>;
    (__ct_68t0.249 var=131) const ()  <323>;
    (__adr___inl__hosted_clib_vars.250 var=132) __Pvoid__pl___Pvoid___sint (__rd___sp.80 __ct_68t0.249)  <325>;
    call {
        () chess_separator_scheduler ()  <149>;
    } #32 off=19
    #33 off=20
    (__M_DMw.133 var=5 __inl__hosted_clib_vars_format.134 var=28) store (__fch_format.113 __adr___inl__hosted_clib_vars.252 __inl__hosted_clib_vars_format.27)  <153>;
    (__ct_40t0.251 var=133) const ()  <326>;
    (__adr___inl__hosted_clib_vars.252 var=134) __Pvoid__pl___Pvoid___sint (__rd___sp.80 __ct_40t0.251)  <328>;
    call {
        () chess_separator_scheduler ()  <154>;
    } #34 off=21
    #35 off=22
    (__M_DMw.138 var=5 __inl__hosted_clib_vars_ap.139 var=29) store (__fch_ap.115 __adr___inl__hosted_clib_vars.254 __inl__hosted_clib_vars_ap.28)  <158>;
    (__ct_84t0.253 var=135) const ()  <329>;
    (__adr___inl__hosted_clib_vars.254 var=136) __Pvoid__pl___Pvoid___sint (__rd___sp.80 __ct_84t0.253)  <331>;
    call {
        () chess_separator_scheduler ()  <159>;
    } #36 off=23
    #37 off=24
    (__ct_20t0.81 var=66) const ()  <92>;
    (__adr___inl__hosted_clib_vars.83 var=68) __Pvoid__pl___Pvoid___sint (__rd___sp.80 __ct_20t0.81)  <94>;
    (__ct_24.140 var=98) const ()  <160>;
    (__M_DMw.145 var=5 __inl__hosted_clib_vars_call_type.146 var=30) store (__ct_24.140 __adr___inl__hosted_clib_vars.83 __inl__hosted_clib_vars_call_type.29)  <165>;
    call {
        () chess_separator_scheduler ()  <166>;
    } #38 off=25
    #39 off=26
    (__ct_m1.147 var=103) const ()  <167>;
    (__M_DMw.152 var=5 __inl__hosted_clib_vars_stream_rt.153 var=31) store (__ct_m1.147 __adr___inl__hosted_clib_vars.256 __inl__hosted_clib_vars_stream_rt.30)  <172>;
    (__ct_28t0.255 var=137) const ()  <332>;
    (__adr___inl__hosted_clib_vars.256 var=138) __Pvoid__pl___Pvoid___sint (__rd___sp.80 __ct_28t0.255)  <334>;
    call {
        () chess_separator_scheduler ()  <173>;
    } #40 off=27
    #41 off=28
    (clib_hosted_io.157 var=110) const ()  <177>;
    (__link.158 var=111) w32_jal_t21s_s2 (clib_hosted_io.157)  <178>;
    call {
        (__ptr___inl__hosted_clib_vars.154 var=65 stl=X off=10) assign (__adr___inl__hosted_clib_vars.83)  <174>;
        (__link.159 var=111 stl=X off=1) assign (__link.158)  <179>;
        (__extDMb.160 var=17 __extDMb_Hosted_clib_vars.161 var=33 __extDMb___PDMbvoid.162 var=34 __extDMb___Pvoid.163 var=36 __extDMb_void.164 var=32 __extDMb_w32.165 var=35 __extPMb.166 var=16 __extPMb_void.167 var=25 __inl__hosted_clib_vars.168 var=23 __inl__hosted_clib_vars_ap.169 var=29 __inl__hosted_clib_vars_call_type.170 var=30 __inl__hosted_clib_vars_format.171 var=28 __inl__hosted_clib_vars_gets_s.172 var=26 __inl__hosted_clib_vars_size.173 var=27 __inl__hosted_clib_vars_stream_rt.174 var=31 __vola.175 var=13) Fclib_hosted_io (__link.159 __ptr___inl__hosted_clib_vars.154 __extDMb.16 __extDMb_Hosted_clib_vars.32 __extDMb___PDMbvoid.33 __extDMb___Pvoid.35 __extDMb_void.31 __extDMb_w32.34 __extPMb.15 __extPMb_void.24 __inl__hosted_clib_vars.22 __inl__hosted_clib_vars_ap.139 __inl__hosted_clib_vars_call_type.146 __inl__hosted_clib_vars_format.134 __inl__hosted_clib_vars_gets_s.124 __inl__hosted_clib_vars_size.129 __inl__hosted_clib_vars_stream_rt.153 __vola.12)  <180>;
    } #42 off=29
    #44 off=30
    (__fch___inl__hosted_clib_vars_stream_rt.179 var=115) load (__M_DMw.4 __adr___inl__hosted_clib_vars.257 __inl__hosted_clib_vars_stream_rt.174)  <185>;
    (__adr___inl__hosted_clib_vars.257 var=139) __Pvoid__pl___Pvoid___sint (__rd___sp.80 __ct_28t0.255)  <335>;
    call {
        () chess_separator_scheduler ()  <186>;
    } #45 off=31
    #46 off=32
    (__ct_16t0.86 var=70) const ()  <97>;
    (__adr_rt.88 var=72) __Pvoid__pl___Pvoid___sint (__rd___sp.85 __ct_16t0.86)  <99>;
    (__M_DMw.180 var=5 rt.181 var=24) store (__fch___inl__hosted_clib_vars_stream_rt.179 __adr_rt.88 rt.23)  <187>;
    call {
        () chess_separator_scheduler ()  <192>;
    } #49 off=33
    #52 off=34 nxt=-2
    (__rt.185 var=39) load (__M_DMw.4 __adr_rt.88 rt.181)  <193>;
    (__rd___sp.186 var=37) rd_res_reg (__R_SP.11 __sp.55)  <194>;
    (__ct_88s0.187 var=120) const ()  <195>;
    (__tmp.189 var=122) __Pvoid__pl___Pvoid___sint (__rd___sp.186 __ct_88s0.187)  <197>;
    (__R_SP.190 var=12 __sp.191 var=18) wr_res_reg (__tmp.189 __sp.55)  <198>;
    () void___rts_jr_w32 (__la.38)  <199>;
    (__rt.192 var=39 stl=X off=10) assign (__rt.185)  <200>;
    () out (__rt.192)  <201>;
    () sink (__vola.175)  <202>;
    () sink (__extPMb.166)  <205>;
    () sink (__extDMb.160)  <206>;
    () sink (__sp.191)  <207>;
    () sink (format.100)  <208>;
    () sink (size.102)  <209>;
    () sink (str.104)  <210>;
    () sink (ap.106)  <211>;
    () sink (__inl__hosted_clib_vars.168)  <212>;
    () sink (rt.181)  <213>;
    () sink (__extPMb_void.167)  <214>;
    () sink (__inl__hosted_clib_vars_gets_s.172)  <215>;
    () sink (__inl__hosted_clib_vars_size.173)  <216>;
    () sink (__inl__hosted_clib_vars_format.171)  <217>;
    () sink (__inl__hosted_clib_vars_ap.169)  <218>;
    () sink (__inl__hosted_clib_vars_call_type.170)  <219>;
    () sink (__inl__hosted_clib_vars_stream_rt.174)  <220>;
    () sink (__extDMb_void.164)  <221>;
    () sink (__extDMb_Hosted_clib_vars.161)  <222>;
    () sink (__extDMb___PDMbvoid.162)  <223>;
    () sink (__extDMb_w32.165)  <224>;
    () sink (__extDMb___Pvoid.163)  <225>;
} #0
0 : 'src/stdio.c';
----------
0 : (0,780:0,0);
3 : (0,780:37,0);
4 : (0,780:37,0);
5 : (0,780:24,0);
6 : (0,780:24,0);
7 : (0,780:13,0);
8 : (0,780:13,0);
9 : (0,783:6,7);
12 : (0,784:13,9);
13 : (0,784:24,10);
14 : (0,784:24,10);
15 : (0,784:29,11);
16 : (0,784:29,11);
17 : (0,784:35,12);
18 : (0,784:35,12);
19 : (0,784:43,13);
28 : (0,784:13,17);
29 : (0,784:13,20);
30 : (0,784:13,20);
31 : (0,784:13,21);
32 : (0,784:13,21);
33 : (0,784:13,22);
34 : (0,784:13,22);
35 : (0,784:13,23);
36 : (0,784:13,23);
37 : (0,784:13,24);
38 : (0,784:13,24);
39 : (0,784:13,25);
40 : (0,784:13,25);
41 : (0,784:13,25);
42 : (0,784:13,25);
44 : (0,784:13,27);
45 : (0,784:13,27);
46 : (0,784:11,30);
49 : (0,785:1,31);
52 : (0,786:4,31);
----------
61 : (0,780:4,0);
62 : (0,780:4,0);
64 : (0,780:4,0);
65 : (0,780:4,0);
66 : (0,780:4,0);
67 : (0,780:4,0);
69 : (0,780:4,0);
71 : (0,780:49,0);
72 : (0,780:49,0);
74 : (0,780:49,0);
76 : (0,780:31,0);
77 : (0,780:31,0);
79 : (0,780:31,0);
81 : (0,780:19,0);
82 : (0,780:19,0);
84 : (0,780:19,0);
86 : (0,782:12,0);
87 : (0,782:12,0);
89 : (0,782:12,0);
91 : (0,784:13,0);
92 : (0,784:13,0);
94 : (0,784:13,0);
96 : (0,784:8,0);
97 : (0,784:8,0);
99 : (0,784:8,0);
110 : (0,780:37,0);
111 : (0,780:37,0);
112 : (0,780:24,0);
113 : (0,780:24,0);
114 : (0,780:13,0);
115 : (0,780:13,0);
116 : (0,783:2,6);
119 : (0,784:13,9);
121 : (0,784:24,10);
122 : (0,784:24,10);
124 : (0,784:29,11);
125 : (0,784:29,11);
127 : (0,784:35,12);
128 : (0,784:35,12);
130 : (0,784:43,13);
139 : (0,784:13,17);
143 : (0,784:13,19);
144 : (0,784:13,20);
148 : (0,784:13,20);
149 : (0,784:13,21);
153 : (0,784:13,21);
154 : (0,784:13,22);
158 : (0,784:13,22);
159 : (0,784:13,23);
160 : (0,784:13,0);
165 : (0,784:13,23);
166 : (0,784:13,24);
167 : (0,784:13,0);
172 : (0,784:13,24);
173 : (0,784:13,25);
174 : (0,784:13,0);
178 : (0,784:13,25);
179 : (0,784:13,0);
180 : (0,784:13,25);
185 : (0,784:13,26);
186 : (0,784:13,27);
187 : (0,784:13,29);
192 : (0,785:1,31);
193 : (0,786:11,31);
194 : (0,786:4,0);
195 : (0,786:4,0);
197 : (0,786:4,0);
198 : (0,786:4,31);
199 : (0,786:4,31);
200 : (0,786:11,0);
320 : (0,784:13,0);
322 : (0,784:13,0);
323 : (0,784:13,0);
325 : (0,784:13,0);
326 : (0,784:13,0);
328 : (0,784:13,0);
329 : (0,784:13,0);
331 : (0,784:13,0);
332 : (0,784:13,0);
334 : (0,784:13,0);
335 : (0,784:13,0);

