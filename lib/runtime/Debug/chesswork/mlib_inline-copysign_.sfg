
// File generated by noodle version U-2022.12#33f3808fcb#221128, Tue Mar 19 17:13:53 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -D__tct_patch__=0 -itrv32p3_cnn_chess.h +Sal +Sca +Osps -Wflla +NOtcr +NOcse +NOifv +NOrle +NOrlt +wDebug/chesswork src/mlib_inline.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!! extern inline double copysign(double, double)
Fcopysign : user_defined, called {
    fnm : "copysign" 'double copysign(double, double)';
    arg : ( w32:i w32:r w32:r w32:i w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] X[14] X[15] );
    frm : ( l=16 );
}
****
***/

[
    0 : copysign typ=u08 bnd=e stl=PMb
    5 : __M_DMw typ=w32 bnd=d stl=DMw
   12 : __R_SP typ=w32 bnd=d stl=SP
   18 : __sp typ=w32 bnd=b stl=SP
   19 : y typ=w08 val=0t0 bnd=a sz=8 algn=4 stl=DMb tref=__fdouble_DMb
   20 : x typ=w08 val=8t0 bnd=a sz=8 algn=4 stl=DMb tref=__fdouble_DMb
   21 : y_low typ=w08 bnd=B stl=DMb
   22 : y_high typ=w08 bnd=B stl=DMb
   23 : x_low typ=w08 bnd=B stl=DMb
   24 : x_high typ=w08 bnd=B stl=DMb
   25 : __rd___sp typ=w32 bnd=m
   26 : __la typ=w32 bnd=p tref=w32__
   28 : __rt_low typ=w32 bnd=m tref=__uint__
   29 : __rt_high typ=w32 bnd=m tref=__uint__
   31 : __arg_x_low typ=w32 bnd=m tref=__uint__
   32 : __arg_x_high typ=w32 bnd=m tref=__uint__
   34 : __arg_y_low typ=w32 bnd=m tref=__uint__
   35 : __arg_y_high typ=w32 bnd=m tref=__uint__
   36 : __ct_m16S0 typ=w32 val=-16S0 bnd=m
   38 : __tmp typ=w32 bnd=m
   40 : __ct_0t0 typ=w32 val=0t0 bnd=m
   42 : __adr_y typ=w32 bnd=m adro=19
   44 : __ct_8t0 typ=w32 val=8t0 bnd=m
   46 : __adr_x typ=w32 bnd=m adro=20
   58 : __fch_x_low typ=w32 bnd=m
   61 : __fch_x_high typ=w32 bnd=m
   71 : __fch_y_high typ=w32 bnd=m
   80 : __ct_16s0 typ=w32 val=16s0 bnd=m
   82 : __tmp typ=w32 bnd=m
   91 : __ct_4t0 typ=w32 val=4t0 bnd=m
   92 : __adr_y typ=w32 bnd=m adro=19
   93 : __adr_y typ=w32 bnd=m adro=19
   94 : __ct_12t0 typ=w32 val=12t0 bnd=m
   95 : __adr_x typ=w32 bnd=m adro=20
   96 : __adr_x typ=w32 bnd=m adro=20
  107 : __tmp_high typ=w32 bnd=m
  115 : __tmp_high typ=w32 bnd=m
  129 : __tmp_high typ=w32 bnd=m
  138 : __ct_2147483647 typ=w32 val=2147483647f bnd=m
  140 : __ct_2147483648 typ=t20s_rp12 val=-524288f bnd=m
]
Fcopysign {
    #3 off=0
    (__M_DMw.4 var=5) st_def ()  <8>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__sp.17 var=18) source ()  <28>;
    (y_low.20 var=21) source ()  <31>;
    (y_high.21 var=22) source ()  <32>;
    (x_low.22 var=23) source ()  <33>;
    (x_high.23 var=24) source ()  <34>;
    (__la.25 var=26 stl=X off=1) inp ()  <36>;
    (__la.26 var=26) deassign (__la.25)  <37>;
    (__arg_x_low.34 var=31 stl=X off=12) inp ()  <45>;
    (__arg_x_low.35 var=31) deassign (__arg_x_low.34)  <46>;
    (__arg_x_high.38 var=32 stl=X off=13) inp ()  <49>;
    (__arg_x_high.39 var=32) deassign (__arg_x_high.38)  <50>;
    (__arg_y_low.43 var=34 stl=X off=14) inp ()  <54>;
    (__arg_y_low.44 var=34) deassign (__arg_y_low.43)  <55>;
    (__arg_y_high.47 var=35 stl=X off=15) inp ()  <58>;
    (__arg_y_high.48 var=35) deassign (__arg_y_high.47)  <59>;
    (__rd___sp.51 var=25) rd_res_reg (__R_SP.11 __sp.17)  <62>;
    (__ct_m16S0.52 var=36) const ()  <63>;
    (__tmp.54 var=38) __Pvoid__pl___Pvoid___sint (__rd___sp.51 __ct_m16S0.52)  <65>;
    (__R_SP.55 var=12 __sp.56 var=18) wr_res_reg (__tmp.54 __sp.17)  <66>;
    (__rd___sp.57 var=25) rd_res_reg (__R_SP.11 __sp.56)  <68>;
    (__ct_0t0.58 var=40) const ()  <69>;
    (__adr_y.60 var=42) __Pvoid__pl___Pvoid___sint (__rd___sp.57 __ct_0t0.58)  <71>;
    (__rd___sp.62 var=25) rd_res_reg (__R_SP.11 __sp.56)  <73>;
    (__M_DMw.68 var=5 y_low.69 var=21) store (__arg_y_low.44 __adr_y.60 y_low.20)  <79>;
    (__M_DMw.74 var=5 y_high.75 var=22) store (__arg_y_high.48 __adr_y.164 y_high.21)  <84>;
    (__ct_4t0.163 var=91) const ()  <205>;
    (__adr_y.164 var=92) __Pvoid__pl___Pvoid___sint (__rd___sp.57 __ct_4t0.163)  <207>;
    call {
        () chess_separator_scheduler ()  <85>;
    } #4 off=1
    #5 off=2
    (__ct_8t0.63 var=44) const ()  <74>;
    (__adr_x.65 var=46) __Pvoid__pl___Pvoid___sint (__rd___sp.62 __ct_8t0.63)  <76>;
    (__M_DMw.77 var=5 x_low.78 var=23) store (__arg_x_low.35 __adr_x.65 x_low.22)  <87>;
    (__M_DMw.83 var=5 x_high.84 var=24) store (__arg_x_high.39 __adr_x.167 x_high.23)  <92>;
    (__ct_12t0.166 var=94) const ()  <209>;
    (__adr_x.167 var=95) __Pvoid__pl___Pvoid___sint (__rd___sp.62 __ct_12t0.166)  <211>;
    call {
        () chess_separator_scheduler ()  <103>;
    } #8 off=3
    #11 off=4 nxt=-2
    (__fch_x_low.95 var=58) load (__M_DMw.4 __adr_x.65 x_low.78)  <105>;
    (__fch_x_high.100 var=61) load (__M_DMw.4 __adr_x.168 x_high.84)  <110>;
    (__fch_y_high.113 var=71) load (__M_DMw.4 __adr_y.165 y_high.75)  <123>;
    (__rd___sp.123 var=25) rd_res_reg (__R_SP.11 __sp.56)  <133>;
    (__ct_16s0.124 var=80) const ()  <134>;
    (__tmp.126 var=82) __Pvoid__pl___Pvoid___sint (__rd___sp.123 __ct_16s0.124)  <136>;
    (__R_SP.127 var=12 __sp.128 var=18) wr_res_reg (__tmp.126 __sp.56)  <137>;
    () void___rts_jr_w32 (__la.26)  <138>;
    (__rt_low.130 var=28 stl=X off=10) assign (__fch_x_low.95)  <140>;
    () out (__rt_low.130)  <141>;
    (__rt_high.132 var=29 stl=X off=11) assign (__tmp_high.210)  <143>;
    () out (__rt_high.132)  <144>;
    () sink (__sp.128)  <154>;
    () sink (y_low.69)  <157>;
    () sink (y_high.75)  <158>;
    () sink (x_low.78)  <159>;
    () sink (x_high.84)  <160>;
    (__adr_y.165 var=93) __Pvoid__pl___Pvoid___sint (__rd___sp.57 __ct_4t0.163)  <208>;
    (__adr_x.168 var=96) __Pvoid__pl___Pvoid___sint (__rd___sp.62 __ct_12t0.166)  <212>;
    (__tmp_high.176 var=107) __uint__ad___uint___uint (__fch_x_high.100 __ct_2147483647.225)  <231>;
    (__tmp_high.193 var=115) __uint__ad___uint___uint (__fch_y_high.113 __ct_2147483648.227)  <252>;
    (__tmp_high.210 var=129) __uint__or___uint___uint (__tmp_high.176 __tmp_high.193)  <273>;
    (__ct_2147483647.225 var=138) const ()  <302>;
    (__ct_2147483648.227 var=140) const ()  <306>;
} #0
0 : 'include/math.h';
----------
0 : (0,40:23,0);
3 : (0,40:33,0);
4 : (0,40:33,0);
5 : (0,40:23,0);
8 : (0,42:4,4);
11 : (0,44:4,4);
----------
62 : (0,40:23,0);
63 : (0,40:23,0);
65 : (0,40:23,0);
66 : (0,40:23,0);
68 : (0,40:40,0);
69 : (0,40:40,0);
71 : (0,40:40,0);
73 : (0,40:30,0);
74 : (0,40:30,0);
76 : (0,40:30,0);
79 : (0,40:33,0);
84 : (0,40:33,0);
85 : (0,40:33,0);
87 : (0,40:23,0);
92 : (0,40:23,0);
103 : (0,42:4,4);
105 : (0,44:31,4);
110 : (0,44:31,4);
123 : (0,44:68,4);
133 : (0,44:4,0);
134 : (0,44:4,0);
136 : (0,44:4,0);
137 : (0,44:4,4);
138 : (0,44:4,4);
140 : (0,44:20,0);
143 : (0,44:20,0);
205 : (0,40:40,0);
209 : (0,40:30,0);
231 : (0,44:34,4);
252 : (0,44:71,4);
273 : (0,44:56,4);
302 : (0,44:36,0);
306 : (0,44:71,0);

