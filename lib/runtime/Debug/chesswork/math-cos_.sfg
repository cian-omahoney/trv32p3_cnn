
// File generated by noodle version U-2022.12#33f3808fcb#221128, Wed Feb 21 16:33:42 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -D__tct_patch__=0 -itrv32p3_cnn_chess.h +Sal +Sca +Osps -Wflla +NOtcr +NOcse +NOlsw +NOifv +NOrle +NOrlt +wDebug/chesswork src/math.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!! extern double cos(double)
Fcos : user_defined, called {
    fnm : "cos" 'double cos(double)';
    arg : ( w32:i w32:r w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] );
    frm : ( l=40 );
}
****
!! static double kernel_cos(double, double)
Fkernel_cos : user_defined, called {
    fnm : "kernel_cos" 'double kernel_cos(double, double)';
    arg : ( w32:i w32:r w32:r w32:i w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] X[14] X[15] );
    llv : 0 0 0 0 0 ;
}
!! static int32_t rem_pio2(double, double *)
Frem_pio2 : user_defined, called {
    fnm : "rem_pio2" 'int32_t rem_pio2(double, double *)';
    arg : ( w32:i w32:r w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] );
    llv : 0 0 0 0 0 ;
}
!! static double kernel_sin(double, double, int)
Fkernel_sin : user_defined, called {
    fnm : "kernel_sin" 'double kernel_sin(double, double, int)';
    arg : ( w32:i w32:r w32:r w32:i w32:i w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] X[14] X[15] X[16] );
    llv : 0 0 0 0 0 ;
}
!!  float64_t f64_sub(float64_t, float64_t)
Ff64_sub : user_defined, called {
    fnm : "f64_sub" 'float64_t f64_sub(float64_t, float64_t)';
    arg : ( w32:i w32:r w32:r w32:i w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] X[14] X[15] );
}
***/

[
    0 : cos typ=u08 bnd=e stl=PMb
    5 : __M_DMw typ=w32 bnd=d stl=DMw
   12 : __R_SP typ=w32 bnd=d stl=SP
   18 : __sp typ=w32 bnd=b stl=SP
   19 : x typ=w08 val=0t0 bnd=a sz=8 algn=4 stl=DMb tref=__fdouble_DMb
   20 : z typ=w08 val=24t0 bnd=a sz=8 algn=4 stl=DMb tref=__fdouble_DMb
   21 : ix typ=w08 val=36t0 bnd=a sz=4 algn=4 stl=DMb tref=int32_t_DMb
   22 : n typ=w08 val=32t0 bnd=a sz=4 algn=4 stl=DMb tref=int32_t_DMb
   23 : y typ=w08 val=8t0 bnd=a sz=16 algn=4 stl=DMb tref=__A2__fdouble_DMb
   24 : x_low typ=w08 bnd=B stl=DMb
   25 : x_high typ=w08 bnd=B stl=DMb
   26 : z_low typ=w08 bnd=B stl=DMb
   27 : z_high typ=w08 bnd=B stl=DMb
   30 : y_low typ=w08 bnd=B stl=DMb
   31 : y_high typ=w08 bnd=B stl=DMb
   33 : __rd___sp typ=w32 bnd=m
   34 : __la typ=w32 bnd=p tref=w32__
   36 : __rt_low typ=w32 bnd=m tref=__uint__
   37 : __rt_high typ=w32 bnd=m tref=__uint__
   39 : __arg_x_low typ=w32 bnd=m tref=__uint__
   40 : __arg_x_high typ=w32 bnd=m tref=__uint__
   41 : __ct_m40S0 typ=w32 val=-40S0 bnd=m
   43 : __tmp typ=w32 bnd=m
   45 : __ct_0t0 typ=w32 val=0t0 bnd=m
   47 : __adr_x typ=w32 bnd=m adro=19
   49 : __ct_24t0 typ=w32 val=24t0 bnd=m
   51 : __adr_z typ=w32 bnd=m adro=20
   53 : __ct_36t0 typ=w32 val=36t0 bnd=m
   55 : __adr_ix typ=w32 bnd=m adro=21
   57 : __ct_32t0 typ=w32 val=32t0 bnd=m
   59 : __adr_n typ=w32 bnd=m adro=22
   60 : __ptr_y typ=w32 bnd=m
   61 : __ct_8t0 typ=w32 val=8t0 bnd=m
   63 : __adr_y typ=w32 bnd=m adro=23
   64 : __case typ=w32 bnd=m lscp=25 tref=__sint__
   77 : __fch_x_high typ=w32 bnd=m
   83 : __fch_ix typ=w32 bnd=m
   84 : __ct_2147483647 typ=w32 val=2147483647f bnd=m
   86 : __tmp typ=w32 bnd=m
   87 : __fch_ix typ=w32 bnd=m
   88 : __ct_1072243195 typ=w32 val=1072243195f bnd=m
   90 : __tmp typ=bool bnd=m
   92 : __fch_x_low typ=w32 bnd=m
   95 : __fch_x_high typ=w32 bnd=m
   96 : __record_low typ=w32 bnd=m tref=__uint__
   97 : __record_high typ=w32 bnd=m tref=__uint__
  102 : __fch_z_high typ=w32 bnd=m
  103 : __record_low typ=w32 bnd=m tref=__uint__
  104 : __record_high typ=w32 bnd=m tref=__uint__
  107 : kernel_cos typ=t21s_s2 val=0r bnd=m
  108 : __link typ=w32 bnd=m
  110 : __tmp typ=w32 bnd=m
  111 : __tmp typ=w32 bnd=m
  112 : __fch_ix typ=w32 bnd=m
  113 : __ct_2146435072 typ=t20s_rp12 val=524032f bnd=m
  115 : __tmp typ=bool bnd=m
  117 : __fch_x_low typ=w32 bnd=m
  120 : __fch_x_high typ=w32 bnd=m
  122 : __fch_x_low typ=w32 bnd=m
  125 : __fch_x_high typ=w32 bnd=m
  128 : __fch_x_low typ=w32 bnd=m
  131 : __fch_x_high typ=w32 bnd=m
  132 : __record_low typ=w32 bnd=m tref=__uint__
  133 : __record_high typ=w32 bnd=m tref=__uint__
  136 : rem_pio2 typ=t21s_s2 val=0r bnd=m
  137 : __link typ=w32 bnd=m
  138 : __tmp typ=w32 bnd=m
  139 : __fch_n typ=w32 bnd=m
  140 : __ct_3 typ=w32 val=3f bnd=m
  143 : __ct_0 typ=t20s_rp12 val=0f bnd=m
  145 : __tmp typ=bool bnd=m
  150 : __fch_y_low typ=w32 bnd=m
  153 : __fch_y_high typ=w32 bnd=m
  154 : __record_low typ=w32 bnd=m tref=__uint__
  155 : __record_high typ=w32 bnd=m tref=__uint__
  160 : __fch_y_low typ=w32 bnd=m
  163 : __fch_y_high typ=w32 bnd=m
  164 : __record_low typ=w32 bnd=m tref=__uint__
  165 : __record_high typ=w32 bnd=m tref=__uint__
  169 : __link typ=w32 bnd=m
  171 : __tmp typ=w32 bnd=m
  172 : __tmp typ=w32 bnd=m
  173 : __ct_1 typ=w32 val=1f bnd=m
  175 : __tmp typ=bool bnd=m
  182 : __fch_y_low typ=w32 bnd=m
  185 : __fch_y_high typ=w32 bnd=m
  186 : __record_low typ=w32 bnd=m tref=__uint__
  187 : __record_high typ=w32 bnd=m tref=__uint__
  192 : __fch_y_low typ=w32 bnd=m
  195 : __fch_y_high typ=w32 bnd=m
  196 : __record_low typ=w32 bnd=m tref=__uint__
  197 : __record_high typ=w32 bnd=m tref=__uint__
  199 : __ct typ=w32 bnd=m
  202 : kernel_sin typ=t21s_s2 val=0r bnd=m
  203 : __link typ=w32 bnd=m
  205 : __tmp typ=w32 bnd=m
  206 : __tmp typ=w32 bnd=m
  208 : __ct_2 typ=w32 val=2f bnd=m
  210 : __tmp typ=bool bnd=m
  217 : __fch_y_low typ=w32 bnd=m
  220 : __fch_y_high typ=w32 bnd=m
  221 : __record_low typ=w32 bnd=m tref=__uint__
  222 : __record_high typ=w32 bnd=m tref=__uint__
  227 : __fch_y_low typ=w32 bnd=m
  230 : __fch_y_high typ=w32 bnd=m
  231 : __record_low typ=w32 bnd=m tref=__uint__
  232 : __record_high typ=w32 bnd=m tref=__uint__
  236 : __link typ=w32 bnd=m
  238 : __tmp typ=w32 bnd=m
  239 : __tmp typ=w32 bnd=m
  245 : __fch_y_low typ=w32 bnd=m
  248 : __fch_y_high typ=w32 bnd=m
  249 : __record_low typ=w32 bnd=m tref=__uint__
  250 : __record_high typ=w32 bnd=m tref=__uint__
  255 : __fch_y_low typ=w32 bnd=m
  258 : __fch_y_high typ=w32 bnd=m
  259 : __record_low typ=w32 bnd=m tref=__uint__
  260 : __record_high typ=w32 bnd=m tref=__uint__
  262 : __ct typ=w32 bnd=m
  266 : __link typ=w32 bnd=m
  268 : __tmp typ=w32 bnd=m
  269 : __tmp typ=w32 bnd=m
  270 : __ct_40s0 typ=w32 val=40s0 bnd=m
  272 : __tmp typ=w32 bnd=m
  298 : __ct_28t0 typ=w32 val=28t0 bnd=m
  299 : __adr_z typ=w32 bnd=m adro=20
  300 : __ct_4t0 typ=w32 val=4t0 bnd=m
  301 : __adr_x typ=w32 bnd=m adro=19
  302 : __adr_x typ=w32 bnd=m adro=19
  303 : __adr_x typ=w32 bnd=m adro=19
  304 : __ct_12t0 typ=w32 val=12t0 bnd=m
  305 : __adr_y typ=w32 bnd=m adro=23
  306 : __ct_16t0 typ=w32 val=16t0 bnd=m
  307 : __adr_y typ=w32 bnd=m adro=23
  308 : __ct_20t0 typ=w32 val=20t0 bnd=m
  309 : __adr_y typ=w32 bnd=m adro=23
  310 : __adr_y typ=w32 bnd=m adro=23
  311 : __adr_y typ=w32 bnd=m adro=23
  312 : __adr_y typ=w32 bnd=m adro=23
  313 : __adr_y typ=w32 bnd=m adro=23
  314 : __adr_y typ=w32 bnd=m adro=23
  315 : __adr_y typ=w32 bnd=m adro=23
  316 : __adr_y typ=w32 bnd=m adro=23
  317 : __adr_y typ=w32 bnd=m adro=23
  318 : __adr_y typ=w32 bnd=m adro=23
  319 : __adr_x typ=w32 bnd=m adro=19
  320 : __adr_x typ=w32 bnd=m adro=19
  321 : __adr_x typ=w32 bnd=m adro=19
  322 : __adr_z typ=w32 bnd=m adro=20
  366 : a_low typ=w32 bnd=m tref=__uint__
  367 : a_high typ=w32 bnd=m tref=__uint__
  368 : b_low typ=w32 bnd=m tref=__uint__
  369 : b_high typ=w32 bnd=m tref=__uint__
  370 : f64_sub typ=t21s_s2 val=0r bnd=m
  371 : __link typ=w32 bnd=m
  373 : __tmp typ=w32 bnd=m
  374 : __tmp typ=w32 bnd=m
  388 : __either typ=bool bnd=m
  389 : __trgt typ=t13s_s2 val=0j bnd=m
  390 : __trgt typ=t21s_s2 val=0j bnd=m
  391 : __trgt typ=t13s_s2 val=0j bnd=m
  392 : __trgt typ=t21s_s2 val=0j bnd=m
  393 : __trgt typ=t13s_s2 val=0j bnd=m
  394 : __trgt typ=t21s_s2 val=0j bnd=m
  395 : __trgt typ=t13s_s2 val=0j bnd=m
  396 : __trgt typ=t21s_s2 val=0j bnd=m
  397 : __trgt typ=t13s_s2 val=0j bnd=m
  398 : __trgt typ=t21s_s2 val=0j bnd=m
]
Fcos {
    #3 off=0
    (__M_DMw.4 var=5) st_def ()  <8>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__sp.17 var=18) source ()  <28>;
    (ix.20 var=21) source ()  <31>;
    (n.21 var=22) source ()  <32>;
    (y.22 var=23) source ()  <33>;
    (x_low.23 var=24) source ()  <34>;
    (x_high.24 var=25) source ()  <35>;
    (z_low.25 var=26) source ()  <36>;
    (z_high.26 var=27) source ()  <37>;
    (y_low.29 var=30) source ()  <40>;
    (y_high.30 var=31) source ()  <41>;
    (__la.33 var=34 stl=X off=1) inp ()  <44>;
    (__la.34 var=34) deassign (__la.33)  <45>;
    (__arg_x_low.42 var=39 stl=X off=12) inp ()  <53>;
    (__arg_x_low.43 var=39) deassign (__arg_x_low.42)  <54>;
    (__arg_x_high.46 var=40 stl=X off=13) inp ()  <57>;
    (__arg_x_high.47 var=40) deassign (__arg_x_high.46)  <58>;
    (__rd___sp.50 var=33) rd_res_reg (__R_SP.11 __sp.17)  <61>;
    (__ct_m40S0.51 var=41) const ()  <62>;
    (__tmp.53 var=43) __Pvoid__pl___Pvoid___sint (__rd___sp.50 __ct_m40S0.51)  <64>;
    (__R_SP.54 var=12 __sp.55 var=18) wr_res_reg (__tmp.53 __sp.17)  <65>;
    (__rd___sp.56 var=33) rd_res_reg (__R_SP.11 __sp.55)  <67>;
    (__ct_0t0.57 var=45) const ()  <68>;
    (__adr_x.59 var=47) __Pvoid__pl___Pvoid___sint (__rd___sp.56 __ct_0t0.57)  <70>;
    (__rd___sp.61 var=33) rd_res_reg (__R_SP.11 __sp.55)  <72>;
    (__rd___sp.66 var=33) rd_res_reg (__R_SP.11 __sp.55)  <77>;
    (__rd___sp.71 var=33) rd_res_reg (__R_SP.11 __sp.55)  <82>;
    (__rd___sp.76 var=33) rd_res_reg (__R_SP.11 __sp.55)  <87>;
    (__M_DMw.83 var=5 x_low.84 var=24) store (__arg_x_low.43 __adr_x.59 x_low.23)  <94>;
    (__M_DMw.89 var=5 x_high.90 var=25) store (__arg_x_high.47 __adr_x.693 x_high.24)  <99>;
    (__ct_4t0.673 var=300) const ()  <763>;
    (__adr_x.693 var=320) __Pvoid__pl___Pvoid___sint (__rd___sp.56 __ct_4t0.673)  <787>;
    call {
        () chess_separator_scheduler ()  <100>;
    } #4 off=1
    #5 off=2
    (__ct_24t0.62 var=49) const ()  <73>;
    (__adr_z.64 var=51) __Pvoid__pl___Pvoid___sint (__rd___sp.61 __ct_24t0.62)  <75>;
    (__M_DMw.94 var=5 z_low.95 var=26) store (__ct_0.275 __adr_z.64 z_low.25)  <104>;
    (__M_DMw.100 var=5 z_high.101 var=27) store (__ct_0.275 __adr_z.695 z_high.26)  <109>;
    (__ct_0.275 var=143) const ()  <285>;
    (__ct_28t0.671 var=298) const ()  <760>;
    (__adr_z.695 var=322) __Pvoid__pl___Pvoid___sint (__rd___sp.61 __ct_28t0.671)  <789>;
    call {
        () chess_separator_scheduler ()  <110>;
    } #6 off=3
    #120 off=4
    (__ct_36t0.67 var=53) const ()  <78>;
    (__adr_ix.69 var=55) __Pvoid__pl___Pvoid___sint (__rd___sp.66 __ct_36t0.67)  <80>;
    (__fch_x_high.108 var=77) load (__M_DMw.4 __adr_x.694 x_high.90)  <117>;
    (__M_DMw.115 var=5 ix.116 var=21) store (__fch_x_high.108 __adr_ix.69 ix.20)  <124>;
    (__adr_x.694 var=321) __Pvoid__pl___Pvoid___sint (__rd___sp.56 __ct_4t0.673)  <788>;
    call {
        () chess_separator_scheduler ()  <125>;
    } #8 off=5
    #9 off=6
    (__fch_ix.117 var=83) load (__M_DMw.4 __adr_ix.69 ix.116)  <126>;
    (__ct_2147483647.118 var=84) const ()  <127>;
    (__tmp.120 var=86) __sint__ad___sint___sint (__fch_ix.117 __ct_2147483647.118)  <129>;
    (__M_DMw.121 var=5 ix.122 var=21) store (__tmp.120 __adr_ix.69 ix.116)  <130>;
    call {
        () chess_separator_scheduler ()  <131>;
    } #10 off=7
    #111 off=8
    (__fch_ix.123 var=87) load (__M_DMw.4 __adr_ix.69 ix.122)  <132>;
    (__ct_1072243195.124 var=88) const ()  <133>;
    (kernel_cos.182 var=107) const ()  <192>;
    (__tmp.729 var=90) bool__ge___sint___sint (__ct_1072243195.124 __fch_ix.123)  <857>;
    (__trgt.823 var=397) const ()  <1131>;
    () void_br_bool_t13s_s2 (__tmp.729 __trgt.823)  <1132>;
    (__either.824 var=388) undefined ()  <1133>;
    if {
        {
            () if_expr (__either.824)  <165>;
        } #13
        {
            #15 off=38
            (__fch_x_low.157 var=92) load (__M_DMw.4 __adr_x.59 x_low.84)  <167>;
            (__fch_x_high.162 var=95) load (__M_DMw.4 __adr_x.674 x_high.90)  <172>;
            (__fch_z_high.174 var=102) load (__M_DMw.4 __adr_z.672 z_high.101)  <184>;
            (__link.183 var=108) w32_jal_t21s_s2 (kernel_cos.182)  <193>;
            (__adr_z.672 var=299) __Pvoid__pl___Pvoid___sint (__rd___sp.61 __ct_28t0.671)  <762>;
            (__adr_x.674 var=301) __Pvoid__pl___Pvoid___sint (__rd___sp.56 __ct_4t0.673)  <765>;
            call {
                (__record_low.165 var=96 stl=X off=12) assign (__fch_x_low.157)  <175>;
                (__record_high.167 var=97 stl=X off=13) assign (__fch_x_high.162)  <177>;
                (__record_low.177 var=103 stl=X off=14) assign (__ct_0.275)  <187>;
                (__record_high.179 var=104 stl=X off=15) assign (__fch_z_high.174)  <189>;
                (__link.184 var=108 stl=X off=1) assign (__link.183)  <194>;
                (__tmp.186 var=110 stl=X off=10 __tmp.190 var=111 stl=X off=11) Fkernel_cos (__link.184 __record_low.165 __record_high.167 __record_low.177 __record_high.179)  <195>;
                (__tmp.187 var=110) deassign (__tmp.186)  <197>;
                (__tmp.191 var=111) deassign (__tmp.190)  <200>;
            } #16 off=39
        } #14
        {
            #19 off=9
            (__fch_ix.194 var=112) load (__M_DMw.4 __adr_ix.69 ix.122)  <204>;
            (__ct_2146435072.195 var=113) const ()  <205>;
            (__tmp.197 var=115) bool__ge___sint___sint (__fch_ix.194 __ct_2146435072.195)  <207>;
            (f64_sub.746 var=370) const ()  <936>;
            (__trgt.820 var=395) const ()  <1126>;
            () void_br_bool_t13s_s2 (__tmp.197 __trgt.820)  <1127>;
            (__either.821 var=388) undefined ()  <1128>;
            if {
                {
                    () if_expr (__either.821)  <237>;
                } #21
                {
                    #139 off=35
                    (__fch_x_low.228 var=117) load (__M_DMw.4 __adr_x.59 x_low.84)  <239>;
                    (__fch_x_high.233 var=120) load (__M_DMw.4 __adr_x.675 x_high.90)  <244>;
                    (__fch_x_low.236 var=122) load (__M_DMw.4 __adr_x.59 x_low.84)  <247>;
                    (__fch_x_high.241 var=125) load (__M_DMw.4 __adr_x.676 x_high.90)  <252>;
                    (__adr_x.675 var=302) __Pvoid__pl___Pvoid___sint (__rd___sp.56 __ct_4t0.673)  <766>;
                    (__adr_x.676 var=303) __Pvoid__pl___Pvoid___sint (__rd___sp.56 __ct_4t0.673)  <767>;
                    (__link.747 var=371) w32_jal_t21s_s2 (f64_sub.746)  <937>;
                    call {
                        (a_low.748 var=366 stl=X off=12) assign (__fch_x_low.228)  <938>;
                        (a_high.749 var=367 stl=X off=13) assign (__fch_x_high.233)  <939>;
                        (b_low.750 var=368 stl=X off=14) assign (__fch_x_low.236)  <940>;
                        (b_high.751 var=369 stl=X off=15) assign (__fch_x_high.241)  <941>;
                        (__link.752 var=371 stl=X off=1) assign (__link.747)  <942>;
                        (__tmp.753 var=373 stl=X off=10 __tmp.754 var=374 stl=X off=11) Ff64_sub (__link.752 a_low.748 a_high.749 b_low.750 b_high.751)  <943>;
                        (__tmp.756 var=373) deassign (__tmp.753)  <945>;
                        (__tmp.758 var=374) deassign (__tmp.754)  <947>;
                    } #140 off=36
                } #22
                {
                    #26 off=10
                    (__ct_8t0.77 var=61) const ()  <88>;
                    (__adr_y.79 var=63) __Pvoid__pl___Pvoid___sint (__rd___sp.76 __ct_8t0.77)  <90>;
                    (__fch_x_low.245 var=128) load (__M_DMw.4 __adr_x.59 x_low.84)  <257>;
                    (__fch_x_high.250 var=131) load (__M_DMw.4 __adr_x.692 x_high.90)  <262>;
                    (rem_pio2.259 var=136) const ()  <271>;
                    (__link.260 var=137) w32_jal_t21s_s2 (rem_pio2.259)  <272>;
                    (__adr_x.692 var=319) __Pvoid__pl___Pvoid___sint (__rd___sp.56 __ct_4t0.673)  <786>;
                    call {
                        (__record_low.253 var=132 stl=X off=11) assign (__fch_x_low.245)  <265>;
                        (__record_high.255 var=133 stl=X off=12) assign (__fch_x_high.250)  <267>;
                        (__ptr_y.256 var=60 stl=X off=13) assign (__adr_y.79)  <268>;
                        (__link.261 var=137 stl=X off=1) assign (__link.260)  <273>;
                        (__tmp.262 var=138 stl=X off=10 y.265 var=23 y_high.266 var=31 y_low.267 var=30) Frem_pio2 (__link.261 __record_low.253 __record_high.255 __ptr_y.256 y.22 y_high.30 y_low.29)  <274>;
                        (__tmp.263 var=138) deassign (__tmp.262)  <275>;
                    } #27 off=11
                    #28 off=12
                    (__ct_32t0.72 var=57) const ()  <83>;
                    (__adr_n.74 var=59) __Pvoid__pl___Pvoid___sint (__rd___sp.71 __ct_32t0.72)  <85>;
                    (__M_DMw.268 var=5 n.269 var=22) store (__tmp.263 __adr_n.74 n.21)  <277>;
                    call {
                        () chess_separator_scheduler ()  <278>;
                    } #29 off=13
                    #30 off=14
                    (__fch_n.271 var=139) load (__M_DMw.4 __adr_n.74 n.269)  <280>;
                    (__ct_3.272 var=140) const ()  <281>;
                    (__case.274 var=64) __sint__ad___sint___sint (__fch_n.271 __ct_3.272)  <283>;
                    call {
                        () chess_separator_scheduler ()  <284>;
                    } #31 off=15
                    #32 off=16
                    (__tmp.277 var=145) bool__eq___sint___sint (__case.274 __ct_0.275)  <287>;
                    (__ct_12t0.677 var=304) const ()  <768>;
                    (__ct_16t0.679 var=306) const ()  <771>;
                    (__ct_20t0.681 var=308) const ()  <774>;
                    (__trgt.817 var=393) const ()  <1121>;
                    () void_br_bool_t13s_s2 (__tmp.277 __trgt.817)  <1122>;
                    (__either.818 var=388) undefined ()  <1123>;
                    if {
                        {
                            () if_expr (__either.818)  <317>;
                        } #34
                        {
                            #36 off=32
                            (__fch_y_low.311 var=150) load (__M_DMw.4 __adr_y.79 y_low.267)  <322>;
                            (__fch_y_high.316 var=153) load (__M_DMw.4 __adr_y.678 y_high.266)  <327>;
                            (__fch_y_low.326 var=160) load (__M_DMw.4 __adr_y.680 y_low.267)  <337>;
                            (__fch_y_high.331 var=163) load (__M_DMw.4 __adr_y.682 y_high.266)  <342>;
                            (__link.340 var=169) w32_jal_t21s_s2 (kernel_cos.182)  <351>;
                            (__adr_y.678 var=305) __Pvoid__pl___Pvoid___sint (__rd___sp.76 __ct_12t0.677)  <770>;
                            (__adr_y.680 var=307) __Pvoid__pl___Pvoid___sint (__rd___sp.76 __ct_16t0.679)  <773>;
                            (__adr_y.682 var=309) __Pvoid__pl___Pvoid___sint (__rd___sp.76 __ct_20t0.681)  <776>;
                            call {
                                (__record_low.319 var=154 stl=X off=12) assign (__fch_y_low.311)  <330>;
                                (__record_high.321 var=155 stl=X off=13) assign (__fch_y_high.316)  <332>;
                                (__record_low.334 var=164 stl=X off=14) assign (__fch_y_low.326)  <345>;
                                (__record_high.336 var=165 stl=X off=15) assign (__fch_y_high.331)  <347>;
                                (__link.341 var=169 stl=X off=1) assign (__link.340)  <352>;
                                (__tmp.343 var=171 stl=X off=10 __tmp.347 var=172 stl=X off=11) Fkernel_cos (__link.341 __record_low.319 __record_high.321 __record_low.334 __record_high.336)  <353>;
                                (__tmp.344 var=171) deassign (__tmp.343)  <355>;
                                (__tmp.348 var=172) deassign (__tmp.347)  <358>;
                            } #37 off=33
                        } #35
                        {
                            #40 off=17
                            (__ct_1.351 var=173) const ()  <362>;
                            (__tmp.353 var=175) bool__eq___sint___sint (__case.274 __ct_1.351)  <364>;
                            (kernel_sin.420 var=202) const ()  <432>;
                            (__trgt.814 var=391) const ()  <1116>;
                            () void_br_bool_t13s_s2 (__tmp.353 __trgt.814)  <1117>;
                            (__either.815 var=388) undefined ()  <1118>;
                            if {
                                {
                                    () if_expr (__either.815)  <394>;
                                } #42
                                {
                                    #44 off=27
                                    (__fch_y_low.389 var=182) load (__M_DMw.4 __adr_y.79 y_low.267)  <401>;
                                    (__fch_y_high.394 var=185) load (__M_DMw.4 __adr_y.683 y_high.266)  <406>;
                                    (__fch_y_low.404 var=192) load (__M_DMw.4 __adr_y.684 y_low.267)  <416>;
                                    (__fch_y_high.409 var=195) load (__M_DMw.4 __adr_y.685 y_high.266)  <421>;
                                    (__link.421 var=203) w32_jal_t21s_s2 (kernel_sin.420)  <433>;
                                    (__adr_y.683 var=310) __Pvoid__pl___Pvoid___sint (__rd___sp.76 __ct_12t0.677)  <777>;
                                    (__adr_y.684 var=311) __Pvoid__pl___Pvoid___sint (__rd___sp.76 __ct_16t0.679)  <778>;
                                    (__adr_y.685 var=312) __Pvoid__pl___Pvoid___sint (__rd___sp.76 __ct_20t0.681)  <779>;
                                    call {
                                        (__record_low.397 var=186 stl=X off=12) assign (__fch_y_low.389)  <409>;
                                        (__record_high.399 var=187 stl=X off=13) assign (__fch_y_high.394)  <411>;
                                        (__record_low.412 var=196 stl=X off=14) assign (__fch_y_low.404)  <424>;
                                        (__record_high.414 var=197 stl=X off=15) assign (__fch_y_high.409)  <426>;
                                        (__ct.417 var=199 stl=X off=16) assign (__ct_1.351)  <429>;
                                        (__link.422 var=203 stl=X off=1) assign (__link.421)  <434>;
                                        (__tmp.424 var=205 stl=X off=10 __tmp.428 var=206 stl=X off=11) Fkernel_sin (__link.422 __record_low.397 __record_high.399 __record_low.412 __record_high.414 __ct.417)  <435>;
                                        (__tmp.425 var=205) deassign (__tmp.424)  <437>;
                                        (__tmp.429 var=206) deassign (__tmp.428)  <440>;
                                    } #45 off=28
                                    #145 off=29
                                    (__link.768 var=371) w32_jal_t21s_s2 (f64_sub.746)  <960>;
                                    call {
                                        (a_low.769 var=366 stl=X off=12) assign (__ct_0.275)  <961>;
                                        (a_high.770 var=367 stl=X off=13) assign (__ct_0.275)  <962>;
                                        (b_low.771 var=368 stl=X off=14) assign (__tmp.425)  <963>;
                                        (b_high.772 var=369 stl=X off=15) assign (__tmp.429)  <964>;
                                        (__link.773 var=371 stl=X off=1) assign (__link.768)  <965>;
                                        (__tmp.774 var=373 stl=X off=10 __tmp.775 var=374 stl=X off=11) Ff64_sub (__link.773 a_low.769 a_high.770 b_low.771 b_high.772)  <966>;
                                        (__tmp.777 var=373) deassign (__tmp.774)  <968>;
                                        (__tmp.779 var=374) deassign (__tmp.775)  <970>;
                                    } #146 off=30
                                } #43
                                {
                                    #49 off=18
                                    (__ct_2.433 var=208) const ()  <445>;
                                    (__tmp.435 var=210) bool__eq___sint___sint (__case.274 __ct_2.433)  <447>;
                                    (__trgt.811 var=389) const ()  <1111>;
                                    () void_br_bool_t13s_s2 (__tmp.435 __trgt.811)  <1112>;
                                    (__either.812 var=388) undefined ()  <1113>;
                                    if {
                                        {
                                            () if_expr (__either.812)  <477>;
                                        } #51
                                        {
                                            #53 off=22
                                            (__fch_y_low.471 var=217) load (__M_DMw.4 __adr_y.79 y_low.267)  <484>;
                                            (__fch_y_high.476 var=220) load (__M_DMw.4 __adr_y.686 y_high.266)  <489>;
                                            (__fch_y_low.486 var=227) load (__M_DMw.4 __adr_y.687 y_low.267)  <499>;
                                            (__fch_y_high.491 var=230) load (__M_DMw.4 __adr_y.688 y_high.266)  <504>;
                                            (__link.500 var=236) w32_jal_t21s_s2 (kernel_cos.182)  <513>;
                                            (__adr_y.686 var=313) __Pvoid__pl___Pvoid___sint (__rd___sp.76 __ct_12t0.677)  <780>;
                                            (__adr_y.687 var=314) __Pvoid__pl___Pvoid___sint (__rd___sp.76 __ct_16t0.679)  <781>;
                                            (__adr_y.688 var=315) __Pvoid__pl___Pvoid___sint (__rd___sp.76 __ct_20t0.681)  <782>;
                                            call {
                                                (__record_low.479 var=221 stl=X off=12) assign (__fch_y_low.471)  <492>;
                                                (__record_high.481 var=222 stl=X off=13) assign (__fch_y_high.476)  <494>;
                                                (__record_low.494 var=231 stl=X off=14) assign (__fch_y_low.486)  <507>;
                                                (__record_high.496 var=232 stl=X off=15) assign (__fch_y_high.491)  <509>;
                                                (__link.501 var=236 stl=X off=1) assign (__link.500)  <514>;
                                                (__tmp.503 var=238 stl=X off=10 __tmp.507 var=239 stl=X off=11) Fkernel_cos (__link.501 __record_low.479 __record_high.481 __record_low.494 __record_high.496)  <515>;
                                                (__tmp.504 var=238) deassign (__tmp.503)  <517>;
                                                (__tmp.508 var=239) deassign (__tmp.507)  <520>;
                                            } #54 off=23
                                            #151 off=24
                                            (__link.789 var=371) w32_jal_t21s_s2 (f64_sub.746)  <983>;
                                            call {
                                                (a_low.790 var=366 stl=X off=12) assign (__ct_0.275)  <984>;
                                                (a_high.791 var=367 stl=X off=13) assign (__ct_0.275)  <985>;
                                                (b_low.792 var=368 stl=X off=14) assign (__tmp.504)  <986>;
                                                (b_high.793 var=369 stl=X off=15) assign (__tmp.508)  <987>;
                                                (__link.794 var=371 stl=X off=1) assign (__link.789)  <988>;
                                                (__tmp.795 var=373 stl=X off=10 __tmp.796 var=374 stl=X off=11) Ff64_sub (__link.794 a_low.790 a_high.791 b_low.792 b_high.793)  <989>;
                                                (__tmp.798 var=373) deassign (__tmp.795)  <991>;
                                                (__tmp.800 var=374) deassign (__tmp.796)  <993>;
                                            } #152 off=25
                                        } #52
                                        {
                                            #58 off=19
                                            (__fch_y_low.516 var=245) load (__M_DMw.4 __adr_y.79 y_low.267)  <529>;
                                            (__fch_y_high.521 var=248) load (__M_DMw.4 __adr_y.689 y_high.266)  <534>;
                                            (__fch_y_low.531 var=255) load (__M_DMw.4 __adr_y.690 y_low.267)  <544>;
                                            (__fch_y_high.536 var=258) load (__M_DMw.4 __adr_y.691 y_high.266)  <549>;
                                            (__link.548 var=266) w32_jal_t21s_s2 (kernel_sin.420)  <561>;
                                            (__adr_y.689 var=316) __Pvoid__pl___Pvoid___sint (__rd___sp.76 __ct_12t0.677)  <783>;
                                            (__adr_y.690 var=317) __Pvoid__pl___Pvoid___sint (__rd___sp.76 __ct_16t0.679)  <784>;
                                            (__adr_y.691 var=318) __Pvoid__pl___Pvoid___sint (__rd___sp.76 __ct_20t0.681)  <785>;
                                            call {
                                                (__record_low.524 var=249 stl=X off=12) assign (__fch_y_low.516)  <537>;
                                                (__record_high.526 var=250 stl=X off=13) assign (__fch_y_high.521)  <539>;
                                                (__record_low.539 var=259 stl=X off=14) assign (__fch_y_low.531)  <552>;
                                                (__record_high.541 var=260 stl=X off=15) assign (__fch_y_high.536)  <554>;
                                                (__ct.544 var=262 stl=X off=16) assign (__ct_1.351)  <557>;
                                                (__link.549 var=266 stl=X off=1) assign (__link.548)  <562>;
                                                (__tmp.551 var=268 stl=X off=10 __tmp.555 var=269 stl=X off=11) Fkernel_sin (__link.549 __record_low.524 __record_high.526 __record_low.539 __record_high.541 __ct.544)  <563>;
                                                (__tmp.552 var=268) deassign (__tmp.551)  <565>;
                                                (__tmp.556 var=269) deassign (__tmp.555)  <568>;
                                            } #59 off=20
                                            #156 off=21
                                            (__trgt.813 var=390) const ()  <1114>;
                                            () void_j_t21s_s2 (__trgt.813)  <1115>;
                                        } #57
                                        {
                                            (__rt_low.635 var=36) merge (__tmp.798 __tmp.552)  <723>;
                                            (__rt_high.650 var=37) merge (__tmp.800 __tmp.556)  <738>;
                                        } #61
                                    } #50
                                    #157 off=26
                                    (__trgt.816 var=392) const ()  <1119>;
                                    () void_j_t21s_s2 (__trgt.816)  <1120>;
                                } #48
                                {
                                    (__rt_low.632 var=36) merge (__tmp.777 __rt_low.635)  <720>;
                                    (__rt_high.647 var=37) merge (__tmp.779 __rt_high.650)  <735>;
                                } #63
                            } #41
                            #158 off=31
                            (__trgt.819 var=394) const ()  <1124>;
                            () void_j_t21s_s2 (__trgt.819)  <1125>;
                        } #39
                        {
                            (__rt_low.629 var=36) merge (__tmp.344 __rt_low.632)  <717>;
                            (__rt_high.644 var=37) merge (__tmp.348 __rt_high.647)  <732>;
                        } #65
                    } #33
                    #159 off=34
                    (__trgt.822 var=396) const ()  <1129>;
                    () void_j_t21s_s2 (__trgt.822)  <1130>;
                } #25
                {
                    (n.562 var=22) merge (n.21 n.269)  <578>;
                    (y.563 var=23) merge (y.22 y.265)  <579>;
                    (y_low.564 var=30) merge (y_low.29 y_low.267)  <580>;
                    (y_high.565 var=31) merge (y_high.30 y_high.266)  <581>;
                    (__rt_low.626 var=36) merge (__tmp.756 __rt_low.629)  <714>;
                    (__rt_high.641 var=37) merge (__tmp.758 __rt_high.644)  <729>;
                } #67
            } #20
            #160 off=37
            (__trgt.825 var=398) const ()  <1134>;
            () void_j_t21s_s2 (__trgt.825)  <1135>;
        } #18
        {
            (n.568 var=22) merge (n.21 n.562)  <585>;
            (y.569 var=23) merge (y.22 y.563)  <586>;
            (y_low.570 var=30) merge (y_low.29 y_low.564)  <587>;
            (y_high.571 var=31) merge (y_high.30 y_high.565)  <588>;
            (__rt_low.623 var=36) merge (__tmp.187 __rt_low.626)  <711>;
            (__rt_high.638 var=37) merge (__tmp.191 __rt_high.641)  <726>;
        } #69
    } #12
    #71 off=40 nxt=-2
    (__rd___sp.574 var=33) rd_res_reg (__R_SP.11 __sp.55)  <591>;
    (__ct_40s0.575 var=270) const ()  <592>;
    (__tmp.577 var=272) __Pvoid__pl___Pvoid___sint (__rd___sp.574 __ct_40s0.575)  <594>;
    (__R_SP.578 var=12 __sp.579 var=18) wr_res_reg (__tmp.577 __sp.55)  <595>;
    () void___rts_jr_w32 (__la.34)  <596>;
    (__rt_low.581 var=36 stl=X off=10) assign (__rt_low.623)  <598>;
    () out (__rt_low.581)  <599>;
    (__rt_high.583 var=37 stl=X off=11) assign (__rt_high.638)  <601>;
    () out (__rt_high.583)  <602>;
    () sink (__sp.579)  <610>;
    () sink (ix.122)  <613>;
    () sink (n.568)  <614>;
    () sink (y.569)  <615>;
    () sink (x_low.84)  <616>;
    () sink (x_high.90)  <617>;
    () sink (z_low.95)  <618>;
    () sink (z_high.101)  <619>;
    () sink (y_low.570)  <622>;
    () sink (y_high.571)  <623>;
} #0
0 : 'src/math.c';
----------
0 : (0,789:0,0);
3 : (0,789:11,0);
4 : (0,789:11,0);
5 : (0,791:18,2);
6 : (0,791:18,2);
8 : (0,795:4,5);
9 : (0,798:7,6);
10 : (0,798:7,6);
12 : (0,799:4,6);
14 : (0,802:9,7);
15 : (0,799:45,7);
16 : (0,799:32,7);
18 : (0,799:25,10);
19 : (0,802:15,10);
20 : (0,802:9,10);
22 : (0,808:8,11);
25 : (0,802:29,14);
26 : (0,806:23,14);
27 : (0,806:12,14);
28 : (0,806:10,15);
29 : (0,806:10,15);
30 : (0,808:8,15);
31 : (0,808:8,15);
32 : (0,808:8,16);
33 : (0,808:8,16);
35 : (0,809:8,17);
36 : (0,808:42,17);
37 : (0,808:25,17);
39 : (0,808:17,21);
40 : (0,809:8,21);
41 : (0,809:8,21);
43 : (0,810:8,22);
44 : (0,809:46,22);
45 : (0,809:25,22);
48 : (0,809:17,26);
49 : (0,810:8,26);
50 : (0,810:8,26);
52 : (0,811:17,27);
53 : (0,810:42,27);
54 : (0,810:25,27);
57 : (0,810:17,31);
58 : (0,811:46,31);
59 : (0,811:25,31);
71 : (0,799:4,57);
111 : (0,799:10,6);
120 : (0,795:1,4);
139 : (0,802:37,11);
140 : (0,802:37,11);
145 : (0,809:17,23);
146 : (0,809:17,23);
151 : (0,810:17,28);
152 : (0,810:17,28);
----------
61 : (0,789:7,0);
62 : (0,789:7,0);
64 : (0,789:7,0);
65 : (0,789:7,0);
67 : (0,789:18,0);
68 : (0,789:18,0);
70 : (0,789:18,0);
72 : (0,791:16,0);
73 : (0,791:16,0);
75 : (0,791:16,0);
77 : (0,792:15,0);
78 : (0,792:15,0);
80 : (0,792:15,0);
82 : (0,792:12,0);
83 : (0,792:12,0);
85 : (0,792:12,0);
87 : (0,791:11,0);
88 : (0,791:11,0);
90 : (0,791:11,0);
94 : (0,789:11,0);
99 : (0,789:11,0);
100 : (0,789:11,0);
104 : (0,791:18,2);
109 : (0,791:18,2);
110 : (0,791:18,2);
117 : (0,795:21,4);
124 : (0,795:1,4);
125 : (0,795:4,5);
126 : (0,798:4,5);
127 : (0,798:10,0);
129 : (0,798:7,5);
130 : (0,798:4,5);
131 : (0,798:7,6);
132 : (0,799:7,6);
133 : (0,799:13,0);
165 : (0,799:4,6);
167 : (0,799:43,7);
172 : (0,799:43,7);
175 : (0,799:43,0);
177 : (0,799:43,0);
184 : (0,799:45,7);
187 : (0,799:45,0);
189 : (0,799:45,0);
193 : (0,799:32,7);
194 : (0,799:32,0);
195 : (0,799:32,7);
204 : (0,802:13,10);
205 : (0,802:17,0);
207 : (0,802:15,10);
237 : (0,802:9,10);
239 : (0,802:36,11);
244 : (0,802:36,11);
247 : (0,802:38,11);
252 : (0,802:38,11);
257 : (0,806:21,14);
262 : (0,806:21,14);
265 : (0,806:21,0);
267 : (0,806:21,0);
268 : (0,806:23,0);
272 : (0,806:12,14);
273 : (0,806:12,0);
274 : (0,806:12,14);
277 : (0,806:8,14);
278 : (0,806:10,15);
280 : (0,807:15,15);
281 : (0,807:17,0);
283 : (0,807:16,15);
284 : (0,808:8,15);
285 : (0,808:8,0);
287 : (0,808:8,16);
317 : (0,808:8,16);
322 : (0,808:37,17);
327 : (0,808:37,17);
330 : (0,808:37,0);
332 : (0,808:37,0);
337 : (0,808:42,17);
342 : (0,808:42,17);
345 : (0,808:42,0);
347 : (0,808:42,0);
351 : (0,808:25,17);
352 : (0,808:25,0);
353 : (0,808:25,17);
362 : (0,809:8,0);
364 : (0,809:8,21);
394 : (0,809:8,21);
401 : (0,809:37,22);
406 : (0,809:37,22);
409 : (0,809:37,0);
411 : (0,809:37,0);
416 : (0,809:42,22);
421 : (0,809:42,22);
424 : (0,809:42,0);
426 : (0,809:42,0);
429 : (0,809:46,0);
433 : (0,809:25,22);
434 : (0,809:25,0);
435 : (0,809:25,22);
445 : (0,810:8,0);
447 : (0,810:8,26);
477 : (0,810:8,26);
484 : (0,810:37,27);
489 : (0,810:37,27);
492 : (0,810:37,0);
494 : (0,810:37,0);
499 : (0,810:42,27);
504 : (0,810:42,27);
507 : (0,810:42,0);
509 : (0,810:42,0);
513 : (0,810:25,27);
514 : (0,810:25,0);
515 : (0,810:25,27);
529 : (0,811:37,31);
534 : (0,811:37,31);
537 : (0,811:37,0);
539 : (0,811:37,0);
544 : (0,811:42,31);
549 : (0,811:42,31);
552 : (0,811:42,0);
554 : (0,811:42,0);
557 : (0,811:46,0);
561 : (0,811:25,31);
562 : (0,811:25,0);
563 : (0,811:25,31);
578 : (0,802:9,51);
579 : (0,802:9,51);
580 : (0,802:9,51);
581 : (0,802:9,51);
585 : (0,799:4,56);
586 : (0,799:4,56);
587 : (0,799:4,56);
588 : (0,799:4,56);
591 : (0,799:4,0);
592 : (0,799:4,0);
594 : (0,799:4,0);
595 : (0,799:4,57);
596 : (0,799:4,57);
598 : (0,799:4,0);
601 : (0,799:4,0);
760 : (0,791:16,0);
763 : (0,789:18,0);
768 : (0,791:11,0);
771 : (0,791:11,0);
773 : (0,808:42,0);
774 : (0,791:11,0);
778 : (0,809:42,0);
781 : (0,810:42,0);
784 : (0,811:42,0);
857 : (0,799:10,6);
936 : (0,802:37,0);
937 : (0,802:37,11);
938 : (0,802:37,11);
939 : (0,802:37,11);
940 : (0,802:37,11);
941 : (0,802:37,11);
942 : (0,802:37,11);
943 : (0,802:37,11);
945 : (0,802:37,11);
947 : (0,802:37,11);
960 : (0,809:24,22);
961 : (0,809:24,22);
962 : (0,809:24,22);
963 : (0,809:24,22);
964 : (0,809:24,22);
965 : (0,809:24,22);
966 : (0,809:24,22);
968 : (0,809:24,22);
970 : (0,809:24,22);
983 : (0,810:24,27);
984 : (0,810:24,27);
985 : (0,810:24,27);
986 : (0,810:24,27);
987 : (0,810:24,27);
988 : (0,810:24,27);
989 : (0,810:24,27);
991 : (0,810:24,27);
993 : (0,810:24,27);
1112 : (0,810:8,26);
1117 : (0,809:8,21);
1122 : (0,808:8,16);
1127 : (0,802:9,10);
1132 : (0,799:4,6);

