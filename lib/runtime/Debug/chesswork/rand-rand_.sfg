
// File generated by noodle version U-2022.12#33f3808fcb#221128, Fri Mar  8 12:20:20 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -D__tct_patch__=0 -itrv32p3_cnn_chess.h +Sal +Sca +Osps -Wflla +NOtcr +NOcse +NOlsw +NOifv +NOrle +NOrlt +wDebug/chesswork src/rand.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!!  int rand()
Frand : user_defined, called {
    fnm : "rand" 'int rand()';
    arg : ( w32:i w32:r );
    loc : ( X[1] X[10] );
    frm : ( );
}
****
***/

[
    0 : rand typ=u08 bnd=e stl=PMb
    8 : __M_DMw_stat typ=w32 bnd=d stl=DMw_stat
   12 : __R_SP typ=w32 bnd=d stl=SP
   18 : __sp typ=w32 bnd=b stl=SP
   19 : _ZL4next typ=w08 bnd=i sz=4 algn=4 stl=DMb_stat tref=__ulong_DMb_stat
   21 : __rd___sp typ=w32 bnd=m
   23 : __ptr_next typ=w32 val=0a bnd=m adro=19
   24 : __la typ=w32 bnd=p tref=w32__
   25 : __rt typ=w32 bnd=p tref=__sint__
   26 : __ct_0S0 typ=w32 val=0S0 bnd=m
   28 : __tmp typ=w32 bnd=m
   29 : __fch__ZL4next typ=w32 bnd=m
   30 : __ct_1103515245 typ=w32 val=1103515245f bnd=m
   32 : __tmp typ=w32 bnd=m
   33 : __ct_12345 typ=w32 val=12345f bnd=m
   35 : __tmp typ=w32 bnd=m
   36 : __fch__ZL4next typ=w32 bnd=m
   39 : __tmp typ=w32 bnd=m
   42 : __tmp typ=w32 bnd=m
   44 : __ct_0s0 typ=w32 val=0s0 bnd=m
   46 : __tmp typ=w32 bnd=m
   51 : __ct_16 typ=w32 val=16f bnd=m
   52 : __ct_32767 typ=w32 val=32767f bnd=m
]
Frand {
    #3 off=0
    (__M_DMw_stat.7 var=8) st_def ()  <14>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__sp.17 var=18) source ()  <28>;
    (_ZL4next.18 var=19) source ()  <29>;
    (__ptr_next.21 var=23) const ()  <32>;
    (__la.23 var=24 stl=X off=1) inp ()  <34>;
    (__la.24 var=24) deassign (__la.23)  <35>;
    (__rd___sp.27 var=21) rd_res_reg (__R_SP.11 __sp.17)  <38>;
    (__ct_0S0.28 var=26) const ()  <39>;
    (__tmp.30 var=28) __Pvoid__pl___Pvoid___sint (__rd___sp.27 __ct_0S0.28)  <41>;
    (__R_SP.31 var=12 __sp.32 var=18) wr_res_reg (__tmp.30 __sp.17)  <42>;
    (__fch__ZL4next.33 var=29) load (__M_DMw_stat.7 __ptr_next.21 _ZL4next.18)  <44>;
    (__ct_1103515245.34 var=30) const ()  <45>;
    (__tmp.36 var=32) __uint__ml___uint___uint (__fch__ZL4next.33 __ct_1103515245.34)  <47>;
    (__ct_12345.37 var=33) const ()  <48>;
    (__tmp.39 var=35) __uint__pl___uint___uint (__tmp.36 __ct_12345.37)  <50>;
    (__M_DMw_stat.40 var=8 _ZL4next.41 var=19) store (__tmp.39 __ptr_next.21 _ZL4next.18)  <51>;
    call {
        () chess_separator_scheduler ()  <52>;
    } #4 off=1
    #7 off=2 nxt=-2
    (__fch__ZL4next.42 var=36) load (__M_DMw_stat.7 __ptr_next.21 _ZL4next.41)  <53>;
    (__tmp.45 var=39) __uint__rs___uint___sint (__fch__ZL4next.42 __ct_16.72)  <56>;
    (__tmp.48 var=42) __uint__ad___uint___uint (__tmp.45 __ct_32767.73)  <59>;
    (__rd___sp.50 var=21) rd_res_reg (__R_SP.11 __sp.32)  <61>;
    (__ct_0s0.51 var=44) const ()  <62>;
    (__tmp.53 var=46) __Pvoid__pl___Pvoid___sint (__rd___sp.50 __ct_0s0.51)  <64>;
    (__R_SP.54 var=12 __sp.55 var=18) wr_res_reg (__tmp.53 __sp.32)  <65>;
    () void___rts_jr_w32 (__la.24)  <66>;
    (__rt.56 var=25 stl=X off=10) assign (__tmp.48)  <67>;
    () out (__rt.56)  <68>;
    () sink (__sp.55)  <74>;
    () sink (_ZL4next.41)  <75>;
    (__ct_16.72 var=51) const ()  <110>;
    (__ct_32767.73 var=52) const ()  <112>;
} #0
0 : 'src/rand.c';
----------
0 : (0,25:0,0);
3 : (0,27:9,2);
4 : (0,27:9,2);
7 : (0,28:4,2);
----------
38 : (0,25:4,0);
39 : (0,25:4,0);
41 : (0,25:4,0);
42 : (0,25:4,0);
44 : (0,27:11,1);
45 : (0,27:16,0);
47 : (0,27:16,1);
48 : (0,27:29,0);
50 : (0,27:29,1);
51 : (0,27:4,1);
52 : (0,27:9,2);
53 : (0,28:26,2);
56 : (0,28:30,2);
59 : (0,28:38,2);
61 : (0,28:4,0);
62 : (0,28:4,0);
64 : (0,28:4,0);
65 : (0,28:4,2);
66 : (0,28:4,2);
67 : (0,28:38,0);
110 : (0,28:30,0);
112 : (0,28:38,0);

