
// File generated by noodle version U-2022.12#33f3808fcb#221128, Sat Mar 16 14:40:50 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -D__tct_patch__=0 -itrv32p3_cnn_chess.h +Sal +Sca +Osps -Wflla +NOtcr +NOcse +NOifv +NOrle +NOrlt +wDebug/chesswork src/atexit.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!!  int __cxa_atexit(void (*)(void *), void *, void *)
F__cxa_atexit : user_defined, called {
    fnm : "__cxa_atexit" 'int __cxa_atexit(void (*)(void *), void *, void *)';
    arg : ( w32:i w32:r w32:i w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] X[13] );
    frm : ( l=12 );
    llv : 0 0 0 0 0 ;
}
****
***/

[
    0 : __cxa_atexit typ=u08 bnd=e stl=PMb
    5 : __M_DMw typ=w32 bnd=d stl=DMw
    8 : __M_DMw_stat typ=w32 bnd=d stl=DMw_stat
   12 : __R_SP typ=w32 bnd=d stl=SP
   18 : __sp typ=w32 bnd=b stl=SP
   19 : dso_handle typ=w08 val=0t0 bnd=a sz=4 algn=4 stl=DMb tref=__Pvoid_DMb
   20 : arg typ=w08 val=4t0 bnd=a sz=4 algn=4 stl=DMb tref=__Pvoid_DMb
   21 : func typ=w08 val=8t0 bnd=a sz=4 algn=4 stl=DMb tref=__Pvoid_____Pvoid_DMb_1
   22 : _ZL10atexit_nxt typ=w08 bnd=i sz=4 algn=4 stl=DMb_stat tref=__Patexit_pair_DMb_stat
   24 : _ZL7atexits typ=w08 bnd=i sz=512 algn=4 stl=DMb tref=__A64atexit_pair_DMb
   28 : __extDMb_atexit_pair_func typ=w08 bnd=b stl=DMb
   30 : _ZL7atexits_func typ=w08 bnd=b stl=DMb
   31 : __extDMb_atexit_pair_arg typ=w08 bnd=b stl=DMb
   33 : _ZL7atexits_arg typ=w08 bnd=b stl=DMb
   34 : __rd___sp typ=w32 bnd=m
   36 : __ptr_atexit_nxt typ=w32 val=0a bnd=m adro=22
   39 : __la typ=w32 bnd=p tref=w32__
   40 : __rt typ=w32 bnd=p tref=__sint__
   41 : __arg_func typ=w32 bnd=p tref=__Pvoid_____Pvoid__
   42 : __arg_arg typ=w32 bnd=p tref=__Pvoid__
   43 : __arg_dso_handle typ=w32 bnd=p tref=__Pvoid__
   44 : __ct_m12S0 typ=w32 val=-12S0 bnd=m
   46 : __tmp typ=w32 bnd=m
   48 : __ct_0t0 typ=w32 val=0t0 bnd=m
   50 : __adr_dso_handle typ=w32 bnd=m adro=19
   52 : __ct_4t0 typ=w32 val=4t0 bnd=m
   54 : __adr_arg typ=w32 bnd=m adro=20
   56 : __ct_8t0 typ=w32 val=8t0 bnd=m
   58 : __adr_func typ=w32 bnd=m adro=21
   62 : __fch__ZL10atexit_nxt typ=w32 bnd=m
   66 : __tmp typ=bool bnd=m
   67 : __ct_m1 typ=w32 val=-1f bnd=m
   69 : __fch_func typ=w32 bnd=m
   70 : __fch__ZL10atexit_nxt typ=w32 bnd=m
   71 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   74 : __fch_arg typ=w32 bnd=m
   75 : __fch__ZL10atexit_nxt typ=w32 bnd=m
   76 : __ct_4 typ=w32 val=4f bnd=m
   78 : __tmp typ=w32 bnd=m
   79 : __fch__ZL10atexit_nxt typ=w32 bnd=m
   80 : __ct_8 typ=w32 val=8f bnd=m
   82 : __tmp typ=w32 bnd=m
   85 : __ct_12s0 typ=w32 val=12s0 bnd=m
   87 : __tmp typ=w32 bnd=m
   92 : __ptr__ZL7atexits__a512 typ=w32 val=512a bnd=m adro=24
  101 : __either typ=bool bnd=m
  102 : __trgt typ=t13s_s2 val=0j bnd=m
  103 : __trgt typ=t21s_s2 val=0j bnd=m
]
F__cxa_atexit {
    #3 off=0
    (__M_DMw.4 var=5) st_def ()  <8>;
    (__M_DMw_stat.7 var=8) st_def ()  <14>;
    (__R_SP.11 var=12) st_def ()  <22>;
    (__sp.17 var=18) source ()  <28>;
    (dso_handle.18 var=19) source ()  <29>;
    (arg.19 var=20) source ()  <30>;
    (func.20 var=21) source ()  <31>;
    (_ZL10atexit_nxt.21 var=22) source ()  <32>;
    (__extDMb_atexit_pair_func.27 var=28) source ()  <38>;
    (_ZL7atexits_func.29 var=30) source ()  <40>;
    (__extDMb_atexit_pair_arg.30 var=31) source ()  <41>;
    (_ZL7atexits_arg.32 var=33) source ()  <43>;
    (__la.38 var=39 stl=X off=1) inp ()  <49>;
    (__la.39 var=39) deassign (__la.38)  <50>;
    (__arg_func.42 var=41 stl=X off=11) inp ()  <53>;
    (__arg_func.43 var=41) deassign (__arg_func.42)  <54>;
    (__arg_arg.45 var=42 stl=X off=12) inp ()  <56>;
    (__arg_arg.46 var=42) deassign (__arg_arg.45)  <57>;
    (__arg_dso_handle.48 var=43 stl=X off=13) inp ()  <59>;
    (__arg_dso_handle.49 var=43) deassign (__arg_dso_handle.48)  <60>;
    (__rd___sp.51 var=34) rd_res_reg (__R_SP.11 __sp.17)  <62>;
    (__ct_m12S0.52 var=44) const ()  <63>;
    (__tmp.54 var=46) __Pvoid__pl___Pvoid___sint (__rd___sp.51 __ct_m12S0.52)  <65>;
    (__R_SP.55 var=12 __sp.56 var=18) wr_res_reg (__tmp.54 __sp.17)  <66>;
    (__rd___sp.57 var=34) rd_res_reg (__R_SP.11 __sp.56)  <68>;
    (__ct_0t0.58 var=48) const ()  <69>;
    (__adr_dso_handle.60 var=50) __Pvoid__pl___Pvoid___sint (__rd___sp.57 __ct_0t0.58)  <71>;
    (__rd___sp.62 var=34) rd_res_reg (__R_SP.11 __sp.56)  <73>;
    (__rd___sp.67 var=34) rd_res_reg (__R_SP.11 __sp.56)  <78>;
    (__M_DMw.73 var=5 dso_handle.74 var=19) store (__arg_dso_handle.49 __adr_dso_handle.60 dso_handle.18)  <84>;
    call {
        () chess_separator_scheduler ()  <85>;
    } #4 off=1
    #5 off=2
    (__ct_4t0.63 var=52) const ()  <74>;
    (__adr_arg.65 var=54) __Pvoid__pl___Pvoid___sint (__rd___sp.62 __ct_4t0.63)  <76>;
    (__M_DMw.75 var=5 arg.76 var=20) store (__arg_arg.46 __adr_arg.65 arg.19)  <86>;
    call {
        () chess_separator_scheduler ()  <87>;
    } #6 off=3
    #7 off=4
    (__ct_8t0.68 var=56) const ()  <79>;
    (__adr_func.70 var=58) __Pvoid__pl___Pvoid___sint (__rd___sp.67 __ct_8t0.68)  <81>;
    (__M_DMw.77 var=5 func.78 var=21) store (__arg_func.43 __adr_func.70 func.20)  <88>;
    call {
        () chess_separator_scheduler ()  <92>;
    } #10 off=5
    #11 off=6
    (__ptr_atexit_nxt.34 var=36) const ()  <45>;
    (__fch__ZL10atexit_nxt.81 var=62) load (__M_DMw_stat.7 __ptr_atexit_nxt.34 _ZL10atexit_nxt.21)  <93>;
    (__tmp.85 var=66) bool__eq___Pvoid___Pvoid (__fch__ZL10atexit_nxt.81 __ptr__ZL7atexits__a512.194)  <97>;
    (__ptr__ZL7atexits__a512.194 var=92) const ()  <259>;
    (__trgt.201 var=102) const ()  <306>;
    () void_br_bool_t13s_s2 (__tmp.85 __trgt.201)  <307>;
    (__either.202 var=101) undefined ()  <308>;
    if {
        {
            () if_expr (__either.202)  <130>;
        } #13
        {
            (__ct_m1.118 var=67) const ()  <131>;
        } #33 off=14
        {
            #18 off=7
            (__fch_func.120 var=69) load (__M_DMw.4 __adr_func.70 func.78)  <134>;
            (__fch__ZL10atexit_nxt.121 var=70) load (__M_DMw_stat.7 __ptr_atexit_nxt.34 _ZL10atexit_nxt.21)  <135>;
            (__M_DMw.125 var=5 _ZL7atexits_func.126 var=30 __extDMb_atexit_pair_func.127 var=28) store (__fch_func.120 __fch__ZL10atexit_nxt.121 _ZL7atexits_func.29 __extDMb_atexit_pair_func.27)  <139>;
            call {
                () chess_separator_scheduler ()  <140>;
            } #19 off=8
            #20 off=9
            (__fch_arg.128 var=74) load (__M_DMw.4 __adr_arg.65 arg.76)  <141>;
            (__fch__ZL10atexit_nxt.129 var=75) load (__M_DMw_stat.7 __ptr_atexit_nxt.34 _ZL10atexit_nxt.21)  <142>;
            (__ct_4.130 var=76) const ()  <143>;
            (__tmp.132 var=78) __Pvoid__pl___Pvoid___sint (__fch__ZL10atexit_nxt.129 __ct_4.130)  <145>;
            (__M_DMw.133 var=5 _ZL7atexits_arg.134 var=33 __extDMb_atexit_pair_arg.135 var=31) store (__fch_arg.128 __tmp.132 _ZL7atexits_arg.32 __extDMb_atexit_pair_arg.30)  <146>;
            call {
                () chess_separator_scheduler ()  <147>;
            } #21 off=10
            #22 off=11
            (__fch__ZL10atexit_nxt.136 var=79) load (__M_DMw_stat.7 __ptr_atexit_nxt.34 _ZL10atexit_nxt.21)  <148>;
            call {
                () chess_separator_scheduler ()  <149>;
            } #23 off=12
            #34 off=13
            (__ct_0.122 var=71) const ()  <136>;
            (__ct_8.137 var=80) const ()  <150>;
            (__tmp.139 var=82) __Pvoid__pl___Pvoid___sint (__fch__ZL10atexit_nxt.136 __ct_8.137)  <152>;
            (__M_DMw_stat.140 var=8 _ZL10atexit_nxt.141 var=22) store (__tmp.139 __ptr_atexit_nxt.34 _ZL10atexit_nxt.21)  <153>;
            (__trgt.203 var=103) const ()  <309>;
            () void_j_t21s_s2 (__trgt.203)  <310>;
        } #17
        {
            (_ZL10atexit_nxt.144 var=22) merge (_ZL10atexit_nxt.21 _ZL10atexit_nxt.141)  <159>;
            (__extDMb_atexit_pair_func.145 var=28) merge (__extDMb_atexit_pair_func.27 __extDMb_atexit_pair_func.127)  <160>;
            (_ZL7atexits_func.146 var=30) merge (_ZL7atexits_func.29 _ZL7atexits_func.126)  <161>;
            (__extDMb_atexit_pair_arg.147 var=31) merge (__extDMb_atexit_pair_arg.30 __extDMb_atexit_pair_arg.135)  <162>;
            (_ZL7atexits_arg.148 var=33) merge (_ZL7atexits_arg.32 _ZL7atexits_arg.134)  <163>;
            (__rt.149 var=40) merge (__ct_m1.118 __ct_0.122)  <164>;
        } #29
    } #12
    #31 off=15 nxt=-2
    (__rd___sp.151 var=34) rd_res_reg (__R_SP.11 __sp.56)  <166>;
    (__ct_12s0.152 var=85) const ()  <167>;
    (__tmp.154 var=87) __Pvoid__pl___Pvoid___sint (__rd___sp.151 __ct_12s0.152)  <169>;
    (__R_SP.155 var=12 __sp.156 var=18) wr_res_reg (__tmp.154 __sp.56)  <170>;
    () void___rts_jr_w32 (__la.39)  <171>;
    (__rt.157 var=40 stl=X off=10) assign (__rt.149)  <172>;
    () out (__rt.157)  <173>;
    () sink (__sp.156)  <179>;
    () sink (dso_handle.74)  <180>;
    () sink (arg.76)  <181>;
    () sink (func.78)  <182>;
    () sink (_ZL10atexit_nxt.144)  <183>;
    () sink (__extDMb_atexit_pair_func.145)  <189>;
    () sink (_ZL7atexits_func.146)  <191>;
    () sink (__extDMb_atexit_pair_arg.147)  <192>;
    () sink (_ZL7atexits_arg.148)  <194>;
} #0
0 : 'src/atexit.c';
----------
0 : (0,34:0,0);
3 : (0,34:49,0);
4 : (0,34:49,0);
5 : (0,34:38,0);
6 : (0,34:38,0);
7 : (0,34:17,0);
10 : (0,35:4,5);
11 : (0,36:19,5);
12 : (0,36:4,5);
17 : (0,37:8,8);
18 : (0,39:21,10);
19 : (0,39:21,10);
20 : (0,40:20,11);
21 : (0,40:20,11);
22 : (0,41:14,12);
23 : (0,41:14,12);
31 : (0,42:4,18);
----------
62 : (0,34:4,0);
63 : (0,34:4,0);
65 : (0,34:4,0);
66 : (0,34:4,0);
68 : (0,34:55,0);
69 : (0,34:55,0);
71 : (0,34:55,0);
73 : (0,34:44,0);
74 : (0,34:44,0);
76 : (0,34:44,0);
78 : (0,34:24,0);
79 : (0,34:24,0);
81 : (0,34:24,0);
84 : (0,34:49,0);
85 : (0,34:49,0);
86 : (0,34:38,0);
87 : (0,34:38,0);
88 : (0,34:17,0);
92 : (0,35:4,5);
93 : (0,36:8,5);
97 : (0,36:19,5);
130 : (0,36:4,5);
131 : (0,37:15,0);
134 : (0,39:23,9);
135 : (0,39:4,9);
136 : (0,39:14,0);
139 : (0,39:14,9);
140 : (0,39:21,10);
141 : (0,40:22,10);
142 : (0,40:4,10);
143 : (0,40:14,0);
145 : (0,40:14,10);
146 : (0,40:14,10);
147 : (0,40:20,11);
148 : (0,41:4,11);
149 : (0,41:14,12);
150 : (0,41:14,0);
152 : (0,41:14,12);
153 : (0,41:4,12);
159 : (0,36:4,17);
160 : (0,36:4,17);
161 : (0,36:4,17);
162 : (0,36:4,17);
163 : (0,36:4,17);
164 : (0,36:4,17);
166 : (0,42:4,0);
167 : (0,42:4,0);
169 : (0,42:4,0);
170 : (0,42:4,18);
171 : (0,42:4,18);
172 : (0,42:4,0);
259 : (0,36:30,0);
307 : (0,36:4,5);

