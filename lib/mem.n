/*
-- File : mem.n
--
-- Contents : Main nML memories of trv32p3_cnn base.
--
-- Copyright (c) 2019-2022 Synopsys, Inc. This Synopsys processor model
-- captures an ASIP Designer Design Technique. The model and all associated
-- documentation are proprietary to Synopsys, Inc. and may only be used
-- pursuant to the terms and conditions of a written license agreement with
-- Synopsys, Inc.  All other use, reproduction, modification, or distribution
-- of the Synopsys processor model or the associated  documentation is
-- strictly prohibited.
*/

// These nML memories are translated to external memory ports using
// IO interfaces defined in the PDG language in the files dm.p and pm.p.

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// ~~~ Program Memory (Address Space)
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

def pm_size = 2**MEM_ePM_SZ_NBIT;

mem PMb [pm_size] <u08,addr> access {};

mem PM  [pm_size,4] <iword,addr> alias PMb access {
  pm_ld`0` : pm_rd`1`    = PM[pm_addr`0`]`1`;
  pm_st    : PM[pm_addr] = pm_wr; // OCD only
};

properties {
  program_memory : PMb;
  unconnected    : PM; // accessed in PCU
}


// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// ~~~ Data Memory (Address Space)
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

def dm_size = 2**MEM_eDM_SZ_NBIT;

mem DMb [dm_size,1] <w08,addr> access {
  dmb_ld`0` : dmb_rd`1`          = DMb[dm_addr`0`]`1`;
  dmb_st`0` : DMb[dm_addr`0`]`1` = dmb_wr`1`;
};

mem DMh [dm_size,2] <w16,addr> alias DMb access {
  dmh_ld`0` : dmh_rd`1`          = DMh[dm_addr`0`]`1`;
  dmh_st`0` : DMh[dm_addr`0`]`1` = dmh_wr`1`;
};

mem DMw [dm_size,4] <w32,addr> alias DMb access {
  dmw_ld`0` : dmw_rd`1`          = DMw[dm_addr`0`]`1`;
  dmw_st`0` : DMw[dm_addr`0`]`1` = dmw_wr`1`;
};

// NOTE: if you add aliases to the DM memory hierarchy, you also need to modify
// all connected IO interfaces: dm_merge.
// During design exploration, we recommend to temporarily disable these IO
// interfaces. They can be adjusted when the design is stable.
// The IO interface dm_merge has no impact on cycles performance.

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// ~~~ Directly Addressable Memory Range (for Chess)

def dm_stat = 2**4;

mem DMb_stat [dm_stat,1] <w08,addr> alias DMb[0] access {};
mem DMh_stat [dm_stat,2] <w16,addr> alias DMb_stat access {};
mem DMw_stat [dm_stat,4] <w32,addr> alias DMb_stat access {};

// The above memory aliases are only used by the compiler. They are not
// connected in nML.
property unconnected : DMb_stat, DMh_stat, DMw_stat;
