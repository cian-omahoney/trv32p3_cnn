
// File generated by noodle version U-2022.12#33f3808fcb#221128, Fri Mar 22 18:45:38 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -Pc -Iisg +wisg -D__tct_patch__=0 -Wall +NOrlt -D__chess__ -D__programmers_view__ trv32p3_cnn


// Summary of nil (conversion) operations:
//   :: conversion constructor
//   $$ promotion_conversion function
//  *   promotion derived equivalent
//  !   promotion derived identity
//  ~   indirect representation derived equivalent
//  =   indirect representation derived identity

w08                         -->  w16                        
w08                         -->  w32                        
w16                         -->  w32                        
t20s_rp12                   -->  w32                         :: /*primitive*/ w32::w32(t20s_rp12)

signed char                 -->  short                      !:: operator short(signed char)
unsigned char               -->  short                      !:: operator short(unsigned char)
unsigned char               -->  unsigned short             !:: operator unsigned short(unsigned char)
signed char                 -->  int                        !:: operator int(signed char)
unsigned char               -->  int                        !:: operator int(unsigned char)
short                       -->  int                        !:: operator int(short)
unsigned short              -->  int                        !:: operator int(unsigned short)
unsigned                    -->  int                        !:: operator int(unsigned)
signed char                 -->  unsigned                   !:: operator unsigned(signed char)
unsigned char               -->  unsigned                   !:: operator unsigned(unsigned char)
short                       -->  unsigned                   !:: operator unsigned(short)
unsigned short              -->  unsigned                   !:: operator unsigned(unsigned short)
int                         -->  unsigned                   !:: operator unsigned(int)
int                         -->  void *                     !:: operator void *(int)
unsigned                    -->  void *                     !:: operator void *(unsigned)
void *                      -->  int                        !:: operator int(void *)
void *                      -->  unsigned                   !:: operator unsigned(void *)
unsigned short              -->  void *                     !:: operator void *(unsigned short)
short                       -->  void *                     !:: operator void *(short)
unsigned char               -->  void *                     !:: operator void *(unsigned char)
signed char                 -->  void *                     !:: operator void *(signed char)
long long                   -->  unsigned long long         !:: operator unsigned long long(long long)
unsigned long long          -->  long long                  !:: operator long long(unsigned long long)
float                       -->  int                        !$$ int as_int32(float)
int                         -->  float                      !$$ float as_float(int)
double                      -->  long long                  !$$ long long as_int64(double)
long long                   -->  double                     !$$ double as_double(long long)
int                         -->  unsigned                   ~:: operator unsigned(int)
int                         -->  long                       =:: operator long(int)
int                         -->  unsigned long              ~:: operator unsigned long(int)
unsigned                    -->  int                        ~:: operator int(unsigned)
signed char                 -->  int                        ~:: operator int(signed char)
unsigned char               -->  unsigned                   ~:: operator unsigned(unsigned char)
short                       -->  int                        ~:: operator int(short)
unsigned short              -->  unsigned                   ~:: operator unsigned(unsigned short)
char                        -->  signed char                =:: operator signed char(char)
void chess_storage(DMb) *   -->  void *                     =:: operator void *(void chess_storage(DMb) *)
void *                      -->  void chess_storage(DMb) *  =:: operator void chess_storage(DMb) *(void *)
unsigned short              -->  int                        ~:: operator int(unsigned short)
unsigned char               -->  short                      ~:: operator short(unsigned char)
long                        -->  int                        =:: operator int(long)
unsigned long               -->  unsigned                   =:: operator unsigned(unsigned long)
unsigned long long          -->  long long                  ~:: operator long long(unsigned long long)
unsigned char               -->  int                        ~:: operator int(unsigned char)
unsigned long               -->  int                        ~:: operator int(unsigned long)
unsigned char               -->  void *                     ~:: operator void *(unsigned char)
unsigned short              -->  void *                     ~:: operator void *(unsigned short)
unsigned                    -->  void *                     ~:: operator void *(unsigned)
void *                      -->  unsigned                   ~:: operator unsigned(void *)
signed char                 -->  unsigned                   ~:: operator unsigned(signed char)
signed char                 -->  unsigned long              ~:: operator unsigned long(signed char)
short                       -->  unsigned                   ~:: operator unsigned(short)
short                       -->  unsigned long              ~:: operator unsigned long(short)
unsigned long               -->  long                       ~:: operator long(unsigned long)
unsigned char               -->  unsigned short             ~:: operator unsigned short(unsigned char)
unsigned char               -->  unsigned long              ~:: operator unsigned long(unsigned char)
unsigned short              -->  unsigned long              ~:: operator unsigned long(unsigned short)
unsigned                    -->  unsigned long              =:: operator unsigned long(unsigned)
long double                 -->  double                     =:: operator double(long double)
double                      -->  long double                =:: operator long double(double)
long                        -->  unsigned long              ~:: operator unsigned long(long)
long long                   -->  unsigned long long         ~:: operator unsigned long long(long long)
void chess_storage(PMb) *   -->  void *                     =:: operator void *(void chess_storage(PMb) *)
void chess_storage(DMb_stat) * -->  void *                  =:: operator void *(void chess_storage(DMb_stat) *)
void *                      -->  void chess_storage(PMb) *  =:: operator void chess_storage(PMb) *(void *)
void chess_storage(DMb) *   -->  void chess_storage(PMb) *  =:: operator void chess_storage(PMb) *(void chess_storage(DMb) *)
void chess_storage(DMb_stat) * -->  void chess_storage(PMb) * =:: operator void chess_storage(PMb) *(void chess_storage(DMb_stat) *)
void chess_storage(PMb) *   -->  void chess_storage(DMb) *  =:: operator void chess_storage(DMb) *(void chess_storage(PMb) *)
void chess_storage(DMb_stat) * -->  void chess_storage(DMb) * =:: operator void chess_storage(DMb) *(void chess_storage(DMb_stat) *)
void *                      -->  void chess_storage(DMb_stat) * =:: operator void chess_storage(DMb_stat) *(void *)
void chess_storage(PMb) *   -->  void chess_storage(DMb_stat) * =:: operator void chess_storage(DMb_stat) *(void chess_storage(PMb) *)
void chess_storage(DMb) *   -->  void chess_storage(DMb_stat) * =:: operator void chess_storage(DMb_stat) *(void chess_storage(DMb) *)


// Promotion conversion path analysis: type T promotable on X and Y:
// all (non-excluded) paths must agree (if any, and if determinable).
// A value of type T when moved from X to Y may be
//    ==0==  right-aligned  [ incl. diagonal \\0\\ ]
//    << N   right-padded
//    >> N   right-truncated
//    <<?>>  path exists, alignment not determinable
//    UNFLD  unfoldable
//    NONE   no path found
//    ERROR  distinct paths found with inconsistent alignment

unsigned char   FROM\TO  w08    w16    w32    addr    |
      w08           |    \\0\\  <<?>>  <<?>>  <<?>>   |
      w16           |    <<?>>  \\0\\  <<?>>  <<?>>   |
      w32           |    ==0==  ==0==  \\0\\  ==0==   |
      addr          |    ==0==  ==0==  ==0==  \\0\\   |

unsigned short  FROM\TO  w16    w32    addr    |
      w16           |    \\0\\  <<?>>  <<?>>   |
      w32           |    ==0==  \\0\\  ==0==   |
      addr          |    ==0==  ==0==  \\0\\   |

w08             FROM\TO  w08    w16    w32    addr    |
      w08           |    \\0\\  <<?>>  <<?>>  <<?>>   |
      w16           |    <<?>>  \\0\\  <<?>>  <<?>>   |
      w32           |    ==0==  ==0==  \\0\\  ==0==   |
      addr          |    ==0==  ==0==  ==0==  \\0\\   |

w16             FROM\TO  w16    w32    addr    |
      w16           |    \\0\\  <<?>>  <<?>>   |
      w32           |    ==0==  \\0\\  ==0==   |
      addr          |    ==0==  ==0==  \\0\\   |

w32             FROM\TO  w32    addr    |
      w32           |    \\0\\  ==0==   |
      addr          |    ==0==  \\0\\   |

t20s_rp12       FROM\TO  t20s_rp12    w32    addr    |
      t20s_rp12     |    \\0\\        << 12  << 12   |
      w32           |    NONE         \\0\\  ==0==   |
      addr          |    NONE         ==0==  \\0\\   |



// Constant subsuming types, using the smallest type
// - that contains the value (possibly `right padded');
// - that can be nil converted to the original type.

w32             <-- t20s_rp12 (pad 12) 


