
// File generated by animal version U-2022.12#33f3808fcb#221128, Sat Mar 16 14:39:23 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// animal -A -Iisg +wisg -D__tct_patch__=0 -h -D__darts__ -D__programmers_view__ trv32p3_cnn

toolrelease _22R4;
copy0 : copy { }
copy1 : copy { }

name trv32p3_cnn(8,32)

//Properties
prop ocd_swbreak = ( ocd_swbreak );
prop stage_names = ( IF ID EX );
prop program_counter = ( PC );
prop vector_type = ( v22w32 w32 );
prop ocd_execute_instruction = ( ocd_exe );
prop decode_stage = ( 1 );
prop dead_end = ( x_w1_dead jmp_tgt_ID jmp_tgt_EX div_wad mpyL mpyH );
prop ocd_address_register = ( ocd_addr );
prop chess_pc_offset = ( words );
prop control_signals = ( compact );
prop ocd_instruction_register = ( ocd_instr );
prop darts_slot_separator = ( | );
prop program_memory = ( PMb );
prop ocd_data_register = ( ocd_data );
prop program_memory_endianness = ( little );
prop ocd_mode = ( ocd_mode );
prop unconnected = ( PM DMb_stat DMh_stat DMw_stat LR SP );
prop strict_WAW_hazard_checking = ( off );
prop ocd_request = ( ocd_req );
prop endianness = ( little );
prop delay_slots = ( instructions );

//Memories are printed after the transitories

//Registers
reg PC<addr>;
reg PC_ID<addr>;
reg PC_EX<addr>;
reg X[0..31,1]<w32,t5u> syntax { x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 x16 x17 x18 x19 x20 x21 x22 x23 x24 x25 x26 x27 x28 x29 x30 x31 } ;
reg zero<w32> alias X[0] align 1;
reg LR<w32> alias X[1] align 1;
reg SP<w32> alias X[2] align 1;
reg X10<w32> alias X[10] align 1;
reg X11<w32> alias X[11] align 1;
reg X12<w32> alias X[12] align 1;
reg X13<w32> alias X[13] align 1;
reg X14<w32> alias X[14] align 1;
reg X15<w32> alias X[15] align 1;
reg X16<w32> alias X[16] align 1;
reg ocd_addr<addr>;
reg ocd_data<w08>;
reg ocd_instr<iword>;

//Transitories
trn pm_ld<bool>;
trn pm_rd<iword>;
trn pm_addr<addr>;
trn pm_st<bool>;
trn pm_wr<iword>;
trn dmb_ld<bool>;
trn dmb_rd<w08>;
trn dm_addr<addr>;
trn dmb_st<bool>;
trn dmb_wr<w08>;
trn dmh_ld<bool>;
trn dmh_rd<w16>;
trn dmh_st<bool>;
trn dmh_wr<w16>;
trn dmw_ld<bool>;
trn dmw_rd<w32>;
trn dmw_ld2<bool>;
trn dmw_rd2<w32>;
trn dm_addr2<addr>;
trn dmw_st<bool>;
trn dmw_wr<w32>;
trn pcr<addr>;
trn pcw<addr>;
trn PC_ID_r<addr>;
trn PC_ID_w<addr>;
trn PC_EX_r<addr>;
trn PC_EX_w<addr>;
trn x_r1<w32>;
trn x_r2<w32>;
trn x_r3<w32>;
trn x_r4<w32>;
trn x_r5<w32>;
trn x_r6<w32>;
trn x_r7<w32>;
trn x_w1<w32>;
trn x_w2<w32>;
trn x_w3<w32>;
trn x_w4<w32>;
trn x_w5<w32>;
trn x_w6<w32>;
trn x_w7<w32>;
trn x_w1_dead<w32>;
trn ocd_addr_r<addr>;
trn ocd_addr_w<addr>;
trn ocd_data_r<w08>;
trn ocd_data_w<w08>;
trn ocd_instr_r<iword>;
trn ocd_instr_w<iword>;
trn aluA<w32>;
trn aluB<w32>;
trn aluR<w32>;
trn luiU<w32>;
trn pcaA<w32>;
trn pcaB<w32>;
trn pcaR<w32>;
trn cmpA<w32>;
trn cmpB<w32>;
trn cmpF<bool>;
trn cnd<bool>;
trn of21<t21s_s2>;
trn of13_cd<t13s_s2>;
trn trgt<w32>;
trn lnk_id<w32>;
trn jmp_tgt_ID<w32>;
trn jmp_tgt_EX<w32>;
trn jmp_tgt_algn2<t31s_rp1>;
trn divA<w32>;
trn divB<w32>;
trn divR<w32>;
trn X_x_w1_div_main_pdg_w_a<t5unz>;
trn div_bsy<t1u>;
trn div_wnc<t1u>;
trn div_adr<t5unz>;
trn div_wad<t5u>;
trn lxB<w08>;
trn lxH<w16>;
trn lxR<w32>;
trn aguA<w32>;
trn aguB<w32>;
trn aguR<w32>;
trn mpyA<w32>;
trn mpyB<w32>;
trn mpyR<w32>;
trn mpyL<w32>;
trn mpyH<w32>;
trn mpyM<t2u>;
trn ocd_ld_DMb<bool>;
trn ocd_st_DMb<bool>;
trn ocd_ld_PMb<bool>;
trn ocd_st_PMb<bool>;
trn ocd_swbreak<t1u>;
trn ocd_req<t1u>;
trn ocd_exe<t1u>;
trn ocd_mode<t1u>;
trn cnn_r1<w32>;
trn cnn_r2<w32>;
trn cnn_r3<w32>;
trn cnn_w1<w32>;
trn xuC<w32>;
trn xuB<w32>;
trn xuA<w32>;
trn cnn_R<w32>;
trn lxR2<w32>;
trn aguA2<w32>;
trn aguB2<w32>;
trn aguR2<w32>;
trn __pidTGT_r<w32>;
trn __pidTGT_w<w32>;
trn __CTt5u_cstP15_EX<t5u> exp = r pos = ( 15: u 4..0 u );
trn __X_x_r1_rad<t5u>;
trn __CTt5u_cstP20_EX<t5u> exp = r pos = ( 20: u 4..0 u );
trn __X_x_r2_rad<t5u>;
trn __CTt5u_cstP7_EX<t5u> exp = r pos = ( 7: u 4..0 u );
trn __X_x_w1_wad<t5u>;
trn __CTaluB_t12s_cstP20_EX<t12s> exp = i pos = ( 20: u 11..0 u );
trn __CTaluB_t5u_cstP20_EX<t5u> exp = i pos = ( 20: u 4..0 u );
trn __CTaluB_t20s_rp12_cstP12_EX<t20s_rp12> exp = i pos = ( 12: u 19..0 u );
trn __CTluiU_t20s_rp12_cstP12_EX<t20s_rp12> exp = i pos = ( 12: u 19..0 u );
trn __CTmpyM_t2u_cstV3_EX<t2u> cst = 3f;
trn __CTmpyM_t2u_cstV2_EX<t2u> cst = 2f;
trn __CTmpyM_t2u_cstV0_EX<t2u> cst = 0f;
trn __CTdiv_wad_t5u_cstP7_EX<t5u> exp = _rd pos = ( 7: u 4..0 u );
trn __CTt5u_cstP15_ID<t5u> exp = r pos = ( 15: u 4..0 u );
trn __X_x_r3_rad<t5u>;
trn __CTaguB_t12s_cstP20_ID<t12s> exp = i pos = ( 20: u 11..0 u );
trn __CTaguB_t12s_cstP25_11_5P7_4_0_ID<t12s> exp = i pos = ( 7: u 4..0 u, 25: u 11..5 u );
trn __CTof13_cd_t13s_s2_cstP31_12P7_11P25_10_5P8_4_1_EX<t13s_s2> exp = i pos = ( 7: u 11..11 u, 8: u 4..1 z, 25: u 10..5 u, 31: u 12..12 u );
trn __CTof21_t21s_s2_cstP31_20P12_19_12P20_11P21_10_1_ID<t21s_s2> exp = i pos = ( 12: u 19..12 u, 20: u 11..11 u, 21: u 10..1 z, 31: u 20..20 u );
trn __CTpcaB_t12s_cstP20_ID<t12s> exp = i pos = ( 20: u 11..0 u );
trn __CTocd_swbreak_t1u_cstV1_EX<t1u> cst = 1f;
trn __X_x_w2_wad<t5u>;
trn __CTaguB_w32_cstV1_ID<w32> cst = 1f;
trn __CTaguB2_w32_cstV1_ID<w32> cst = 1f;

//Memories
mem PMb[0..8388607,1]<u08,addr>;
mem PM[0..8388604,4]<iword,addr> alias PMb[0] align 4 access {
    pm_ld: pm_rd `1` = PM[pm_addr] `1`;
    pm_st: PM[pm_addr] = pm_wr;
};
mem DMb[0..8388607,1]<w08,addr> access {
    dmb_ld: dmb_rd `1` = DMb[dm_addr] `1`;
    dmb_st: DMb[dm_addr] `1` = dmb_wr `1`;
};
mem DMh[0..8388606,2]<w16,addr> alias DMb[0] align 2 access {
    dmh_ld: dmh_rd `1` = DMh[dm_addr] `1`;
    dmh_st: DMh[dm_addr] `1` = dmh_wr `1`;
};
mem DMw[0..8388604,4]<w32,addr> alias DMb[0] align 4 access {
    dmw_ld: dmw_rd `1` = DMw[dm_addr] `1`;
    dmw_ld2: dmw_rd2 `1` = DMw[dm_addr2] `1`;
    dmw_st: DMw[dm_addr] `1` = dmw_wr `1`;
};
mem DMb_stat[0..15,1]<w08,addr> alias DMb[0] align 1;
mem DMh_stat[0..14,2]<w16,addr> alias DMb_stat[0] align 2;
mem DMw_stat[0..12,4]<w32,addr> alias DMb_stat[0] align 4;

//Functional units
fu alu
fu pca
fu cmp
fu div
fu lx
fu agu
fu mpy
fu cnn
fu lx2
fu agu2

//HW init values
hw_init PC = others => 0;
hw_init X = others => 0;
hw_init ocd_addr = others => 0;
hw_init ocd_data = others => 0;
hw_init ocd_instr = others => 0;
hw_init div_bsy = others => 0;
hw_init div_wnc = others => 0;
hw_init ocd_ld_DMb = others => 0;
hw_init ocd_st_DMb = others => 0;
hw_init ocd_ld_PMb = others => 0;
hw_init ocd_st_PMb = others => 0;
hw_init ocd_swbreak = others => 0;
hw_init ocd_req = others => 0;
hw_init ocd_exe = others => 0;
hw_init ocd_mode = others => 0;

//SW init values

//Operations
t5u_cstP15_EX : const {
    fst : 2;
    ost : ( 2 );
    rid : 1;
    isg : t;
    out : ( __CTt5u_cstP15_EX );
    rsc : (2) __CTt5u_cstP15_EX ;
    ins : 0;
}

aluA_copy0_x_r1_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 2;
    isg : t;
    inp : ( x_r1 );
    out : ( aluA );
    rsc : (2) aluA ;
    ins : 1;
}

__X_x_r1_rad_copy0___CTt5u_cstP15_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 3;
    isg : t;
    inp : ( __CTt5u_cstP15_EX );
    out : ( __X_x_r1_rad );
    rsc : (2) __X_x_r1_rad ;
    ins : 0;
}

x_r1_rd_X___X_x_r1_rad_EX : read_file {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 4;
    isg : t;
    inp : ( X __X_x_r1_rad );
    out : ( x_r1 );
    rsc : (2) x_r1 ;
    ins : 0;
}

t5u_cstP20_EX : const {
    fst : 2;
    ost : ( 2 );
    rid : 5;
    isg : t;
    out : ( __CTt5u_cstP20_EX );
    rsc : (2) __CTt5u_cstP20_EX ;
    ins : 2;
}

aluB_copy0_x_r2_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 6;
    isg : t;
    inp : ( x_r2 );
    out : ( aluB );
    rsc : (2) aluB ;
    ins : 3;
}

__X_x_r2_rad_copy0___CTt5u_cstP20_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 7;
    isg : t;
    inp : ( __CTt5u_cstP20_EX );
    out : ( __X_x_r2_rad );
    rsc : (2) __X_x_r2_rad ;
    ins : 2;
}

x_r2_rd_X___X_x_r2_rad_EX : read_file {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 8;
    isg : t;
    inp : ( X __X_x_r2_rad );
    out : ( x_r2 );
    rsc : (2) x_r2 ;
    ins : 2;
}

aluR_add_aluA_aluB_alu_EX : w32_add_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 9;
    isg : t;
    inp : ( aluA aluB );
    out : ( aluR );
    rsc : (2) aluR ;
    ins : 4;
    opr : alu;
}

aluR_sub_aluA_aluB_alu_EX : w32_sub_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 10;
    isg : t;
    inp : ( aluA aluB );
    out : ( aluR );
    rsc : (2) aluR ;
    ins : 5;
    opr : alu;
}

aluR_slt_aluA_aluB_alu_EX : w32_slt_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 11;
    isg : t;
    inp : ( aluA aluB );
    out : ( aluR );
    rsc : (2) aluR ;
    ins : 6;
    opr : alu;
}

aluR_sltu_aluA_aluB_alu_EX : w32_sltu_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 12;
    isg : t;
    inp : ( aluA aluB );
    out : ( aluR );
    rsc : (2) aluR ;
    ins : 7;
    opr : alu;
}

aluR_bxor_aluA_aluB_alu_EX : w32_bxor_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 13;
    isg : t;
    inp : ( aluA aluB );
    out : ( aluR );
    rsc : (2) aluR ;
    ins : 8;
    opr : alu;
}

aluR_bor_aluA_aluB_alu_EX : w32_bor_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 14;
    isg : t;
    inp : ( aluA aluB );
    out : ( aluR );
    rsc : (2) aluR ;
    ins : 9;
    opr : alu;
}

aluR_band_aluA_aluB_alu_EX : w32_band_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 15;
    isg : t;
    inp : ( aluA aluB );
    out : ( aluR );
    rsc : (2) aluR ;
    ins : 10;
    opr : alu;
}

aluR_sll_aluA_aluB_alu_EX : w32_sll_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 16;
    isg : t;
    inp : ( aluA aluB );
    out : ( aluR );
    rsc : (2) aluR ;
    ins : 11;
    opr : alu;
}

aluR_srl_aluA_aluB_alu_EX : w32_srl_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 17;
    isg : t;
    inp : ( aluA aluB );
    out : ( aluR );
    rsc : (2) aluR ;
    ins : 12;
    opr : alu;
}

aluR_sra_aluA_aluB_alu_EX : w32_sra_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 18;
    isg : t;
    inp : ( aluA aluB );
    out : ( aluR );
    rsc : (2) aluR ;
    ins : 13;
    opr : alu;
}

x_w1_copy0_aluR_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 19;
    isg : t;
    inp : ( aluR );
    out : ( x_w1 );
    rsc : (2) x_w1 ;
    ins : 14;
}

x_w1_dead_copy0_x_w1_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 20;
    isg : t;
    inp : ( x_w1 );
    out : ( x_w1_dead );
    rsc : (2) x_w1_dead ;
    ins : 15;
}

t5u_cstP7_EX : const {
    fst : 2;
    ost : ( 2 );
    rid : 21;
    isg : t;
    out : ( __CTt5u_cstP7_EX );
    rsc : (2) __CTt5u_cstP7_EX ;
    ins : 16;
}

__X_x_w1_wad_copy0___CTt5u_cstP7_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 22;
    isg : t;
    inp : ( __CTt5u_cstP7_EX );
    out : ( __X_x_w1_wad );
    rsc : (2) __X_x_w1_wad ;
    ins : 17;
}

X_wr_x_w1___X_x_w1_wad_EX : write_file {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 23;
    isg : t;
    inp : ( x_w1 __X_x_w1_wad );
    out : ( X );
    ins : 17;
}

vd_nop_ID : void_nop {
    fst : 1;
    rid : 24;
    isg : t;
    ins : 18;
}

aluB_t12s_cstP20_EX : const {
    fst : 2;
    ost : ( 2 );
    rid : 25;
    isg : t;
    out : ( __CTaluB_t12s_cstP20_EX );
    rsc : (2) __CTaluB_t12s_cstP20_EX ;
    ins : 19;
}

aluB_copy0___CTaluB_t12s_cstP20_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 26;
    isg : t;
    inp : ( __CTaluB_t12s_cstP20_EX );
    out : ( aluB );
    rsc : (2) aluB ;
    ins : 19;
}

aluB_t5u_cstP20_EX : const {
    fst : 2;
    ost : ( 2 );
    rid : 27;
    isg : t;
    out : ( __CTaluB_t5u_cstP20_EX );
    rsc : (2) __CTaluB_t5u_cstP20_EX ;
    ins : 20;
}

aluB_copy0___CTaluB_t5u_cstP20_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 28;
    isg : t;
    inp : ( __CTaluB_t5u_cstP20_EX );
    out : ( aluB );
    rsc : (2) aluB ;
    ins : 20;
}

PC_EX_wr_PC_EX_w_ID : write_reg {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 29;
    isg : t;
    inp : ( PC_EX_w );
    out : ( PC_EX );
    ins : 21;
}

PC_EX_w_copy0_PC_ID_r_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 30;
    isg : t;
    inp : ( PC_ID_r );
    out : ( PC_EX_w );
    rsc : (1) PC_EX_w ;
    ins : 21;
}

PC_ID_r_rd_PC_ID_ID : read_reg {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 31;
    isg : t;
    inp : ( PC_ID );
    out : ( PC_ID_r );
    rsc : (1) PC_ID_r ;
    ins : 21;
}

aluA_copy0_PC_EX_r_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 32;
    isg : t;
    inp : ( PC_EX_r );
    out : ( aluA );
    rsc : (2) aluA ;
    ins : 21;
}

PC_EX_r_rd_PC_EX_EX : read_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 33;
    isg : t;
    inp : ( PC_EX );
    out : ( PC_EX_r );
    rsc : (2) PC_EX_r ;
    ins : 21;
}

aluB_t20s_rp12_cstP12_EX : const {
    fst : 2;
    ost : ( 2 );
    rid : 34;
    isg : t;
    out : ( __CTaluB_t20s_rp12_cstP12_EX );
    rsc : (2) __CTaluB_t20s_rp12_cstP12_EX ;
    ins : 21;
}

aluB_copy0___CTaluB_t20s_rp12_cstP12_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 35;
    isg : t;
    inp : ( __CTaluB_t20s_rp12_cstP12_EX );
    out : ( aluB );
    rsc : (2) aluB ;
    ins : 21;
}

luiU_t20s_rp12_cstP12_EX : const {
    fst : 2;
    ost : ( 2 );
    rid : 36;
    isg : t;
    out : ( __CTluiU_t20s_rp12_cstP12_EX );
    rsc : (2) __CTluiU_t20s_rp12_cstP12_EX ;
    ins : 22;
}

luiU_copy0___CTluiU_t20s_rp12_cstP12_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 37;
    isg : t;
    inp : ( __CTluiU_t20s_rp12_cstP12_EX );
    out : ( luiU );
    rsc : (2) luiU ;
    ins : 22;
}

x_w1_copy0_luiU_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 38;
    isg : t;
    inp : ( luiU );
    out : ( x_w1 );
    rsc : (2) x_w1 ;
    ins : 22;
}

mpyA_copy0_x_r1_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 39;
    isg : t;
    inp : ( x_r1 );
    out : ( mpyA );
    rsc : (2) mpyA ;
    ins : 23;
}

mpyB_copy0_x_r2_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 40;
    isg : t;
    inp : ( x_r2 );
    out : ( mpyB );
    rsc : (2) mpyB ;
    ins : 23;
}

mpyM_t2u_cstV3_EX : const {
    fst : 2;
    ost : ( 2 );
    rid : 41;
    isg : t;
    out : ( __CTmpyM_t2u_cstV3_EX );
    rsc : (2) __CTmpyM_t2u_cstV3_EX ;
    ins : 24;
}

mpyM_copy0___CTmpyM_t2u_cstV3_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 42;
    isg : t;
    inp : ( __CTmpyM_t2u_cstV3_EX );
    out : ( mpyM );
    rsc : (2) mpyM ;
    ins : 24;
}

vd_mul_hw_mpyA_mpyB_mpyM_mpyL_mpyH_mpy_EX : void_mul_hw_w32_w32_t2u_w32_w32 {
    fst : 2;
    ist : ( 2 2 2 );
    ost : ( 2 2 );
    rid : 43;
    isg : t;
    inp : ( mpyA mpyB mpyM );
    out : ( mpyL mpyH );
    rsc : (2) mpyL mpyH ;
    ins : 23;
    opr : mpy;
}

mpyM_t2u_cstV2_EX : const {
    fst : 2;
    ost : ( 2 );
    rid : 44;
    isg : t;
    out : ( __CTmpyM_t2u_cstV2_EX );
    rsc : (2) __CTmpyM_t2u_cstV2_EX ;
    ins : 25;
}

mpyM_copy0___CTmpyM_t2u_cstV2_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 45;
    isg : t;
    inp : ( __CTmpyM_t2u_cstV2_EX );
    out : ( mpyM );
    rsc : (2) mpyM ;
    ins : 25;
}

mpyM_t2u_cstV0_EX : const {
    fst : 2;
    ost : ( 2 );
    rid : 46;
    isg : t;
    out : ( __CTmpyM_t2u_cstV0_EX );
    rsc : (2) __CTmpyM_t2u_cstV0_EX ;
    ins : 26;
}

mpyM_copy0___CTmpyM_t2u_cstV0_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 47;
    isg : t;
    inp : ( __CTmpyM_t2u_cstV0_EX );
    out : ( mpyM );
    rsc : (2) mpyM ;
    ins : 26;
}

mpyR_copy0_mpyL_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 48;
    isg : t;
    inp : ( mpyL );
    out : ( mpyR );
    rsc : (2) mpyR ;
    ins : 27;
}

mpyR_copy0_mpyH_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 49;
    isg : t;
    inp : ( mpyH );
    out : ( mpyR );
    rsc : (2) mpyR ;
    ins : 28;
}

x_w1_copy0_mpyR_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 50;
    isg : t;
    inp : ( mpyR );
    out : ( x_w1 );
    rsc : (2) x_w1 ;
    ins : 23;
}

divA_copy0_x_r1_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 51;
    isg : t;
    inp : ( x_r1 );
    out : ( divA );
    rsc : (2) divA ;
    ins : 29;
}

divB_copy0_x_r2_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 52;
    isg : t;
    inp : ( x_r2 );
    out : ( divB );
    rsc : (2) divB ;
    ins : 29;
}

div_wad_t5u_cstP7_EX : const {
    fst : 2;
    ost : ( 2 );
    rid : 53;
    isg : t;
    out : ( __CTdiv_wad_t5u_cstP7_EX );
    rsc : (2) __CTdiv_wad_t5u_cstP7_EX ;
    ins : 29;
}

div_wad_copy0___CTdiv_wad_t5u_cstP7_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 54;
    isg : t;
    inp : ( __CTdiv_wad_t5u_cstP7_EX );
    out : ( div_wad );
    rsc : (2) div_wad ;
    ins : 29;
}

divR_divu_divA_divB_div_EX : w32_divu_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 55;
    isg : t;
    inp : ( divA divB );
    out : ( divR );
    rsc : (2) divR ;
    ins : 30;
    opr : div;
}

divR_remu_divA_divB_div_EX : w32_remu_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 56;
    isg : t;
    inp : ( divA divB );
    out : ( divR );
    rsc : (2) divR ;
    ins : 31;
    opr : div;
}

divR_divs_divA_divB_div_EX : w32_divs_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 57;
    isg : t;
    inp : ( divA divB );
    out : ( divR );
    rsc : (2) divR ;
    ins : 32;
    opr : div;
}

divR_rems_divA_divB_div_EX : w32_rems_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 58;
    isg : t;
    inp : ( divA divB );
    out : ( divR );
    rsc : (2) divR ;
    ins : 33;
    opr : div;
}

x_w1_copy0_divR_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 59;
    isg : t;
    inp : ( divR );
    out : ( x_w1 );
    rsc : (2) x_w1 ;
    ins : 29;
}

t5u_cstP15_ID : const {
    fst : 1;
    ost : ( 1 );
    rid : 60;
    isg : t;
    out : ( __CTt5u_cstP15_ID );
    rsc : (1) __CTt5u_cstP15_ID ;
    ins : 34;
}

aguA_copy0_x_r3_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 61;
    isg : t;
    inp : ( x_r3 );
    out : ( aguA );
    rsc : (1) aguA ;
    ins : 35;
}

__X_x_r3_rad_copy0___CTt5u_cstP15_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 62;
    isg : t;
    inp : ( __CTt5u_cstP15_ID );
    out : ( __X_x_r3_rad );
    rsc : (1) __X_x_r3_rad ;
    ins : 34;
}

x_r3_rd_X___X_x_r3_rad_ID : read_file {
    fst : 1;
    ist : ( 1 1 );
    ost : ( 1 );
    rid : 63;
    isg : t;
    inp : ( X __X_x_r3_rad );
    out : ( x_r3 );
    rsc : (1) x_r3 ;
    ins : 34;
}

aguB_t12s_cstP20_ID : const {
    fst : 1;
    ost : ( 1 );
    rid : 64;
    isg : t;
    out : ( __CTaguB_t12s_cstP20_ID );
    rsc : (1) __CTaguB_t12s_cstP20_ID ;
    ins : 36;
}

aguB_copy0___CTaguB_t12s_cstP20_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 65;
    isg : t;
    inp : ( __CTaguB_t12s_cstP20_ID );
    out : ( aguB );
    rsc : (1) aguB ;
    ins : 36;
}

aguR_add_aguA_aguB_agu_ID : w32_add_w32_w32 {
    fst : 1;
    ist : ( 1 1 );
    ost : ( 1 );
    rid : 66;
    isg : t;
    inp : ( aguA aguB );
    out : ( aguR );
    rsc : (1) aguR ;
    ins : 37;
    opr : agu;
}

dm_addr_copy0_aguR_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 67;
    isg : t;
    inp : ( aguR );
    out : ( dm_addr );
    rsc : (1) dm_addr ;
    ins : 35;
}

dmb_rd_ld_DMb_dm_addr_ID : load {
    fst : 1;
    ist : ( 2 1 );
    ost : ( 2 );
    rid : 68;
    isg : t;
    inp : ( DMb dm_addr );
    out : ( dmb_rd );
    rsc : (2) dmb_rd ;
    ins : 38;
}

dmh_rd_ld_DMh_dm_addr_ID : load {
    fst : 1;
    ist : ( 2 1 );
    ost : ( 2 );
    rid : 69;
    isg : t;
    inp : ( DMh dm_addr );
    out : ( dmh_rd );
    rsc : (2) dmh_rd ;
    ins : 39;
}

dmw_rd_ld_DMw_dm_addr_ID : load {
    fst : 1;
    ist : ( 2 1 );
    ost : ( 2 );
    rid : 70;
    isg : t;
    inp : ( DMw dm_addr );
    out : ( dmw_rd );
    rsc : (2) dmw_rd ;
    ins : 40;
}

lxB_copy0_dmb_rd_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 71;
    isg : t;
    inp : ( dmb_rd );
    out : ( lxB );
    rsc : (2) lxB ;
    ins : 38;
}

lxR_sext_lxB_lx_EX : w32_sext_w08 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 72;
    isg : t;
    inp : ( lxB );
    out : ( lxR );
    rsc : (2) lxR ;
    ins : 41;
    opr : lx;
}

lxR_zext_lxB_lx_EX : w32_zext_w08 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 73;
    isg : t;
    inp : ( lxB );
    out : ( lxR );
    rsc : (2) lxR ;
    ins : 42;
    opr : lx;
}

lxH_copy0_dmh_rd_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 74;
    isg : t;
    inp : ( dmh_rd );
    out : ( lxH );
    rsc : (2) lxH ;
    ins : 39;
}

lxR_sext_lxH_lx_EX : w32_sext_w16 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 75;
    isg : t;
    inp : ( lxH );
    out : ( lxR );
    rsc : (2) lxR ;
    ins : 43;
    opr : lx;
}

lxR_zext_lxH_lx_EX : w32_zext_w16 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 76;
    isg : t;
    inp : ( lxH );
    out : ( lxR );
    rsc : (2) lxR ;
    ins : 44;
    opr : lx;
}

lxR_copy0_dmw_rd_lx_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 77;
    isg : t;
    inp : ( dmw_rd );
    out : ( lxR );
    rsc : (2) lxR ;
    ins : 40;
    opr : lx;
}

x_w1_copy0_lxR_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 78;
    isg : t;
    inp : ( lxR );
    out : ( x_w1 );
    rsc : (2) x_w1 ;
    ins : 36;
}

aguB_t12s_cstP25_11_5P7_4_0_ID : const {
    fst : 1;
    ost : ( 1 );
    rid : 79;
    isg : t;
    out : ( __CTaguB_t12s_cstP25_11_5P7_4_0_ID );
    rsc : (1) __CTaguB_t12s_cstP25_11_5P7_4_0_ID ;
    ins : 45;
}

aguB_copy0___CTaguB_t12s_cstP25_11_5P7_4_0_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 80;
    isg : t;
    inp : ( __CTaguB_t12s_cstP25_11_5P7_4_0_ID );
    out : ( aguB );
    rsc : (1) aguB ;
    ins : 45;
}

DMb_st_dmb_wr_dm_addr_ID : store {
    fst : 1;
    ist : ( 2 1 );
    ost : ( 2 );
    rid : 81;
    isg : t;
    inp : ( dmb_wr dm_addr );
    out : ( DMb );
    ins : 46;
}

dmb_wr_copy0_x_r2_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 82;
    isg : t;
    inp : ( x_r2 );
    out : ( dmb_wr );
    rsc : (2) dmb_wr ;
    ins : 46;
}

DMh_st_dmh_wr_dm_addr_ID : store {
    fst : 1;
    ist : ( 2 1 );
    ost : ( 2 );
    rid : 83;
    isg : t;
    inp : ( dmh_wr dm_addr );
    out : ( DMh );
    ins : 47;
}

dmh_wr_copy0_x_r2_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 84;
    isg : t;
    inp : ( x_r2 );
    out : ( dmh_wr );
    rsc : (2) dmh_wr ;
    ins : 47;
}

DMw_st_dmw_wr_dm_addr_ID : store {
    fst : 1;
    ist : ( 2 1 );
    ost : ( 2 );
    rid : 85;
    isg : t;
    inp : ( dmw_wr dm_addr );
    out : ( DMw );
    ins : 48;
}

dmw_wr_copy0_x_r2_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 86;
    isg : t;
    inp : ( x_r2 );
    out : ( dmw_wr );
    rsc : (2) dmw_wr ;
    ins : 48;
}

cmpA_copy0_x_r1_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 87;
    isg : t;
    inp : ( x_r1 );
    out : ( cmpA );
    rsc : (2) cmpA ;
    ins : 49;
}

cmpB_copy0_x_r2_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 88;
    isg : t;
    inp : ( x_r2 );
    out : ( cmpB );
    rsc : (2) cmpB ;
    ins : 49;
}

cmpF_eq_cmpA_cmpB_cmp_EX : bool_eq_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 89;
    isg : t;
    inp : ( cmpA cmpB );
    out : ( cmpF );
    rsc : (2) cmpF ;
    ins : 50;
    opr : cmp;
}

cmpF_ne_cmpA_cmpB_cmp_EX : bool_ne_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 90;
    isg : t;
    inp : ( cmpA cmpB );
    out : ( cmpF );
    rsc : (2) cmpF ;
    ins : 51;
    opr : cmp;
}

cmpF_lt_cmpA_cmpB_cmp_EX : bool_lt_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 91;
    isg : t;
    inp : ( cmpA cmpB );
    out : ( cmpF );
    rsc : (2) cmpF ;
    ins : 52;
    opr : cmp;
}

cmpF_ltu_cmpA_cmpB_cmp_EX : bool_ltu_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 92;
    isg : t;
    inp : ( cmpA cmpB );
    out : ( cmpF );
    rsc : (2) cmpF ;
    ins : 53;
    opr : cmp;
}

cmpF_ge_cmpA_cmpB_cmp_EX : bool_ge_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 93;
    isg : t;
    inp : ( cmpA cmpB );
    out : ( cmpF );
    rsc : (2) cmpF ;
    ins : 54;
    opr : cmp;
}

cmpF_geu_cmpA_cmpB_cmp_EX : bool_geu_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 94;
    isg : t;
    inp : ( cmpA cmpB );
    out : ( cmpF );
    rsc : (2) cmpF ;
    ins : 55;
    opr : cmp;
}

cnd_copy0_cmpF_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 95;
    isg : t;
    inp : ( cmpF );
    out : ( cnd );
    rsc : (2) cnd ;
    ins : 49;
}

of13_cd_t13s_s2_cstP31_12P7_11P25_10_5P8_4_1_EX : const {
    fst : 2;
    ost : ( 2 );
    rid : 96;
    isg : t;
    out : ( __CTof13_cd_t13s_s2_cstP31_12P7_11P25_10_5P8_4_1_EX );
    rsc : (2) __CTof13_cd_t13s_s2_cstP31_12P7_11P25_10_5P8_4_1_EX ;
    ins : 49;
}

of13_cd_copy0___CTof13_cd_t13s_s2_cstP31_12P7_11P25_10_5P8_4_1_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 97;
    isg : t;
    inp : ( __CTof13_cd_t13s_s2_cstP31_12P7_11P25_10_5P8_4_1_EX );
    out : ( of13_cd );
    rsc : (2) of13_cd ;
    ins : 49;
}

vd_br_cnd_of13_cd_EX : void_br_bool_t13s_s2 {
    fst : 2;
    ist : ( 2 2 );
    rid : 98;
    isg : t;
    inp : ( cnd of13_cd );
    ins : 49;
}

of21_t21s_s2_cstP31_20P12_19_12P20_11P21_10_1_ID : const {
    fst : 1;
    ost : ( 1 );
    rid : 99;
    isg : t;
    out : ( __CTof21_t21s_s2_cstP31_20P12_19_12P20_11P21_10_1_ID );
    rsc : (1) __CTof21_t21s_s2_cstP31_20P12_19_12P20_11P21_10_1_ID ;
    ins : 56;
}

of21_copy0___CTof21_t21s_s2_cstP31_20P12_19_12P20_11P21_10_1_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 100;
    isg : t;
    inp : ( __CTof21_t21s_s2_cstP31_20P12_19_12P20_11P21_10_1_ID );
    out : ( of21 );
    rsc : (1) of21 ;
    ins : 56;
}

lnk_id_jal_of21_ID : w32_jal_t21s_s2 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 101;
    isg : t;
    inp : ( of21 );
    out : ( lnk_id );
    rsc : (1) lnk_id ;
    ins : 56;
}

_pipe_pidTGT_ID : copy1 {
    fst : 1;
    ist : ( 1 );
    ost : ( 2 );
    rid : 102;
    isg : t;
    inp : ( __pidTGT_w );
    out : ( __pidTGT_r );
    rsc : (2) __pidTGT_r ;
    ins : 57;
}

pidTGT_copy0_lnk_id_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 103;
    isg : t;
    inp : ( lnk_id );
    out : ( __pidTGT_w );
    rsc : (1) __pidTGT_w ;
    ins : 57;
}

x_w1_copy0_pidTGT_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 104;
    isg : t;
    inp : ( __pidTGT_r );
    out : ( x_w1 );
    rsc : (2) x_w1 ;
    ins : 57;
}

pcaA_copy0_x_r3_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 105;
    isg : t;
    inp : ( x_r3 );
    out : ( pcaA );
    rsc : (1) pcaA ;
    ins : 58;
}

pcaB_t12s_cstP20_ID : const {
    fst : 1;
    ost : ( 1 );
    rid : 106;
    isg : t;
    out : ( __CTpcaB_t12s_cstP20_ID );
    rsc : (1) __CTpcaB_t12s_cstP20_ID ;
    ins : 58;
}

pcaB_copy0___CTpcaB_t12s_cstP20_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 107;
    isg : t;
    inp : ( __CTpcaB_t12s_cstP20_ID );
    out : ( pcaB );
    rsc : (1) pcaB ;
    ins : 58;
}

pcaR_add_pcaA_pcaB_pca_ID : w32_add_w32_w32 {
    fst : 1;
    ist : ( 1 1 );
    ost : ( 1 );
    rid : 108;
    isg : t;
    inp : ( pcaA pcaB );
    out : ( pcaR );
    rsc : (1) pcaR ;
    ins : 58;
    opr : pca;
}

trgt_copy0_pcaR_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 109;
    isg : t;
    inp : ( pcaR );
    out : ( trgt );
    rsc : (1) trgt ;
    ins : 58;
}

lnk_id_jalr_trgt_ID : w32_jalr_w32 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 110;
    isg : t;
    inp : ( trgt );
    out : ( lnk_id );
    rsc : (1) lnk_id ;
    ins : 58;
}

ocd_swbreak_t1u_cstV1_EX : const {
    fst : 2;
    ost : ( 2 );
    rid : 111;
    isg : t;
    out : ( __CTocd_swbreak_t1u_cstV1_EX );
    rsc : (2) __CTocd_swbreak_t1u_cstV1_EX ;
    ins : 59;
}

ocd_swbreak_copy0___CTocd_swbreak_t1u_cstV1_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 112;
    isg : t;
    inp : ( __CTocd_swbreak_t1u_cstV1_EX );
    out : ( ocd_swbreak );
    rsc : (2) ocd_swbreak ;
    ins : 59;
}

cnn_r1_copy0_x_r1_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 113;
    isg : t;
    inp : ( x_r1 );
    out : ( cnn_r1 );
    rsc : (2) cnn_r1 ;
    ins : 60;
}

cnn_r2_copy0_x_r2_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 114;
    isg : t;
    inp : ( x_r2 );
    out : ( cnn_r2 );
    rsc : (2) cnn_r2 ;
    ins : 61;
}

cnn_r3_copy0_x_r3_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 115;
    isg : t;
    inp : ( x_r3 );
    out : ( cnn_r3 );
    rsc : (2) cnn_r3 ;
    ins : 61;
}

__X_x_r3_rad_copy0___CTt5u_cstP7_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 116;
    isg : t;
    inp : ( __CTt5u_cstP7_EX );
    out : ( __X_x_r3_rad );
    rsc : (2) __X_x_r3_rad ;
    ins : 62;
}

x_r3_rd_X___X_x_r3_rad_EX : read_file {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 117;
    isg : t;
    inp : ( X __X_x_r3_rad );
    out : ( x_r3 );
    rsc : (2) x_r3 ;
    ins : 62;
}

cnn_w1_copy0_cnn_R_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 118;
    isg : t;
    inp : ( cnn_R );
    out : ( cnn_w1 );
    rsc : (2) cnn_w1 ;
    ins : 60;
}

xuC_copy0_cnn_r3_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 119;
    isg : t;
    inp : ( cnn_r3 );
    out : ( xuC );
    rsc : (2) xuC ;
    ins : 61;
}

xuA_copy0_cnn_r1_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 120;
    isg : t;
    inp : ( cnn_r1 );
    out : ( xuA );
    rsc : (2) xuA ;
    ins : 60;
}

xuB_copy0_cnn_r2_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 121;
    isg : t;
    inp : ( cnn_r2 );
    out : ( xuB );
    rsc : (2) xuB ;
    ins : 61;
}

cnn_R_mac_xuC_xuA_xuB_cnn_EX : w32_mac_w32_w32_w32 {
    fst : 2;
    ist : ( 2 2 2 );
    ost : ( 2 );
    rid : 122;
    isg : t;
    inp : ( xuC xuA xuB );
    out : ( cnn_R );
    rsc : (2) cnn_R ;
    ins : 61;
    opr : cnn;
}

x_w1_dead_copy0_cnn_w1_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 123;
    isg : t;
    inp : ( cnn_w1 );
    out : ( x_w1_dead );
    rsc : (2) x_w1_dead ;
    ins : 63;
}

__X_x_w2_wad_copy0___CTt5u_cstP7_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 124;
    isg : t;
    inp : ( __CTt5u_cstP7_EX );
    out : ( __X_x_w2_wad );
    rsc : (2) __X_x_w2_wad ;
    ins : 64;
}

X_wr_x_w2___X_x_w2_wad_EX : write_file {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 125;
    isg : t;
    inp : ( x_w2 __X_x_w2_wad );
    out : ( X );
    ins : 64;
}

x_w2_copy0_cnn_w1_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 126;
    isg : t;
    inp : ( cnn_w1 );
    out : ( x_w2 );
    rsc : (2) x_w2 ;
    ins : 64;
}

cnn_R_exp_xuA_cnn_EX : w32_exp_w32 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 127;
    isg : t;
    inp : ( xuA );
    out : ( cnn_R );
    rsc : (2) cnn_R ;
    ins : 65;
    opr : cnn;
}

x_w1_copy0_cnn_w1_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 128;
    isg : t;
    inp : ( cnn_w1 );
    out : ( x_w1 );
    rsc : (2) x_w1 ;
    ins : 66;
}

x_r1_rd_X10_EX : read_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 129;
    isg : t;
    inp : ( X10 );
    out : ( x_r1 );
    rsc : (2) x_r1 ;
    ins : 67;
}

x_r2_rd_X11_EX : read_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 130;
    isg : t;
    inp : ( X11 );
    out : ( x_r2 );
    rsc : (2) x_r2 ;
    ins : 67;
}

x_r3_rd_X12_EX : read_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 131;
    isg : t;
    inp : ( X12 );
    out : ( x_r3 );
    rsc : (2) x_r3 ;
    ins : 67;
}

X12_wr_x_w1_EX : write_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 132;
    isg : t;
    inp : ( x_w1 );
    out : ( X12 );
    ins : 67;
}

aguA_copy0_x_r4_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 133;
    isg : t;
    inp : ( x_r4 );
    out : ( aguA );
    rsc : (1) aguA ;
    ins : 67;
}

x_r4_rd_X13_ID : read_reg {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 134;
    isg : t;
    inp : ( X13 );
    out : ( x_r4 );
    rsc : (1) x_r4 ;
    ins : 67;
}

aguB_w32_cstV1_ID : const {
    fst : 1;
    ost : ( 1 );
    rid : 135;
    isg : t;
    out : ( __CTaguB_w32_cstV1_ID );
    rsc : (1) __CTaguB_w32_cstV1_ID ;
    ins : 67;
}

aguB_copy0___CTaguB_w32_cstV1_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 136;
    isg : t;
    inp : ( __CTaguB_w32_cstV1_ID );
    out : ( aguB );
    rsc : (1) aguB ;
    ins : 67;
}

X10_wr_x_w2_ID : write_reg {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 137;
    isg : t;
    inp : ( x_w2 );
    out : ( X10 );
    ins : 67;
}

x_w2_copy0_x_r5_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 138;
    isg : t;
    inp : ( x_r5 );
    out : ( x_w2 );
    rsc : (1) x_w2 ;
    ins : 67;
}

x_r5_rd_X15_ID : read_reg {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 139;
    isg : t;
    inp : ( X15 );
    out : ( x_r5 );
    rsc : (1) x_r5 ;
    ins : 67;
}

X13_wr_x_w3_ID : write_reg {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 140;
    isg : t;
    inp : ( x_w3 );
    out : ( X13 );
    ins : 67;
}

x_w3_copy0_aguR_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 141;
    isg : t;
    inp : ( aguR );
    out : ( x_w3 );
    rsc : (1) x_w3 ;
    ins : 67;
}

dm_addr_copy0_aguA_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 142;
    isg : t;
    inp : ( aguA );
    out : ( dm_addr );
    rsc : (1) dm_addr ;
    ins : 67;
}

X15_wr_x_w4_EX : write_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 143;
    isg : t;
    inp : ( x_w4 );
    out : ( X15 );
    ins : 67;
}

x_w4_copy0_lxR_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 144;
    isg : t;
    inp : ( lxR );
    out : ( x_w4 );
    rsc : (2) x_w4 ;
    ins : 67;
}

aguA2_copy0_x_r6_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 145;
    isg : t;
    inp : ( x_r6 );
    out : ( aguA2 );
    rsc : (1) aguA2 ;
    ins : 67;
}

x_r6_rd_X14_ID : read_reg {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 146;
    isg : t;
    inp : ( X14 );
    out : ( x_r6 );
    rsc : (1) x_r6 ;
    ins : 67;
}

aguB2_w32_cstV1_ID : const {
    fst : 1;
    ost : ( 1 );
    rid : 147;
    isg : t;
    out : ( __CTaguB2_w32_cstV1_ID );
    rsc : (1) __CTaguB2_w32_cstV1_ID ;
    ins : 67;
}

aguB2_copy0___CTaguB2_w32_cstV1_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 148;
    isg : t;
    inp : ( __CTaguB2_w32_cstV1_ID );
    out : ( aguB2 );
    rsc : (1) aguB2 ;
    ins : 67;
}

X11_wr_x_w5_ID : write_reg {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 149;
    isg : t;
    inp : ( x_w5 );
    out : ( X11 );
    ins : 67;
}

x_w5_copy0_x_r7_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 150;
    isg : t;
    inp : ( x_r7 );
    out : ( x_w5 );
    rsc : (1) x_w5 ;
    ins : 67;
}

x_r7_rd_X16_ID : read_reg {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 151;
    isg : t;
    inp : ( X16 );
    out : ( x_r7 );
    rsc : (1) x_r7 ;
    ins : 67;
}

aguR2_add_aguA2_aguB2_agu2_ID : w32_add_w32_w32 {
    fst : 1;
    ist : ( 1 1 );
    ost : ( 1 );
    rid : 152;
    isg : t;
    inp : ( aguA2 aguB2 );
    out : ( aguR2 );
    rsc : (1) aguR2 ;
    ins : 67;
    opr : agu2;
}

X14_wr_x_w6_ID : write_reg {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 153;
    isg : t;
    inp : ( x_w6 );
    out : ( X14 );
    ins : 67;
}

x_w6_copy0_aguR2_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 154;
    isg : t;
    inp : ( aguR2 );
    out : ( x_w6 );
    rsc : (1) x_w6 ;
    ins : 67;
}

dm_addr2_copy0_aguA2_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 155;
    isg : t;
    inp : ( aguA2 );
    out : ( dm_addr2 );
    rsc : (1) dm_addr2 ;
    ins : 67;
}

dmw_rd2_ld_DMw_dm_addr2_ID : load {
    fst : 1;
    ist : ( 2 1 );
    ost : ( 2 );
    rid : 156;
    isg : t;
    inp : ( DMw dm_addr2 );
    out : ( dmw_rd2 );
    rsc : (2) dmw_rd2 ;
    ins : 67;
}

lxR2_copy0_dmw_rd2_lx2_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 157;
    isg : t;
    inp : ( dmw_rd2 );
    out : ( lxR2 );
    rsc : (2) lxR2 ;
    ins : 67;
    opr : lx2;
}

X16_wr_x_w7_EX : write_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 158;
    isg : t;
    inp : ( x_w7 );
    out : ( X16 );
    ins : 67;
}

x_w7_copy0_lxR2_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 159;
    isg : t;
    inp : ( lxR2 );
    out : ( x_w7 );
    rsc : (2) x_w7 ;
    ins : 67;
}


//Hazards
hw_stall [1,1] c f <jalr_read> {
    reg : X_wr_x_w1___X_x_w1_wad_EX;
    ins : 17;
} -> {
    reg : x_r3_rd_X___X_x_r3_rad_ID;
    ins : 58;
} rid : 162;

hw_stall [1,1] c f <jalr_read> {
    reg : X_wr_x_w2___X_x_w2_wad_EX;
    ins : 64;
} -> {
    reg : x_r3_rd_X___X_x_r3_rad_ID;
    ins : 58;
} rid : 163;

hw_stall [1,1] c f <jalr_read> {
    reg : X12_wr_x_w1_EX;
    ins : 67;
} -> {
    reg : x_r3_rd_X___X_x_r3_rad_ID;
    ins : 58;
} rid : 164;

hw_stall [1,1] c f <jalr_read> {
    reg : X15_wr_x_w4_EX;
    ins : 67;
} -> {
    reg : x_r3_rd_X___X_x_r3_rad_ID;
    ins : 58;
} rid : 165;

hw_stall [1,1] c f <jalr_read> {
    reg : X16_wr_x_w7_EX;
    ins : 67;
} -> {
    reg : x_r3_rd_X___X_x_r3_rad_ID;
    ins : 58;
} rid : 166;

sw_stall [1,2] i n <ctrl_n_L280> {
    ins : 49;
} -> {
    spc : pdc_hw_breakpoint;
} rid : 167;

hw_stall [1,0] c f <read_after_div> {
    adr : div_adr;
    grd : div_bsy;
} -> {
    reg : x_r3_rd_X___X_x_r3_rad_ID;
    ins : 34;
} rid : 169;

hw_stall [1,0] c f <read_after_div> {
    adr : div_adr;
    grd : div_bsy;
} -> {
    reg : x_r1_rd_X___X_x_r1_rad_EX;
    ins : 0;
} rid : 170;

hw_stall [1,0] c f <read_after_div> {
    adr : div_adr;
    grd : div_bsy;
} -> {
    reg : x_r2_rd_X___X_x_r2_rad_EX;
    ins : 2;
} rid : 171;

hw_stall [1,0] c f <read_after_div> {
    adr : div_adr;
    grd : div_bsy;
} -> {
    reg : x_r3_rd_X___X_x_r3_rad_EX;
    ins : 62;
} rid : 172;

hw_stall [1,0] c f <read_after_div> {
    adr : div_adr;
    grd : div_bsy;
} -> {
    reg : x_r1_rd_X10_EX;
    ins : 67;
} rid : 173;

hw_stall [1,0] c f <read_after_div> {
    adr : div_adr;
    grd : div_bsy;
} -> {
    reg : x_r2_rd_X11_EX;
    ins : 67;
} rid : 174;

hw_stall [1,0] c f <read_after_div> {
    adr : div_adr;
    grd : div_bsy;
} -> {
    reg : x_r3_rd_X12_EX;
    ins : 67;
} rid : 175;

hw_stall [1,0] c f <read_after_div> {
    adr : div_adr;
    grd : div_bsy;
} -> {
    reg : x_r4_rd_X13_ID;
    ins : 67;
} rid : 176;

hw_stall [1,0] c f <read_after_div> {
    adr : div_adr;
    grd : div_bsy;
} -> {
    reg : x_r6_rd_X14_ID;
    ins : 67;
} rid : 177;

hw_stall [1,0] c f <read_after_div> {
    adr : div_adr;
    grd : div_bsy;
} -> {
    reg : x_r5_rd_X15_ID;
    ins : 67;
} rid : 178;

hw_stall [1,0] c f <read_after_div> {
    adr : div_adr;
    grd : div_bsy;
} -> {
    reg : x_r7_rd_X16_ID;
    ins : 67;
} rid : 179;

hw_stall [1,0] c o <write_after_div> {
    adr : div_adr;
    grd : div_bsy;
} -> {
    reg : X_wr_x_w1___X_x_w1_wad_EX;
    ins : 17;
} rid : 181;

hw_stall [1,0] c o <write_after_div> {
    adr : div_adr;
    grd : div_bsy;
} -> {
    reg : X_wr_x_w2___X_x_w2_wad_EX;
    ins : 64;
} rid : 182;

hw_stall [1,0] c o <write_after_div> {
    adr : div_adr;
    grd : div_bsy;
} -> {
    reg : X10_wr_x_w2_ID;
    ins : 67;
} rid : 183;

hw_stall [1,0] c o <write_after_div> {
    adr : div_adr;
    grd : div_bsy;
} -> {
    reg : X11_wr_x_w5_ID;
    ins : 67;
} rid : 184;

hw_stall [1,0] c o <write_after_div> {
    adr : div_adr;
    grd : div_bsy;
} -> {
    reg : X12_wr_x_w1_EX;
    ins : 67;
} rid : 185;

hw_stall [1,0] c o <write_after_div> {
    adr : div_adr;
    grd : div_bsy;
} -> {
    reg : X13_wr_x_w3_ID;
    ins : 67;
} rid : 186;

hw_stall [1,0] c o <write_after_div> {
    adr : div_adr;
    grd : div_bsy;
} -> {
    reg : X14_wr_x_w6_ID;
    ins : 67;
} rid : 187;

hw_stall [1,0] c o <write_after_div> {
    adr : div_adr;
    grd : div_bsy;
} -> {
    reg : X15_wr_x_w4_EX;
    ins : 67;
} rid : 188;

hw_stall [1,0] c o <write_after_div> {
    adr : div_adr;
    grd : div_bsy;
} -> {
    reg : X16_wr_x_w7_EX;
    ins : 67;
} rid : 189;

hw_stall [1,0] c n <div_busy> {
    grd : div_bsy;
} -> {
    ins : 29;
} rid : 190;

hw_stall [1,0] c n <div_wp> {
    grd : div_wnc;
} -> {
    ins : 68;
} rid : 192;

hw_stall [1,1] c f <agu_read_after_write> {
    reg : X_wr_x_w1___X_x_w1_wad_EX;
    ins : 17;
} -> {
    reg : x_r3_rd_X___X_x_r3_rad_ID;
    ins : 34;
} rid : 195;

hw_stall [1,1] c f <agu_read_after_write> {
    reg : X_wr_x_w2___X_x_w2_wad_EX;
    ins : 64;
} -> {
    reg : x_r3_rd_X___X_x_r3_rad_ID;
    ins : 34;
} rid : 196;

hw_stall [1,1] c f <agu_read_after_write> {
    reg : X12_wr_x_w1_EX;
    ins : 67;
} -> {
    reg : x_r3_rd_X___X_x_r3_rad_ID;
    ins : 34;
} rid : 197;

hw_stall [1,1] c f <agu_read_after_write> {
    reg : X15_wr_x_w4_EX;
    ins : 67;
} -> {
    reg : x_r3_rd_X___X_x_r3_rad_ID;
    ins : 34;
} rid : 198;

hw_stall [1,1] c f <agu_read_after_write> {
    reg : X16_wr_x_w7_EX;
    ins : 67;
} -> {
    reg : x_r3_rd_X___X_x_r3_rad_ID;
    ins : 34;
} rid : 199;

sw_stall [1,1] c n <__conflict__x_r3_34> {
    ins : 62;
} -> {
    ins : 34;
} rid : 200;

sw_stall [1,1] c n <__conflict__x_r3_35> {
    ins : 67;
} -> {
    ins : 34;
} rid : 201;

sw_stall [1,1] c n <__conflict__x_w2_36> {
    ins : 64;
} -> {
    ins : 67;
} rid : 202;

sw_stall [1,1] c f <__RAW__X_37> {
    reg : X_wr_x_w1___X_x_w1_wad_EX;
    ins : 69;
} -> {
    reg : x_r4_rd_X13_ID;
    ins : 67;
} rid : 203;

sw_stall [1,1] c f <__RAW__X_38> {
    reg : X_wr_x_w1___X_x_w1_wad_EX;
    ins : 69;
} -> {
    reg : x_r6_rd_X14_ID;
    ins : 67;
} rid : 204;

sw_stall [1,1] c f <__RAW__X_39> {
    reg : X_wr_x_w1___X_x_w1_wad_EX;
    ins : 69;
} -> {
    reg : x_r5_rd_X15_ID;
    ins : 67;
} rid : 205;

sw_stall [1,1] c f <__RAW__X_40> {
    reg : X_wr_x_w1___X_x_w1_wad_EX;
    ins : 69;
} -> {
    reg : x_r7_rd_X16_ID;
    ins : 67;
} rid : 206;

sw_stall [1,1] c f <__RAW__X_41> {
    reg : X12_wr_x_w1_EX;
    ins : 67;
} -> {
    reg : x_r4_rd_X13_ID;
    ins : 67;
} rid : 207;

sw_stall [1,1] c f <__RAW__X_42> {
    reg : X12_wr_x_w1_EX;
    ins : 67;
} -> {
    reg : x_r6_rd_X14_ID;
    ins : 67;
} rid : 208;

sw_stall [1,1] c f <__RAW__X_43> {
    reg : X12_wr_x_w1_EX;
    ins : 67;
} -> {
    reg : x_r5_rd_X15_ID;
    ins : 67;
} rid : 209;

sw_stall [1,1] c f <__RAW__X_44> {
    reg : X12_wr_x_w1_EX;
    ins : 67;
} -> {
    reg : x_r7_rd_X16_ID;
    ins : 67;
} rid : 210;

sw_stall [1,1] c f <__RAW__X_45> {
    reg : X15_wr_x_w4_EX;
    ins : 67;
} -> {
    reg : x_r4_rd_X13_ID;
    ins : 67;
} rid : 211;

sw_stall [1,1] c f <__RAW__X_46> {
    reg : X15_wr_x_w4_EX;
    ins : 67;
} -> {
    reg : x_r6_rd_X14_ID;
    ins : 67;
} rid : 212;

sw_stall [1,1] c f <__RAW__X_47> {
    reg : X15_wr_x_w4_EX;
    ins : 67;
} -> {
    reg : x_r5_rd_X15_ID;
    ins : 67;
} rid : 213;

sw_stall [1,1] c f <__RAW__X_48> {
    reg : X15_wr_x_w4_EX;
    ins : 67;
} -> {
    reg : x_r7_rd_X16_ID;
    ins : 67;
} rid : 214;

sw_stall [1,1] c f <__RAW__X_49> {
    reg : X16_wr_x_w7_EX;
    ins : 67;
} -> {
    reg : x_r4_rd_X13_ID;
    ins : 67;
} rid : 215;

sw_stall [1,1] c f <__RAW__X_50> {
    reg : X16_wr_x_w7_EX;
    ins : 67;
} -> {
    reg : x_r6_rd_X14_ID;
    ins : 67;
} rid : 216;

sw_stall [1,1] c f <__RAW__X_51> {
    reg : X16_wr_x_w7_EX;
    ins : 67;
} -> {
    reg : x_r5_rd_X15_ID;
    ins : 67;
} rid : 217;

sw_stall [1,1] c f <__RAW__X_52> {
    reg : X16_wr_x_w7_EX;
    ins : 67;
} -> {
    reg : x_r7_rd_X16_ID;
    ins : 67;
} rid : 218;



//Instruction properties
i_class_alu_rrr : instruction_class {
    ins : 3;
}

i_class_mX1r : instruction_class {
    ins : 70;
}

i_class_mX2r : instruction_class {
    ins : 71;
}

i_class_mX1w : instruction_class {
    ins : 72;
}

i_class_alu_rri : instruction_class {
    ins : 73;
}

i_class_auipc : instruction_class {
    ins : 21;
}

i_class_lui : instruction_class {
    ins : 22;
}

i_class_mpy : instruction_class {
    ins : 23;
}

i_class_div : instruction_class {
    ins : 29;
}

i_class_load : instruction_class {
    ins : 36;
}

i_class_ldst : instruction_class {
    ins : 35;
}

i_class_mX3r : instruction_class {
    ins : 34;
}

i_class_store : instruction_class {
    ins : 45;
}

i_class_ctrl : instruction_class {
    ins : 74;
}

i_class_branch : instruction_class {
    ins : 49;
}

i_class_jal : instruction_class {
    ins : 56;
}

i_class_jalr : instruction_class {
    ins : 58;
}

i_class_cnn_rrra : instruction_class {
    ins : 62;
}

i_class_mX1rw : instruction_class {
    ins : 62;
}

i_class_mX2rw : instruction_class {
    ins : 62;
}

i_class_mX3rw : instruction_class {
    ins : 62;
}

i_class_cnn_rr : instruction_class {
    ins : 65;
}


cycles1 : cycles {
    cyc : 1;
    ins : 75;
}

cycles2 : cycles {
    cyc : 2;
    ins : 76;
}

cycles3 : cycles {
    cyc : 3;
    ins : 49;
}


words4 : words {
    wrd : 4;
    ins : 77;
}


alt_cycles0 : alt_cycles {
    ins : 78;
}

alt_cycles1 : alt_cycles {
    acy : 1;
    ins : 49;
}


delay_slots0 : delay_slots {
    ins : 77;
}


pc_offset0 : pc_offset {
    ins : 77;
}



0 : '__internal__';
1 : 'alu.n';
2 : 'cnn.n';
3 : 'ctrl.n';
4 : 'div.n';
5 : 'ldst.n';
6 : 'mpy.n';
7 : 'ocd.n';
8 : 'regX.n';
----------
----------
1 : (1,69:34,0) (1,131:34,0) (1,167:34,0) (6,61:34,0) (4,58:34,0) (3,94:34,0) (2,32:27,0) (2,52:27,0) (8,77:18,0) (8,123:18,0);
2 : (1,69:34,0) (1,131:34,0) (1,167:34,0) (8,77:31,0);
3 : (1,69:34,0) (1,131:34,0) (1,167:34,0) (6,61:34,0) (4,58:34,0) (3,94:34,0) (2,32:27,0) (2,52:27,0) (8,77:31,0) (8,123:44,0);
4 : (1,69:34,0) (1,131:34,0) (1,167:34,0) (6,61:34,0) (4,58:34,0) (3,94:34,0) (2,32:27,0) (2,52:27,0) (8,77:31,0) (8,123:44,0);
5 : (1,70:34,0) (6,62:34,0) (4,59:34,0) (5,99:63,0) (5,100:63,0) (5,101:63,0) (3,95:34,0) (2,33:27,0) (8,84:18,0) (8,116:18,0);
6 : (1,70:34,0) (8,84:31,0);
7 : (1,70:34,0) (6,62:34,0) (4,59:34,0) (5,99:63,0) (5,100:63,0) (5,101:63,0) (3,95:34,0) (2,33:27,0) (8,84:31,0) (8,116:44,0);
8 : (1,70:34,0) (6,62:34,0) (4,59:34,0) (5,99:63,0) (5,100:63,0) (5,101:63,0) (3,95:34,0) (2,33:27,0) (8,84:31,0) (8,116:44,0);
9 : (1,74:49,0) (1,136:49,0) (1,213:48,0);
10 : (1,75:49,0);
11 : (1,76:49,0) (1,137:49,0);
12 : (1,77:49,0) (1,138:49,0);
13 : (1,78:49,0) (1,139:49,0);
14 : (1,79:49,0) (1,141:49,0);
15 : (1,80:49,0) (1,140:49,0);
16 : (1,81:49,0) (1,172:48,0);
17 : (1,82:49,0) (1,173:48,0);
18 : (1,83:49,0) (1,174:48,0);
19 : (1,86:33,0) (1,144:33,0) (1,177:33,0) (1,215:33,0) (8,98:20,0);
20 : (8,100:31,0) (8,100:25,0);
21 : (8,101:26,0) (2,34:26,0) (2,42:46,0) (8,101:18,0) (8,109:18,0);
22 : (8,101:26,0) (8,101:20,0);
23 : (8,101:26,0) (8,101:20,0);
24 : (1,103:29,0);
25 : (1,132:32,0) (1,132:29,0);
26 : (1,132:32,0) (1,132:29,0);
27 : (1,168:32,0) (1,168:29,0);
28 : (1,168:32,0) (1,168:29,0);
29 : (1,209:57,0) (1,209:30,0);
30 : (1,209:57,0) (1,209:30,0);
31 : (1,209:57,0) (1,209:30,0);
32 : (1,210:46,0) (1,210:29,0);
33 : (1,210:46,0) (1,210:29,0);
34 : (1,211:32,0) (1,211:29,0);
35 : (1,211:32,0) (1,211:29,0);
36 : (1,191:32,0) (1,191:29,0);
37 : (1,191:32,0) (1,191:29,0);
38 : (1,193:33,0) (8,98:20,0);
39 : (6,61:34,0) (8,77:31,0);
40 : (6,62:34,0) (8,84:31,0);
41 : (6,66:70,0) (6,67:70,0) (6,66:46,0) (6,67:46,0);
42 : (6,66:70,0) (6,67:70,0) (6,66:46,0) (6,67:46,0);
43 : (6,66:70,0) (6,67:70,0) (6,68:70,0) (6,69:70,0);
44 : (6,68:70,0) (6,68:46,0);
45 : (6,68:70,0) (6,68:46,0);
46 : (6,69:70,0) (6,69:46,0);
47 : (6,69:70,0) (6,69:46,0);
48 : (6,73:35,0) (6,73:29,0);
49 : (6,76:35,0) (6,76:29,0);
50 : (6,79:33,0) (8,98:20,0);
51 : (4,58:34,0) (8,77:31,0);
52 : (4,59:34,0) (8,84:31,0);
53 : (4,60:37,0) (4,60:32,0);
54 : (4,60:37,0) (4,60:32,0);
55 : (4,64:49,0);
56 : (4,65:49,0);
57 : (4,66:49,0);
58 : (4,67:49,0);
59 : (4,73:33,0) (8,98:20,0);
60 : (5,54:34,0) (5,91:34,0) (3,189:34,0) (8,91:18,0);
61 : (5,54:34,0) (5,91:34,0) (8,91:31,0);
62 : (5,54:34,0) (5,91:34,0) (3,189:34,0) (8,91:31,0);
63 : (5,54:34,0) (5,91:34,0) (3,189:34,0) (8,91:31,0);
64 : (5,55:32,0) (5,55:29,0);
65 : (5,55:32,0) (5,55:29,0);
66 : (5,57:48,0) (5,94:48,0) (2,100:48,0);
67 : (5,58:38,0) (5,95:38,0) (5,58:32,0) (5,95:32,0);
68 : (5,62:57,0) (5,62:35,0);
69 : (5,63:57,0) (5,63:35,0);
70 : (5,64:57,0) (2,105:57,0) (5,64:35,0) (2,105:35,0);
71 : (5,68:49,0) (5,69:49,0) (5,68:39,0) (5,69:39,0);
72 : (5,68:49,0);
73 : (5,69:49,0);
74 : (5,70:49,0) (5,71:49,0) (5,70:39,0) (5,71:39,0);
75 : (5,70:49,0);
76 : (5,71:49,0);
77 : (5,72:49,0) (2,106:39,0) (5,72:28,0) (2,106:28,0);
78 : (5,75:32,0) (8,98:20,0);
79 : (5,92:32,0) (5,92:29,0);
80 : (5,92:32,0) (5,92:29,0);
81 : (5,99:63,0) (5,99:45,0);
82 : (5,99:63,0) (8,84:31,0);
83 : (5,100:63,0) (5,100:45,0);
84 : (5,100:63,0) (8,84:31,0);
85 : (5,101:63,0) (5,101:45,0);
86 : (5,101:63,0) (8,84:31,0);
87 : (3,94:34,0) (8,77:31,0);
88 : (3,95:34,0) (8,84:31,0);
89 : (3,99:48,0);
90 : (3,100:48,0);
91 : (3,101:48,0);
92 : (3,102:48,0);
93 : (3,103:48,0);
94 : (3,104:48,0);
95 : (3,106:47,0) (3,106:31,0);
96 : (3,106:47,0) (3,106:44,0);
97 : (3,106:47,0) (3,106:44,0);
98 : (3,106:47,0);
99 : (3,154:45,0) (3,154:42,0);
100 : (3,154:45,0) (3,154:42,0);
101 : (3,154:45,0);
102 : (3,155:39,0) (3,194:39,0) (3,155:31,0) (3,194:31,0);
103 : (3,155:39,0) (3,194:39,0) (3,155:31,0) (3,194:31,0);
104 : (3,157:35,0) (3,196:35,0) (8,98:20,0);
105 : (3,189:34,0) (8,91:31,0);
106 : (3,190:32,0) (3,190:29,0);
107 : (3,190:32,0) (3,190:29,0);
108 : (3,192:48,0);
109 : (3,193:49,0) (3,193:43,0);
110 : (3,193:49,0);
111 : (7,111:36,0) (7,111:33,0);
112 : (7,111:36,0) (7,111:33,0);
113 : (2,32:27,0) (2,52:27,0) (2,76:33,0) (8,123:44,0) (8,77:31,0) (2,76:21,0);
114 : (2,33:27,0) (2,77:33,0) (8,116:44,0) (2,77:21,0);
115 : (2,34:26,0) (2,78:33,0) (8,109:44,0) (2,78:21,0);
116 : (2,34:26,0) (8,109:44,0);
117 : (2,34:26,0) (8,109:44,0);
118 : (2,38:83,0) (2,55:61,0) (2,81:83,0) (2,38:34,0) (2,55:34,0) (2,81:18,0);
119 : (2,38:83,0) (2,81:83,0) (2,38:51,0) (2,81:51,0);
120 : (2,38:83,0) (2,55:61,0) (2,81:83,0) (2,38:62,0) (2,55:51,0) (2,81:62,0);
121 : (2,38:83,0) (2,81:83,0) (2,38:73,0) (2,81:73,0);
122 : (2,38:83,0) (2,81:83,0);
123 : (2,41:52,0) (2,57:52,0) (2,41:44,0) (2,57:44,0);
124 : (2,42:46,0) (8,109:44,0);
125 : (2,42:46,0) (8,109:44,0);
126 : (2,42:46,0) (8,109:44,0);
127 : (2,55:61,0);
128 : (2,58:46,0) (2,81:83,0) (8,98:20,0) (2,81:18,0);
129 : (2,76:33,0) (2,76:21,0);
130 : (2,77:33,0) (2,77:21,0);
131 : (2,78:33,0) (2,78:21,0);
132 : (2,81:83,0) (2,81:18,0);
133 : (2,96:41,0) (2,96:29,0);
134 : (2,96:41,0) (2,96:29,0);
135 : (2,97:32,0) (2,97:29,0);
136 : (2,97:32,0) (2,97:29,0);
137 : (2,98:47,0) (2,98:28,0);
138 : (2,98:47,0) (2,98:28,0);
139 : (2,98:47,0) (2,98:28,0);
140 : (2,101:41,0) (2,101:28,0);
141 : (2,101:41,0) (2,101:28,0);
142 : (2,102:38,0) (2,102:32,0);
143 : (2,107:40,0) (2,107:28,0);
144 : (2,107:40,0) (2,107:28,0);
145 : (2,115:42,0) (2,115:30,0);
146 : (2,115:42,0) (2,115:30,0);
147 : (2,116:33,0) (2,116:30,0);
148 : (2,116:33,0) (2,116:30,0);
149 : (2,117:47,0) (2,117:28,0);
150 : (2,117:47,0) (2,117:28,0);
151 : (2,117:47,0) (2,117:28,0);
152 : (2,120:51,0);
153 : (2,121:42,0) (2,121:28,0);
154 : (2,121:42,0) (2,121:28,0);
155 : (2,122:40,0) (2,122:33,0);
156 : (2,125:59,0) (2,125:36,0);
157 : (2,127:41,0) (2,127:29,0);
158 : (2,129:41,0) (2,129:28,0);
159 : (2,129:41,0) (2,129:28,0);
162 : (3,262:48,0);
163 : (3,262:48,0);
164 : (3,262:48,0);
165 : (3,262:48,0);
166 : (3,262:48,0);
167 : (3,280:42,0);
169 : (4,93:46,0);
170 : (4,93:46,0);
171 : (4,93:46,0);
172 : (4,93:46,0);
173 : (4,93:46,0);
174 : (4,93:46,0);
175 : (4,93:46,0);
176 : (4,93:46,0);
177 : (4,93:46,0);
178 : (4,93:46,0);
179 : (4,93:46,0);
181 : (4,102:34,0);
182 : (4,102:34,0);
183 : (4,102:34,0);
184 : (4,102:34,0);
185 : (4,102:34,0);
186 : (4,102:34,0);
187 : (4,102:34,0);
188 : (4,102:34,0);
189 : (4,102:34,0);
190 : (4,111:27,0);
192 : (4,120:25,0);
195 : (5,145:59,0);
196 : (5,145:59,0);
197 : (5,145:59,0);
198 : (5,145:59,0);
199 : (5,145:59,0);
200 : (0,34:0,0);
201 : (0,35:0,0);
202 : (0,36:0,0);
203 : (0,37:0,0);
204 : (0,38:0,0);
205 : (0,39:0,0);
206 : (0,40:0,0);
207 : (0,41:0,0);
208 : (0,42:0,0);
209 : (0,43:0,0);
210 : (0,44:0,0);
211 : (0,45:0,0);
212 : (0,46:0,0);
213 : (0,47:0,0);
214 : (0,48:0,0);
215 : (0,49:0,0);
216 : (0,50:0,0);
217 : (0,51:0,0);
218 : (0,52:0,0);


