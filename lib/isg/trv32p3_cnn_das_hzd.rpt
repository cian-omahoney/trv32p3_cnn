
// File generated by animal version U-2022.12#33f3808fcb#221128, Fri Mar 22 18:53:59 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// animal -A -Iisg +wisg -D__tct_patch__=0 -h -D__darts__ -D__programmers_view__ trv32p3_cnn


// This file reports all potential pipeline hazards in trv32p3_cnn,
// and lists where sw_stall rules are automatically added to avoid them.
// The added sw_stall rules complement user-defined hw_stall and bypass rules,
// and never overlap with them.

// Instead of sw_stall rules, also hw_stall rules can be added, by setting nML property:
// property add_hw_stalls : 1;

// The default pipeline hazard covering algorithm may add sw_stall rules
// that overlap with (or even replace) other, user-defined sw_stall rules, when the latter
// only partially cover a dependency.
// If desired, this (harmless) overlap between sw_stall rules (i.e. between
// rules of the same kind) can be avoided by setting  nML property
// property allow_overlapping_sw_stalls: false;

// Also simple sw_stall rules are printed in nML syntax, mainly as information.
// It is recommended to rely on the internally added sw_stall rules, and
// certainly NOT copy the simple rules without change into an nML file,
// as the printed rules in nML syntax may OVERLAP with user-defined hw_stall or bypass rules.

// ---------------------------------------------------------------------
// This file was created without option +d (or with option +d0).
// Use option +d4, +d8, +d12, +d16 for increasingly more details and
// source references on the pipeline hazards and how they are covered.

// With option -NoCoveredHazards covered hazards are skipped in this report.
// With option -NoMCOHazards hazards involving multi-cycle operations are skipped in this report.
// ---------------------------------------------------------------------

// with the animal -v (verbose) option ALL SOURCE REFERENCES are printed;
// without it ONLY ONE source reference is printed for each operation.

// with option -n source line references with nML derivation paths are printed
// (more references are printed for +d level higher than 9)

// with option -b <nr> (combined with +d level higher than 1) <nr> of instructions
// are printed as bit-string patterns (-s prints all patterns but may be slow)


// Following SW stall hazard rule was NOT added, since the conflicting instructions write the same value.
// sw_stall 1 cycles class(__conflict__x_r3) () {
//     rsrc(x_r3 `EX`);
// }
// -> {
//     rsrc(x_r3 `ID`);
// }
// Use e.g. option +d4 for nML source references - see top of file

// Added internal SW stall hazard rule class(__conflict____X_x_r3_rad_14) (__internal__:14)
// which is a RESTRICTED version of the following nML stall rule:
// (DO NOT ADD to nML without checking OVERLAP with hw_stall and bypass rules!)
sw_stall 1 cycles class(__conflict____X_x_r3_rad_14) () {
    rsrc(__X_x_r3_rad `EX`);
}
-> {
    rsrc(__X_x_r3_rad `ID`);
}
// Use e.g. option +d4 for nML source references - see top of file

