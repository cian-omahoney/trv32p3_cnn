
// File generated by noodle version U-2022.12#33f3808fcb#221128, Fri Mar  8 16:45:54 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I. -I./isg -I./runtime/include -DCHESS_CXX_ATTRIBUTES -D__tct_patch__=0 -itrv32p3_cnn_chess.h +NOrlt +wRelease/chesswork trv32p3_cnn_basic.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!! extern int _start_basic(int, char **)
F_start_basic : user_defined, called {
    fnm : "_start_basic" 'int _start_basic(int, char **)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
    frm : ( );
}
****
!!  int main(int, char **)
F_main : user_defined, called {
    fnm : "main" 'int main(int, char **)';
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( X[1] X[10] X[11] X[12] );
}
***/

[
    0 : _start_basic typ=u08 bnd=e stl=PMb
   12 : __R_SP typ=w32 bnd=d stl=SP
   13 : __vola typ=u08 bnd=b stl=PMb
   16 : __extPMb typ=u08 bnd=b stl=PMb
   17 : __extDMb typ=w08 bnd=b stl=DMb
   18 : __sp typ=w32 bnd=b stl=SP
   19 : __extDMb___PDMbvoid typ=w08 bnd=b stl=DMb
   20 : __extPMb_void typ=u08 bnd=b stl=PMb
   21 : __extDMb_void typ=w08 bnd=b stl=DMb
   22 : __rd___sp typ=w32 bnd=m
   23 : __la typ=w32 bnd=p tref=w32__
   25 : argc typ=w32 bnd=p tref=__sint__
   26 : argv typ=w32 bnd=p tref=__P__P__cchar__
   27 : __ct_0S0 typ=w32 val=0S0 bnd=m
   29 : __tmp typ=w32 bnd=m
   32 : _main typ=t21s_s2 val=0r bnd=m
   33 : __link typ=w32 bnd=m
   34 : __tmp typ=w32 bnd=m
   54 : __true typ=bool val=1f bnd=m
   57 : __trgt typ=t21s_s2 val=0j bnd=m
]
F_start_basic {
    #3 off=0
    (__R_SP.11 var=12) st_def ()  <22>;
    (__vola.12 var=13) source ()  <23>;
    (__extPMb.15 var=16) source ()  <26>;
    (__extDMb.16 var=17) source ()  <27>;
    (__sp.17 var=18) source ()  <28>;
    (__extDMb___PDMbvoid.18 var=19) source ()  <29>;
    (__extPMb_void.19 var=20) source ()  <30>;
    (__extDMb_void.20 var=21) source ()  <31>;
    (__la.22 var=23 stl=X off=1) inp ()  <33>;
    (argc.26 var=25 stl=X off=11) inp ()  <37>;
    (argc.27 var=25) deassign (argc.26)  <38>;
    (argv.29 var=26 stl=X off=12) inp ()  <40>;
    (argv.30 var=26) deassign (argv.29)  <41>;
    (__rd___sp.32 var=22) rd_res_reg (__R_SP.11 __sp.17)  <43>;
    (__ct_0S0.33 var=27) const ()  <44>;
    (__tmp.35 var=29) __Pvoid__pl___Pvoid___sint (__rd___sp.32 __ct_0S0.33)  <46>;
    (__R_SP.36 var=12 __sp.37 var=18) wr_res_reg (__tmp.35 __sp.17)  <47>;
    (_main.42 var=32) const ()  <53>;
    (__link.43 var=33) w32_jal_t21s_s2 (_main.42)  <54>;
    call {
        (argc.38 var=25 stl=X off=11) assign (argc.27)  <49>;
        (argv.39 var=26 stl=X off=12) assign (argv.30)  <50>;
        (__link.44 var=33 stl=X off=1) assign (__link.43)  <55>;
        (__tmp.45 var=34 stl=X off=10 __extDMb.48 var=17 __extDMb___PDMbvoid.49 var=19 __extDMb_void.50 var=21 __extPMb.51 var=16 __extPMb_void.52 var=20 __vola.53 var=13) F_main (__link.44 argc.38 argv.39 __extDMb.16 __extDMb___PDMbvoid.18 __extDMb_void.20 __extPMb.15 __extPMb_void.19 __vola.12)  <56>;
        (__tmp.46 var=34) deassign (__tmp.45)  <57>;
    } #4 off=1
    call {
        (__tmp.54 var=34 stl=X off=10) assign (__tmp.46)  <59>;
        () void_chess_exit___sint (__tmp.54)  <60>;
    } #5 off=2
    #32 off=3
    (__trgt.148 var=57) const ()  <185>;
    do {
        {
        } #11
        {
            () void_j_t21s_s2 (__trgt.148)  <186>;
            (__true.149 var=54) const ()  <187>;
        } #12 off=4
        {
            () while_expr (__true.149)  <93>;
        } #13
    } #10 rng=[1,2147483647]
    #20 off=5 nxt=-4
    () sink (__vola.53)  <155>;
    () sink (__extPMb.51)  <156>;
    () sink (__extDMb.48)  <157>;
    () sink (__sp.37)  <158>;
    () sink (__extDMb___PDMbvoid.49)  <159>;
    () sink (__extPMb_void.52)  <160>;
    () sink (__extDMb_void.50)  <161>;
} #0
0 : 'trv32p3_cnn_basic.c';
----------
0 : (0,13:0,0);
3 : (0,15:23,1);
4 : (0,15:13,1);
5 : (0,15:2,1);
10 : (0,16:2,3);
12 : (0,16:11,3);
----------
43 : (0,14:4,0);
44 : (0,14:4,0);
46 : (0,14:4,0);
47 : (0,14:4,0);
49 : (0,15:18,0);
50 : (0,15:23,0);
54 : (0,15:13,1);
55 : (0,15:13,0);
56 : (0,15:13,1);
59 : (0,15:13,0);
60 : (0,15:2,1);
93 : (0,16:2,4);
186 : (0,16:2,4);

