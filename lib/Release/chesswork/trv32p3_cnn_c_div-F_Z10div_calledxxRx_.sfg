
// File generated by noodle version U-2022.12#33f3808fcb#221128, Thu Jan 25 16:07:08 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I. -I./isg -I./runtime/include -DCHESS_CXX_ATTRIBUTES -D__tct_patch__=0 -itrv32p3_cnn_chess.h +NOrlt +wRelease/chesswork trv32p3_cnn_c_div.c +Q0=+Sal,+Sca,+Osps,-Wflla,+NOtcr,+NOcse,+NOlsw,+NOifv,+NOrle,+NOrlt +Q1=+NOrlt trv32p3_cnn


/***
!! extern long long div_called(long long, long long, chess_output long long &)
F_Z10div_calledxxRx : user_defined, called {
    fnm : "div_called" 'long long div_called(long long, long long, chess_output long long &)';
    arg : ( w32:i w32:r w32:r w32:i w32:i w32:i w32:i w32:o w32:o );
    loc : ( X[1] X[10] X[11] X[12] X[13] X[14] X[15] X[16] X[17] );
    frm : ( );
}
****
***/

[
    0 : _Z10div_calledxxRx typ=u08 bnd=e stl=PMb
   12 : __R_SP typ=w32 bnd=d stl=SP
   18 : __sp typ=w32 bnd=b stl=SP
   19 : __rd___sp typ=w32 bnd=m
   20 : __la typ=w32 bnd=p tref=w32__
   22 : __rt_low typ=w32 bnd=m tref=__uint__
   23 : __rt_high typ=w32 bnd=m tref=__uint__
   25 : x_low typ=w32 bnd=m tref=__uint__
   26 : x_high typ=w32 bnd=m tref=__uint__
   28 : d_low typ=w32 bnd=m tref=__uint__
   29 : d_high typ=w32 bnd=m tref=__uint__
   31 : r_low typ=w32 bnd=m tref=__uint__
   32 : r_high typ=w32 bnd=m tref=__uint__
   33 : __ct_0S0 typ=w32 val=0S0 bnd=m
   35 : __tmp typ=w32 bnd=m
   45 : __inl_i typ=w32 bnd=m lscp=25 tref=__sint__
   68 : __tmp typ=bool bnd=m
   74 : __ct_0 typ=t20s_rp12 val=0f bnd=m
   76 : __ct_64 typ=w32 val=64f bnd=m
   79 : __ct_1 typ=w32 val=1f bnd=m
   89 : __tmp typ=bool bnd=m
   99 : __tmp typ=bool bnd=m
  116 : __ct_0s0 typ=w32 val=0s0 bnd=m
  118 : __tmp typ=w32 bnd=m
  134 : __tmp typ=bool bnd=m
  152 : __apl_r_low typ=w32 bnd=m tref=__uint__
  153 : __apl_r_high typ=w32 bnd=m tref=__uint__
  178 : du_low typ=w32 bnd=m
  179 : du_high typ=w32 bnd=m
  200 : __apl_carries typ=w32 bnd=m tref=__uint__
  205 : __apl_r_low typ=w32 bnd=m tref=__uint__
  206 : __tmp typ=w32 bnd=m
  207 : __apl_r_high typ=w32 bnd=m tref=__uint__
  214 : ru_low typ=w32 bnd=m
  215 : ru_high typ=w32 bnd=m
  228 : __apl_r_low typ=w32 bnd=m tref=__uint__
  237 : __inl_x_high typ=w32 bnd=m
  244 : ru_low typ=w32 bnd=m
  256 : __inl_x_low typ=w32 bnd=m
  267 : __inl_x_low typ=w32 bnd=m
  291 : __tmp_high typ=w32 bnd=m
  313 : __ct_31 typ=w32 val=31f bnd=m
  316 : __rt typ=bool bnd=m tref=bool__
  321 : __tmp typ=bool bnd=m
  322 : __tmp typ=bool bnd=m
  350 : __tmp typ=w32 bnd=m
  351 : __tmp typ=w32 bnd=m
  352 : __tmp typ=w32 bnd=m
  353 : __tmp typ=w32 bnd=m
  354 : __tmp typ=w32 bnd=m
  355 : __tmp typ=w32 bnd=m
  398 : __true typ=bool val=1f bnd=m
  399 : __false typ=bool val=0f bnd=m
  400 : __either typ=bool bnd=m
  401 : __trgt typ=t13s_s2 val=0j bnd=m
  402 : __trgt typ=t21s_s2 val=0j bnd=m
  403 : __trgt typ=t13s_s2 val=0j bnd=m
  404 : __trgt typ=t21s_s2 val=0j bnd=m
  405 : __trgt typ=t13s_s2 val=0j bnd=m
  406 : __trgt typ=t13s_s2 val=0j bnd=m
  407 : __trgt typ=t13s_s2 val=0j bnd=m
  408 : __trgt typ=t21s_s2 val=0j bnd=m
  409 : __trgt typ=t13s_s2 val=0j bnd=m
  410 : __trgt typ=t13s_s2 val=0j bnd=m
  411 : __trgt typ=t13s_s2 val=0j bnd=m
  412 : __trgt typ=t21s_s2 val=0j bnd=m
  413 : __trgt typ=t13s_s2 val=0j bnd=m
  414 : __trgt typ=t13s_s2 val=0j bnd=m
  415 : __trgt typ=t21s_s2 val=0j bnd=m
  416 : __trgt typ=t13s_s2 val=0j bnd=m
  417 : __trgt typ=t21s_s2 val=0j bnd=m
  418 : __trgt typ=t13s_s2 val=0j bnd=m
  419 : __trgt typ=t21s_s2 val=0j bnd=m
]
F_Z10div_calledxxRx {
    #114 off=0
    (__R_SP.11 var=12) st_def ()  <22>;
    (__sp.17 var=18) source ()  <28>;
    (__la.19 var=20 stl=X off=1) inp ()  <30>;
    (__la.20 var=20) deassign (__la.19)  <31>;
    (x_low.28 var=25 stl=X off=12) inp ()  <39>;
    (x_low.29 var=25) deassign (x_low.28)  <40>;
    (x_high.32 var=26 stl=X off=13) inp ()  <43>;
    (x_high.33 var=26) deassign (x_high.32)  <44>;
    (d_low.37 var=28 stl=X off=14) inp ()  <48>;
    (d_low.38 var=28) deassign (d_low.37)  <49>;
    (d_high.41 var=29 stl=X off=15) inp ()  <52>;
    (d_high.42 var=29) deassign (d_high.41)  <53>;
    (__rd___sp.50 var=19) rd_res_reg (__R_SP.11 __sp.17)  <61>;
    (__ct_0S0.51 var=33) const ()  <62>;
    (__tmp.53 var=35) __Pvoid__pl___Pvoid___sint (__rd___sp.50 __ct_0S0.51)  <64>;
    (__R_SP.54 var=12 __sp.55 var=18) wr_res_reg (__tmp.53 __sp.17)  <65>;
    (__ct_0.201 var=74) const ()  <216>;
    (__tmp.1155 var=134) bool__ge___sint___sint (x_high.33 __ct_0.201)  <1437>;
    (__trgt.1195 var=401) const ()  <1497>;
    () void_br_bool_t13s_s2 (__tmp.1155 __trgt.1195)  <1498>;
    (__either.1196 var=400) undefined ()  <1499>;
    if {
        {
            () if_expr (__either.1196)  <110>;
        } #5
        {
        } #7 off=2
        {
            (__apl_r_low.564 var=152) __uint_sub___uint___uint (__ct_0.201 x_low.29)  <613>;
            (__apl_r_high.565 var=153) __uint_sub___uint___uint (__ct_0.201 x_high.33)  <614>;
            (__apl_r_high.568 var=153) __uint__mi___uint___uint (__apl_r_high.565 __tmp.1071)  <617>;
            (__tmp.1071 var=350) __sint_sne0___sint (x_low.29)  <1302>;
            (__trgt.1197 var=402) const ()  <1500>;
            () void_j_t21s_s2 (__trgt.1197)  <1501>;
        } #445 off=1
        {
            (__rt_low.483 var=22) merge (x_low.29 __apl_r_low.564)  <514>;
            (__rt_high.503 var=23) merge (x_high.33 __apl_r_high.568)  <533>;
        } #8
    } #4
    #143 off=3
    (__tmp.1156 var=134) bool__ge___sint___sint (d_high.42 __ct_0.201)  <1438>;
    (__trgt.1198 var=403) const ()  <1502>;
    () void_br_bool_t13s_s2 (__tmp.1156 __trgt.1198)  <1503>;
    (__either.1199 var=400) undefined ()  <1504>;
    if {
        {
            () if_expr (__either.1199)  <141>;
        } #11
        {
        } #13 off=5
        {
            (__apl_r_low.606 var=152) __uint_sub___uint___uint (__ct_0.201 d_low.38)  <665>;
            (__apl_r_high.607 var=153) __uint_sub___uint___uint (__ct_0.201 d_high.42)  <666>;
            (__apl_r_high.610 var=153) __uint__mi___uint___uint (__apl_r_high.607 __tmp.1077)  <669>;
            (__tmp.1077 var=351) __sint_sne0___sint (d_low.38)  <1311>;
            (__trgt.1200 var=404) const ()  <1505>;
            () void_j_t21s_s2 (__trgt.1200)  <1506>;
        } #460 off=4
        {
            (du_low.909 var=178) merge (d_low.38 __apl_r_low.606)  <1053>;
            (du_high.912 var=179) merge (d_high.42 __apl_r_high.610)  <1056>;
        } #14
    } #10
    #169 off=6
    (__ct_1.252 var=79) const ()  <269>;
    (__tmp.628 var=134) bool__lt___sint___sint (du_high.912 __ct_0.201)  <691>;
    (__trgt.1221 var=414) const ()  <1536>;
    () void_br_bool_t13s_s2 (__tmp.628 __trgt.1221)  <1537>;
    (__either.1222 var=400) undefined ()  <1538>;
    if {
        {
            () if_expr (__either.1222)  <179>;
        } #17
        {
            #376 off=15
            (__tmp.981 var=321) bool__lt___uint___uint (du_high.912 __rt_high.503)  <1132>;
            (__trgt.1203 var=406) const ()  <1510>;
            () void_br_bool_t13s_s2 (__tmp.981 __trgt.1203)  <1511>;
            (__either.1204 var=400) undefined ()  <1512>;
            if {
                {
                    () if_expr (__either.1204)  <1135>;
                } #378
                {
                    (__false.1205 var=399) const ()  <1513>;
                } #379
                {
                    #381 off=16
                    (__tmp.1157 var=322) bool__ne___uint___uint (du_high.912 __rt_high.503)  <1439>;
                    (__trgt.1201 var=405) const ()  <1507>;
                    () void_br_bool_t13s_s2 (__tmp.1157 __trgt.1201)  <1508>;
                    (__either.1202 var=400) undefined ()  <1509>;
                    if {
                        {
                            () if_expr (__either.1202)  <1137>;
                        } #383
                        {
                            (__true.1206 var=398) const ()  <1514>;
                        } #385
                        {
                            (__rt.1158 var=316) bool__lt___uint___uint (__rt_low.483 du_low.909)  <1440>;
                            (__trgt.1207 var=407) const ()  <1515>;
                            () void_br_bool_t13s_s2 (__rt.1158 __trgt.1207)  <1516>;
                            (__either.1208 var=400) undefined ()  <1517>;
                        } #431 off=17
                        {
                            (__rt.1159 var=316) merge (__true.1206 __either.1208)  <1441>;
                        } #386
                    } #382
                } #380
                {
                    (__tmp.1160 var=68) merge (__false.1205 __rt.1159)  <1442>;
                } #387
            } #377
            if {
                {
                    () if_expr (__tmp.1160)  <207>;
                } #21
                {
                } #23 off=19
                {
                    (__apl_r_low.652 var=152) __uint_sub___uint___uint (__rt_low.483 du_low.909)  <724>;
                    (__apl_r_high.653 var=153) __uint_sub___uint___uint (__rt_high.503 du_high.912)  <725>;
                    (__apl_r_high.656 var=153) __uint__mi___uint___uint (__apl_r_high.653 __tmp.1082)  <728>;
                    (__tmp.1082 var=352) __sint_slt___uint___uint (__rt_low.483 du_low.909)  <1319>;
                    (__trgt.1209 var=408) const ()  <1518>;
                    () void_j_t21s_s2 (__trgt.1209)  <1519>;
                } #691 off=18
                {
                    (__rt_low.470 var=22) merge (__ct_0.201 __ct_1.252)  <500>;
                    (r_low.512 var=31) merge (__rt_low.483 __apl_r_low.652)  <542>;
                    (r_high.529 var=32) merge (__rt_high.503 __apl_r_high.656)  <558>;
                } #24
            } #20
        } #18
        {
            #741 off=7
            (__ct_64.203 var=76) const ()  <218>;
            (__ct_31.906 var=313) const ()  <1049>;
            (__trgt.1210 var=409) const ()  <1520>;
            (__trgt.1212 var=410) const ()  <1523>;
            (__trgt.1216 var=411) const ()  <1528>;
            (__trgt.1218 var=412) const ()  <1531>;
            (__trgt.1219 var=413) const ()  <1533>;
            do {
                {
                    (__inl_i.247 var=45) entry (__inl_i.334 __ct_0.201)  <264>;
                    (ru_low.923 var=214) entry (ru_low.921 __ct_0.201)  <1066>;
                    (ru_high.931 var=215) entry (ru_high.929 __ct_0.201)  <1073>;
                    (__inl_x_high.939 var=237) entry (__inl_x_high.937 __rt_high.503)  <1080>;
                    (__inl_x_low.947 var=256) entry (__inl_x_low.945 __rt_low.483)  <1087>;
                } #31
                {
                    #406 off=8
                    (__apl_carries.680 var=200) __uint__rs___uint___sint (ru_low.923 __ct_31.906)  <758>;
                    (__apl_r_low.681 var=205) __uint__ls___uint___sint (ru_low.923 __ct_1.252)  <759>;
                    (__tmp.682 var=206) __uint__ls___uint___sint (ru_high.931 __ct_1.252)  <760>;
                    (__apl_r_high.683 var=207) __uint__or___uint___uint (__tmp.682 __apl_carries.680)  <761>;
                    (__apl_r_low.712 var=228) __uint__rs___uint___sint (__inl_x_high.939 __ct_31.906)  <796>;
                    (ru_low.730 var=244) __uint__or___uint___uint (__apl_r_low.681 __apl_r_low.712)  <818>;
                    (__apl_carries.753 var=200) __uint__rs___uint___sint (__inl_x_low.947 __ct_31.906)  <847>;
                    (__apl_r_low.754 var=205) __uint__ls___uint___sint (__inl_x_low.947 __ct_1.252)  <848>;
                    (__tmp.755 var=206) __uint__ls___uint___sint (__inl_x_high.939 __ct_1.252)  <849>;
                    (__apl_r_high.756 var=207) __uint__or___uint___uint (__tmp.755 __apl_carries.753)  <850>;
                    (__tmp.997 var=321) bool__lt___uint___uint (du_high.912 __apl_r_high.683)  <1153>;
                    () void_br_bool_t13s_s2 (__tmp.997 __trgt.1212)  <1524>;
                    (__either.1213 var=400) undefined ()  <1525>;
                    if {
                        {
                            () if_expr (__either.1213)  <1156>;
                        } #408
                        {
                            (__false.1214 var=399) const ()  <1526>;
                        } #409
                        {
                            #411 off=9
                            (__tmp.1161 var=322) bool__ne___uint___uint (du_high.912 __apl_r_high.683)  <1443>;
                            () void_br_bool_t13s_s2 (__tmp.1161 __trgt.1210)  <1521>;
                            (__either.1211 var=400) undefined ()  <1522>;
                            if {
                                {
                                    () if_expr (__either.1211)  <1158>;
                                } #413
                                {
                                    (__true.1215 var=398) const ()  <1527>;
                                } #415
                                {
                                    (__rt.1162 var=316) bool__lt___uint___uint (ru_low.730 du_low.909)  <1444>;
                                    () void_br_bool_t13s_s2 (__rt.1162 __trgt.1216)  <1529>;
                                    (__either.1217 var=400) undefined ()  <1530>;
                                } #434 off=10
                                {
                                    (__rt.1163 var=316) merge (__true.1215 __either.1217)  <1445>;
                                } #416
                            } #412
                        } #410
                        {
                            (__tmp.1164 var=89) merge (__false.1214 __rt.1163)  <1446>;
                        } #417
                    } #407
                    if {
                        {
                            () if_expr (__tmp.1164)  <303>;
                        } #35
                        {
                        } #37 off=12
                        {
                            (__apl_r_low.783 var=152) __uint_sub___uint___uint (ru_low.730 du_low.909)  <885>;
                            (__apl_r_high.784 var=153) __uint_sub___uint___uint (__apl_r_high.683 du_high.912)  <886>;
                            (__apl_r_high.787 var=153) __uint__mi___uint___uint (__apl_r_high.784 __tmp.1087)  <889>;
                            (__inl_x_low.805 var=267) __uint__or___uint___uint (__apl_r_low.754 __ct_1.252)  <911>;
                            (__tmp.1087 var=353) __sint_slt___uint___uint (ru_low.730 du_low.909)  <1327>;
                            () void_j_t21s_s2 (__trgt.1218)  <1532>;
                        } #713 off=11
                        {
                            (__rt_low.480 var=22) merge (__apl_r_low.754 __inl_x_low.805)  <511>;
                            (r_low.520 var=31) merge (ru_low.730 __apl_r_low.783)  <549>;
                            (r_high.537 var=32) merge (__apl_r_high.683 __apl_r_high.787)  <565>;
                        } #38
                    } #34
                    #39 off=13
                    (__inl_i.294 var=45) __sint__pl___sint___sint (__inl_i.247 __ct_1.252)  <312>;
                    (__tmp.297 var=99) bool__lt___sint___sint (__inl_i.294 __ct_64.203)  <315>;
                    () void_br_bool_t13s_s2 (__tmp.297 __trgt.1219)  <1534>;
                    (__either.1220 var=400) undefined ()  <1535>;
                } #32
                {
                    () while_expr (__either.1220)  <316>;
                    (__inl_i.334 var=45 __inl_i.335 var=45) exit (__inl_i.294)  <335>;
                    (ru_low.921 var=214 ru_low.922 var=214) exit (r_low.520)  <1065>;
                    (ru_high.929 var=215 ru_high.930 var=215) exit (r_high.537)  <1072>;
                    (__inl_x_high.937 var=237 __inl_x_high.938 var=237) exit (__apl_r_high.756)  <1079>;
                    (__inl_x_low.945 var=256 __inl_x_low.946 var=256) exit (__rt_low.480)  <1086>;
                } #40
            } #30 rng=[64,64]
            #749 off=14
            (__trgt.1223 var=415) const ()  <1539>;
            () void_j_t21s_s2 (__trgt.1223)  <1540>;
        } #25
        {
            (__rt_low.467 var=22) merge (__rt_low.470 __inl_x_low.946)  <497>;
            (__rt_high.489 var=23) merge (__ct_0.201 __inl_x_high.938)  <520>;
            (r_low.509 var=31) merge (r_low.512 ru_low.922)  <539>;
            (r_high.526 var=32) merge (r_high.529 ru_high.930)  <555>;
        } #43
    } #16
    #750 off=21
    (__trgt.1224 var=416) const ()  <1541>;
    () void_br_bool_t13s_s2 (__tmp.1230 __trgt.1224)  <1542>;
    (__either.1225 var=400) undefined ()  <1543>;
    (__tmp.1230 var=134) bool__ge___sint___sint (x_high.33 __ct_0.201)  <1551>;
    if {
        {
            () if_expr (__either.1225)  <377>;
        } #46
        {
        } #48 off=23
        {
            (__apl_r_low.826 var=152) __uint_sub___uint___uint (__ct_0.201 r_low.509)  <937>;
            (__apl_r_high.827 var=153) __uint_sub___uint___uint (__ct_0.201 r_high.526)  <938>;
            (__apl_r_high.830 var=153) __uint__mi___uint___uint (__apl_r_high.827 __tmp.1093)  <941>;
            (__tmp.1093 var=354) __sint_sne0___sint (r_low.509)  <1336>;
            (__trgt.1226 var=417) const ()  <1544>;
            () void_j_t21s_s2 (__trgt.1226)  <1545>;
        } #505 off=22
        {
            (r_low.506 var=31) merge (r_low.509 __apl_r_low.826)  <536>;
            (r_high.523 var=32) merge (r_high.526 __apl_r_high.830)  <552>;
        } #49
    } #45
    #325 off=24
    (__tmp_high.849 var=291) __uint__er___uint___uint (x_high.33 d_high.42)  <964>;
    (__tmp.1166 var=134) bool__ge___sint___sint (__tmp_high.849 __ct_0.201)  <1448>;
    (__trgt.1227 var=418) const ()  <1546>;
    () void_br_bool_t13s_s2 (__tmp.1166 __trgt.1227)  <1547>;
    (__either.1228 var=400) undefined ()  <1548>;
    if {
        {
            () if_expr (__either.1228)  <409>;
        } #52
        {
        } #54 off=26
        {
            (__apl_r_low.885 var=152) __uint_sub___uint___uint (__ct_0.201 __rt_low.467)  <1010>;
            (__apl_r_high.886 var=153) __uint_sub___uint___uint (__ct_0.201 __rt_high.489)  <1011>;
            (__apl_r_high.889 var=153) __uint__mi___uint___uint (__apl_r_high.886 __tmp.1099)  <1014>;
            (__tmp.1099 var=355) __sint_sne0___sint (__rt_low.467)  <1345>;
            (__trgt.1229 var=419) const ()  <1549>;
            () void_j_t21s_s2 (__trgt.1229)  <1550>;
        } #520 off=25
        {
            (__rt_low.464 var=22) merge (__rt_low.467 __apl_r_low.885)  <494>;
            (__rt_high.486 var=23) merge (__rt_high.489 __apl_r_high.889)  <517>;
        } #55
    } #51
    #58 off=27 nxt=-2
    (__rd___sp.417 var=19) rd_res_reg (__R_SP.11 __sp.55)  <415>;
    (__ct_0s0.418 var=116) const ()  <416>;
    (__tmp.420 var=118) __Pvoid__pl___Pvoid___sint (__rd___sp.417 __ct_0s0.418)  <418>;
    (__R_SP.421 var=12 __sp.422 var=18) wr_res_reg (__tmp.420 __sp.55)  <419>;
    () void___rts_jr_w32 (__la.20)  <420>;
    (__rt_low.424 var=22 stl=X off=10) assign (__rt_low.464)  <422>;
    () out (__rt_low.424)  <423>;
    (__rt_high.426 var=23 stl=X off=11) assign (__rt_high.486)  <425>;
    () out (__rt_high.426)  <426>;
    (r_low.432 var=31 stl=X off=16) assign (r_low.506)  <432>;
    () out (r_low.432)  <433>;
    (r_high.434 var=32 stl=X off=17) assign (r_high.523)  <435>;
    () out (r_high.434)  <436>;
    () sink (__sp.422)  <442>;
} #0
0 : 'trv32p3_cnn_c_div.c';
----------
0 : (0,62:0,0);
4 : (0,65:2,2);
7 : (0,65:2,5);
10 : (0,66:2,8);
13 : (0,66:2,11);
16 : (0,67:26,23);
18 : (0,67:26,24);
20 : (0,67:26,26);
23 : (0,67:26,31);
25 : (0,67:26,39);
30 : (0,67:26,43);
32 : (0,67:26,43);
34 : (0,67:26,45);
37 : (0,67:26,50);
39 : (0,67:26,57);
45 : (0,69:2,73);
48 : (0,69:2,76);
51 : (0,70:22,79);
54 : (0,70:30,81);
58 : (0,70:2,83);
114 : (0,65:8,2);
143 : (0,66:8,8);
169 : (0,67:26,23);
325 : (0,70:18,79);
376 : (0,67:26,26);
377 : (0,67:26,26);
378 : (0,67:26,26);
379 : (0,67:26,26);
380 : (0,67:26,26);
381 : (0,67:26,26);
382 : (0,67:26,26);
383 : (0,67:26,26);
385 : (0,67:26,26);
386 : (0,67:26,26);
387 : (0,67:26,26);
406 : (0,67:26,45);
407 : (0,67:26,45);
408 : (0,67:26,45);
409 : (0,67:26,45);
410 : (0,67:26,45);
411 : (0,67:26,45);
412 : (0,67:26,45);
413 : (0,67:26,45);
415 : (0,67:26,45);
416 : (0,67:26,45);
417 : (0,67:26,45);
431 : (0,67:26,26);
434 : (0,67:26,45);
445 : (0,65:18,3);
460 : (0,66:18,9);
505 : (0,69:17,74);
520 : (0,70:24,80);
691 : (0,67:26,27);
713 : (0,67:26,46);
----------
61 : (0,63:11,0);
62 : (0,63:11,0);
64 : (0,63:11,0);
65 : (0,63:11,0);
110 : (0,65:2,2);
141 : (0,66:2,8);
179 : (0,67:26,23);
207 : (0,67:26,26);
216 : (0,67:26,0);
218 : (0,67:26,0);
264 : (0,67:26,43);
269 : (0,67:26,0);
303 : (0,67:26,45);
312 : (0,67:26,54);
315 : (0,67:26,57);
316 : (0,67:26,57);
335 : (0,67:26,57);
377 : (0,69:2,73);
409 : (0,70:22,79);
415 : (0,70:2,0);
416 : (0,70:2,0);
418 : (0,70:2,0);
419 : (0,70:2,83);
420 : (0,70:2,83);
422 : (0,70:22,0);
425 : (0,70:22,0);
432 : (0,70:22,0);
435 : (0,70:22,0);
613 : (0,65:18,3);
614 : (0,65:18,3);
617 : (0,65:18,3);
665 : (0,66:18,9);
666 : (0,66:18,9);
669 : (0,66:18,9);
691 : (0,67:26,23);
724 : (0,67:26,27);
725 : (0,67:26,27);
728 : (0,67:26,27);
758 : (0,67:26,43);
759 : (0,67:26,43);
760 : (0,67:26,43);
761 : (0,67:26,43);
796 : (0,67:26,43);
818 : (0,67:26,43);
847 : (0,67:26,44);
848 : (0,67:26,44);
849 : (0,67:26,44);
850 : (0,67:26,44);
885 : (0,67:26,46);
886 : (0,67:26,46);
889 : (0,67:26,46);
911 : (0,67:26,47);
937 : (0,69:17,74);
938 : (0,69:17,74);
941 : (0,69:17,74);
964 : (0,70:13,79);
1010 : (0,70:24,80);
1011 : (0,70:24,80);
1014 : (0,70:24,80);
1049 : (0,67:26,0);
1132 : (0,67:26,26);
1135 : (0,67:26,26);
1137 : (0,67:26,26);
1153 : (0,67:26,45);
1156 : (0,67:26,45);
1158 : (0,67:26,45);
1302 : (0,65:18,3);
1311 : (0,66:18,9);
1319 : (0,67:26,27);
1327 : (0,67:26,46);
1336 : (0,69:17,74);
1345 : (0,70:24,80);
1437 : (0,65:8,2);
1438 : (0,66:8,8);
1439 : (0,67:26,26);
1440 : (0,67:26,26);
1441 : (0,67:26,26);
1442 : (0,67:26,26);
1443 : (0,67:26,45);
1444 : (0,67:26,45);
1445 : (0,67:26,45);
1446 : (0,67:26,45);
1448 : (0,70:18,79);
1498 : (0,65:2,2);
1503 : (0,66:2,8);
1508 : (0,67:26,26);
1511 : (0,67:26,26);
1516 : (0,67:26,26);
1521 : (0,67:26,45);
1524 : (0,67:26,45);
1529 : (0,67:26,45);
1534 : (0,67:26,57);
1537 : (0,67:26,23);
1542 : (0,69:2,73);
1547 : (0,70:22,79);

